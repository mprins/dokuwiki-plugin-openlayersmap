{"version":3,"file":"ol.js","sources":["../ol/CollectionEventType.js","../ol/ObjectEventType.js","../ol/events/EventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Event.js","../ol/events/Target.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/math.js","../ol/sphere.js","../ol/console.js","../ol/string.js","../ol/coordinate.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/proj/utm.js","../ol/proj.js","../ol/transform.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/area.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/inflate.js","../ol/geom/flat/simplify.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/tilegrid/common.js","../ol/View.js","../ol/css.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/events/condition.js","../ol/interaction/Pointer.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/Key.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/layer/Group.js","../ol/render/EventType.js","../ol/layer/Layer.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/color.js","../ol/size.js","../ol/expr/expression.js","../ol/expr/cpu.js","../ol/style/IconImageCache.js","../ol/style/IconImage.js","../ol/colorlike.js","../ol/render/canvas.js","../ol/style/Image.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/Icon.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Text.js","../ol/render/canvas/style.js","../ol/layer/BaseVector.js","../ol/render/Event.js","../ol/renderer/Map.js","../ol/renderer/Composite.js","../ol/Map.js","../ol/Overlay.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/resolution.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid/WMTS.js","../ol/tilegrid.js","../ol/uri.js","../ol/tileurlfunction.js","../ol/reproj/Triangulation.js","../ol/reproj/common.js","../ol/reproj/Tile.js","../ol/source/Source.js","../ol/source/Tile.js","../ol/source/TileEventType.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../ol/geom/flat/center.js","../ol/geom/flat/interpolate.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/length.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/structs/RBush.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/vec/mat4.js","../ol/webgl/Canvas.js","../ol/reproj/glreproj.js","../ol/reproj/DataTile.js","../ol/source/DataTile.js","../ol/reproj/Image.js","../ol/source/common.js","../ol/source/Image.js","../ol/source/arcgisRest.js","../ol/source/static.js","../ol/source/ImageTile.js","../ol/source/wms.js","../ol/source/ogcTileUtil.js","../ol/source/OSM.js","../ol/render/canvas/ZIndexContext.js","../ol/renderer/Layer.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/BaseImage.js","../ol/layer/Image.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/StadiaMaps.js","../ol/source/UTFGrid.js","../ol/xml.js","../ol/style/flat.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/linechunk.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/proj/proj4.js","../ol/geom/flat/geodesic.js","../ol/layer/Vector.js","../ol/layer/Graticule.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/webgl/Helper.js","../ol/renderer/webgl/Layer.js","../ol/renderer/webgl/TileLayer.js","../ol/webgl/PaletteTexture.js","../ol/expr/gpu.js","../ol/render/webgl/bufferUtil.js","../ol/render/webgl/ShaderBuilder.js","../ol/render/webgl/compileUtil.js","../ol/render/webgl/MixedGeometryBatch.js","../ol/render/webgl/constants.js","../ol/render/webgl/renderinstructions.js","../ol/render/webgl/style.js","../ol/render/webgl/VectorStyleRenderer.js","../ol/worker/webgl.js","../ol/render/webgl/encodeUtil.js","../ol/webgl/RenderTarget.js","../ol/renderer/webgl/VectorLayer.js","../ol/renderer/webgl/worldUtil.js","../ol/layer/Heatmap.js","../ol/interaction/DragAndDrop.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/events/SnapEvent.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/Feature.js","../ol/format/XMLFeature.js","../ol/format/xsd.js","../ol/format/GPX.js","../ol/format/JSONFeature.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/GMLBase.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML32.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/WFS.js","../ol/format/WMTSCapabilities.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/dist/ol.js","../ol/control/ZoomToExtent.js","../ol/format/filter.js","../ol/format/WMSGetFeatureInfo.js","../ol/geom/flat/topology.js","../ol/interaction/DblClickDragZoom.js","../ol/interaction/DragRotateAndZoom.js","../ol/layer/VectorImage.js","../ol/source/Cluster.js","../ol/source/Google.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/ImageStatic.js","../ol/source/ImageWMS.js","../ol/source/OGCMapTile.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/WMTS.js","../ol/source/mapserver.js","../ol/source.js"],"sourcesContent":["/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.5.0';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseObject from './Object.js';\nimport BaseEvent from './events/Event.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {toRadians} from './math.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection,\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions(),\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude,\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy,\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading),\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageWrapper from './Image.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent instanceof PointerEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    pointerEvent instanceof PointerEvent && pointerEvent.pointerType == 'mouse'\n  );\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    pointerEvt instanceof PointerEvent && pointerEvt.pointerType === 'touch'\n  );\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt instanceof PointerEvent && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    pointerEvent instanceof PointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n      this.clearRenderer();\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject from './Object.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {outerHeight, outerWidth, removeChildren} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      this.element?.remove();\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function.\n   * @param {function(VectorRenderTile):void} removeSourceTiles Function.\n   */\n  constructor(\n    tileCoord,\n    state,\n    urlTileCoord,\n    getSourceTiles,\n    removeSourceTiles,\n  ) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<string, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {!function(VectorRenderTile):void}\n     * @private\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.context_) {\n      releaseCanvas(this.context_);\n      canvasPool.push(this.context_.canvas);\n      this.context_ = null;\n    }\n    this.removeSourceTiles_(this);\n    this.sourceTiles.length = 0;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform,\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio,\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection,\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform,\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().startsWith('ne');\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport {applyTransform, intersects} from '../extent.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {boolean} [placeholderTiles] Whether to show BingMaps placeholder tiles when zoomed past the maximum level provided in an area. When `false`, requests beyond\n * the maximum zoom level will return no tile. When `true`, the placeholder tile will be returned. When not set, the default behaviour of the imagery set takes place,\n * which is unique for each imagery set in BingMaps.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.placeholderTiles_ = options.placeholderTiles;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    const placeholderTiles = this.placeholderTiles_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord,\n            );\n            const url = new URL(\n              imageUrl.replace('{quadkey}', quadKey(quadKeyTileCoord)),\n            );\n            const params = url.searchParams;\n            if (hidpi) {\n              params.set('dpi', 'd1');\n              params.set('device', 'mobile');\n            }\n            if (placeholderTiles === true) {\n              params.delete('n');\n            } else if (placeholderTiles === false) {\n              params.set('n', 'z');\n            }\n            return url.toString();\n          }\n        );\n      }),\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection(),\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection,\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z,\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * Return the sum of all line string lengths\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    const ends = this.ends_;\n    let start = 0;\n    let length = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      length += lineStringLength(\n        this.flatCoordinates,\n        start,\n        ends[i],\n        this.stride,\n      );\n      start = ends[i];\n    }\n    return length;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/vec/mat4\n */\n\n/** @typedef {Array<number>} Mat4 */\n\n/**\n * @return {Mat4} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Mat4} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Mat4} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @param {Mat4} [out] mat4 frustum matrix will be written into\n * @return {Mat4} out\n */\nexport function orthographic(left, right, bottom, top, near, far, out) {\n  out = out ?? create();\n  const lr = 1 / (left - right),\n    bt = 1 / (bottom - top),\n    nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {Mat4} m The matrix to scale.\n * @param {number} x How much to scale in the x direction.\n * @param {number} y How much to scale in the y direction.\n * @param {number} z How much to scale in the z direction.\n * @param {Mat4} [out] The matrix to write to.\n * @return {Mat4} out\n */\nexport function scale(m, x, y, z, out) {\n  out = out ?? create();\n  out[0] = m[0] * x;\n  out[1] = m[1] * x;\n  out[2] = m[2] * x;\n  out[3] = m[3] * x;\n  out[4] = m[4] * y;\n  out[5] = m[5] * y;\n  out[6] = m[6] * y;\n  out[7] = m[7] * y;\n  out[8] = m[8] * z;\n  out[9] = m[9] * z;\n  out[10] = m[10] * z;\n  out[11] = m[11] * z;\n  out[12] = m[12];\n  out[13] = m[13];\n  out[14] = m[14];\n  out[15] = m[15];\n  return out;\n}\n\n/**\n * Translate a matrix.\n *\n * @param {Mat4} m the matrix to translate\n * @param {number} x How much to translate in the x direction.\n * @param {number} y How much to translate in the y direction.\n * @param {number} z How much to translate in the z direction.\n * @param {Mat4} [out] the receiving matrix\n * @return {Mat4} out\n */\nexport function translate(m, x, y, z, out) {\n  out = out ?? create();\n  let a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23;\n\n  if (m === out) {\n    out[12] = m[0] * x + m[4] * y + m[8] * z + m[12];\n    out[13] = m[1] * x + m[5] * y + m[9] * z + m[13];\n    out[14] = m[2] * x + m[6] * y + m[10] * z + m[14];\n    out[15] = m[3] * x + m[7] * y + m[11] * z + m[15];\n  } else {\n    a00 = m[0];\n    a01 = m[1];\n    a02 = m[2];\n    a03 = m[3];\n    a10 = m[4];\n    a11 = m[5];\n    a12 = m[6];\n    a13 = m[7];\n    a20 = m[8];\n    a21 = m[9];\n    a22 = m[10];\n    a23 = m[11];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + m[12];\n    out[13] = a01 * x + a11 * y + a21 * z + m[13];\n    out[14] = a02 * x + a12 * y + a22 * z + m[14];\n    out[15] = a03 * x + a13 * y + a23 * z + m[15];\n  }\n\n  return out;\n}\n\n/**\n * @param {number} x x translation.\n * @param {number} y y translation.\n * @param {number} z z translation.\n * @param {Mat4} [out] optional matrix to store result\n * @return {Mat4} out\n */\nexport function translation(x, y, z, out) {\n  out = out ?? create();\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = x;\n  out[13] = y;\n  out[14] = z;\n  out[15] = 1;\n\n  return out;\n}\n","import * as mat4 from '../vec/mat4.js';\n\n/**\n * @module ol/webgl/Canvas\n */\n\nconst VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec4 a_texcoord;\n\n  uniform mat4 u_matrix;\n  uniform mat4 u_textureMatrix;\n\n  varying vec2 v_texcoord;\n\n  void main() {\n    gl_Position = u_matrix * a_position;\n    vec2 texcoord = (u_textureMatrix * a_texcoord).xy;\n    v_texcoord = texcoord;\n  }\n`;\n\nconst FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (\n      v_texcoord.x < 0.0 ||\n      v_texcoord.y < 0.0 ||\n      v_texcoord.x > 1.0 ||\n      v_texcoord.y > 1.0\n    ) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/** @typedef {import(\"../transform.js\").Transform} Matrix */\n\n/**\n * Canvas-like operations implemented in webgl.\n */\nexport class Canvas {\n  /**\n   * @param {WebGLRenderingContext} gl Context to render in.\n   */\n  constructor(gl) {\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.program_ = createProgram(gl, FRAGMENT_SHADER, VERTEX_SHADER);\n\n    this.positionLocation = gl.getAttribLocation(this.program_, 'a_position');\n    this.texcoordLocation = gl.getAttribLocation(this.program_, 'a_texcoord');\n\n    this.matrixLocation = gl.getUniformLocation(this.program_, 'u_matrix');\n    this.textureMatrixLocation = gl.getUniformLocation(\n      this.program_,\n      'u_textureMatrix',\n    );\n    this.textureLocation = gl.getUniformLocation(this.program_, 'u_texture');\n\n    this.positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n\n    this.positions = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.positions),\n      gl.STATIC_DRAW,\n    );\n\n    this.texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n\n    this.texcoords = [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1];\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(this.texcoords),\n      gl.STATIC_DRAW,\n    );\n  }\n\n  /**\n   * 2dContext drawImage call implemented in webgl.\n   * Unlike images, textures do not have a width and height associated\n   * with them so we'll pass in the width and height of the texture.\n   *\n   * @param {WebGLTexture} tex Image to draw.\n   * @param {number} texWidth Image width.\n   * @param {number} texHeight Image height.\n   * @param {number} srcX Top-left x-point to read src image.\n   * @param {number} srcY Top-left y-point to read src image.\n   * @param {number} [srcWidth] Width of source to read.\n   * @param {number} [srcHeight] Height of source to read.\n   * @param {number} [dstX] Top-left x-point of destination.\n   * @param {number} [dstY] Top-left y-point of destination.\n   * @param {number} [dstWidth] Width of written image in destination.\n   * @param {number} [dstHeight] Height of written image in destination.\n   * @param {number} [width] Width of canvas.\n   * @param {number} [height] Height of canvas.\n   */\n  drawImage(\n    tex,\n    texWidth,\n    texHeight,\n    srcX,\n    srcY,\n    srcWidth,\n    srcHeight,\n    dstX,\n    dstY,\n    dstWidth,\n    dstHeight,\n    width,\n    height,\n  ) {\n    const gl = this.gl_;\n\n    if (dstX === undefined) {\n      dstX = srcX;\n    }\n    if (dstY === undefined) {\n      dstY = srcY;\n    }\n    if (srcWidth === undefined) {\n      srcWidth = texWidth;\n    }\n    if (srcHeight === undefined) {\n      srcHeight = texHeight;\n    }\n    if (dstWidth === undefined) {\n      dstWidth = srcWidth;\n    }\n    if (dstHeight === undefined) {\n      dstHeight = srcHeight;\n    }\n    if (width === undefined) {\n      width = gl.canvas.width;\n    }\n    if (height === undefined) {\n      height = gl.canvas.height;\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, tex);\n\n    gl.useProgram(this.program_);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer);\n    gl.enableVertexAttribArray(this.positionLocation);\n    gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffer);\n    gl.enableVertexAttribArray(this.texcoordLocation);\n    gl.vertexAttribPointer(this.texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // matrix for converting pixels to clip space\n    let matrix = mat4.orthographic(0, width, 0, height, -1, 1);\n    matrix = mat4.translate(matrix, dstX, dstY, 0);\n    matrix = mat4.scale(matrix, dstWidth, dstHeight, 1);\n    gl.uniformMatrix4fv(this.matrixLocation, false, matrix);\n\n    let texMatrix = mat4.translation(srcX / texWidth, srcY / texHeight, 0);\n    texMatrix = mat4.scale(\n      texMatrix,\n      srcWidth / texWidth,\n      srcHeight / texHeight,\n      1,\n    );\n\n    gl.uniformMatrix4fv(this.textureMatrixLocation, false, texMatrix);\n    gl.uniform1i(this.textureLocation, 0);\n    gl.drawArrays(gl.TRIANGLES, 0, this.positions.length / 2);\n  }\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {GLenum} type Type of shader.\n * @param {string} source source of shader.\n * @return {WebGLShader} [progam] The program.\n */\nfunction createShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  if (shader === null) {\n    throw new Error('Shader compilation failed');\n  }\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    const log = gl.getShaderInfoLog(shader);\n    if (log === null) {\n      throw new Error('Shader info log creation failed');\n    }\n    throw new Error(log);\n  }\n\n  return shader;\n}\n\n/**\n * @param {WebGLRenderingContext} gl Rendering Context.\n * @param {string} fragmentSource Fragment shader source.\n * @param {string} vertexSource Vertex shader source.\n * @return {WebGLProgram} [progam] The program.\n */\nexport function createProgram(gl, fragmentSource, vertexSource) {\n  const program = gl.createProgram();\n\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n  if (program === null) {\n    throw new Error('Program creation failed');\n  }\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    const log = gl.getProgramInfoLog(program);\n    if (log === null) {\n      throw new Error('Program info log creation failed');\n    }\n    throw new Error();\n  }\n  return program;\n}\n","/**\n * @module ol/reproj/glreproj\n */\nimport {\n  createEmpty,\n  extend,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from '../extent.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport * as mat4 from '../vec/mat4.js';\nimport {Canvas as WebGLCanvas, createProgram} from '../webgl/Canvas.js';\n\nconst EDGE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n  }\n`;\nconst EDGE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  uniform vec4 u_val;\n  void main() {\n     gl_FragColor = u_val;\n  }\n`;\n\nconst TRIANGLE_VERTEX_SHADER = `\n  attribute vec4 a_position;\n  attribute vec2 a_texcoord;\n\n  varying vec2 v_texcoord;\n\n  uniform mat4 u_matrix;\n\n  void main() {\n     gl_Position = u_matrix * a_position;\n     v_texcoord = a_texcoord;\n  }\n`;\nconst TRIANGLE_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  varying vec2 v_texcoord;\n\n  uniform sampler2D u_texture;\n\n  void main() {\n    if (v_texcoord.x < 0.0 || v_texcoord.x > 1.0 || v_texcoord.y < 0.0 || v_texcoord.y > 1.0) {\n      discard;\n    }\n    gl_FragColor = texture2D(u_texture, v_texcoord);\n  }\n`;\n\n/**\n * Create an html canvas element and returns its webgl context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement | OffscreenCanvas>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {WebGLContextAttributes} [settings] CanvasRenderingContext2DSettings\n * @return {WebGLRenderingContext} The context.\n */\nexport function createCanvasContextWebGL(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {WebGLRenderingContext} */ (\n    canvas.getContext('webgl', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {WebGLRenderingContext} gl Context.\n */\nexport function releaseGLCanvas(gl) {\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n}\n\n/**\n * @type {Array<HTMLCanvasElement | OffscreenCanvas>}\n */\nexport const canvasGLPool = [];\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"../extent.js\").Extent} extent Extent.\n * @property {import(\"../extent.js\").Extent} [clipExtent] Clip extent.\n * @property {WebGLTexture} texture Texture.\n * @property {number} width Width of texture.\n * @property {number} height Height of texture.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {WebGLRenderingContext} gl the context to render in.\n * @param {number} width_ Width of the canvas.\n * @param {number} height_ Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"../extent.js\").Extent} targetExtent Target extent (tile).\n * @param {import(\"../reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {number} dataType What kind of data is the textures, must be gl.FLOAT or gl.UNSIGNED_BYTE\n * TODO: Allow setting renderEdges value in the data as this is done in \"data-space\".\n * @param {boolean | Array<number>} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchTexture.\n * @return {{framebuffer: WebGLFramebuffer, width: number, height: number, texture: WebGLTexture}} Canvas with reprojected data.\n */\nexport function render(\n  gl,\n  width_,\n  height_,\n  pixelRatio,\n  sourceResolution,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  dataType,\n  renderEdges,\n  interpolate,\n  drawSingle,\n) {\n  const width = Math.round(pixelRatio * width_);\n  const height = Math.round(pixelRatio * height_);\n  gl.canvas.width = width;\n  gl.canvas.height = height;\n\n  /** @type {WebGLFramebuffer | null} */\n  let resultFrameBuffer;\n  /** @type {WebGLTexture | null} */\n  let resultTexture;\n  {\n    resultTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, resultTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    resultFrameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      resultTexture,\n      0,\n    );\n  }\n\n  if (resultFrameBuffer === null) {\n    throw new Error('Could not create framebuffer');\n  }\n  if (resultTexture === null) {\n    throw new Error('Could not create texture');\n  }\n\n  if (sources.length === 0) {\n    return {\n      width,\n      height,\n      framebuffer: resultFrameBuffer,\n      texture: resultTexture,\n    };\n  }\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  /** @type {WebGLTexture | null} */\n  let stitchTexture;\n  /** @type {number} */\n  let stitchWidth;\n  /** @type {number} */\n  let stitchHeight;\n  const stitchScale = 1 / sourceResolution;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchTexture = gl.createTexture();\n    if (resultTexture === null) {\n      throw new Error('Could not create texture');\n    }\n    stitchWidth = Math.round(getWidth(sourceDataExtent) * stitchScale);\n    stitchHeight = Math.round(getHeight(sourceDataExtent) * stitchScale);\n\n    // Make sure we do not exceed the max texture size by lowering the resolution for this image.\n    // https://github.com/openlayers/openlayers/pull/15860#issuecomment-2254123580\n    const maxTexSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    const largeSide = Math.max(stitchWidth, stitchHeight);\n    const scaleFactor = largeSide > maxTexSize ? maxTexSize / largeSide : 1;\n    const stitchWidthFixed = Math.round(stitchWidth * scaleFactor);\n    const stitchHeightFixed = Math.round(stitchHeight * scaleFactor);\n\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    if (interpolate) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      stitchWidthFixed,\n      stitchHeightFixed,\n      0,\n      gl.RGBA,\n      dataType,\n      null,\n    );\n\n    const fb = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      stitchTexture,\n      0,\n    );\n    const webGLCanvas = new WebGLCanvas(gl);\n\n    sources.forEach(function (src, i, arr) {\n      const xPos =\n        (src.extent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n      const yPos =\n        -(src.extent[3] - sourceDataExtent[3]) * stitchScale * scaleFactor;\n      const srcWidth = getWidth(src.extent) * stitchScale * scaleFactor;\n      const srcHeight = getHeight(src.extent) * stitchScale * scaleFactor;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n      gl.viewport(0, 0, stitchWidthFixed, stitchHeightFixed);\n\n      if (src.clipExtent) {\n        const xPos =\n          (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale * scaleFactor;\n        const yPos =\n          -(src.clipExtent[3] - sourceDataExtent[3]) *\n          stitchScale *\n          scaleFactor;\n        const width = getWidth(src.clipExtent) * stitchScale * scaleFactor;\n        const height = getHeight(src.clipExtent) * stitchScale * scaleFactor;\n        gl.enable(gl.SCISSOR_TEST);\n        gl.scissor(\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n          interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n        );\n      }\n\n      webGLCanvas.drawImage(\n        src.texture,\n        src.width,\n        src.height,\n        gutter,\n        gutter,\n        src.width - 2 * gutter,\n        src.height - 2 * gutter,\n        interpolate ? xPos : Math.round(xPos),\n        interpolate ? yPos : Math.round(yPos),\n        interpolate ? srcWidth : Math.round(xPos + srcWidth) - Math.round(xPos),\n        interpolate\n          ? srcHeight\n          : Math.round(yPos + srcHeight) - Math.round(yPos),\n        stitchWidthFixed,\n        stitchHeightFixed,\n      );\n\n      gl.disable(gl.SCISSOR_TEST);\n    });\n    gl.deleteFramebuffer(fb);\n  } else {\n    stitchTexture = sources[0].texture;\n    stitchWidth = sources[0].width;\n    stitchHeight = sources[0].width;\n  }\n\n  const targetTopLeft = getTopLeft(targetExtent);\n  const sourceTopLeft = getTopLeft(sourceDataExtent);\n\n  const getUVs = (\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ target,\n  ) => {\n    const u0 =\n      ((target[0][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v0 =\n      (-(target[0][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u1 =\n      ((target[1][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v1 =\n      (-(target[1][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    const u2 =\n      ((target[2][0] - targetTopLeft[0]) / targetResolution) * pixelRatio;\n    const v2 =\n      (-(target[2][1] - targetTopLeft[1]) / targetResolution) * pixelRatio;\n    return {u1, v1, u0, v0, u2, v2};\n  };\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, resultFrameBuffer);\n  gl.viewport(0, 0, width, height);\n\n  // Draw source to reprojtile\n  {\n    /** @type {Array<number>} */\n    const vertices = [];\n    /** @type {Array<number>} */\n    const texcoords = [];\n\n    const triProgram = createProgram(\n      gl,\n      TRIANGLE_FRAGMENT_SHADER,\n      TRIANGLE_VERTEX_SHADER,\n    );\n    gl.useProgram(triProgram);\n\n    // Bind image\n    const textureLocation = gl.getUniformLocation(triProgram, 'u_texture');\n    gl.bindTexture(gl.TEXTURE_2D, stitchTexture);\n\n    // Tell the shader to get the texture from texture unit 0\n    gl.uniform1i(textureLocation, 0);\n\n    // Calculate vert and tex coordinates.\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const source = triangle.source;\n      const target = triangle.target;\n      // Make sure that everything is on pixel boundaries\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      const su0 =\n        (source[0][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv0 =\n        -(source[0][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su1 =\n        (source[1][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv1 =\n        -(source[1][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n      const su2 =\n        (source[2][0] - sourceTopLeft[0]) / sourceResolution / stitchWidth;\n      const sv2 =\n        -(source[2][1] - sourceTopLeft[1]) / sourceResolution / stitchHeight;\n\n      vertices.push(u1, v1, u0, v0, u2, v2);\n      texcoords.push(su1, sv1, su0, sv0, su2, sv2);\n    });\n\n    // Convert pixel space to clip space.\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(triProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const positionLocation = gl.getAttribLocation(triProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    const texcoordLocation = gl.getAttribLocation(triProgram, 'a_texcoord');\n    const texcoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texcoords), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(texcoordLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(texcoordLocation);\n\n    gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 2);\n  }\n\n  if (renderEdges) {\n    const edgeProgram = createProgram(\n      gl,\n      EDGE_FRAGMENT_SHADER,\n      EDGE_VERTEX_SHADER,\n    );\n    gl.useProgram(edgeProgram);\n    const matrix = mat4.orthographic(0, width, height, 0, -1, 1);\n    const matrixLocation = gl.getUniformLocation(edgeProgram, 'u_matrix');\n    gl.uniformMatrix4fv(matrixLocation, false, matrix);\n\n    const burnval = Array.isArray(renderEdges) ? renderEdges : [0, 0, 0, 255];\n    const burnvalLocation = gl.getUniformLocation(edgeProgram, 'u_val');\n    const isFloat = true;\n    if (isFloat) {\n      gl.uniform4fv(burnvalLocation, burnval);\n    } else {\n      gl.uniform4iv(burnvalLocation, burnval);\n    }\n\n    const positionLocation = gl.getAttribLocation(edgeProgram, 'a_position');\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    /** @type {Array<number>} */\n    const lines = triangulation.getTriangles().reduce(function (\n      /** @type {Array<number>} */ lines,\n      triangle,\n    ) {\n      const target = triangle.target;\n      const {u1, v1, u0, v0, u2, v2} = getUVs(target);\n\n      return lines.concat([u1, v1, u0, v0, u0, v0, u2, v2, u2, v2, u1, v1]);\n    }, []);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(lines), gl.STATIC_DRAW);\n    gl.drawArrays(gl.LINES, 0, lines.length / 2);\n  }\n\n  return {\n    width,\n    height,\n    framebuffer: resultFrameBuffer,\n    texture: resultTexture,\n  };\n}\n","/**\n * @module ol/reproj/DataTile\n */\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceExtentResolution} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\nimport {\n  canvasGLPool,\n  createCanvasContextWebGL,\n  releaseGLCanvas,\n  render as renderReprojected,\n} from './glreproj.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {import(\"../transform.js\").Transform} [transformMatrix] Source transform matrix.\n * @property {boolean} [renderEdges] Render reprojection edges.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {boolean | Array<number>}\n     */\n    this.renderEdges_ =\n      options.renderEdges !== undefined ? options.renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n      options.transformMatrix,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: tileDataR,\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n        bandCount: bandCount,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const outWidth = targetWidth * this.pixelRatio_;\n    const outHeight = targetHeight * this.pixelRatio_;\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    const bandCount = dataSources[0].bandCount;\n    const dataR = new dataSources[0].dataType(bandCount * outWidth * outHeight);\n\n    const gl = createCanvasContextWebGL(outWidth, outHeight, canvasGLPool, {\n      premultipliedAlpha: false,\n      antialias: false,\n    });\n\n    let willInterpolate;\n    const format = gl.RGBA;\n    let textureType;\n    if (dataSources[0].dataType == Float32Array) {\n      textureType = gl.FLOAT;\n      gl.getExtension('WEBGL_color_buffer_float');\n      gl.getExtension('OES_texture_float');\n      gl.getExtension('EXT_float_blend');\n      const extension = gl.getExtension('OES_texture_float_linear');\n      const canInterpolate = extension !== null;\n      willInterpolate = canInterpolate && this.interpolate;\n    } else {\n      textureType = gl.UNSIGNED_BYTE;\n      willInterpolate = this.interpolate;\n    }\n\n    const BANDS_PR_REPROJ = 4;\n    const reprojs = Math.ceil(bandCount / BANDS_PR_REPROJ);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n\n        const data = new dataSource.dataType(BANDS_PR_REPROJ * width * height);\n        const dataS = dataSource.data;\n        let offset = reproj * BANDS_PR_REPROJ;\n        for (let j = 0, len = data.length; j < len; j += BANDS_PR_REPROJ) {\n          data[j] = dataS[offset];\n          data[j + 1] = dataS[offset + 1];\n          data[j + 2] = dataS[offset + 2];\n          data[j + 3] = dataS[offset + 3];\n          offset += bandCount;\n        }\n\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        if (willInterpolate) {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        } else {\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          format,\n          width,\n          height,\n          0,\n          format,\n          textureType,\n          data,\n        );\n\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          texture: texture,\n          width: width,\n          height: height,\n        });\n      }\n\n      const {framebuffer, width, height} = renderReprojected(\n        gl,\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        textureType,\n        this.renderEdges_,\n        willInterpolate,\n      );\n\n      // The texture is always RGBA.\n      const rows = width;\n      const cols = height * BANDS_PR_REPROJ;\n      const data = new dataSources[0].dataType(rows * cols);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.readPixels(0, 0, width, height, gl.RGBA, textureType, data);\n\n      let offset = reproj * BANDS_PR_REPROJ;\n      for (let i = 0, len = data.length; i < len; i += BANDS_PR_REPROJ) {\n        // The data read by `readPixels` is flipped in the y-axis so flip it again.\n        const flipY = (rows - 1 - ((i / cols) | 0)) * cols + (i % cols);\n        dataR[offset] = data[flipY];\n        dataR[offset + 1] = data[flipY + 1];\n        dataR[offset + 2] = data[flipY + 2];\n        dataR[offset + 3] = data[flipY + 3];\n        offset += bandCount;\n      }\n    }\n\n    releaseGLCanvas(gl);\n    canvasGLPool.push(gl.canvas);\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [Math.round(outWidth), Math.round(outHeight)];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport {toSize} from '../size.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {'anonymous'|'use-credentials'} CrossOriginAttribute\n */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {AbortSignal} signal An abort controller signal.\n * @property {CrossOriginAttribute} [crossOrigin] The cross-origin attribute for images.\n * @property {number} [maxY] The maximum y coordinate at the given z level.  Will be undefined if the\n * underlying tile grid does not have a known extent.\n */\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number, LoaderOptions) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {CrossOriginAttribute} [crossOrigin='anonymous'] The crossOrigin property to pass to loaders for image data.\n * @property {string} [key] Key for use in caching tiles.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @template {import(\"../Tile.js\").default} [TileType=DataTile]\n * @extends TileSource<TileType>\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @private\n     */\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {CrossOriginAttribute}\n     */\n    this.crossOrigin_ = options.crossOrigin || 'anonymous';\n\n    /**\n     * @type {import(\"../transform.js\").Transform|null}\n     */\n    this.transformMatrix = null;\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (\n      (!thisProj || equivalent(thisProj, projection)) &&\n      !this.transformMatrix\n    ) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!TileType} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const sourceTileGrid =\n      this.tileGrid || this.getTileGridForProjection(sourceProj || targetProj);\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      sourceTileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(sourceTileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1],\n        );\n      }),\n    );\n\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj,\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj: sourceProj || targetProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.gutter_,\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio),\n        transformMatrix: this.transformMatrix,\n      },\n      /** @type {import(\"../reproj/DataTile.js\").Options} */ (this.tileOptions),\n    );\n    const tile = /** @type {TileType} */ (\n      /** @type {*} */ (new ReprojDataTile(options))\n    );\n    tile.key = this.getKey();\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {TileType|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      projection &&\n      ((sourceProjection && !equivalent(sourceProjection, projection)) ||\n        this.transformMatrix)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n\n    const sourceLoader = this.loader_;\n\n    const controller = new AbortController();\n\n    /**\n     * @type {LoaderOptions}\n     */\n    const loaderOptions = {\n      signal: controller.signal,\n      crossOrigin: this.crossOrigin_,\n    };\n\n    const tileCoord = this.getTileCoordForTileUrlFunction([z, x, y]);\n    if (!tileCoord) {\n      return null;\n    }\n\n    const requestZ = tileCoord[0];\n    const requestX = tileCoord[1];\n    const requestY = tileCoord[2];\n    const range = this.getTileGrid()?.getFullTileRange(requestZ);\n    if (range) {\n      loaderOptions.maxY = range.getHeight() - 1;\n    }\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(requestZ, requestX, requestY, loaderOptions);\n      });\n    }\n\n    /**\n     * @type {import(\"../DataTile.js\").Options}\n     */\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n        controller: controller,\n      },\n      this.tileOptions,\n    );\n\n    const tile = /** @type {TileType} */ (\n      /** @type {*} */ (new DataTile(options))\n    );\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (\n      this.tileGrid &&\n      (!thisProj || equivalent(thisProj, projection)) &&\n      !this.transformMatrix\n    ) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/reproj/Image\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          (e) => {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {ceil} from '../math.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/arcgisRest\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {round} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport {appendParams} from '../uri.js';\nimport {getRequestExtent} from './Image.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * @param {string} baseUrl Base URL for the ArcGIS Rest service.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(\n  baseUrl,\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  params,\n) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  // (if there is no numeric portion the entire projection code must\n  // form a valid ArcGIS SpatialReference definition).\n  const srid = projection\n    .getCode()\n    .split(/:(?=\\d+$)/)\n    .pop();\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  params['SIZE'] = imageSize[0] + ',' + imageSize[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio,\n  );\n\n  const modifiedUrl = baseUrl\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  return appendParams(modifiedUrl, params);\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {string} url ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for ArcGIS Rest images.\n * @param {LoaderOptions} options Image ArcGIS Rest Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} ArcGIS Rest image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load ? options.load : decode;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio ?? 1.5;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  return function (extent, resolution, pixelRatio) {\n    pixelRatio = options.hidpi ? pixelRatio : 1;\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, options.params);\n\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n\n    const src = getRequestUrl(\n      options.url,\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      params,\n    );\n\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n\n    return load(image, src).then((image) => {\n      // Update resolution, because the server may return a smaller size than requested\n      const resolution = (getWidth(extent) / image.width) * pixelRatio;\n      return {image, extent, resolution, pixelRatio};\n    });\n  };\n}\n","/**\n * @module ol/source/static\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image. When using this loader with an\n * `ol/source/Image`, the same extent must be set as `extent` of the `ol/layer/Image`.\n * @property {string} url Image URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for static images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const extent = options.imageExtent;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  return () => {\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    return load(image, options.url).then((image) => {\n      const resolutionX = getWidth(extent) / image.width;\n      const resolutionY = getHeight(extent) / image.height;\n      const resolution =\n        resolutionX !== resolutionY ? [resolutionX, resolutionY] : resolutionY;\n      return {image, extent, resolution, pixelRatio: 1};\n    });\n  };\n}\n","/**\n * @module ol/source/ImageTile\n */\nimport {expandUrl, pickUrl, renderXYZTemplate} from '../uri.js';\nimport DataTileSource from './DataTile.js';\n\n/**\n * Image tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns an {@link import(\"../DataTile.js\").ImageLike image} or a promise for the same.\n *\n * @typedef {function(number, number, number, import(\"./DataTile.js\").LoaderOptions):(import(\"../DataTile.js\").ImageLike|Promise<import(\"../DataTile.js\").ImageLike>)} Loader\n */\n\n/**\n * @typedef {function(number, number, number, import(\"./DataTile.js\").LoaderOptions):string} UrlGetter\n */\n\n/**\n * @typedef {string | Array<string> | UrlGetter} UrlLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {UrlLike} [url] The image URL template.  In addition to a single URL template, an array of URL templates or a function\n * can be provided.  If a function is provided, it will be called with z, x, y tile coordinates and loader options and should\n * return a URL.\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns an {@link import(\"../DataTile.js\").ImageLike image} for a tile or a promise for the same.\n * The promise should not resolve until the image is loaded.  If the `url` option is provided, a loader will be created.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=true] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in miliseconds).\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.\n * @property {import('./DataTile.js').CrossOriginAttribute} [crossOrigin='anonymous'] The crossOrigin property to pass to loaders for image data.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\nconst loadError = new Error('Image failed to load');\n\n/**\n * @param {string} template The image url template.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {import('./DataTile.js').LoaderOptions} options The loader options.\n * @return {Promise<HTMLImageElement>} Resolves with a loaded image.\n */\nfunction loadImage(template, z, x, y, options) {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.crossOrigin = options.crossOrigin ?? null;\n    image.addEventListener('load', () => resolve(image));\n    image.addEventListener('error', () => reject(loadError));\n    image.src = renderXYZTemplate(template, z, x, y, options.maxY);\n  });\n}\n\n/**\n * @param {Array<string>} templates The url templates.\n * @return {Loader} The image loader.\n */\nfunction makeLoaderFromTemplates(templates) {\n  return function (z, x, y, options) {\n    const template = pickUrl(templates, z, x, y);\n    return loadImage(template, z, x, y, options);\n  };\n}\n\n/**\n * @param {UrlGetter} getter The url getter.\n * @return {Loader} The image loader.\n */\nfunction makeLoaderFromGetter(getter) {\n  return function (z, x, y, options) {\n    const url = getter(z, x, y, options);\n    return loadImage(url, z, x, y, options);\n  };\n}\n\n/**\n * @param {UrlLike} url The URL-like option.\n * @return {Loader} The tile loader.\n */\nfunction makeLoaderFromUrlLike(url) {\n  /**\n   * @type {Loader}\n   */\n  let loader;\n\n  if (Array.isArray(url)) {\n    loader = makeLoaderFromTemplates(url);\n  } else if (typeof url === 'string') {\n    const urls = expandUrl(url);\n    loader = makeLoaderFromTemplates(urls);\n  } else if (typeof url === 'function') {\n    loader = makeLoaderFromGetter(url);\n  } else {\n    throw new Error(\n      'The url option must be a single template, an array of templates, or a function for getting a URL',\n    );\n  }\n  return loader;\n}\n\nlet keyCount = 0;\n\n/**\n * @param {UrlLike} url The URL-like option.\n * @return {string} A key for the URL.\n */\nfunction keyFromUrlLike(url) {\n  if (Array.isArray(url)) {\n    return url.join('\\n');\n  }\n\n  if (typeof url === 'string') {\n    return url;\n  }\n\n  ++keyCount;\n  return 'url-function-key-' + keyCount;\n}\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @extends DataTileSource<import(\"../ImageTile.js\").default>\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass ImageTileSource extends DataTileSource {\n  /**\n   * @param {Options} [options] DataTile source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {Loader}\n     */\n    let loader = options.loader;\n\n    /**\n     * @type {string}\n     */\n    let key;\n\n    if (options.url) {\n      loader = makeLoaderFromUrlLike(options.url);\n      key = keyFromUrlLike(options.url);\n    }\n\n    /**\n     * @type {import('./Source.js').State}\n     */\n    const state = !loader ? 'loading' : options.state;\n\n    const wrapX = options.wrapX === undefined ? true : options.wrapX;\n\n    super({\n      loader: loader,\n      key: key,\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize,\n      gutter: options.gutter,\n      maxResolution: options.maxResolution,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      state: state,\n      wrapX: wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      crossOrigin: options.crossOrigin,\n      zDirection: options.zDirection,\n    });\n  }\n\n  /**\n   * @param {UrlLike} url The new URL.\n   * @api\n   */\n  setUrl(url) {\n    const loader = makeLoaderFromUrlLike(url);\n    this.setLoader(loader);\n    this.setKey(keyFromUrlLike(url));\n    if (this.getState() !== 'ready') {\n      this.setState('ready');\n    }\n  }\n}\n\nexport default ImageTileSource;\n","/**\n * @module ol/source/wms\n */\n\nimport {decode} from '../Image.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {floor, round} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\nimport {getRequestExtent} from './Image.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  const bbox =\n    v13 && axisOrientation.startsWith('ne')\n      ? [extent[1], extent[0], extent[3], extent[2]]\n      : extent;\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(baseUrl, params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType,\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': 'TRUE',\n    },\n    params,\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType,\n    );\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE,\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params,\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams,\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  if (options.params !== undefined && baseParams['LAYER'] === undefined) {\n    const layers = baseParams['LAYERS'];\n    const isSingleLayer = !Array.isArray(layers) || layers.length !== 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport {error as logError} from '../console.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string|CrsUri|CrsWkt|CrsReferenceSystem} crs The coordinate reference system.\n * @property {Array<string>} [orderedAxes] Axis order.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} CrsUri\n * @property {string} uri Reference to one coordinate reference system (CRS).\n */\n\n/**\n * @typedef {Object} CrsWkt\n * @property {Object} wkt JSON encoding for WKT representation of CRS 2.0.\n */\n\n/**\n * @typedef {Object} CrsReferenceSystem\n * @property {Object} referenceSystem Data structure as defined in the MD_ReferenceSystem of the ISO 19115.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n * @property {Array<string>} [collections] Optional collections to append the URL with.\n */\n\n/**\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<string>} collections List of collections to include as query parameter.\n * @return {string} The tile URL template with appended collections query parameter.\n */\nexport function appendCollectionsQueryParam(tileUrlTemplate, collections) {\n  if (!collections.length) {\n    return tileUrlTemplate;\n  }\n\n  // making sure we can always construct a URL instance.\n  const url = new URL(tileUrlTemplate, 'file:/');\n\n  if (url.pathname.split('/').includes('collections')) {\n    logError(\n      'The \"collections\" query parameter cannot be added to collection endpoints',\n    );\n    return tileUrlTemplate;\n  }\n  // According to conformance class\n  // http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/collections-selection\n  // commata in the identifiers of the `collections` query parameter\n  // need to be URLEncoded, while the commata separating the identifiers\n  // should not.\n  const encodedCollections = collections\n    .map((c) => encodeURIComponent(c))\n    .join(',');\n\n  url.searchParams.append('collections', encodedCollections);\n  const baseUrl = tileUrlTemplate.split('?')[0];\n  const queryParams = decodeURIComponent(url.searchParams.toString());\n  return `${baseUrl}?${queryParams}`;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [collections] Optional collections to append the URL with.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType, collections) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  if (collections) {\n    tileUrlTemplate = appendCollectionsQueryParam(tileUrlTemplate, collections);\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @param {Array<string>} [collections] Optional collections to append the URL with.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes,\n  collections,\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  if (collections) {\n    tileUrlTemplate = appendCollectionsQueryParam(tileUrlTemplate, collections);\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits,\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    if (typeof tileMatrixSet.crs === 'string') {\n      projection = getProjection(tileMatrixSet.crs);\n    } else if ('uri' in tileMatrixSet.crs) {\n      projection = getProjection(tileMatrixSet.crs.uri);\n    }\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${JSON.stringify(tileMatrixSet.crs)}`);\n    }\n  }\n  const orderedAxes = tileMatrixSet.orderedAxes;\n  const axisOrientation = orderedAxes\n    ? orderedAxes\n        .slice(0, 2)\n        .map((s) => s.replace(/E|X|Lon/i, 'e').replace(/N|Y|Lat/i, 'n'))\n        .join('')\n    : projection.getAxisOrientation();\n  const backwards = !axisOrientation.startsWith('en');\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  /** @type {import('../Tile.js').UrlFunction} */\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    projection: projection,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  /** @type {string} */\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.collections,\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes,\n      sourceInfo.collections,\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits,\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme',\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet',\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits,\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/layer/Image\n */\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport BaseImageLayer from './BaseImage.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {create as createTransform} from '../transform.js';\nimport {getUid} from '../util.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileSource from './Tile.js';\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = new ImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.imageOps_ = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this.imageOps_) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this.onWorkerMessage_.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this.onWorkerMessage_.bind(this, 0),\n      );\n    }\n    /**\n     * @type {Array<Worker>}\n     * @private\n     */\n    this.workers_ = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this.queue_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxQueueLength_ = config.queue || Infinity;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.running_ = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this.dataLookup_ = {};\n\n    /**\n     * @type {Job|null}\n     * @private\n     */\n    this.job_ = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this.enqueue_({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this.dispatch_();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  enqueue_(job) {\n    this.queue_.push(job);\n    while (this.queue_.length > this.maxQueueLength_) {\n      this.queue_.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  dispatch_() {\n    if (this.running_ || this.queue_.length === 0) {\n      return;\n    }\n\n    const job = this.queue_.shift();\n    this.job_ = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this.workers_.length;\n    this.running_ = threads;\n    if (threads === 1) {\n      this.workers_[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this.workers_[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  onWorkerMessage_(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this.dataLookup_[index] = event.data;\n    --this.running_;\n    if (this.running_ === 0) {\n      this.resolveJob_();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  resolveJob_() {\n    const job = this.job_;\n    const threads = this.workers_.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this.dataLookup_[0]['buffer']);\n      meta = this.dataLookup_[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this.dataLookup_[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this.dataLookup_[i]['meta'];\n      }\n    }\n    this.job_ = null;\n    this.dataLookup_ = {};\n    job.callback(\n      null,\n      new ImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this.dispatch_();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   * @override\n   */\n  disposeInternal() {\n    for (let i = 0; i < this.workers_.length; ++i) {\n      this.workers_[i].terminate();\n    }\n    this.workers_.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     * @private\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      /** @type {Array<string>} */\n      const attributions = [];\n      for (let i = 0, iMax = options.sources.length; i < iMax; ++i) {\n        const sourceOrLayer = options.sources[i];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const sourceAttributions = source.getAttributions()?.(frameState);\n        if (typeof sourceAttributions === 'string') {\n          attributions.push(sourceAttributions);\n        } else if (sourceAttributions !== undefined) {\n          attributions.push(...sourceAttributions);\n        }\n      }\n      return attributions;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   * @override\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/StadiaMaps\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\nimport XYZ from './XYZ.js';\n\n/**\n * @type {string}\n */\nconst STADIA_ATTRIBUTION =\n  '&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a>';\n\n/**\n * @type {string}\n */\nconst OMT_ATTRIBUTION =\n  '&copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a>';\n\n/**\n * @type {string}\n */\nconst STAMEN_ATTRIBUTION =\n  '&copy; <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>';\n\n/**\n * @type {Object<string, {extension: string}>}\n */\nconst LayerConfig = {\n  'stamen_terrain': {\n    extension: 'png',\n  },\n  'stamen_terrain_background': {\n    extension: 'png',\n  },\n  'stamen_terrain_labels': {\n    extension: 'png',\n  },\n  'stamen_terrain_lines': {\n    extension: 'png',\n  },\n  'stamen_toner_background': {\n    extension: 'png',\n  },\n  'stamen_toner': {\n    extension: 'png',\n  },\n  'stamen_toner_labels': {\n    extension: 'png',\n  },\n  'stamen_toner_lines': {\n    extension: 'png',\n  },\n  'stamen_toner_lite': {\n    extension: 'png',\n  },\n  'stamen_watercolor': {\n    extension: 'jpg',\n  },\n  'alidade_smooth': {\n    extension: 'png',\n  },\n  'alidade_smooth_dark': {\n    extension: 'png',\n  },\n  'alidade_satellite': {\n    extension: 'png',\n  },\n  'outdoors': {\n    extension: 'png',\n  },\n  'osm_bright': {\n    extension: 'png',\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number, retina: boolean}>}\n */\nconst ProviderConfig = {\n  'stamen_terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n    retina: true,\n  },\n  'stamen_toner': {\n    minZoom: 0,\n    maxZoom: 20,\n    retina: true,\n  },\n  'stamen_watercolor': {\n    minZoom: 1,\n    maxZoom: 18,\n    retina: false,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name. Valid values: `alidade_smooth`, `alidade_smooth_dark`, `outdoors`, `stamen_terrain`, `stamen_terrain_background`, `stamen_terrain_labels`, `stamen_terrain_lines`, `stamen_toner_background`, `stamen_toner`, `stamen_toner_labels`, `stamen_toner_lines`, `stamen_toner_lite`, `stamen_watercolor`, and `osm_bright`.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [apiKey] Stadia Maps API key. Not required for localhost or most public web deployments. See https://docs.stadiamaps.com/authentication/ for details.\n * @property {boolean} [retina] Use retina tiles (if available; not available for Stamen Watercolor).\n */\n\n/**\n * @classdesc\n * Layer source for the Stadia Maps tile server.\n * @api\n */\nclass StadiaMaps extends XYZ {\n  /**\n   * @param {Options} options StadiaMaps options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider] || {\n      'minZoom': 0,\n      'maxZoom': 20,\n      'retina': true,\n    };\n\n    const layerConfig = LayerConfig[options.layer];\n    const query = options.apiKey ? '?api_key=' + options.apiKey : '';\n    const retina = providerConfig.retina && options.retina ? '@2x' : '';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tiles.stadiamaps.com/tiles/' +\n          options.layer +\n          '/{z}/{x}/{y}' +\n          retina +\n          '.' +\n          layerConfig.extension +\n          query;\n\n    const attributions = [STADIA_ATTRIBUTION, OMT_ATTRIBUTION, OSM_ATTRIBUTION];\n\n    if (options.layer.startsWith('stamen_')) {\n      attributions.splice(1, 0, STAMEN_ATTRIBUTION);\n    }\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom !== undefined\n          ? options.maxZoom\n          : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom !== undefined\n          ? options.minZoom\n          : providerConfig.minZoom,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      tilePixelRatio: retina ? 2 : 1,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default StadiaMaps;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {listenOnce} from '../events.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource from './Tile.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(this, EventType.CHANGE, (e) => {\n        callback(this.getData(coordinate));\n      });\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   * @override\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    /**\n     * @private\n     * @type {LRUCache}\n     */\n    this.tileCache_ = new LRUCache(512);\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection(),\n        )\n      );\n      if (tile.getState() == TileState.IDLE) {\n        tile.load();\n      }\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution']) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tileKey = `${this.getKey()},${getKeyZXY(z, x, y)}`;\n    if (this.tileCache_.containsKey(tileKey)) {\n      return this.tileCache_.get(tileKey);\n    }\n    this.tileCache_.expireCache();\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_,\n    );\n    this.tileCache_.set(tileKey, tile);\n    return tile;\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {*} value Value to be written.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, value, objectStack) {\n      nodeWriter.call(thisArg ?? this, node, value, objectStack);\n      const parent = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const parentNode = parent.node;\n      parentNode.appendChild(node);\n    }\n  );\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color. `'none'` means no fill and no hit detection (applies to Canvas only).\n * @property {StringExpression} [fill-pattern-src] Fill pattern image source URI. If `fill-color` is defined as well,\n * it will be used to tint this image. (Expressions only in Canvas)\n * @property {SizeExpression} [fill-pattern-size] Fill pattern image size in pixels.\n * Can be used together with `fill-pattern-offset` to define the sub-rectangle to use\n * from a fill pattern image sprite sheet.\n * @property {SizeExpression} [fill-pattern-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original fill pattern image.\n * @property {import(\"./Icon.js\").IconOrigin} [fill-pattern-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. (WebGL only)\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries. To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [stroke-offset] Stroke offset in pixel. A positive value offsets the line to the right,\n * relative to the direction of the line. (WebGL only)\n * @property {string} [stroke-pattern-src] Stroke pattern image source URI. If `stroke-color` is defined as well,\n * it will be used to tint this image. (WebGL only)\n * @property {SizeExpression} [stroke-pattern-offset=[0, 0]] Offset, which, together with the size and the offset origin,\n * define the sub-rectangle to use from the original fill pattern image. (WebGL only)\n * @property {import(\"./Icon.js\").IconOrigin} [stroke-pattern-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. (WebGL only)\n * @property {SizeExpression} [stroke-pattern-size] Stroke pattern image size in pixel. Can be used together with `stroke-pattern-offset` to define the\n * sub-rectangle to use from the origin (sprite) fill pattern image. (WebGL only)\n * @property {NumberExpression} [stroke-pattern-spacing] Spacing between each pattern occurrence in pixels; 0 if undefined.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features. At a minimum, a `text-value` must be provided.\n * Note: text style is currently not supported in WebGL layers\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. `'none'` means no fill and no hit detection.\n * @property {ColorExpression} [text-background-fill-color] The fill color. `'none'` means no fill and no hit detection.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {import(\"./Style.js\").DeclutterMode} [text-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {ColorExpression} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {SizeExpression} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {NumberExpression} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`. (Expressions only in WebGL)\n * @property {NumberExpression} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`. (Expressions only in WebGL)\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view. (Expressions only supported in Canvas)\n * @property {SizeExpression} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image. (Expressions only in WebGL)\n * @property {import(\"./Style.js\").DeclutterMode} [icon-declutter-mode] Declutter mode (Canvas only)\n * @property {NumberExpression} [z-index] The zIndex of the style. (Canvas only)\n */\n\n/**\n * Regular shape style properties for rendering point features. At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {NumberExpression} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides. (Expressions only in WebGL)\n * @property {ColorExpression} [shape-fill-color] The fill color. `'none'` means no fill and no hit detection.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`. (Canvas only)\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`. (Canvas only)\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern. (Canvas only)\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset. (Canvas only)\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit. (Canvas only)\n * @property {NumberExpression} [shape-radius] Radius of a regular polygon. (Expressions only in WebGL)\n * @property {NumberExpression} [shape-radius2] Second radius to make a star instead of a regular polygon. (Expressions only in WebGL)\n * @property {NumberExpression} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up. (Expressions only in WebGL)\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-opacity] Shape opacity. (WebGL only)\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view. (Expression only supported in Canvas)\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two-dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius` and `shape-radius2`.\n * @property {import(\"./Style.js\").DeclutterMode} [shape-declutter-mode] Declutter mode. (Canvas only)\n * @property {NumberExpression} [z-index] The zIndex of the style. (Canvas only)\n */\n\n/**\n * Circle style properties for rendering point features. At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {NumberExpression} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color. `'none'` means no fill and no hit detection.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`. (Canvas only)\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`. (Canvas only)\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern. (Canvas only)\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset. (Canvas only)\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit. (Canvas only)\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two-dimensional scale will produce an ellipse.\n * Unless two-dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-opacity] Circle opacity. (WebGL only)\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two-dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view (Expression only supported in Canvas)\n * (meaningful only when used in conjunction with a two-dimensional scale).\n * @property {import(\"./Style.js\").DeclutterMode} [circle-declutter-mode] Declutter mode (Canvas only)\n * @property {NumberExpression} [z-index] The zIndex of the style. (Canvas only)\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style. If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies. If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n\n/**\n * Style variables are provided as an object. The variables can be read in a {@link import(\"../expr/expression.js\").ExpressionValue style expression}\n * using the `['var', 'varName']` operator.\n * Each variable must hold a literal value (not an expression).\n * @typedef {Object<string, number|Array<number>|string|boolean>} StyleVariables\n */\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport RBush from 'rbush';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport EventType from '../../events/EventType.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\nimport {fromResolutionLike} from '../../resolution.js';\nimport {apply, compose, create} from '../../transform.js';\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice()),\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n          declutter: null,\n        })\n      );\n      const declutter = this.getLayer().getDeclutter();\n      if (declutter) {\n        imageFrameState.declutter = {\n          [declutter]: new RBush(9),\n        };\n      }\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            vectorRenderer.renderFrame(imageFrameState, null);\n            vectorRenderer.renderDeclutter(imageFrameState);\n            vectorRenderer.renderDeferred(imageFrameState);\n            callback();\n          }\n        },\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image = image;\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (fromResolutionLike(image.getResolution()) * pixelRatio) /\n          imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1],\n        );\n      });\n      image.load();\n    }\n\n    if (this.image) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !this.getLayer().getSource().loading && !!this.image;\n  }\n\n  /**\n   * @override\n   */\n  preRender() {}\n\n  /**\n   * @override\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches,\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches,\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/proj/proj4\n */\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n} from '../proj.js';\nimport Projection from './Projection.js';\nimport {get as getCachedProjection} from './projections.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!getCachedProjection(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        }),\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = getCachedProjection(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = getCachedProjection(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse),\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return getCachedProjection(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return getCachedProjection(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`,\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`,\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) =>\n            r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code,\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0,\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true,\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance,\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat),\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport Feature from '../Feature.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\nimport {clamp} from '../math.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport EventType from '../render/EventType.js';\nimport {getVectorContext} from '../render.js';\nimport VectorSource from '../source/Vector.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @extends {VectorLayer<VectorSource<Feature>>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options,\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      }),\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop,\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight,\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension,\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent()),\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/**\n  end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes,\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {assert} from '../asserts.js';\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * A size using `#ofSize(buffer)`\n * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `STATIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array|null}\n     */\n    this.array_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type_ = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array_ = new (getArrayClassForType(this.type_))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array_ = getArrayClassForType(this.type_).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array_ = new (getArrayClassForType(this.type_))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array|null} Array.\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * @param {Float32Array|Uint32Array} array Array.\n   */\n  setArray(array) {\n    const ArrayType = getArrayClassForType(this.type_);\n    if (!(array instanceof ArrayType)) {\n      throw new Error(`Expected ${ArrayType}`);\n    }\n    this.array_ = array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array_ ? this.array_.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n\n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n\n  uniform vec2 u_screenSize;\n\n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  uniform sampler2D u_image;\n  uniform float u_opacity;\n\n  varying vec2 v_texCoord;\n\n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     */\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    /**\n     * @private\n     */\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.renderTargetTexture_ = gl.createTexture();\n\n    /**\n     * @type {import('../size.js').Size|null}\n     * @private\n     */\n    this.renderTargetTextureSize_ = null;\n\n    /**\n     * @private\n     */\n    this.frameBuffer_ = gl.createFramebuffer();\n    /**\n     * @private\n     */\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER,\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER,\n    );\n    gl.compileShader(fragmentShader);\n    /**\n     * @private\n     */\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    /**\n     * @private\n     */\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW,\n    );\n\n    /**\n     * @private\n     */\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position',\n    );\n    /**\n     * @private\n     */\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize',\n    );\n    /**\n     * @private\n     */\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity',\n    );\n    /**\n     * @private\n     */\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image',\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  getRenderTargetTexture() {\n    return this.renderTargetTexture_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data,\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0,\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1],\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_,\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null,\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0,\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data),\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport Disposable from '../Disposable.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {getUid} from '../util.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|WebGLTexture|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   `gl_Position`: position of the vertex in screen space\n *\n *   Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            }),\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const bufferKey = getUid(buf);\n    // Note: gl.deleteBuffer is not called here since we let WebGL garbage collect it automatically\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * @param {WebGLFramebuffer|null} frameBuffer The frame buffer.\n   * @param {WebGLTexture} [texture] The texture.\n   */\n  bindFrameBuffer(frameBuffer, texture) {\n    const gl = this.getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    if (texture) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        texture,\n        0,\n      );\n    }\n  }\n\n  /**\n   * Bind the frame buffer from the initial render.\n   */\n  bindInitialFrameBuffer() {\n    const gl = this.getGL();\n    const frameBuffer = this.postProcessPasses_[0].getFrameBuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    const texture = this.postProcessPasses_[0].getRenderTargetTexture();\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0,\n    );\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Set up an attribute array buffer for use in the vertex shader.\n   * @param {import(\"./Buffer\").default} buffer The buffer.\n   * @param {string} attributeName The attribute name.\n   * @param {number} size The number of components per attribute vertex.\n   */\n  bindAttribute(buffer, attributeName, size) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    const index = this.getAttributeLocation(attributeName);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribPointer(index, size, gl.FLOAT, false, 0, 0);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth,\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose,\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1],\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001,\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution,\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData ||\n        value instanceof WebGLTexture\n      ) {\n        // create a texture & put data\n        if (value instanceof WebGLTexture && !uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = value;\n        } else if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (\n          !(value instanceof WebGLTexture) &&\n          imageReady &&\n          uniform.prevValue !== value\n        ) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value),\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    if (frameState) {\n      this.applyFrameState(frameState);\n      this.applyUniforms(frameState);\n    }\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER,\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER,\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program,\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1],\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset,\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.  If a Uint8Array is provided for data, a size must also be provided.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement|Uint8Array|null} data Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @param {boolean} [nearest] Use gl.NEAREST for min/mag filter.\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture, nearest) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n    const filter = nearest ? gl.NEAREST : gl.LINEAR;\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n\n    if (data instanceof Uint8Array) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        data,\n      );\n    } else if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null,\n      );\n    }\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    this.onMapChanged_ = () => {\n      this.clearCache();\n      this.removeHelper();\n    };\n\n    layer.addChangeListener(LayerProperty.MAP, this.onMapChanged_);\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * @protected\n   */\n  clearCache() {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearCache();\n    this.removeHelper();\n    this.getLayer()?.removeChangeListener(\n      LayerProperty.MAP,\n      this.onMapChanged_,\n    );\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1],\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport TileState from '../../TileState.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {toSize} from '../../size.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @template {import(\"../../layer/WebGLTile.js\").default|import(\"../../layer/Flow.js\").default} LayerType\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   * @override\n   */\n  reset(options) {\n    super.reset(options);\n    if (this.helper) {\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n    }\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_,\n      );\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        // upload the texture data\n        paletteTexture.getTexture(gl);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  afterHelperCreated() {\n    super.afterHelperCreated();\n\n    const gl = this.helper.getGL();\n    for (const paletteTexture of this.paletteTextures_) {\n      // upload the texture data\n      paletteTexture.getTexture(gl);\n    }\n\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  /**\n   * @override\n   */\n  removeHelper() {\n    if (this.helper) {\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * @override\n   */\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  /**\n   * @override\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  /**\n   * @override\n   */\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName,\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform),\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution,\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate,\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution,\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (tile.getState() === TileState.EMPTY) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n      this.paletteTextures_.length = 0;\n\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data,\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   */\n  delete(gl) {\n    if (this.texture_) {\n      gl.deleteTexture(this.texture_);\n    }\n    this.texture_ = null;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/expr/gpu\n */\nimport {asArray} from '../color.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {toSize} from '../size.js';\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  SizeType,\n  StringType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.',\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  return arrayToGlsl([array[0] / 255, array[1] / 255, array[2] / 255, alpha]);\n}\n\n/**\n * Normalizes and converts a number or array toa `vec2` array compatible with GLSL.\n * @param {number|import('../size.js').Size} size Size.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function sizeToGlsl(size) {\n  const array = toSize(size);\n  return arrayToGlsl(array);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {boolean} featureId Whether the feature ID is used in the expression\n * @property {boolean} geometryType Whether the geometry type is used in the expression\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    featureId: false,\n    geometryType: false,\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\nexport const FEATURE_ID_PROPERTY_NAME = 'featureId';\nexport const GEOMETRY_TYPE_PROPERTY_NAME = 'geometryType';\n\n/**\n * The value `-9999999` will be used to indicate that a property on a feature is not defined, similar to a \"no data\" value.\n */\nexport const UNDEFINED_PROP_VALUE = -9999999;\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext,\n) {\n  const expression = parse(encoded, type, parsingContext);\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    return 'a_prop_' + propName;\n  },\n  [Ops.Id]: (context) => {\n    context.featureId = true;\n    return 'a_' + FEATURE_ID_PROPERTY_NAME;\n  },\n  [Ops.GeometryType]: (context) => {\n    context.geometryType = true;\n    return 'a_' + GEOMETRY_TYPE_PROPERTY_NAME;\n  },\n  [Ops.LineMetric]: () => 'currentLineMetric', // this variable is assumed to always be present in shaders, default is 0.\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Has]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    return `(a_prop_${propName} != ${numberToGlsl(UNDEFINED_PROP_VALUE)})`;\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`,\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`,\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`,\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`,\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`,\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`,\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`,\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`,\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`,\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`,\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`,\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    if (compiledArgs.length === 1) {\n      //grayscale\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), 1.0)`;\n    }\n    if (compiledArgs.length === 2) {\n      //grayscale with alpha\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), ${compiledArgs[1]})`;\n    }\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `vec4(${rgb.join(', ')}, ${alpha})`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] =\n        `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Coalesce\n  // Ops.Concat\n  // Ops.ToString\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator,\n        )}`,\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value),\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  if ((expression.type & SizeType) > 0) {\n    return sizeToGlsl(\n      /** @type {number|import('../size.js').Size} */ (expression.value),\n    );\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType,\n    )})`,\n  );\n}\n","/**\n * Utilities for filling WebGL buffers\n * @module ol/render/webgl/bufferUtil\n */\nimport earcut from 'earcut';\nimport {clamp} from '../../math.js';\nimport {apply as applyTransform} from '../../transform.js';\n\nexport const LINESTRING_ANGLE_COSINE_CUTOFF = 0.985;\n\n/** @type {Array<number>} */\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\n/**\n * @param {Float32Array} buffer Buffer\n * @param {number} pos Position\n * @param {number} x X\n * @param {number} y Y\n * @param {number} index Index\n */\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions,\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader.\n * Join angles are between 0 and 2PI.\n * This also computes the length of the current segment and the sum of the join angle tangents in order\n * to store this information on each subsequent segment along the line. This is necessary to correctly render dashes\n * and symbols along the line.\n *\n *   pB (before)                          pA (after)\n *    X             negative             X\n *     \\             offset             /\n *      \\                              /\n *       \\   join              join   /\n *        \\ angle 0          angle 1 /\n *         \\←---                ←---/      positive\n *          \\   ←--          ←--   /        offset\n *           \\     ↑       ↓      /\n *            X────┴───────┴─────X\n *            p0                  p1\n *\n * @param {Float32Array} instructions Array of render instructions for lines.s\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment end point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} toWorldTransform Transform matrix used to obtain world coordinates from instructions\n * @param {number} currentLength Cumulated length of segments processed so far\n * @param {number} currentAngleTangentSum Cumulated tangents of the join angles processed so far\n * @return {{length: number, angle: number}} Cumulated length with the newly processed segment (in world units), new sum of the join angle tangents\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  toWorldTransform,\n  currentLength,\n  currentAngleTangentSum,\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 10; // base attributes: x0, y0, m0, x1, y1, m1, angle0, angle1, distance, params\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  const m0 = instructions[segmentStartIndex + 2];\n  const m1 = instructions[segmentEndIndex + 2];\n\n  // to compute join angles we need to reproject coordinates back in world units\n  const p0world = applyTransform(toWorldTransform, [...p0]);\n  const p1world = applyTransform(toWorldTransform, [...p1]);\n\n  /**\n   * Compute the angle between p0pA and p0pB\n   * @param {import(\"../../coordinate.js\").Coordinate} p0 Point 0\n   * @param {import(\"../../coordinate.js\").Coordinate} pA Point A\n   * @param {import(\"../../coordinate.js\").Coordinate} pB Point B\n   * @return {number} a value in [0, 2PI]\n   */\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1]),\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1]),\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1),\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  // a negative angle indicates a line cap\n  let angle0 = -1;\n  let angle1 = -1;\n  let newAngleTangentSum = currentAngleTangentSum;\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(toWorldTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle0) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((angle0 - Math.PI) / 2);\n    }\n  }\n  // adapt offsets for P1 in case of join; add to angle sum\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(toWorldTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle1) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((Math.PI - angle1) / 2);\n    }\n  }\n\n  /**\n   * @param {number} vertexIndex From 0 to 3, indicating position in the quad\n   * @param {number} angleSum Sum of the join angles encountered so far (used to compute distance offset\n   * @return {number} A float value containing both information\n   */\n  function computeParameters(vertexIndex, angleSum) {\n    if (angleSum === 0) {\n      return vertexIndex * 10000;\n    }\n    return Math.sign(angleSum) * (vertexIndex * 10000 + Math.abs(angleSum));\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    m0,\n    p1[0],\n    p1[1],\n    m1,\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(0, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    m0,\n    p1[0],\n    p1[1],\n    m1,\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(1, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    m0,\n    p1[0],\n    p1[1],\n    m1,\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(2, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    m0,\n    p1[0],\n    p1[1],\n    m1,\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(3, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2,\n  );\n\n  return {\n    length:\n      currentLength +\n      Math.sqrt(\n        (p1world[0] - p0world[0]) * (p1world[0] - p0world[0]) +\n          (p1world[1] - p0world[1]) * (p1world[1] - p0world[1]),\n      ),\n    angle: newAngleTangentSum,\n  };\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize,\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize,\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex,\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n","/**\n * Class for generating shaders from literal style objects\n * @module ol/render/webgl/ShaderBuilder\n */\nimport {colorToGlsl, numberToGlsl, stringToGlsl} from '../../expr/gpu.js';\nimport {createDefaultStyle} from '../../style/flat.js';\nimport {LINESTRING_ANGLE_COSINE_CUTOFF} from './bufferUtil.js';\n\nexport const COMMON_HEADER = `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_screenToWorldMatrix;\nuniform vec2 u_viewportSizePx;\nuniform float u_pixelRatio;\nuniform float u_globalAlpha;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform float u_rotation;\nuniform vec4 u_renderExtent;\nuniform vec2 u_patternOrigin;\nuniform float u_depth;\nuniform mediump int u_hitDetection;\n\nconst float PI = 3.141592653589793238;\nconst float TWO_PI = 2.0 * PI;\nfloat currentLineMetric = 0.; // an actual value will be used in the stroke shaders\n`;\n\nconst DEFAULT_STYLE = createDefaultStyle();\n\n/**\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name, as will be declared in the headers (including a_)\n * @property {string} type Attribute type, either `float`, `vec2`, `vec4`...\n * @property {string} varyingName Varying name, as will be declared in the fragment shader (including v_)\n * @property {string} varyingType Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} varyingExpression GLSL expression to assign to the varying in the vertex shader\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSymbolSizeExpression('...')\n *   .getSymbolFragmentShader();\n * ```\n *\n * A note on [alpha premultiplication](https://en.wikipedia.org/wiki/Alpha_compositing#Straight_versus_premultiplied):\n * The ShaderBuilder class expects all colors to **not having been alpha-premultiplied!** This is because alpha\n * premultiplication is done at the end of each fragment shader.\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms_ = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<AttributeDescription>}\n     * @private\n     */\n    this.attributes_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolSizeExpression_ = `vec2(${numberToGlsl(\n      DEFAULT_STYLE['circle-radius'],\n    )} + ${numberToGlsl(DEFAULT_STYLE['circle-stroke-width'] * 0.5)})`;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolRotationExpression_ = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolOffsetExpression_ = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['circle-fill-color']),\n    );\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression_ = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression_ = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.symbolRotateWithView_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeWidthExpression_ = numberToGlsl(DEFAULT_STYLE['stroke-width']);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['stroke-color']),\n    );\n\n    /**\n     * @private\n     */\n    this.strokeOffsetExpression_ = '0.';\n\n    /**\n     * @private\n     */\n    this.strokeCapExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeJoinExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeMiterLimitExpression_ = '10.';\n\n    /**\n     * @private\n     */\n    this.strokeDistanceFieldExpression_ = '-1000.';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.fillColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['fill-color']),\n    );\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.vertexShaderFunctions_ = [];\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.fragmentShaderFunctions_ = [];\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * Attributes will also be made available under the same name in fragment shaders.\n   * @param {string} name Attribute name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} [transform] Expression which will be assigned to the varying in the vertex shader, and\n   * passed on to the fragment shader.\n   * @param {'float'|'vec2'|'vec3'|'vec4'} [transformedType] Type of the attribute after transformation;\n   * e.g. `vec4` after unpacking color components\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name, type, transform, transformedType) {\n    this.attributes_.push({\n      name,\n      type,\n      varyingName: name.replace(/^a_/, 'v_'),\n      varyingType: transformedType ?? type,\n      varyingExpression: transform ?? name,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolSizeExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolSizeExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol size expression\n   */\n  getSymbolSizeExpression() {\n    return this.symbolSizeExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotationExpression(expression) {\n    this.symbolRotationExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.symbolOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol offset expression\n   */\n  getSymbolOffsetExpression() {\n    return this.symbolOffsetExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolColorExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol color expression\n   */\n  getSymbolColorExpression() {\n    return this.symbolColorExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression_;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.symbolRotateWithView_ = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke width expression, returning value in pixels\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeWidthExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeWidthExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `vec4`: can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeColorExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current stroke color expression\n   */\n  getStrokeColorExpression() {\n    return this.strokeColorExpression_;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeOffsetExpression(expression) {\n    this.strokeOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line cap expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeCapExpression(expression) {\n    this.strokeCapExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line join expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeJoinExpression(expression) {\n    this.strokeJoinExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke miter limit expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeMiterLimitExpression(expression) {\n    this.strokeMiterLimitExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke distance field expression, evaluate to `float`\n   * This can override the default distance field; can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeDistanceFieldExpression(expression) {\n    this.strokeDistanceFieldExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Fill color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setFillColorExpression(expression) {\n    this.hasFill_ = true;\n    this.fillColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fill color expression\n   */\n  getFillColorExpression() {\n    return this.fillColorExpression_;\n  }\n\n  addVertexShaderFunction(code) {\n    if (this.vertexShaderFunctions_.includes(code)) {\n      return this;\n    }\n    this.vertexShaderFunctions_.push(code);\n    return this;\n  }\n  addFragmentShaderFunction(code) {\n    if (this.fragmentShaderFunctions_.includes(code)) {\n      return this;\n    }\n    this.fragmentShaderFunctions_.push(code);\n    return this;\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolVertexShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_.map((uniform) => `uniform ${uniform};`).join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec4 a_hitColor;\n\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n\n${this.attributes_\n  .map(\n    (attribute) => `attribute ${attribute.type} ${attribute.name};\nvarying ${attribute.varyingType} ${attribute.varyingName};`,\n  )\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 pxToScreen(vec2 coordPx) {\n  vec2 scaled = coordPx / u_viewportSizePx / 0.5;\n  return scaled;\n}\n\nvec2 screenToPx(vec2 coordScreen) {\n  return (coordScreen * 0.5 + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  v_quadSizePx = ${this.symbolSizeExpression_};\n  vec2 halfSizePx = v_quadSizePx * 0.5;\n  vec2 centerOffsetPx = ${this.symbolOffsetExpression_};\n  vec2 offsetPx = centerOffsetPx;\n  if (a_index == 0.0) {\n    offsetPx -= halfSizePx;\n  } else if (a_index == 1.0) {\n    offsetPx += halfSizePx * vec2(1., -1.);\n  } else if (a_index == 2.0) {\n    offsetPx += halfSizePx;\n  } else {\n    offsetPx += halfSizePx * vec2(-1., 1.);\n  }\n  float angle = ${this.symbolRotationExpression_};\n  ${this.symbolRotateWithView_ ? 'angle += u_rotation;' : ''}\n  float c = cos(-angle);\n  float s = sin(-angle);\n  offsetPx = vec2(c * offsetPx.x - s * offsetPx.y, s * offsetPx.x + c * offsetPx.y);\n  vec4 center = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n  gl_Position = center + vec4(pxToScreen(offsetPx), u_depth, 0.);\n  vec4 texCoord = ${this.texCoordExpression_};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  v_hitColor = a_hitColor;\n  v_angle = angle;\n  c = cos(-v_angle);\n  s = sin(-v_angle);\n  centerOffsetPx = vec2(c * centerOffsetPx.x - s * centerOffsetPx.y, s * centerOffsetPx.x + c * centerOffsetPx.y); \n  v_centerPx = screenToPx(center.xy) + centerOffsetPx;\n${this.attributes_\n  .map(\n    (attribute) =>\n      `  ${attribute.varyingName} = ${attribute.varyingExpression};`,\n  )\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolFragmentShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_.map((uniform) => `uniform ${uniform};`).join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec4 v_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.attributes_\n  .map(\n    (attribute) => `varying ${attribute.varyingType} ${attribute.varyingName};`,\n  )\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvoid main(void) {\n${this.attributes_\n  .map(\n    (attribute) =>\n      `  ${attribute.varyingType} ${attribute.name} = ${attribute.varyingName}; // assign to original attribute name`,\n  )\n  .join('\\n')}\n  if (${this.discardExpression_}) { discard; }\n  vec2 coordsPx = gl_FragCoord.xy / u_pixelRatio - v_centerPx; // relative to center\n  float c = cos(v_angle);\n  float s = sin(v_angle);\n  coordsPx = vec2(c * coordsPx.x - s * coordsPx.y, s * coordsPx.x + c * coordsPx.y);\n  gl_FragColor = ${this.symbolColorExpression_};\n  gl_FragColor.rgb *= gl_FragColor.a;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.05) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a stroke vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeVertexShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_.map((uniform) => `uniform ${uniform};`).join('\\n')}\nattribute vec2 a_segmentStart;\nattribute vec2 a_segmentEnd;\nattribute float a_measureStart;\nattribute float a_measureEnd;\nattribute float a_parameters;\nattribute float a_distance;\nattribute vec2 a_joinAngles;\nattribute vec4 a_hitColor;\n\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_hitColor;\nvarying float v_distanceOffsetPx;\nvarying float v_measureStart;\nvarying float v_measureEnd;\n\n${this.attributes_\n  .map(\n    (attribute) => `attribute ${attribute.type} ${attribute.name};\nvarying ${attribute.varyingType} ${attribute.varyingName};`,\n  )\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvec4 pxToScreen(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return vec4(screenPos, u_depth, 1.0);\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nvec2 getJoinOffsetDirection(vec2 normalPx, float joinAngle) {\n  float halfAngle = joinAngle / 2.0;\n  float c = cos(halfAngle);\n  float s = sin(halfAngle);\n  vec2 angleBisectorNormal = vec2(s * normalPx.x + c * normalPx.y, -c * normalPx.x + s * normalPx.y);\n  float length = 1.0 / s;\n  return angleBisectorNormal * length;\n}\n\nvec2 getOffsetPoint(vec2 point, vec2 normal, float joinAngle, float offsetPx) {\n  // if on a cap or the join angle is too high, offset the line along the segment normal\n  if (cos(joinAngle) > 0.998 || isCap(joinAngle)) {\n    return point - normal * offsetPx;\n  }\n  // offset is applied along the inverted normal (positive offset goes \"right\" relative to line direction)\n  return point - getJoinOffsetDirection(normal, joinAngle) * offsetPx;\n}\n\nvoid main(void) {\n  v_angleStart = a_joinAngles.x;\n  v_angleEnd = a_joinAngles.y;\n  float vertexNumber = floor(abs(a_parameters) / 10000. + 0.5);\n  currentLineMetric = vertexNumber < 1.5 ? a_measureStart : a_measureEnd;\n  // we're reading the fractional part while keeping the sign (so -4.12 gives -0.12, 3.45 gives 0.45)\n  float angleTangentSum = fract(abs(a_parameters) / 10000.) * 10000. * sign(a_parameters);\n\n  float lineWidth = ${this.strokeWidthExpression_};\n  float lineOffsetPx = ${this.strokeOffsetExpression_};\n\n  // compute segment start/end in px with offset\n  vec2 segmentStartPx = worldToPx(a_segmentStart);\n  vec2 segmentEndPx = worldToPx(a_segmentEnd);\n  vec2 tangentPx = normalize(segmentEndPx - segmentStartPx);\n  vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n  segmentStartPx = getOffsetPoint(segmentStartPx, normalPx, v_angleStart, lineOffsetPx),\n  segmentEndPx = getOffsetPoint(segmentEndPx, normalPx, v_angleEnd, lineOffsetPx);\n  \n  // compute current vertex position\n  float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n  float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n  float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n  vec2 joinDirection;\n  vec2 positionPx = vertexNumber < 1.5 ? segmentStartPx : segmentEndPx;\n  // if angle is too high, do not make a proper join\n  if (cos(angle) > ${LINESTRING_ANGLE_COSINE_CUTOFF} || isCap(angle)) {\n    joinDirection = normalPx * normalDir - tangentPx * tangentDir;\n  } else {\n    joinDirection = getJoinOffsetDirection(normalPx * normalDir, angle);\n  }\n  positionPx = positionPx + joinDirection * (lineWidth * 0.5 + 1.); // adding 1 pixel for antialiasing\n  gl_Position = pxToScreen(positionPx);\n\n  v_segmentStart = segmentStartPx;\n  v_segmentEnd = segmentEndPx;\n  v_width = lineWidth;\n  v_hitColor = a_hitColor;\n  v_distanceOffsetPx = a_distance / u_resolution - (lineOffsetPx * angleTangentSum);\n  v_measureStart = a_measureStart;\n  v_measureEnd = a_measureEnd;\n${this.attributes_\n  .map(\n    (attribute) =>\n      `  ${attribute.varyingName} = ${attribute.varyingExpression};`,\n  )\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a stroke fragment shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeFragmentShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_.map((uniform) => `uniform ${uniform};`).join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_hitColor;\nvarying float v_distanceOffsetPx;\nvarying float v_measureStart;\nvarying float v_measureEnd;\n${this.attributes_\n  .map(\n    (attribute) => `varying ${attribute.varyingType} ${attribute.varyingName};`,\n  )\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nfloat segmentDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  vec2 tangent = normalize(end - start);\n  vec2 normal = vec2(-tangent.y, tangent.x);\n  vec2 startToPoint = point - start;\n  return abs(dot(startToPoint, normal)) - width * 0.5;\n}\n\nfloat buttCapDistanceField(vec2 point, vec2 start, vec2 end) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  return dot(startToPoint, -tangent);\n}\n\nfloat squareCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return buttCapDistanceField(point, start, end) - width * 0.5;\n}\n\nfloat roundCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  float onSegment = max(0., 1000. * dot(point - start, end - start)); // this is very high when inside the segment\n  return length(point - start) - width * 0.5 - onSegment;\n}\n\nfloat roundJoinDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat bevelJoinField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  float c = cos(joinAngle * 0.5);\n  float s = sin(joinAngle * 0.5);\n  float direction = -sign(sin(joinAngle));\n  vec2 bisector = vec2(c * tangent.x - s * tangent.y, s * tangent.x + c * tangent.y);\n  float radius = width * 0.5 * s;\n  return dot(startToPoint, bisector * direction) - radius;\n}\n\nfloat miterJoinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  if (cos(joinAngle) > ${LINESTRING_ANGLE_COSINE_CUTOFF}) { // avoid risking a division by zero\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  float miterLength = 1. / sin(joinAngle * 0.5);\n  float miterLimit = ${this.strokeMiterLimitExpression_};\n  if (miterLength > miterLimit) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  return -1000.;\n}\n\nfloat capDistanceField(vec2 point, vec2 start, vec2 end, float width, float capType) {\n   if (capType == ${stringToGlsl('butt')}) {\n    return buttCapDistanceField(point, start, end);\n  } else if (capType == ${stringToGlsl('square')}) {\n    return squareCapDistanceField(point, start, end, width);\n  }\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat joinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float joinType) {\n  if (joinType == ${stringToGlsl('bevel')}) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  } else if (joinType == ${stringToGlsl('miter')}) {\n    return miterJoinDistanceField(point, start, end, width, joinAngle);\n  }\n  return roundJoinDistanceField(point, start, end, width);\n}\n\nfloat computeSegmentPointDistance(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float capType, float joinType) {\n  if (isCap(joinAngle)) {\n    return capDistanceField(point, start, end, width, capType);\n  }\n  return joinDistanceField(point, start, end, width, joinAngle, joinType);\n}\n\nfloat distanceFromSegment(vec2 point, vec2 start, vec2 end) {\n  vec2 tangent = end - start;\n  vec2 startToPoint = point - start;\n  // inspire by capsule fn in https://iquilezles.org/articles/distfunctions/\n  float h = clamp(dot(startToPoint, tangent) / dot(tangent, tangent), 0.0, 1.0);\n  return length(startToPoint - tangent * h);\n}\n\nvoid main(void) {\n${this.attributes_\n  .map(\n    (attribute) =>\n      `  ${attribute.varyingType} ${attribute.name} = ${attribute.varyingName}; // assign to original attribute name`,\n  )\n  .join('\\n')}\n      \n  vec2 currentPoint = gl_FragCoord.xy / u_pixelRatio;\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(currentPoint);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n\n  float segmentLength = length(v_segmentEnd - v_segmentStart);\n  vec2 segmentTangent = (v_segmentEnd - v_segmentStart) / segmentLength;\n  vec2 segmentNormal = vec2(-segmentTangent.y, segmentTangent.x);\n  vec2 startToPoint = currentPoint - v_segmentStart;\n  float lengthToPoint = max(0., min(dot(segmentTangent, startToPoint), segmentLength));\n  float currentLengthPx = lengthToPoint + v_distanceOffsetPx;\n  float currentRadiusPx = distanceFromSegment(currentPoint, v_segmentStart, v_segmentEnd);\n  float currentRadiusRatio = dot(segmentNormal, startToPoint) * 2. / v_width;\n  currentLineMetric = mix(v_measureStart, v_measureEnd, lengthToPoint / segmentLength);\n\n  if (${this.discardExpression_}) { discard; }\n\n  float capType = ${this.strokeCapExpression_};\n  float joinType = ${this.strokeJoinExpression_};\n  float segmentStartDistance = computeSegmentPointDistance(currentPoint, v_segmentStart, v_segmentEnd, v_width, v_angleStart, capType, joinType);\n  float segmentEndDistance = computeSegmentPointDistance(currentPoint, v_segmentEnd, v_segmentStart, v_width, v_angleEnd, capType, joinType);\n  float distanceField = max(\n    segmentDistanceField(currentPoint, v_segmentStart, v_segmentEnd, v_width),\n    max(segmentStartDistance, segmentEndDistance)\n  );\n  distanceField = max(distanceField, ${this.strokeDistanceFieldExpression_});\n\n  vec4 color = ${this.strokeColorExpression_};\n  color.a *= smoothstep(0.5, -0.5, distanceField);\n  gl_FragColor = color;\n  gl_FragColor.a *= u_globalAlpha;\n  gl_FragColor.rgb *= gl_FragColor.a;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a fill vertex shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillVertexShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_.map((uniform) => `uniform ${uniform};`).join('\\n')}\nattribute vec2 a_position;\nattribute vec4 a_hitColor;\n\nvarying vec4 v_hitColor;\n\n${this.attributes_\n  .map(\n    (attribute) => `attribute ${attribute.type} ${attribute.name};\nvarying ${attribute.varyingType} ${attribute.varyingName};`,\n  )\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, u_depth, 1.0);\n  v_hitColor = a_hitColor;\n${this.attributes_\n  .map(\n    (attribute) =>\n      `  ${attribute.varyingName} = ${attribute.varyingExpression};`,\n  )\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a fill fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillFragmentShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_.map((uniform) => `uniform ${uniform};`).join('\\n')}\nvarying vec4 v_hitColor;\n${this.attributes_\n  .map(\n    (attribute) => `varying ${attribute.varyingType} ${attribute.varyingName};`,\n  )\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n${this.attributes_\n  .map(\n    (attribute) =>\n      `  ${attribute.varyingType} ${attribute.name} = ${attribute.varyingName}; // assign to original attribute name`,\n  )\n  .join('\\n')}\n  vec2 pxPos = gl_FragCoord.xy / u_pixelRatio;\n  vec2 pxOrigin = worldToPx(u_patternOrigin);\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(pxPos);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.fillColorExpression_};\n  gl_FragColor.a *= u_globalAlpha;\n  gl_FragColor.rgb *= gl_FragColor.a;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n}\n","/**\n * Utilities for compiling expressions and turning them into WebGL concepts\n * @module ol/render/webgl/compileUtil\n */\n\nimport {asArray} from '../../color.js';\nimport {\n  ColorType,\n  NumberArrayType,\n  SizeType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {\n  buildExpression,\n  getStringNumberEquivalent,\n  uniformNameForVariable,\n} from '../../expr/gpu.js';\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a compilation context that\n * will be read and modified during the parsing operation.\n * @param {import(\"../../expr/gpu.js\").CompilationContext} compilationContext Compilation context\n * @param {import(\"../../expr/expression.js\").EncodedExpression} value Value\n * @param {number} [expectedType] Expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(compilationContext, value, expectedType) {\n  const parsingContext = newParsingContext();\n  return buildExpression(\n    value,\n    expectedType,\n    parsingContext,\n    compilationContext,\n  );\n}\n\n/**\n * Packs all components of a color into a two-floats array\n * @param {import(\"../../color.js\").Color|string} color Color as array of numbers or string\n * @return {Array<number>} Vec2 array containing the color in compressed form\n */\nexport function packColor(color) {\n  const array = asArray(color);\n  const r = array[0] * 256;\n  const g = array[1];\n  const b = array[2] * 256;\n  const a = Math.round(array[3] * 255);\n  return [r + g, b + a];\n}\n\nexport const UNPACK_COLOR_FN = `vec4 unpackColor(vec2 packedColor) {\n  return vec4(\n    fract(floor(packedColor[0] / 256.0) / 256.0),\n    fract(packedColor[0] / 256.0),\n    fract(floor(packedColor[1] / 256.0) / 256.0),\n    fract(packedColor[1] / 256.0)\n  );\n}`;\n\n/**\n * @param {number} type Value type\n * @return {1|2|3|4} The amount of components for this value\n */\nexport function getGlslSizeFromType(type) {\n  if (type === ColorType || type === SizeType) {\n    return 2;\n  }\n  if (type === NumberArrayType) {\n    return 4;\n  }\n  return 1;\n}\n\n/**\n * @param {number} type Value type\n * @return {'float'|'vec2'|'vec3'|'vec4'} The corresponding GLSL type for this value\n */\nexport function getGlslTypeFromType(type) {\n  const size = getGlslSizeFromType(type);\n  if (size > 1) {\n    return /** @type {'vec2'|'vec3'|'vec4'} */ (`vec${size}`);\n  }\n  return 'float';\n}\n\n/**\n * Applies the properties and variables collected in a compilation context to a ShaderBuilder instance:\n * properties will show up as attributes in shaders, and variables will show up as uniforms.\n * @param {import(\"./ShaderBuilder.js\").ShaderBuilder} builder Shader builder\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Compilation context\n */\nexport function applyContextToBuilder(builder, context) {\n  // define one uniform per variable\n  for (const varName in context.variables) {\n    const variable = context.variables[varName];\n    const uniformName = uniformNameForVariable(variable.name);\n    let glslType = getGlslTypeFromType(variable.type);\n    if (variable.type === ColorType) {\n      // we're not packing colors when they're passed as uniforms\n      glslType = 'vec4';\n    }\n    builder.addUniform(`${glslType} ${uniformName}`);\n  }\n\n  // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n  // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n  for (const propName in context.properties) {\n    const property = context.properties[propName];\n    const glslType = getGlslTypeFromType(property.type);\n    const attributeName = `a_prop_${property.name}`;\n    if (property.type === ColorType) {\n      builder.addAttribute(\n        attributeName,\n        glslType,\n        `unpackColor(${attributeName})`,\n        'vec4',\n      );\n      builder.addVertexShaderFunction(UNPACK_COLOR_FN);\n    } else {\n      builder.addAttribute(attributeName, glslType);\n    }\n  }\n\n  // add functions that were collected in the compilation contexts\n  for (const functionName in context.functions) {\n    builder.addVertexShaderFunction(context.functions[functionName]);\n    builder.addFragmentShaderFunction(context.functions[functionName]);\n  }\n}\n\n/**\n * Generates a set of uniforms from variables collected in a compilation context,\n * to be fed to a WebGLHelper instance\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Compilation context\n * @param {import('../../style/flat.js').StyleVariables} [variables] Style variables.\n * @return {Object<string,import(\"../../webgl/Helper\").UniformValue>} Uniforms\n */\nexport function generateUniformsFromContext(context, variables) {\n  /** @type {Object<string,import(\"../../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  // define one uniform per variable\n  for (const varName in context.variables) {\n    const variable = context.variables[varName];\n    const uniformName = uniformNameForVariable(variable.name);\n\n    uniforms[uniformName] = () => {\n      const value = variables[variable.name];\n      if (typeof value === 'number') {\n        return value;\n      }\n      if (typeof value === 'boolean') {\n        return value ? 1 : 0;\n      }\n      if (variable.type === ColorType) {\n        return asArray(value || '#eee');\n      }\n      if (typeof value === 'string') {\n        return getStringNumberEquivalent(value);\n      }\n      return value;\n    };\n  }\n\n  return uniforms;\n}\n\n/**\n * Generates a set of attributes from properties collected in a compilation context,\n * to be fed to a WebGLHelper instance\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Compilation context\n * @return {import('./VectorStyleRenderer.js').AttributeDefinitions} Attributes\n */\nexport function generateAttributesFromContext(context) {\n  /**\n   * @type {import('./VectorStyleRenderer.js').AttributeDefinitions}\n   */\n  const attributes = {};\n\n  // Define attributes with their callback for each property used in the vertex shader\n  for (const propName in context.properties) {\n    const property = context.properties[propName];\n    const callback = (feature) => {\n      const value = feature.get(property.name);\n      if (property.type === ColorType) {\n        return packColor([...asArray(value || '#eee')]);\n      }\n      if (typeof value === 'string') {\n        return getStringNumberEquivalent(value);\n      }\n      if (typeof value === 'boolean') {\n        return value ? 1 : 0;\n      }\n      return value;\n    };\n\n    attributes[`prop_${property.name}`] = {\n      size: getGlslSizeFromType(property.type),\n      callback,\n    };\n  }\n  return attributes;\n}\n","/**\n * @module ol/render/webgl/MixedGeometryBatch\n */\nimport {inflateEnds} from '../../geom/flat/orient.js';\nimport RenderFeature from '../../render/Feature.js';\nimport {getUid} from '../../util.js';\n\n/**\n * @typedef {import(\"../../Feature.js\").default} Feature\n */\n/**\n * @typedef {import(\"../../geom/Geometry.js\").Type} GeometryType\n */\n\n/**\n * @typedef {Object} GeometryBatchItem Object that holds a reference to a feature as well as the raw coordinates of its various geometries\n * @property {Feature|RenderFeature} feature Feature\n * @property {Array<Array<number>>} flatCoordss Array of flat coordinates arrays, one for each geometry related to the feature\n * @property {number} [verticesCount] Only defined for linestring and polygon batches\n * @property {number} [ringsCount] Only defined for polygon batches\n * @property {Array<Array<number>>} [ringsVerticesCounts] Array of vertices counts in each ring for each geometry; only defined for polygons batches\n * @property {number} [ref] The reference in the global batch (used for hit detection)\n */\n\n/**\n * @typedef {PointGeometryBatch|LineStringGeometryBatch|PolygonGeometryBatch} GeometryBatch\n */\n\n/**\n * @typedef {Object} PolygonGeometryBatch A geometry batch specific to polygons\n * @property {Object<string, GeometryBatchItem>} entries Dictionary of all entries in the batch with associated computed values.\n * One entry corresponds to one feature. Key is feature uid.\n * @property {number} geometriesCount Amount of geometries in the batch.\n * @property {number} verticesCount Amount of vertices from geometries in the batch.\n * @property {number} ringsCount How many outer and inner rings in this batch.\n */\n\n/**\n * @typedef {Object} LineStringGeometryBatch A geometry batch specific to lines\n * @property {Object<string, GeometryBatchItem>} entries Dictionary of all entries in the batch with associated computed values.\n * One entry corresponds to one feature. Key is feature uid.\n * @property {number} geometriesCount Amount of geometries in the batch.\n * @property {number} verticesCount Amount of vertices from geometries in the batch.\n */\n\n/**\n * @typedef {Object} PointGeometryBatch A geometry batch specific to points\n * @property {Object<string, GeometryBatchItem>} entries Dictionary of all entries in the batch with associated computed values.\n * One entry corresponds to one feature. Key is feature uid.\n * @property {number} geometriesCount Amount of geometries in the batch.\n */\n\n/**\n * @classdesc This class is used to group several geometries of various types together for faster rendering.\n * Three inner batches are maintained for polygons, lines and points. Each time a feature is added, changed or removed\n * from the batch, these inner batches are modified accordingly in order to keep them up-to-date.\n *\n * A feature can be present in several inner batches, for example a polygon geometry will be present in the polygon batch\n * and its linear rings will be present in the line batch. Multi geometries are also broken down into individual geometries\n * and added to the corresponding batches in a recursive manner.\n *\n * Corresponding {@link module:ol/render/webgl/BatchRenderer} instances are then used to generate the render instructions\n * and WebGL buffers (vertices and indices) for each inner batches; render instructions are stored on the inner batches,\n * alongside the transform used to convert world coords to screen coords at the time these instructions were generated.\n * The resulting WebGL buffers are stored on the batches as well.\n *\n * An important aspect of geometry batches is that there is no guarantee that render instructions and WebGL buffers\n * are synchronized, i.e. render instructions can describe a new state while WebGL buffers might not have been written yet.\n * This is why two world-to-screen transforms are stored on each batch: one for the render instructions and one for\n * the WebGL buffers.\n */\nclass MixedGeometryBatch {\n  constructor() {\n    /**\n     * @private\n     */\n    this.globalCounter_ = 0;\n\n    /**\n     * Refs are used as keys for hit detection.\n     * @type {Map<number, Feature|RenderFeature>}\n     * @private\n     */\n    this.refToFeature_ = new Map();\n\n    /**\n     * Features are split in \"entries\", which are individual geometries. We use the following map to share a single ref for all those entries.\n     * @type {Map<string, number>}\n     * @private\n     */\n    this.uidToRef_ = new Map();\n\n    /**\n     * The precision in WebGL shaders is limited.\n     * To keep the refs as small as possible we maintain an array of freed up references.\n     * @type {Array<number>}\n     * @private\n     */\n    this.freeGlobalRef_ = [];\n\n    /**\n     * @type {PolygonGeometryBatch}\n     */\n    this.polygonBatch = {\n      entries: {},\n      geometriesCount: 0,\n      verticesCount: 0,\n      ringsCount: 0,\n    };\n\n    /**\n     * @type {PointGeometryBatch}\n     */\n    this.pointBatch = {\n      entries: {},\n      geometriesCount: 0,\n    };\n\n    /**\n     * @type {LineStringGeometryBatch}\n     */\n    this.lineStringBatch = {\n      entries: {},\n      geometriesCount: 0,\n      verticesCount: 0,\n    };\n  }\n\n  /**\n   * @param {Array<Feature|RenderFeature>} features Array of features to add to the batch\n   * @param {import(\"../../proj.js\").TransformFunction} [projectionTransform] Projection transform.\n   */\n  addFeatures(features, projectionTransform) {\n    for (let i = 0; i < features.length; i++) {\n      this.addFeature(features[i], projectionTransform);\n    }\n  }\n\n  /**\n   * @param {Feature|RenderFeature} feature Feature to add to the batch\n   * @param {import(\"../../proj.js\").TransformFunction} [projectionTransform] Projection transform.\n   */\n  addFeature(feature, projectionTransform) {\n    let geometry = feature.getGeometry();\n    if (!geometry) {\n      return;\n    }\n    if (projectionTransform) {\n      geometry = geometry.clone();\n      geometry.applyTransform(projectionTransform);\n    }\n    this.addGeometry_(geometry, feature);\n  }\n\n  /**\n   * @param {Feature|RenderFeature} feature Feature\n   * @return {GeometryBatchItem|void} the cleared entry\n   * @private\n   */\n  clearFeatureEntryInPointBatch_(feature) {\n    const featureUid = getUid(feature);\n    const entry = this.pointBatch.entries[featureUid];\n    if (!entry) {\n      return;\n    }\n    this.pointBatch.geometriesCount -= entry.flatCoordss.length;\n    delete this.pointBatch.entries[featureUid];\n    return entry;\n  }\n\n  /**\n   * @param {Feature|RenderFeature} feature Feature\n   * @return {GeometryBatchItem|void} the cleared entry\n   * @private\n   */\n  clearFeatureEntryInLineStringBatch_(feature) {\n    const featureUid = getUid(feature);\n    const entry = this.lineStringBatch.entries[featureUid];\n    if (!entry) {\n      return;\n    }\n    this.lineStringBatch.verticesCount -= entry.verticesCount;\n    this.lineStringBatch.geometriesCount -= entry.flatCoordss.length;\n    delete this.lineStringBatch.entries[featureUid];\n    return entry;\n  }\n\n  /**\n   * @param {Feature|RenderFeature} feature Feature\n   * @return {GeometryBatchItem|void} the cleared entry\n   * @private\n   */\n  clearFeatureEntryInPolygonBatch_(feature) {\n    const featureUid = getUid(feature);\n    const entry = this.polygonBatch.entries[featureUid];\n    if (!entry) {\n      return;\n    }\n    this.polygonBatch.verticesCount -= entry.verticesCount;\n    this.polygonBatch.ringsCount -= entry.ringsCount;\n    this.polygonBatch.geometriesCount -= entry.flatCoordss.length;\n    delete this.polygonBatch.entries[featureUid];\n    return entry;\n  }\n\n  /**\n   * @param {import(\"../../geom.js\").Geometry|RenderFeature} geometry Geometry\n   * @param {Feature|RenderFeature} feature Feature\n   * @private\n   */\n  addGeometry_(geometry, feature) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'GeometryCollection': {\n        const geometries =\n          /** @type {import(\"../../geom.js\").GeometryCollection} */ (\n            geometry\n          ).getGeometriesArray();\n        for (const geometry of geometries) {\n          this.addGeometry_(geometry, feature);\n        }\n        break;\n      }\n      case 'MultiPolygon': {\n        const multiPolygonGeom =\n          /** @type {import(\"../../geom.js\").MultiPolygon} */ (geometry);\n        this.addCoordinates_(\n          type,\n          multiPolygonGeom.getFlatCoordinates(),\n          multiPolygonGeom.getEndss(),\n          feature,\n          getUid(feature),\n          multiPolygonGeom.getStride(),\n        );\n        break;\n      }\n      case 'MultiLineString': {\n        const multiLineGeom =\n          /** @type {import(\"../../geom.js\").MultiLineString|RenderFeature} */ (\n            geometry\n          );\n        this.addCoordinates_(\n          type,\n          multiLineGeom.getFlatCoordinates(),\n          multiLineGeom.getEnds(),\n          feature,\n          getUid(feature),\n          multiLineGeom.getStride(),\n        );\n        break;\n      }\n      case 'MultiPoint': {\n        const multiPointGeom =\n          /** @type {import(\"../../geom.js\").MultiPoint|RenderFeature} */ (\n            geometry\n          );\n        this.addCoordinates_(\n          type,\n          multiPointGeom.getFlatCoordinates(),\n          null,\n          feature,\n          getUid(feature),\n          multiPointGeom.getStride(),\n        );\n        break;\n      }\n      case 'Polygon': {\n        const polygonGeom =\n          /** @type {import(\"../../geom.js\").Polygon|RenderFeature} */ (\n            geometry\n          );\n        this.addCoordinates_(\n          type,\n          polygonGeom.getFlatCoordinates(),\n          polygonGeom.getEnds(),\n          feature,\n          getUid(feature),\n          polygonGeom.getStride(),\n        );\n        break;\n      }\n      case 'Point': {\n        const pointGeom = /** @type {import(\"../../geom.js\").Point} */ (\n          geometry\n        );\n        this.addCoordinates_(\n          type,\n          pointGeom.getFlatCoordinates(),\n          null,\n          feature,\n          getUid(feature),\n          pointGeom.getStride(),\n        );\n        break;\n      }\n      case 'LineString':\n      case 'LinearRing': {\n        const lineGeom = /** @type {import(\"../../geom.js\").LineString} */ (\n          geometry\n        );\n\n        const stride = lineGeom.getStride();\n\n        this.addCoordinates_(\n          type,\n          lineGeom.getFlatCoordinates(),\n          null,\n          feature,\n          getUid(feature),\n          stride,\n          lineGeom.getLayout?.(),\n        );\n        break;\n      }\n      default:\n      // pass\n    }\n  }\n\n  /**\n   * @param {GeometryType} type Geometry type\n   * @param {Array<number>} flatCoords Flat coordinates\n   * @param {Array<number> | Array<Array<number>> | null} ends Coordinate ends\n   * @param {Feature|RenderFeature} feature Feature\n   * @param {string} featureUid Feature uid\n   * @param {number} stride Stride\n   * @param {import('../../geom/Geometry.js').GeometryLayout} [layout] Layout\n   * @private\n   */\n  addCoordinates_(type, flatCoords, ends, feature, featureUid, stride, layout) {\n    /** @type {number} */\n    let verticesCount;\n    switch (type) {\n      case 'MultiPolygon': {\n        const multiPolygonEndss = /** @type {Array<Array<number>>} */ (ends);\n        for (let i = 0, ii = multiPolygonEndss.length; i < ii; i++) {\n          let polygonEnds = multiPolygonEndss[i];\n          const prevPolygonEnds = i > 0 ? multiPolygonEndss[i - 1] : null;\n          const startIndex = prevPolygonEnds\n            ? prevPolygonEnds[prevPolygonEnds.length - 1]\n            : 0;\n          const endIndex = polygonEnds[polygonEnds.length - 1];\n          polygonEnds =\n            startIndex > 0\n              ? polygonEnds.map((end) => end - startIndex)\n              : polygonEnds;\n          this.addCoordinates_(\n            'Polygon',\n            flatCoords.slice(startIndex, endIndex),\n            polygonEnds,\n            feature,\n            featureUid,\n            stride,\n            layout,\n          );\n        }\n        break;\n      }\n      case 'MultiLineString': {\n        const multiLineEnds = /** @type {Array<number>} */ (ends);\n        for (let i = 0, ii = multiLineEnds.length; i < ii; i++) {\n          const startIndex = i > 0 ? multiLineEnds[i - 1] : 0;\n          this.addCoordinates_(\n            'LineString',\n            flatCoords.slice(startIndex, multiLineEnds[i]),\n            null,\n            feature,\n            featureUid,\n            stride,\n            layout,\n          );\n        }\n        break;\n      }\n      case 'MultiPoint':\n        for (let i = 0, ii = flatCoords.length; i < ii; i += stride) {\n          this.addCoordinates_(\n            'Point',\n            flatCoords.slice(i, i + 2),\n            null,\n            feature,\n            featureUid,\n            null,\n            null,\n          );\n        }\n        break;\n      case 'Polygon': {\n        const polygonEnds = /** @type {Array<number>} */ (ends);\n        if (feature instanceof RenderFeature) {\n          const multiPolygonEnds = inflateEnds(flatCoords, polygonEnds);\n          if (multiPolygonEnds.length > 1) {\n            this.addCoordinates_(\n              'MultiPolygon',\n              flatCoords,\n              multiPolygonEnds,\n              feature,\n              featureUid,\n              stride,\n              layout,\n            );\n            return;\n          }\n        }\n        if (!this.polygonBatch.entries[featureUid]) {\n          this.polygonBatch.entries[featureUid] = this.addRefToEntry_(\n            featureUid,\n            {\n              feature: feature,\n              flatCoordss: [],\n              verticesCount: 0,\n              ringsCount: 0,\n              ringsVerticesCounts: [],\n            },\n          );\n        }\n        verticesCount = flatCoords.length / stride;\n        const ringsCount = ends.length;\n        const ringsVerticesCount = ends.map((end, ind, arr) =>\n          ind > 0 ? (end - arr[ind - 1]) / stride : end / stride,\n        );\n        this.polygonBatch.verticesCount += verticesCount;\n        this.polygonBatch.ringsCount += ringsCount;\n        this.polygonBatch.geometriesCount++;\n        this.polygonBatch.entries[featureUid].flatCoordss.push(\n          getFlatCoordinatesXY(flatCoords, stride),\n        );\n        this.polygonBatch.entries[featureUid].ringsVerticesCounts.push(\n          ringsVerticesCount,\n        );\n        this.polygonBatch.entries[featureUid].verticesCount += verticesCount;\n        this.polygonBatch.entries[featureUid].ringsCount += ringsCount;\n        for (let i = 0, ii = polygonEnds.length; i < ii; i++) {\n          const startIndex = i > 0 ? polygonEnds[i - 1] : 0;\n          this.addCoordinates_(\n            'LinearRing',\n            flatCoords.slice(startIndex, polygonEnds[i]),\n            null,\n            feature,\n            featureUid,\n            stride,\n            layout,\n          );\n        }\n        break;\n      }\n      case 'Point':\n        if (!this.pointBatch.entries[featureUid]) {\n          this.pointBatch.entries[featureUid] = this.addRefToEntry_(\n            featureUid,\n            {\n              feature: feature,\n              flatCoordss: [],\n            },\n          );\n        }\n        this.pointBatch.geometriesCount++;\n        this.pointBatch.entries[featureUid].flatCoordss.push(flatCoords);\n        break;\n      case 'LineString':\n      case 'LinearRing':\n        if (!this.lineStringBatch.entries[featureUid]) {\n          this.lineStringBatch.entries[featureUid] = this.addRefToEntry_(\n            featureUid,\n            {\n              feature: feature,\n              flatCoordss: [],\n              verticesCount: 0,\n            },\n          );\n        }\n        verticesCount = flatCoords.length / stride;\n        this.lineStringBatch.verticesCount += verticesCount;\n        this.lineStringBatch.geometriesCount++;\n        this.lineStringBatch.entries[featureUid].flatCoordss.push(\n          getFlatCoordinatesXYM(flatCoords, stride, layout),\n        );\n        this.lineStringBatch.entries[featureUid].verticesCount += verticesCount;\n        break;\n      default:\n      // pass\n    }\n  }\n\n  /**\n   * @param {string} featureUid Feature uid\n   * @param {GeometryBatchItem} entry The entry to add\n   * @return {GeometryBatchItem} the added entry\n   * @private\n   */\n  addRefToEntry_(featureUid, entry) {\n    const currentRef = this.uidToRef_.get(featureUid);\n\n    // the ref starts at 1 to distinguish from white color (no feature)\n    const ref =\n      currentRef || this.freeGlobalRef_.pop() || ++this.globalCounter_;\n    entry.ref = ref;\n    if (!currentRef) {\n      this.refToFeature_.set(ref, entry.feature);\n      this.uidToRef_.set(featureUid, ref);\n    }\n    return entry;\n  }\n\n  /**\n   * Return a ref to the pool of available refs.\n   * @param {number} ref the ref to return\n   * @param {string} featureUid the feature uid\n   * @private\n   */\n  removeRef_(ref, featureUid) {\n    if (!ref) {\n      throw new Error('This feature has no ref: ' + featureUid);\n    }\n    this.refToFeature_.delete(ref);\n    this.uidToRef_.delete(featureUid);\n    this.freeGlobalRef_.push(ref);\n  }\n\n  /**\n   * @param {Feature|RenderFeature} feature Feature\n   */\n  changeFeature(feature) {\n    // the feature is not present in the batch; do not add it to avoid unexpected behaviors\n    if (!this.uidToRef_.get(getUid(feature))) {\n      return;\n    }\n    this.removeFeature(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      return;\n    }\n    this.addGeometry_(geometry, feature);\n  }\n\n  /**\n   * @param {Feature|RenderFeature} feature Feature\n   */\n  removeFeature(feature) {\n    let entry = this.clearFeatureEntryInPointBatch_(feature);\n    entry = this.clearFeatureEntryInPolygonBatch_(feature) || entry;\n    entry = this.clearFeatureEntryInLineStringBatch_(feature) || entry;\n    if (entry) {\n      this.removeRef_(entry.ref, getUid(entry.feature));\n    }\n  }\n\n  clear() {\n    this.polygonBatch.entries = {};\n    this.polygonBatch.geometriesCount = 0;\n    this.polygonBatch.verticesCount = 0;\n    this.polygonBatch.ringsCount = 0;\n    this.lineStringBatch.entries = {};\n    this.lineStringBatch.geometriesCount = 0;\n    this.lineStringBatch.verticesCount = 0;\n    this.pointBatch.entries = {};\n    this.pointBatch.geometriesCount = 0;\n    this.globalCounter_ = 0;\n    this.freeGlobalRef_ = [];\n    this.refToFeature_.clear();\n    this.uidToRef_.clear();\n  }\n\n  /**\n   * Resolve the feature associated to a ref.\n   * @param {number} ref Hit detected ref\n   * @return {Feature|RenderFeature} feature\n   */\n  getFeatureFromRef(ref) {\n    return this.refToFeature_.get(ref);\n  }\n\n  isEmpty() {\n    return this.globalCounter_ === 0;\n  }\n\n  /**\n   * Will return a new instance of this class that only contains the features\n   * for which the provided callback returned true\n   * @param {function((Feature|RenderFeature)): boolean} featureFilter Feature filter callback\n   * @return {MixedGeometryBatch} Filtered geometry batch\n   */\n  filter(featureFilter) {\n    const filtered = new MixedGeometryBatch();\n    filtered.globalCounter_ = this.globalCounter_;\n    filtered.uidToRef_ = this.uidToRef_;\n    filtered.refToFeature_ = this.refToFeature_;\n    let empty = true;\n    for (const feature of this.refToFeature_.values()) {\n      if (featureFilter(feature)) {\n        filtered.addFeature(feature);\n        empty = false;\n      }\n    }\n    // no feature was added at all; simply return an empty batch for consistency downstream\n    if (empty) {\n      return new MixedGeometryBatch();\n    }\n    return filtered;\n  }\n}\n\n/**\n * @param {Array<number>} flatCoords Flat coords\n * @param {number} stride Stride\n * @return {Array<number>} Flat coords with only XY components\n */\nfunction getFlatCoordinatesXY(flatCoords, stride) {\n  if (stride === 2) {\n    return flatCoords;\n  }\n  return flatCoords.filter((v, i) => i % stride < 2);\n}\n\n/**\n * @param {Array<number>} flatCoords Flat coords\n * @param {number} stride Stride\n * @param {string} layout Layout\n * @return {Array<number>} Flat coords with only XY components\n */\nfunction getFlatCoordinatesXYM(flatCoords, stride, layout) {\n  if (stride === 3 && layout === 'XYM') {\n    return flatCoords;\n  }\n  // this is XYZM layout\n  if (stride === 4) {\n    return flatCoords.filter((v, i) => i % stride !== 2);\n  }\n  // this is XYZ layout\n  if (stride === 3) {\n    return flatCoords.map((v, i) => (i % stride !== 2 ? v : 0));\n  }\n  // this is XY layout\n  return new Array(flatCoords.length * 1.5)\n    .fill(0)\n    .map((v, i) => (i % 3 === 2 ? 0 : flatCoords[Math.round(i / 1.5)]));\n}\n\nexport default MixedGeometryBatch;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of hit detection + custom attributes count in the render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","/**\n * @module ol/render/webgl/renderinstructions\n */\nimport {UNDEFINED_PROP_VALUE} from '../../expr/gpu.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n/**\n * @param {Float32Array} renderInstructions Render instructions\n * @param {import('./VectorStyleRenderer.js').AttributeDefinitions} customAttributes Custom attributes\n * @param {import(\"./MixedGeometryBatch.js\").GeometryBatchItem} batchEntry Batch item\n * @param {number} currentIndex Current index\n * @return {number} The amount of values pushed\n */\nfunction pushCustomAttributesInRenderInstructions(\n  renderInstructions,\n  customAttributes,\n  batchEntry,\n  currentIndex,\n) {\n  let shift = 0;\n  for (const key in customAttributes) {\n    const attr = customAttributes[key];\n    const value = attr.callback.call(batchEntry, batchEntry.feature);\n    let first = value?.[0] ?? value;\n    if (first === UNDEFINED_PROP_VALUE) {\n      console.warn('The \"has\" operator might return false positives.'); // eslint-disable-line no-console\n    }\n    if (first === undefined) {\n      first = UNDEFINED_PROP_VALUE;\n    } else if (first === null) {\n      first = 0;\n    }\n    renderInstructions[currentIndex + shift++] = first;\n    if (!attr.size || attr.size === 1) {\n      continue;\n    }\n    renderInstructions[currentIndex + shift++] = value[1];\n    if (attr.size < 3) {\n      continue;\n    }\n    renderInstructions[currentIndex + shift++] = value[2];\n    if (attr.size < 4) {\n      continue;\n    }\n    renderInstructions[currentIndex + shift++] = value[3];\n  }\n  return shift;\n}\n\n/**\n * @param {import('./VectorStyleRenderer.js').AttributeDefinitions} customAttributes Custom attributes\n * @return {number} Cumulated size of all attributes\n */\nexport function getCustomAttributesSize(customAttributes) {\n  return Object.keys(customAttributes).reduce(\n    (prev, curr) => prev + (customAttributes[curr].size || 1),\n    0,\n  );\n}\n\n/**\n * Render instructions for lines are structured like so:\n * [ x0, y0, customAttr0, ... , xN, yN, customAttrN ]\n * @param {import(\"./MixedGeometryBatch.js\").PointGeometryBatch} batch Point geometry batch\n * @param {Float32Array} renderInstructions Render instructions\n * @param {import('./VectorStyleRenderer.js').AttributeDefinitions} customAttributes Custom attributes\n * @param {import(\"../../transform.js\").Transform} transform Transform to apply to coordinates\n * @return {Float32Array} Generated render instructions\n */\nexport function generatePointRenderInstructions(\n  batch,\n  renderInstructions,\n  customAttributes,\n  transform,\n) {\n  // here we anticipate the amount of render instructions for points:\n  // 2 instructions per vertex for position (x and y)\n  // + 1 instruction per vertex per custom attributes\n  const totalInstructionsCount =\n    (2 + getCustomAttributesSize(customAttributes)) * batch.geometriesCount;\n  if (\n    !renderInstructions ||\n    renderInstructions.length !== totalInstructionsCount\n  ) {\n    renderInstructions = new Float32Array(totalInstructionsCount);\n  }\n\n  // loop on features to fill the render instructions\n  const tmpCoords = [];\n  let renderIndex = 0;\n  for (const featureUid in batch.entries) {\n    const batchEntry = batch.entries[featureUid];\n    for (let i = 0, ii = batchEntry.flatCoordss.length; i < ii; i++) {\n      tmpCoords[0] = batchEntry.flatCoordss[i][0];\n      tmpCoords[1] = batchEntry.flatCoordss[i][1];\n      applyTransform(transform, tmpCoords);\n\n      renderInstructions[renderIndex++] = tmpCoords[0];\n      renderInstructions[renderIndex++] = tmpCoords[1];\n      renderIndex += pushCustomAttributesInRenderInstructions(\n        renderInstructions,\n        customAttributes,\n        batchEntry,\n        renderIndex,\n      );\n    }\n  }\n  return renderInstructions;\n}\n\n/**\n * Render instructions for lines are structured like so:\n * [ customAttr0, ... , customAttrN, numberOfVertices0, x0, y0, ... , xN, yN, numberOfVertices1, ... ]\n * @param {import(\"./MixedGeometryBatch.js\").LineStringGeometryBatch} batch Line String geometry batch\n * @param {Float32Array} renderInstructions Render instructions\n * @param {import('./VectorStyleRenderer.js').AttributeDefinitions} customAttributes Custom attributes\n * @param {import(\"../../transform.js\").Transform} transform Transform to apply to coordinates\n * @return {Float32Array} Generated render instructions\n */\nexport function generateLineStringRenderInstructions(\n  batch,\n  renderInstructions,\n  customAttributes,\n  transform,\n) {\n  // here we anticipate the amount of render instructions for lines:\n  // 3 instructions per vertex for position (x, y and m)\n  // + 1 instruction per line per custom attributes\n  // + 1 instruction per line (for vertices count)\n  const totalInstructionsCount =\n    3 * batch.verticesCount +\n    (1 + getCustomAttributesSize(customAttributes)) * batch.geometriesCount;\n  if (\n    !renderInstructions ||\n    renderInstructions.length !== totalInstructionsCount\n  ) {\n    renderInstructions = new Float32Array(totalInstructionsCount);\n  }\n\n  // loop on features to fill the render instructions\n  const flatCoords = [];\n  let renderIndex = 0;\n  for (const featureUid in batch.entries) {\n    const batchEntry = batch.entries[featureUid];\n    for (let i = 0, ii = batchEntry.flatCoordss.length; i < ii; i++) {\n      flatCoords.length = batchEntry.flatCoordss[i].length;\n      transform2D(\n        batchEntry.flatCoordss[i],\n        0,\n        flatCoords.length,\n        3,\n        transform,\n        flatCoords,\n        3,\n      );\n      renderIndex += pushCustomAttributesInRenderInstructions(\n        renderInstructions,\n        customAttributes,\n        batchEntry,\n        renderIndex,\n      );\n\n      // vertices count\n      renderInstructions[renderIndex++] = flatCoords.length / 3;\n\n      // looping on points for positions\n      for (let j = 0, jj = flatCoords.length; j < jj; j += 3) {\n        renderInstructions[renderIndex++] = flatCoords[j];\n        renderInstructions[renderIndex++] = flatCoords[j + 1];\n        renderInstructions[renderIndex++] = flatCoords[j + 2];\n      }\n    }\n  }\n  return renderInstructions;\n}\n\n/**\n * Render instructions for polygons are structured like so:\n * [ customAttr0, ..., customAttrN, numberOfRings, numberOfVerticesInRing0, ..., numberOfVerticesInRingN, x0, y0, ..., xN, yN, numberOfRings,... ]\n * @param {import(\"./MixedGeometryBatch.js\").PolygonGeometryBatch} batch Polygon geometry batch\n * @param {Float32Array} renderInstructions Render instructions\n * @param {import('./VectorStyleRenderer.js').AttributeDefinitions} customAttributes Custom attributes\n * @param {import(\"../../transform.js\").Transform} transform Transform to apply to coordinates\n * @return {Float32Array} Generated render instructions\n */\nexport function generatePolygonRenderInstructions(\n  batch,\n  renderInstructions,\n  customAttributes,\n  transform,\n) {\n  // here we anticipate the amount of render instructions for polygons:\n  // 2 instructions per vertex for position (x and y)\n  // + 1 instruction per polygon per custom attributes\n  // + 1 instruction per polygon (for vertices count in polygon)\n  // + 1 instruction per ring (for vertices count in ring)\n  const totalInstructionsCount =\n    2 * batch.verticesCount +\n    (1 + getCustomAttributesSize(customAttributes)) * batch.geometriesCount +\n    batch.ringsCount;\n  if (\n    !renderInstructions ||\n    renderInstructions.length !== totalInstructionsCount\n  ) {\n    renderInstructions = new Float32Array(totalInstructionsCount);\n  }\n\n  // loop on features to fill the render instructions\n  const flatCoords = [];\n  let renderIndex = 0;\n  for (const featureUid in batch.entries) {\n    const batchEntry = batch.entries[featureUid];\n    for (let i = 0, ii = batchEntry.flatCoordss.length; i < ii; i++) {\n      flatCoords.length = batchEntry.flatCoordss[i].length;\n      transform2D(\n        batchEntry.flatCoordss[i],\n        0,\n        flatCoords.length,\n        2,\n        transform,\n        flatCoords,\n      );\n      renderIndex += pushCustomAttributesInRenderInstructions(\n        renderInstructions,\n        customAttributes,\n        batchEntry,\n        renderIndex,\n      );\n\n      // ring count\n      renderInstructions[renderIndex++] =\n        batchEntry.ringsVerticesCounts[i].length;\n\n      // vertices count in each ring\n      for (\n        let j = 0, jj = batchEntry.ringsVerticesCounts[i].length;\n        j < jj;\n        j++\n      ) {\n        renderInstructions[renderIndex++] =\n          batchEntry.ringsVerticesCounts[i][j];\n      }\n\n      // looping on points for positions\n      for (let j = 0, jj = flatCoords.length; j < jj; j += 2) {\n        renderInstructions[renderIndex++] = flatCoords[j];\n        renderInstructions[renderIndex++] = flatCoords[j + 1];\n      }\n    }\n  }\n  return renderInstructions;\n}\n","/**\n * Utilities for parsing flat styles for WebGL renderers\n * @module ol/render/webgl/style\n */\nimport {assert} from '../../asserts.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  SizeType,\n  StringType,\n  computeGeometryType,\n} from '../../expr/expression.js';\nimport {\n  FEATURE_ID_PROPERTY_NAME,\n  GEOMETRY_TYPE_PROPERTY_NAME,\n  getStringNumberEquivalent,\n  newCompilationContext,\n  stringToGlsl,\n} from '../../expr/gpu.js';\nimport {ShaderBuilder} from './ShaderBuilder.js';\nimport {\n  applyContextToBuilder,\n  expressionToGlsl,\n  generateAttributesFromContext,\n  generateUniformsFromContext,\n  getGlslSizeFromType,\n  getGlslTypeFromType,\n} from './compileUtil.js';\n\n/**\n * see https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\n * @param {Object|string} input The hash input, either an object or string\n * @return {string} Hash (if the object cannot be serialized, it is based on `getUid`)\n */\nexport function computeHash(input) {\n  const hash = JSON.stringify(input)\n    .split('')\n    .reduce((prev, curr) => (prev << 5) - prev + curr.charCodeAt(0), 0);\n  return (hash >>> 0).toString();\n}\n\n/**\n * @param {import(\"../../style/flat.js\").FlatStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {import(\"../../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {'shape-'|'circle-'|'icon-'} prefix Properties prefix\n */\nfunction parseCommonSymbolProperties(style, builder, vertContext, prefix) {\n  if (`${prefix}radius` in style && prefix !== 'icon-') {\n    let radius = expressionToGlsl(\n      vertContext,\n      style[`${prefix}radius`],\n      NumberType,\n    );\n    if (`${prefix}radius2` in style) {\n      const radius2 = expressionToGlsl(\n        vertContext,\n        style[`${prefix}radius2`],\n        NumberType,\n      );\n      radius = `max(${radius}, ${radius2})`;\n    }\n    if (`${prefix}stroke-width` in style) {\n      radius = `(${radius} + ${expressionToGlsl(\n        vertContext,\n        style[`${prefix}stroke-width`],\n        NumberType,\n      )} * 0.5)`;\n    }\n    builder.setSymbolSizeExpression(`vec2(${radius} * 2. + 0.5)`); // adding some padding for antialiasing\n  }\n  if (`${prefix}scale` in style) {\n    const scale = expressionToGlsl(\n      vertContext,\n      style[`${prefix}scale`],\n      SizeType,\n    );\n    builder.setSymbolSizeExpression(\n      `${builder.getSymbolSizeExpression()} * ${scale}`,\n    );\n  }\n  if (`${prefix}displacement` in style) {\n    builder.setSymbolOffsetExpression(\n      expressionToGlsl(\n        vertContext,\n        style[`${prefix}displacement`],\n        NumberArrayType,\n      ),\n    );\n  }\n  if (`${prefix}rotation` in style) {\n    builder.setSymbolRotationExpression(\n      expressionToGlsl(vertContext, style[`${prefix}rotation`], NumberType),\n    );\n  }\n  if (`${prefix}rotate-with-view` in style) {\n    builder.setSymbolRotateWithView(!!style[`${prefix}rotate-with-view`]);\n  }\n}\n\n/**\n * @param {string} distanceField The distance field expression\n * @param {string|null} fillColor The fill color expression; null if no fill\n * @param {string|null} strokeColor The stroke color expression; null if no stroke\n * @param {string|null} strokeWidth The stroke width expression; null if no stroke\n * @param {string|null} opacity The opacity expression; null if no stroke\n * @return {string} The final color expression, based on the distance field and given params\n */\nfunction getColorFromDistanceField(\n  distanceField,\n  fillColor,\n  strokeColor,\n  strokeWidth,\n  opacity,\n) {\n  let color = 'vec4(0.)';\n  if (fillColor !== null) {\n    color = fillColor;\n  }\n  if (strokeColor !== null && strokeWidth !== null) {\n    const strokeFillRatio = `smoothstep(-${strokeWidth} + 0.63, -${strokeWidth} - 0.58, ${distanceField})`;\n    color = `mix(${strokeColor}, ${color}, ${strokeFillRatio})`;\n  }\n  const shapeOpacity = `(1.0 - smoothstep(-0.63, 0.58, ${distanceField}))`;\n  let result = `${color} * vec4(1.0, 1.0, 1.0, ${shapeOpacity})`;\n  if (opacity !== null) {\n    result = `${result} * vec4(1.0, 1.0, 1.0, ${opacity})`;\n  }\n  return result;\n}\n\n/**\n * This will parse an image property provided by `<prefix>-src`\n * The image size expression in GLSL will be returned\n * @param {import(\"../../style/flat.js\").FlatStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {string} textureId A identifier that will be used in the generated uniforms: `sample2d u_texture<id>` and `vec2 u_texture<id>_size`\n * @return {string} The image size expression\n */\nfunction parseImageProperties(style, builder, uniforms, prefix, textureId) {\n  const image = new Image();\n  image.crossOrigin =\n    style[`${prefix}cross-origin`] === undefined\n      ? 'anonymous'\n      : style[`${prefix}cross-origin`];\n  assert(\n    typeof style[`${prefix}src`] === 'string',\n    `WebGL layers do not support expressions for the ${prefix}src style property`,\n  );\n  image.src = /** @type {string} */ (style[`${prefix}src`]);\n\n  // the size is provided asynchronously using a uniform\n  uniforms[`u_texture${textureId}_size`] = () => {\n    return image.complete ? [image.width, image.height] : [0, 0];\n  };\n  builder.addUniform(`vec2 u_texture${textureId}_size`);\n  const size = `u_texture${textureId}_size`;\n\n  uniforms[`u_texture${textureId}`] = image;\n  builder.addUniform(`sampler2D u_texture${textureId}`);\n  return size;\n}\n\n/**\n * This will parse an image's offset properties provided by `<prefix>-offset`, `<prefix>-offset-origin` and `<prefix>-size`\n * @param {import(\"../../style/flat.js\").FlatStyle} style Style\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Shader compilation context (vertex or fragment)\n * @param {string} imageSize Pixel size of the full image as a GLSL expression\n * @param {string} sampleSize Pixel size of the sample in the image as a GLSL expression\n * @return {string} The offset expression\n */\nfunction parseImageOffsetProperties(\n  style,\n  prefix,\n  context,\n  imageSize,\n  sampleSize,\n) {\n  let offsetExpression = expressionToGlsl(\n    context,\n    style[`${prefix}offset`],\n    NumberArrayType,\n  );\n  if (`${prefix}offset-origin` in style) {\n    switch (style[`${prefix}offset-origin`]) {\n      case 'top-right':\n        offsetExpression = `vec2(${imageSize}.x, 0.) + ${sampleSize} * vec2(-1., 0.) + ${offsetExpression} * vec2(-1., 1.)`;\n        break;\n      case 'bottom-left':\n        offsetExpression = `vec2(0., ${imageSize}.y) + ${sampleSize} * vec2(0., -1.) + ${offsetExpression} * vec2(1., -1.)`;\n        break;\n      case 'bottom-right':\n        offsetExpression = `${imageSize} - ${sampleSize} - ${offsetExpression}`;\n        break;\n      default: // pass\n    }\n  }\n  return offsetExpression;\n}\n\n/**\n * @param {import(\"../../style/flat.js\").FlatStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Shader compilation context\n */\nfunction parseCircleProperties(style, builder, uniforms, context) {\n  // this function takes in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the circle, positive outside, values in pixels)\n  context.functions['circleDistanceField'] =\n    `float circleDistanceField(vec2 point, float radius) {\n  return length(point) - radius;\n}`;\n\n  parseCommonSymbolProperties(style, builder, context, 'circle-');\n\n  // OPACITY\n  let opacity = null;\n  if ('circle-opacity' in style) {\n    opacity = expressionToGlsl(context, style['circle-opacity'], NumberType);\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('circle-scale' in style) {\n    const scale = expressionToGlsl(context, style['circle-scale'], SizeType);\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('circle-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      context,\n      style['circle-fill-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('circle-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      context,\n      style['circle-stroke-color'],\n      ColorType,\n    );\n  }\n\n  // RADIUS\n  let radius = expressionToGlsl(context, style['circle-radius'], NumberType);\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('circle-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      context,\n      style['circle-stroke-width'],\n      NumberType,\n    );\n    radius = `(${radius} + ${strokeWidth} * 0.5)`;\n  }\n\n  // FINAL COLOR\n  const distanceField = `circleDistanceField(${currentPoint}, ${radius})`;\n  const colorExpression = getColorFromDistanceField(\n    distanceField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity,\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../../style/flat.js\").FlatStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Shader compilation context\n */\nfunction parseShapeProperties(style, builder, uniforms, context) {\n  context.functions['round'] = `float round(float v) {\n  return sign(v) * floor(abs(v) + 0.5);\n}`;\n\n  // these functions take in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the polygon, positive outside, values in pixels)\n  // inspired by https://github.com/zranger1/PixelblazePatterns/blob/master/Toolkit/sdf2d.md#n-sided-regular-polygon\n  context.functions['starDistanceField'] =\n    `float starDistanceField(vec2 point, float numPoints, float radius, float radius2, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y);\n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round(beta / alpha) * alpha; // angle in sector\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  vec2 tipToPoint = inSector + vec2(-radius, 0.);\n  vec2 edgeNormal = vec2(radius2 * sin(alpha * 0.5), -radius2 * cos(alpha * 0.5) + radius);\n  return dot(normalize(edgeNormal), tipToPoint);\n}`;\n  context.functions['regularDistanceField'] =\n    `float regularDistanceField(vec2 point, float numPoints, float radius, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y);\n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float radiusIn = radius * cos(PI / numPoints);\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round((beta - alpha * 0.5) / alpha) * alpha + alpha * 0.5; // angle in sector from mid\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  return inSector.x - radiusIn;\n}`;\n\n  parseCommonSymbolProperties(style, builder, context, 'shape-');\n\n  // OPACITY\n  let opacity = null;\n  if ('shape-opacity' in style) {\n    opacity = expressionToGlsl(context, style['shape-opacity'], NumberType);\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('shape-scale' in style) {\n    const scale = expressionToGlsl(context, style['shape-scale'], SizeType);\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('shape-fill-color' in style) {\n    fillColor = expressionToGlsl(context, style['shape-fill-color'], ColorType);\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('shape-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      context,\n      style['shape-stroke-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('shape-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      context,\n      style['shape-stroke-width'],\n      NumberType,\n    );\n  }\n\n  // SHAPE TYPE\n  const numPoints = expressionToGlsl(\n    context,\n    style['shape-points'],\n    NumberType,\n  );\n  let angle = '0.';\n  if ('shape-angle' in style) {\n    angle = expressionToGlsl(context, style['shape-angle'], NumberType);\n  }\n  let shapeField;\n  let radius = expressionToGlsl(context, style['shape-radius'], NumberType);\n  if (strokeWidth !== null) {\n    radius = `${radius} + ${strokeWidth} * 0.5`;\n  }\n  if ('shape-radius2' in style) {\n    let radius2 = expressionToGlsl(context, style['shape-radius2'], NumberType);\n    if (strokeWidth !== null) {\n      radius2 = `${radius2} + ${strokeWidth} * 0.5`;\n    }\n    shapeField = `starDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${radius2}, ${angle})`;\n  } else {\n    shapeField = `regularDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${angle})`;\n  }\n\n  // FINAL COLOR\n  const colorExpression = getColorFromDistanceField(\n    shapeField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity,\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../../style/flat.js\").FlatStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Shader compilation context\n */\nfunction parseIconProperties(style, builder, uniforms, context) {\n  // COLOR\n  let color = 'vec4(1.0)';\n  if ('icon-color' in style) {\n    color = expressionToGlsl(context, style['icon-color'], ColorType);\n  }\n\n  // OPACITY\n  if ('icon-opacity' in style) {\n    color = `${color} * vec4(1.0, 1.0, 1.0, ${expressionToGlsl(\n      context,\n      style['icon-opacity'],\n      NumberType,\n    )})`;\n  }\n\n  // IMAGE & SIZE\n  const textureId = computeHash(style['icon-src']);\n  const sizeExpression = parseImageProperties(\n    style,\n    builder,\n    uniforms,\n    'icon-',\n    textureId,\n  );\n  builder\n    .setSymbolColorExpression(\n      `${color} * texture2D(u_texture${textureId}, v_texCoord)`,\n    )\n    .setSymbolSizeExpression(sizeExpression);\n\n  // override size if width/height were specified\n  if ('icon-width' in style && 'icon-height' in style) {\n    builder.setSymbolSizeExpression(\n      `vec2(${expressionToGlsl(\n        context,\n        style['icon-width'],\n        NumberType,\n      )}, ${expressionToGlsl(context, style['icon-height'], NumberType)})`,\n    );\n  }\n\n  // tex coord\n  if ('icon-offset' in style && 'icon-size' in style) {\n    const sampleSize = expressionToGlsl(\n      context,\n      style['icon-size'],\n      NumberArrayType,\n    );\n    const fullsize = builder.getSymbolSizeExpression();\n    builder.setSymbolSizeExpression(sampleSize);\n    const offset = parseImageOffsetProperties(\n      style,\n      'icon-',\n      context,\n      'v_quadSizePx',\n      sampleSize,\n    );\n    builder.setTextureCoordinateExpression(\n      `(vec4((${offset}).xyxy) + vec4(0., 0., ${sampleSize})) / (${fullsize}).xyxy`,\n    );\n  }\n\n  parseCommonSymbolProperties(style, builder, context, 'icon-');\n\n  if ('icon-anchor' in style) {\n    const anchor = expressionToGlsl(\n      context,\n      style['icon-anchor'],\n      NumberArrayType,\n    );\n    let scale = `1.0`;\n    if (`icon-scale` in style) {\n      scale = expressionToGlsl(context, style[`icon-scale`], SizeType);\n    }\n    let shiftPx;\n    if (\n      style['icon-anchor-x-units'] === 'pixels' &&\n      style['icon-anchor-y-units'] === 'pixels'\n    ) {\n      shiftPx = `${anchor} * ${scale}`;\n    } else if (style['icon-anchor-x-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(vec2(${scale}).x, v_quadSizePx.y)`;\n    } else if (style['icon-anchor-y-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(v_quadSizePx.x, vec2(${scale}).x)`;\n    } else {\n      shiftPx = `${anchor} * v_quadSizePx`;\n    }\n    // default origin is top-left\n    let offsetPx = `v_quadSizePx * vec2(0.5, -0.5) + ${shiftPx} * vec2(-1., 1.)`;\n    if ('icon-anchor-origin' in style) {\n      switch (style['icon-anchor-origin']) {\n        case 'top-right':\n          offsetPx = `v_quadSizePx * -0.5 + ${shiftPx}`;\n          break;\n        case 'bottom-left':\n          offsetPx = `v_quadSizePx * 0.5 - ${shiftPx}`;\n          break;\n        case 'bottom-right':\n          offsetPx = `v_quadSizePx * vec2(-0.5, 0.5) + ${shiftPx} * vec2(1., -1.)`;\n          break;\n        default: // pass\n      }\n    }\n    builder.setSymbolOffsetExpression(\n      `${builder.getSymbolOffsetExpression()} + ${offsetPx}`,\n    );\n  }\n}\n\n/**\n * @param {import(\"../../style/flat.js\").FlatStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Shader compilation context\n */\nfunction parseStrokeProperties(style, builder, uniforms, context) {\n  if ('stroke-color' in style) {\n    builder.setStrokeColorExpression(\n      expressionToGlsl(context, style['stroke-color'], ColorType),\n    );\n  }\n  if ('stroke-pattern-src' in style) {\n    const textureId = computeHash(style['stroke-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'stroke-pattern-',\n      textureId,\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('stroke-pattern-offset' in style && 'stroke-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        context,\n        style[`stroke-pattern-size`],\n        NumberArrayType,\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'stroke-pattern-',\n        context,\n        sizeExpression,\n        sampleSizeExpression,\n      );\n    }\n    let spacingExpression = '0.';\n    if ('stroke-pattern-spacing' in style) {\n      spacingExpression = expressionToGlsl(\n        context,\n        style['stroke-pattern-spacing'],\n        NumberType,\n      );\n    }\n    context.functions['sampleStrokePattern'] =\n      `vec4 sampleStrokePattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, float spacingPx, float currentLengthPx, float currentRadiusRatio, float lineWidth) {\n  float currentLengthScaled = currentLengthPx * sampleSize.y / lineWidth;\n  float spacingScaled = spacingPx * sampleSize.y / lineWidth;\n  float uCoordPx = mod(currentLengthScaled, (sampleSize.x + spacingScaled));\n  // make sure that we're not sampling too close to the borders to avoid interpolation with outside pixels\n  uCoordPx = clamp(uCoordPx, 0.5, sampleSize.x - 0.5);\n  float vCoordPx = (-currentRadiusRatio * 0.5 + 0.5) * sampleSize.y;\n  vec2 texCoord = (vec2(uCoordPx, vCoordPx) + textureOffset) / textureSize;\n  return texture2D(texture, texCoord);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('stroke-color' in style) {\n      tintExpression = builder.getStrokeColorExpression();\n    }\n    builder.setStrokeColorExpression(\n      `${tintExpression} * sampleStrokePattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, ${spacingExpression}, currentLengthPx, currentRadiusRatio, v_width)`,\n    );\n  }\n\n  if ('stroke-width' in style) {\n    builder.setStrokeWidthExpression(\n      expressionToGlsl(context, style['stroke-width'], NumberType),\n    );\n  }\n\n  if ('stroke-offset' in style) {\n    builder.setStrokeOffsetExpression(\n      expressionToGlsl(context, style['stroke-offset'], NumberType),\n    );\n  }\n\n  if ('stroke-line-cap' in style) {\n    builder.setStrokeCapExpression(\n      expressionToGlsl(context, style['stroke-line-cap'], StringType),\n    );\n  }\n\n  if ('stroke-line-join' in style) {\n    builder.setStrokeJoinExpression(\n      expressionToGlsl(context, style['stroke-line-join'], StringType),\n    );\n  }\n\n  if ('stroke-miter-limit' in style) {\n    builder.setStrokeMiterLimitExpression(\n      expressionToGlsl(context, style['stroke-miter-limit'], NumberType),\n    );\n  }\n\n  if ('stroke-line-dash' in style) {\n    context.functions['getSingleDashDistance'] =\n      `float getSingleDashDistance(float distance, float radius, float dashOffset, float dashLength, float dashLengthTotal, float capType, float lineWidth) {\n  float localDistance = mod(distance, dashLengthTotal);\n  float distanceSegment = abs(localDistance - dashOffset - dashLength * 0.5) - dashLength * 0.5;\n  distanceSegment = min(distanceSegment, dashLengthTotal - localDistance);\n  if (capType == ${stringToGlsl('square')}) {\n    distanceSegment -= lineWidth * 0.5;\n  } else if (capType == ${stringToGlsl('round')}) {\n    distanceSegment = min(distanceSegment, sqrt(distanceSegment * distanceSegment + radius * radius) - lineWidth * 0.5);\n  }\n  return distanceSegment;\n}`;\n\n    let dashPattern = style['stroke-line-dash'].map((v) =>\n      expressionToGlsl(context, v, NumberType),\n    );\n    // if pattern has odd length, concatenate it with itself to be even\n    if (dashPattern.length % 2 === 1) {\n      dashPattern = [...dashPattern, ...dashPattern];\n    }\n\n    let offsetExpression = '0.';\n    if ('stroke-line-dash-offset' in style) {\n      offsetExpression = expressionToGlsl(\n        context,\n        style['stroke-line-dash-offset'],\n        NumberType,\n      );\n    }\n\n    // define a function for this dash specifically\n    const uniqueDashKey = computeHash(style['stroke-line-dash']);\n    const dashFunctionName = `dashDistanceField_${uniqueDashKey}`;\n\n    const dashLengthsDef = dashPattern.map(\n      (v, i) => `float dashLength${i} = ${v};`,\n    );\n    const totalLengthDef = dashPattern\n      .map((v, i) => `dashLength${i}`)\n      .join(' + ');\n    let currentDashOffset = '0.';\n    let distanceExpression = `getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength0, totalDashLength, capType, lineWidth)`;\n    for (let i = 2; i < dashPattern.length; i += 2) {\n      currentDashOffset = `${currentDashOffset} + dashLength${\n        i - 2\n      } + dashLength${i - 1}`;\n      distanceExpression = `min(${distanceExpression}, getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength${i}, totalDashLength, capType, lineWidth))`;\n    }\n\n    context.functions[dashFunctionName] =\n      `float ${dashFunctionName}(float distance, float radius, float capType, float lineWidth) {\n  ${dashLengthsDef.join('\\n  ')}\n  float totalDashLength = ${totalLengthDef};\n  return ${distanceExpression};\n}`;\n    builder.setStrokeDistanceFieldExpression(\n      `${dashFunctionName}(currentLengthPx + ${offsetExpression}, currentRadiusPx, capType, v_width)`,\n    );\n  }\n}\n\n/**\n * @param {import(\"../../style/flat.js\").FlatStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../../expr/gpu.js\").CompilationContext} context Shader compilation context\n */\nfunction parseFillProperties(style, builder, uniforms, context) {\n  if ('fill-color' in style) {\n    builder.setFillColorExpression(\n      expressionToGlsl(context, style['fill-color'], ColorType),\n    );\n  }\n  if ('fill-pattern-src' in style) {\n    const textureId = computeHash(style['fill-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'fill-pattern-',\n      textureId,\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('fill-pattern-offset' in style && 'fill-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        context,\n        style[`fill-pattern-size`],\n        NumberArrayType,\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'fill-pattern-',\n        context,\n        sizeExpression,\n        sampleSizeExpression,\n      );\n    }\n    context.functions['sampleFillPattern'] =\n      `vec4 sampleFillPattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, vec2 pxOrigin, vec2 pxPosition) {\n  float scaleRatio = pow(2., mod(u_zoom + 0.5, 1.) - 0.5);\n  vec2 pxRelativePos = pxPosition - pxOrigin;\n  // rotate the relative position from origin by the current view rotation\n  pxRelativePos = vec2(pxRelativePos.x * cos(u_rotation) - pxRelativePos.y * sin(u_rotation), pxRelativePos.x * sin(u_rotation) + pxRelativePos.y * cos(u_rotation));\n  // sample position is computed according to the sample offset & size\n  vec2 samplePos = mod(pxRelativePos / scaleRatio, sampleSize);\n  // also make sure that we're not sampling too close to the borders to avoid interpolation with outside pixels\n  samplePos = clamp(samplePos, vec2(0.5), sampleSize - vec2(0.5));\n  samplePos.y = sampleSize.y - samplePos.y; // invert y axis so that images appear upright\n  return texture2D(texture, (samplePos + textureOffset) / textureSize);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('fill-color' in style) {\n      tintExpression = builder.getFillColorExpression();\n    }\n    builder.setFillColorExpression(\n      `${tintExpression} * sampleFillPattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, pxOrigin, pxPos)`,\n    );\n  }\n}\n\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {import(\"./VectorStyleRenderer.js\").UniformDefinitions} uniforms Uniform definitions\n * @property {import(\"./VectorStyleRenderer.js\").AttributeDefinitions} attributes Attribute definitions\n */\n\n/**\n * Parses a {@link import(\"../../style/flat.js\").FlatStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../../style/flat.js\").FlatStyle} style Flat style.\n * @param {import('../../style/flat.js').StyleVariables} [variables] Style variables.\n * @param {import(\"../../expr/expression.js\").EncodedExpression} [filter] Filter (if any)\n * @return {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style, variables, filter) {\n  const context = newCompilationContext();\n\n  const builder = new ShaderBuilder();\n\n  /** @type {Object<string,import(\"../../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  if ('icon-src' in style) {\n    parseIconProperties(style, builder, uniforms, context);\n  } else if ('shape-points' in style) {\n    parseShapeProperties(style, builder, uniforms, context);\n  } else if ('circle-radius' in style) {\n    parseCircleProperties(style, builder, uniforms, context);\n  }\n  parseStrokeProperties(style, builder, uniforms, context);\n  parseFillProperties(style, builder, uniforms, context);\n\n  // note that the style filter may have already been applied earlier when building the rendering instructions\n  // this is still needed in case a filter cannot be evaluated statically beforehand (e.g. depending on time)\n  if (filter) {\n    const parsedFilter = expressionToGlsl(context, filter, BooleanType);\n    builder.setFragmentDiscardExpression(`!${parsedFilter}`);\n  }\n\n  /**\n   * @type {import('./VectorStyleRenderer.js').AttributeDefinitions}\n   */\n  const attributes = {};\n\n  // Define attributes for special inputs\n  function defineSpecialInput(contextPropName, glslPropName, type, callback) {\n    if (!context[contextPropName]) {\n      return;\n    }\n    const glslType = getGlslTypeFromType(type);\n    const attrSize = getGlslSizeFromType(type);\n    builder.addAttribute(`a_${glslPropName}`, glslType);\n\n    attributes[glslPropName] = {\n      size: attrSize,\n      callback,\n    };\n  }\n  defineSpecialInput(\n    'geometryType',\n    GEOMETRY_TYPE_PROPERTY_NAME,\n    StringType,\n    (feature) =>\n      getStringNumberEquivalent(computeGeometryType(feature.getGeometry())),\n  );\n  defineSpecialInput(\n    'featureId',\n    FEATURE_ID_PROPERTY_NAME,\n    StringType | NumberType,\n    (feature) => {\n      const id = feature.getId() ?? null;\n      return typeof id === 'string' ? getStringNumberEquivalent(id) : id;\n    },\n  );\n\n  applyContextToBuilder(builder, context);\n\n  return {\n    builder,\n    attributes: {...attributes, ...generateAttributesFromContext(context)},\n    uniforms: {\n      ...uniforms,\n      ...generateUniformsFromContext(context, variables),\n    },\n  };\n}\n\n/**\n * @typedef {import('./VectorStyleRenderer.js').AsShaders} StyleAsShaders\n */\n/**\n * @typedef {import('./VectorStyleRenderer.js').AsRule} StyleAsRule\n */\n\n/**\n * Takes in either a Flat Style or an array of shaders (used as input for the webgl vector layer classes)\n * and breaks it down into separate styles to be used by the VectorStyleRenderer class.\n * @param {import('../../style/flat.js').FlatStyleLike | Array<StyleAsShaders> | StyleAsShaders} style Flat style or shaders\n * @return {Array<StyleAsShaders | StyleAsRule>} Separate styles as shaders or rules with a single flat style and a filter\n */\nexport function breakDownFlatStyle(style) {\n  // possible cases:\n  // - single shader\n  // - multiple shaders\n  // - single style\n  // - multiple styles\n  // - multiple rules\n  const asArray = Array.isArray(style) ? style : [style];\n\n  // if array of rules: break rules into separate styles, compute \"else\" filters\n  if ('style' in asArray[0]) {\n    /** @type {Array<StyleAsRule>} */\n    const styles = [];\n    const rules = /** @type {Array<import('../../style/flat.js').Rule>} */ (\n      asArray\n    );\n    const previousFilters = [];\n    for (const rule of rules) {\n      const ruleStyles = Array.isArray(rule.style) ? rule.style : [rule.style];\n      /** @type {import(\"../../expr/expression.js\").EncodedExpression} */\n      let currentFilter = rule.filter;\n      if (rule.else && previousFilters.length) {\n        currentFilter = [\n          'all',\n          ...previousFilters.map((filter) => ['!', filter]),\n        ];\n        if (rule.filter) {\n          currentFilter.push(rule.filter);\n        }\n        if (currentFilter.length < 3) {\n          currentFilter = currentFilter[1];\n        }\n      }\n      if (rule.filter) {\n        previousFilters.push(rule.filter);\n      }\n      /** @type {Array<StyleAsRule>} */\n      const stylesWithFilters = ruleStyles.map((style) => ({\n        style,\n        ...(currentFilter && {filter: currentFilter}),\n      }));\n      styles.push(...stylesWithFilters);\n    }\n    return styles;\n  }\n\n  // if array of shaders: return as is\n  if ('builder' in asArray[0]) {\n    return /** @type {Array<StyleAsShaders>} */ (asArray);\n  }\n\n  return asArray.map(\n    (style) =>\n      /** @type {StyleAsRule} */ ({\n        style,\n      }),\n  );\n}\n","/**\n * @module ol/render/webgl/VectorStyleRenderer\n */\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n} from '../../transform.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {WebGLWorkerMessageType} from './constants.js';\nimport {colorEncodeId} from './encodeUtil.js';\nimport {\n  generateLineStringRenderInstructions,\n  generatePointRenderInstructions,\n  generatePolygonRenderInstructions,\n  getCustomAttributesSize,\n} from './renderinstructions.js';\nimport {parseLiteralStyle} from './style.js';\n\nconst tmpColor = [];\n/** @type {Worker|undefined} */\nlet WEBGL_WORKER;\nfunction getWebGLWorker() {\n  if (!WEBGL_WORKER) {\n    WEBGL_WORKER = createWebGLWorker();\n  }\n  return WEBGL_WORKER;\n}\nlet workerMessageCounter = 0;\n\n/**\n * Names of attributes made available to the vertex shader.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const Attributes = {\n  POSITION: 'a_position',\n  INDEX: 'a_index',\n  SEGMENT_START: 'a_segmentStart',\n  SEGMENT_END: 'a_segmentEnd',\n  MEASURE_START: 'a_measureStart',\n  MEASURE_END: 'a_measureEnd',\n  PARAMETERS: 'a_parameters',\n  JOIN_ANGLES: 'a_joinAngles',\n  DISTANCE: 'a_distance',\n};\n\n/**\n * @typedef {Object} AttributeDefinition A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {number} [size] Amount of numerical values composing the attribute, either 1, 2, 3 or 4; in case size is > 1, the return value\n * of the callback should be an array; if unspecified, assumed to be a single float value\n * @property {function(this:import(\"./MixedGeometryBatch.js\").GeometryBatchItem, import(\"../../Feature\").FeatureLike):number|Array<number>} callback This callback computes the numerical value of the\n * attribute for a given feature.\n */\n\n/**\n * @typedef {Object<string, AttributeDefinition>} AttributeDefinitions\n * @typedef {Object<string, import(\"../../webgl/Helper\").UniformValue>} UniformDefinitions\n */\n\n/**\n * @typedef {Object} WebGLBuffers\n * @property {Array<WebGLArrayBuffer>} polygonBuffers Array containing indices and vertices buffers for polygons\n * @property {Array<WebGLArrayBuffer>} lineStringBuffers Array containing indices and vertices buffers for line strings\n * @property {Array<WebGLArrayBuffer>} pointBuffers Array containing indices and vertices buffers for points\n * @property {import(\"../../transform.js\").Transform} invertVerticesTransform Inverse of the transform applied when generating buffers\n */\n\n/**\n * @typedef {Object} RenderInstructions\n * @property {Float32Array|null} polygonInstructions Polygon instructions; null if nothing to render\n * @property {Float32Array|null} lineStringInstructions LineString instructions; null if nothing to render\n * @property {Float32Array|null} pointInstructions Point instructions; null if nothing to render\n */\n\n/**\n * @typedef {Object} ShaderProgram An object containing both shaders (vertex and fragment)\n * @property {string} vertex Vertex shader source\n * @property {string} fragment Fragment shader source\n */\n\n/**\n * @typedef {Object} AsShaders\n * @property {import(\"./ShaderBuilder.js\").ShaderBuilder} builder Shader builder with the appropriate presets.\n * @property {AttributeDefinitions} [attributes] Custom attributes made available in the vertex shaders.\n * Default shaders rely on the attributes in {@link Attributes}.\n * @property {UniformDefinitions} [uniforms] Additional uniforms usable in shaders.\n */\n\n/**\n * @typedef {Object} AsRule\n * @property {import('../../style/flat.js').FlatStyle} style Style\n * @property {import(\"../../expr/expression.js\").EncodedExpression} [filter] Filter\n */\n\n/**\n * @typedef {AsRule|AsShaders} VectorStyle\n */\n\n/**\n * @classdesc This class is responsible for:\n * 1. generate WebGL buffers according to a provided style, using a MixedGeometryBatch as input\n * 2. rendering geometries contained in said buffers\n *\n * A layer renderer will typically maintain several of these in order to have several styles rendered separately.\n *\n * A VectorStyleRenderer instance can be created either from a literal style or from shaders using either\n * `VectorStyleRenderer.fromStyle` or `VectorStyleRenderer.fromShaders`. The shaders should not be provided explicitly\n * but instead as a preconfigured ShaderBuilder instance.\n *\n * The `generateBuffers` method returns a promise resolving to WebGL buffers that are intended to be rendered by the\n * same renderer.\n */\nclass VectorStyleRenderer {\n  /**\n   * @param {VectorStyle} styleOrShaders Literal style or custom shaders\n   * @param {import('../../style/flat.js').StyleVariables} variables Style variables\n   * @param {import('../../webgl/Helper.js').default} helper Helper\n   * @param {boolean} [enableHitDetection] Whether to enable the hit detection (needs compatible shader)\n   * @param {import(\"../../expr/expression.js\").ExpressionValue} [filter] Optional filter expression\n   */\n  constructor(styleOrShaders, variables, helper, enableHitDetection, filter) {\n    /**\n     * @private\n     * @type {import('../../webgl/Helper.js').default}\n     */\n    this.helper_;\n\n    /**\n     * @private\n     */\n    this.hitDetectionEnabled_ = !!enableHitDetection;\n\n    let asShaders = /** @type {AsShaders} */ (styleOrShaders);\n    const isShaders = 'builder' in styleOrShaders;\n    if (!isShaders) {\n      const asRule = /** @type {AsRule} */ (styleOrShaders);\n      const parseResult = parseLiteralStyle(\n        asRule.style,\n        variables,\n        asRule.filter,\n      );\n      asShaders = {\n        builder: parseResult.builder,\n        attributes: parseResult.attributes,\n        uniforms: parseResult.uniforms,\n      };\n    }\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.fillProgram_;\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.strokeProgram_;\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.symbolProgram_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = !!asShaders.builder.getFillVertexShader();\n    if (this.hasFill_) {\n      /**\n       * @private\n       */\n      this.fillVertexShader_ = asShaders.builder.getFillVertexShader();\n      /**\n       * @private\n       */\n      this.fillFragmentShader_ = asShaders.builder.getFillFragmentShader();\n    }\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = !!asShaders.builder.getStrokeVertexShader();\n    if (this.hasStroke_) {\n      /**\n       * @private\n       */\n      this.strokeVertexShader_ = asShaders.builder.getStrokeVertexShader();\n      /**\n       * @private\n       */\n      this.strokeFragmentShader_ = asShaders.builder.getStrokeFragmentShader();\n    }\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = !!asShaders.builder.getSymbolVertexShader();\n    if (this.hasSymbol_) {\n      /**\n       * @private\n       */\n      this.symbolVertexShader_ = asShaders.builder.getSymbolVertexShader();\n      /**\n       * @private\n       */\n      this.symbolFragmentShader_ = asShaders.builder.getSymbolFragmentShader();\n    }\n\n    /**\n     * @type {function(import('../../Feature.js').FeatureLike): boolean}\n     * @private\n     */\n    this.featureFilter_ = null;\n    if (filter) {\n      this.featureFilter_ = this.computeFeatureFilter(filter);\n    }\n\n    const hitDetectionAttributes = this.hitDetectionEnabled_\n      ? {\n          hitColor: {\n            callback() {\n              return colorEncodeId(this.ref, tmpColor);\n            },\n            size: 4,\n          },\n        }\n      : {};\n\n    /**\n     * @private\n     */\n    this.customAttributes_ = Object.assign(\n      {},\n      hitDetectionAttributes,\n      asShaders.attributes,\n    );\n    /**\n     * @private\n     */\n    this.uniforms_ = asShaders.uniforms;\n\n    const customAttributesDesc = Object.entries(this.customAttributes_).map(\n      ([name, value]) => ({\n        name: `a_${name}`,\n        size: value.size || 1,\n        type: AttributeType.FLOAT,\n      }),\n    );\n    /**\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     * @private\n     */\n    this.polygonAttributesDesc_ = [\n      {\n        name: Attributes.POSITION,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      ...customAttributesDesc,\n    ];\n    /**\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     * @private\n     */\n    this.lineStringAttributesDesc_ = [\n      {\n        name: Attributes.SEGMENT_START,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.MEASURE_START,\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.SEGMENT_END,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.MEASURE_END,\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.JOIN_ANGLES,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.DISTANCE,\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.PARAMETERS,\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      ...customAttributesDesc,\n    ];\n    /**\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     * @private\n     */\n    this.pointAttributesDesc_ = [\n      {\n        name: Attributes.POSITION,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.INDEX,\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      ...customAttributesDesc,\n    ];\n\n    this.setHelper(helper);\n  }\n\n  /**\n   * Will apply the style filter when generating geometry batches (if it can be evaluated outside a map context)\n   * @param {import(\"../../expr/expression.js\").ExpressionValue} filter Style filter\n   * @return {function(import('../../Feature.js').FeatureLike): boolean} Feature filter\n   * @private\n   */\n  computeFeatureFilter(filter) {\n    const parsingContext = newParsingContext();\n    /**\n     * @type {import('../../expr/cpu.js').ExpressionEvaluator}\n     */\n    let compiled;\n    try {\n      compiled = buildExpression(filter, BooleanType, parsingContext);\n    } catch {\n      // filter expression failed to compile for CPU: ignore it\n      return null;\n    }\n\n    // do not apply the filter if it depends on map state (e.g. zoom level) or any variable\n    if (parsingContext.mapState || parsingContext.variables.size > 0) {\n      return null;\n    }\n\n    const evalContext = newEvaluationContext();\n    return (feature) => {\n      evalContext.properties = feature.getPropertiesInternal();\n      if (parsingContext.featureId) {\n        const id = feature.getId();\n        if (id !== undefined) {\n          evalContext.featureId = id;\n        } else {\n          evalContext.featureId = null;\n        }\n      }\n      evalContext.geometryType = computeGeometryType(feature.getGeometry());\n      return /** @type {boolean} */ (compiled(evalContext));\n    };\n  }\n\n  /**\n   * @param {import('./MixedGeometryBatch.js').default} geometryBatch Geometry batch\n   * @param {import(\"../../transform.js\").Transform} transform Transform to apply to coordinates\n   * @return {Promise<WebGLBuffers|null>} A promise resolving to WebGL buffers; returns null if buffers are empty\n   */\n  async generateBuffers(geometryBatch, transform) {\n    let filteredBatch = geometryBatch;\n    if (this.featureFilter_) {\n      filteredBatch = filteredBatch.filter(this.featureFilter_);\n      if (filteredBatch.isEmpty()) {\n        return null;\n      }\n    }\n    const renderInstructions = this.generateRenderInstructions_(\n      filteredBatch,\n      transform,\n    );\n    const [polygonBuffers, lineStringBuffers, pointBuffers] = await Promise.all(\n      [\n        this.generateBuffersForType_(\n          renderInstructions.polygonInstructions,\n          'Polygon',\n          transform,\n        ),\n        this.generateBuffersForType_(\n          renderInstructions.lineStringInstructions,\n          'LineString',\n          transform,\n        ),\n        this.generateBuffersForType_(\n          renderInstructions.pointInstructions,\n          'Point',\n          transform,\n        ),\n      ],\n    );\n    // also return the inverse of the transform that was applied when generating buffers\n    const invertVerticesTransform = makeInverseTransform(\n      createTransform(),\n      transform,\n    );\n    return {\n      polygonBuffers: polygonBuffers,\n      lineStringBuffers: lineStringBuffers,\n      pointBuffers: pointBuffers,\n      invertVerticesTransform: invertVerticesTransform,\n    };\n  }\n\n  /**\n   * @param {import('./MixedGeometryBatch.js').default} geometryBatch Geometry batch\n   * @param {import(\"../../transform.js\").Transform} transform Transform to apply to coordinates\n   * @return {RenderInstructions} Render instructions\n   * @private\n   */\n  generateRenderInstructions_(geometryBatch, transform) {\n    const polygonInstructions = this.hasFill_\n      ? generatePolygonRenderInstructions(\n          geometryBatch.polygonBatch,\n          new Float32Array(0),\n          this.customAttributes_,\n          transform,\n        )\n      : null;\n    const lineStringInstructions = this.hasStroke_\n      ? generateLineStringRenderInstructions(\n          geometryBatch.lineStringBatch,\n          new Float32Array(0),\n          this.customAttributes_,\n          transform,\n        )\n      : null;\n    const pointInstructions = this.hasSymbol_\n      ? generatePointRenderInstructions(\n          geometryBatch.pointBatch,\n          new Float32Array(0),\n          this.customAttributes_,\n          transform,\n        )\n      : null;\n\n    return {\n      polygonInstructions,\n      lineStringInstructions,\n      pointInstructions,\n    };\n  }\n\n  /**\n   * @param {Float32Array|null} renderInstructions Render instructions\n   * @param {import(\"../../geom/Geometry.js\").Type} geometryType Geometry type\n   * @param {import(\"../../transform.js\").Transform} transform Transform to apply to coordinates\n   * @return {Promise<Array<WebGLArrayBuffer>>|null} Indices buffer and vertices buffer; null if nothing to render\n   * @private\n   */\n  generateBuffersForType_(renderInstructions, geometryType, transform) {\n    if (renderInstructions === null) {\n      return null;\n    }\n\n    const messageId = workerMessageCounter++;\n    let messageType;\n    switch (geometryType) {\n      case 'Polygon':\n        messageType = WebGLWorkerMessageType.GENERATE_POLYGON_BUFFERS;\n        break;\n      case 'LineString':\n        messageType = WebGLWorkerMessageType.GENERATE_LINE_STRING_BUFFERS;\n        break;\n      case 'Point':\n        messageType = WebGLWorkerMessageType.GENERATE_POINT_BUFFERS;\n        break;\n      default:\n      // pass\n    }\n\n    /** @type {import('./constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: messageId,\n      type: messageType,\n      renderInstructions: renderInstructions.buffer,\n      renderInstructionsTransform: transform,\n      customAttributesSize: getCustomAttributesSize(this.customAttributes_),\n    };\n    const WEBGL_WORKER = getWebGLWorker();\n    WEBGL_WORKER.postMessage(message, [renderInstructions.buffer]);\n\n    // leave ownership of render instructions\n    renderInstructions = null;\n\n    return new Promise((resolve) => {\n      /**\n       * @param {*} event Event.\n       */\n      const handleMessage = (event) => {\n        const received = event.data;\n\n        // this is not the response to our request: skip\n        if (received.id !== messageId) {\n          return;\n        }\n\n        // we've received our response: stop listening\n        WEBGL_WORKER.removeEventListener('message', handleMessage);\n\n        // the helper has disposed in the meantime; the promise will not be resolved\n        if (!this.helper_.getGL()) {\n          return;\n        }\n\n        // copy & flush received buffers to GPU\n        const verticesBuffer = new WebGLArrayBuffer(\n          ARRAY_BUFFER,\n          DYNAMIC_DRAW,\n        ).fromArrayBuffer(received.vertexBuffer);\n        const indicesBuffer = new WebGLArrayBuffer(\n          ELEMENT_ARRAY_BUFFER,\n          DYNAMIC_DRAW,\n        ).fromArrayBuffer(received.indexBuffer);\n        this.helper_.flushBufferData(verticesBuffer);\n        this.helper_.flushBufferData(indicesBuffer);\n\n        resolve([indicesBuffer, verticesBuffer]);\n      };\n\n      WEBGL_WORKER.addEventListener('message', handleMessage);\n    });\n  }\n\n  /**\n   * Render the geometries in the given buffers.\n   * @param {WebGLBuffers} buffers WebGL Buffers to draw\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {function(): void} preRenderCallback This callback will be called right before drawing, and can be used to set uniforms\n   */\n  render(buffers, frameState, preRenderCallback) {\n    this.hasFill_ &&\n      this.renderInternal_(\n        buffers.polygonBuffers[0],\n        buffers.polygonBuffers[1],\n        this.fillProgram_,\n        this.polygonAttributesDesc_,\n        frameState,\n        preRenderCallback,\n      );\n    this.hasStroke_ &&\n      this.renderInternal_(\n        buffers.lineStringBuffers[0],\n        buffers.lineStringBuffers[1],\n        this.strokeProgram_,\n        this.lineStringAttributesDesc_,\n        frameState,\n        preRenderCallback,\n      );\n    this.hasSymbol_ &&\n      this.renderInternal_(\n        buffers.pointBuffers[0],\n        buffers.pointBuffers[1],\n        this.symbolProgram_,\n        this.pointAttributesDesc_,\n        frameState,\n        preRenderCallback,\n      );\n  }\n\n  /**\n   * @param {WebGLArrayBuffer} indicesBuffer Indices buffer\n   * @param {WebGLArrayBuffer} verticesBuffer Vertices buffer\n   * @param {WebGLProgram} program Program\n   * @param {Array<import('../../webgl/Helper.js').AttributeDescription>} attributes Attribute descriptions\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {function(): void} preRenderCallback This callback will be called right before drawing, and can be used to set uniforms\n   * @private\n   */\n  renderInternal_(\n    indicesBuffer,\n    verticesBuffer,\n    program,\n    attributes,\n    frameState,\n    preRenderCallback,\n  ) {\n    const renderCount = indicesBuffer.getSize();\n    if (renderCount === 0) {\n      return;\n    }\n    this.helper_.useProgram(program, frameState);\n    this.helper_.bindBuffer(verticesBuffer);\n    this.helper_.bindBuffer(indicesBuffer);\n    this.helper_.enableAttributes(attributes);\n    preRenderCallback();\n    this.helper_.drawElements(0, renderCount);\n  }\n\n  /**\n   * @param {import('../../webgl/Helper.js').default} helper Helper\n   * @param {WebGLBuffers} buffers WebGL Buffers to reload if any\n   */\n  setHelper(helper, buffers = null) {\n    this.helper_ = helper;\n\n    if (this.hasFill_) {\n      this.fillProgram_ = this.helper_.getProgram(\n        this.fillFragmentShader_,\n        this.fillVertexShader_,\n      );\n    }\n    if (this.hasStroke_) {\n      this.strokeProgram_ = this.helper_.getProgram(\n        this.strokeFragmentShader_,\n        this.strokeVertexShader_,\n      );\n    }\n    if (this.hasSymbol_) {\n      this.symbolProgram_ = this.helper_.getProgram(\n        this.symbolFragmentShader_,\n        this.symbolVertexShader_,\n      );\n    }\n    this.helper_.addUniforms(this.uniforms_);\n\n    if (buffers) {\n      if (buffers.polygonBuffers) {\n        this.helper_.flushBufferData(buffers.polygonBuffers[0]);\n        this.helper_.flushBufferData(buffers.polygonBuffers[1]);\n      }\n      if (buffers.lineStringBuffers) {\n        this.helper_.flushBufferData(buffers.lineStringBuffers[0]);\n        this.helper_.flushBufferData(buffers.lineStringBuffers[1]);\n      }\n      if (buffers.pointBuffers) {\n        this.helper_.flushBufferData(buffers.pointBuffers[0]);\n        this.helper_.flushBufferData(buffers.pointBuffers[1]);\n      }\n    }\n  }\n}\n\nexport default VectorStyleRenderer;\n","\n        export function create() {\n          const source = \"function t(t,n,x=2){const o=n&&n.length,i=o?n[0]*x:t.length;let u=e(t,0,i,x,!0);const l=[];if(!u||u.next===u.prev)return l;let c,h,y;if(o&&(u=function(t,n,r,x){const o=[];for(let r=0,i=n.length;r<i;r++){const u=e(t,n[r]*x,r<i-1?n[r+1]*x:t.length,x,!1);u===u.next&&(u.steiner=!0),o.push(a(u))}o.sort(f);for(let t=0;t<o.length;t++)r=s(o[t],r);return r}(t,n,u,x)),t.length>80*x){c=1/0,h=1/0;let e=-1/0,n=-1/0;for(let r=x;r<i;r+=x){const x=t[r],o=t[r+1];x<c&&(c=x),o<h&&(h=o),x>e&&(e=x),o>n&&(n=o)}y=Math.max(e-c,n-h),y=0!==y?32767/y:0}return r(u,l,x,c,h,y,0),l}function e(t,e,n,r,x){let o;if(x===function(t,e,n,r){let x=0;for(let o=e,i=n-r;o<n;o+=r)x+=(t[i]-t[o])*(t[o+1]+t[i+1]),i=o;return x}(t,e,n,r)>0)for(let x=e;x<n;x+=r)o=w(x/r|0,t[x],t[x+1],o);else for(let x=n-r;x>=e;x-=r)o=w(x/r|0,t[x],t[x+1],o);return o&&g(o,o.next)&&(A(o),o=o.next),o}function n(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!g(r,r.next)&&0!==v(r.prev,r,r.next))r=r.next;else{if(A(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function r(t,e,f,s,l,a,h){if(!t)return;!h&&a&&function(t,e,n,r){let x=t;do{0===x.z&&(x.z=c(x.x,x.y,e,n,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next}while(x!==t);x.prevZ.nextZ=null,x.prevZ=null,function(t){let e,n=1;do{let r,x=t;t=null;let o=null;for(e=0;x;){e++;let i=x,u=0;for(let t=0;t<n&&(u++,i=i.nextZ,i);t++);let f=n;for(;u>0||f>0&&i;)0!==u&&(0===f||!i||x.z<=i.z)?(r=x,x=x.nextZ,u--):(r=i,i=i.nextZ,f--),o?o.nextZ=r:t=r,r.prevZ=o,o=r;x=i}o.nextZ=null,n*=2}while(e>1)}(x)}(t,s,l,a);let y=t;for(;t.prev!==t.next;){const c=t.prev,p=t.next;if(a?o(t,s,l,a):x(t))e.push(c.i,t.i,p.i),A(t),t=p.next,y=p.next;else if((t=p)===y){h?1===h?r(t=i(n(t),e),e,f,s,l,a,2):2===h&&u(t,e,f,s,l,a):r(n(t),e,f,s,l,a,1);break}}}function x(t){const e=t.prev,n=t,r=t.next;if(v(e,n,r)>=0)return!1;const x=e.x,o=n.x,i=r.x,u=e.y,f=n.y,s=r.y,l=Math.min(x,o,i),c=Math.min(u,f,s),a=Math.max(x,o,i),h=Math.max(u,f,s);let p=r.next;for(;p!==e;){if(p.x>=l&&p.x<=a&&p.y>=c&&p.y<=h&&y(x,u,o,f,i,s,p.x,p.y)&&v(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function o(t,e,n,r){const x=t.prev,o=t,i=t.next;if(v(x,o,i)>=0)return!1;const u=x.x,f=o.x,s=i.x,l=x.y,a=o.y,h=i.y,p=Math.min(u,f,s),g=Math.min(l,a,h),b=Math.max(u,f,s),M=Math.max(l,a,h),m=c(p,g,e,n,r),Z=c(b,M,e,n,r);let d=t.prevZ,w=t.nextZ;for(;d&&d.z>=m&&w&&w.z<=Z;){if(d.x>=p&&d.x<=b&&d.y>=g&&d.y<=M&&d!==x&&d!==i&&y(u,l,f,a,s,h,d.x,d.y)&&v(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,w.x>=p&&w.x<=b&&w.y>=g&&w.y<=M&&w!==x&&w!==i&&y(u,l,f,a,s,h,w.x,w.y)&&v(w.prev,w,w.next)>=0)return!1;w=w.nextZ}for(;d&&d.z>=m;){if(d.x>=p&&d.x<=b&&d.y>=g&&d.y<=M&&d!==x&&d!==i&&y(u,l,f,a,s,h,d.x,d.y)&&v(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;w&&w.z<=Z;){if(w.x>=p&&w.x<=b&&w.y>=g&&w.y<=M&&w!==x&&w!==i&&y(u,l,f,a,s,h,w.x,w.y)&&v(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function i(t,e){let r=t;do{const n=r.prev,x=r.next.next;!g(n,x)&&b(n,r,r.next,x)&&Z(n,x)&&Z(x,n)&&(e.push(n.i,r.i,x.i),A(r),A(r.next),r=t=x),r=r.next}while(r!==t);return n(r)}function u(t,e,x,o,i,u){let f=t;do{let t=f.next.next;for(;t!==f.prev;){if(f.i!==t.i&&p(f,t)){let s=d(f,t);return f=n(f,f.next),s=n(s,s.next),r(f,e,x,o,i,u,0),void r(s,e,x,o,i,u,0)}t=t.next}f=f.next}while(f!==t)}function f(t,e){let n=t.x-e.x;if(0===n&&(n=t.y-e.y,0===n)){n=(t.next.y-t.y)/(t.next.x-t.x)-(e.next.y-e.y)/(e.next.x-e.x)}return n}function s(t,e){const r=function(t,e){let n=e;const r=t.x,x=t.y;let o,i=-1/0;if(g(t,n))return n;do{if(g(t,n.next))return n.next;if(x<=n.y&&x>=n.next.y&&n.next.y!==n.y){const t=n.x+(x-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>i&&(i=t,o=n.x<n.next.x?n:n.next,t===r))return o}n=n.next}while(n!==e);if(!o)return null;const u=o,f=o.x,s=o.y;let c=1/0;n=o;do{if(r>=n.x&&n.x>=f&&r!==n.x&&h(x<s?r:i,x,f,s,x<s?i:r,x,n.x,n.y)){const e=Math.abs(x-n.y)/(r-n.x);Z(n,t)&&(e<c||e===c&&(n.x>o.x||n.x===o.x&&l(o,n)))&&(o=n,c=e)}n=n.next}while(n!==u);return o}(t,e);if(!r)return e;const x=d(r,t);return n(x,x.next),n(r,r.next)}function l(t,e){return v(t.prev,t,e.prev)<0&&v(e.next,t,t.next)<0}function c(t,e,n,r,x){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-n)*x|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-r)*x|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function a(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function h(t,e,n,r,x,o,i,u){return(x-i)*(e-u)>=(t-i)*(o-u)&&(t-i)*(r-u)>=(n-i)*(e-u)&&(n-i)*(o-u)>=(x-i)*(r-u)}function y(t,e,n,r,x,o,i,u){return!(t===i&&e===u)&&h(t,e,n,r,x,o,i,u)}function p(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&b(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Z(t,e)&&Z(e,t)&&function(t,e){let n=t,r=!1;const x=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&x<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)&&(v(t.prev,t,e.prev)||v(t,e.prev,e))||g(t,e)&&v(t.prev,t,t.next)>0&&v(e.prev,e,e.next)>0)}function v(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function g(t,e){return t.x===e.x&&t.y===e.y}function b(t,e,n,r){const x=m(v(t,e,n)),o=m(v(t,e,r)),i=m(v(n,r,t)),u=m(v(n,r,e));return x!==o&&i!==u||(!(0!==x||!M(t,n,e))||(!(0!==o||!M(t,r,e))||(!(0!==i||!M(n,t,r))||!(0!==u||!M(n,e,r)))))}function M(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function m(t){return t>0?1:t<0?-1:0}function Z(t,e){return v(t.prev,t,t.next)<0?v(t,e,t.next)>=0&&v(t,t.prev,e)>=0:v(t,e,t.prev)<0||v(t,t.next,e)<0}function d(t,e){const n=E(t.i,t.x,t.y),r=E(e.i,e.x,e.y),x=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=x,x.prev=n,r.next=n,n.prev=r,o.next=r,r.prev=o,r}function w(t,e,n,r){const x=E(t,e,n);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function A(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function E(t,e,n){return{i:t,x:e,y:n,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function I(t,e){const n=e[0],r=e[1];return e[0]=t[0]*n+t[2]*r+t[4],e[1]=t[1]*n+t[3]*r+t[5],e}function z(t,e){const n=(r=e)[0]*r[3]-r[1]*r[2];var r;!function(t,e){if(!t)throw new Error(e)}(0!==n,\\\"Transformation matrix cannot be inverted\\\");const x=e[0],o=e[1],i=e[2],u=e[3],f=e[4],s=e[5];return t[0]=u/n,t[1]=-o/n,t[2]=-i/n,t[3]=x/n,t[4]=(i*s-u*f)/n,t[5]=-(x*s-o*f)/n,t}new Array(6);const F=[],P={vertexPosition:0,indexPosition:0};function B(t,e,n,r,x){t[e+0]=n,t[e+1]=r,t[e+2]=x}function N(t,e,n,r,x,o){const i=3+x,u=t[e+0],f=t[e+1],s=F;s.length=x;for(let n=0;n<s.length;n++)s[n]=t[e+2+n];let l=o?o.vertexPosition:0,c=o?o.indexPosition:0;const a=l/i;return B(n,l,u,f,0),s.length&&n.set(s,l+3),l+=i,B(n,l,u,f,1),s.length&&n.set(s,l+3),l+=i,B(n,l,u,f,2),s.length&&n.set(s,l+3),l+=i,B(n,l,u,f,3),s.length&&n.set(s,l+3),l+=i,r[c++]=a,r[c++]=a+1,r[c++]=a+3,r[c++]=a+1,r[c++]=a+2,r[c++]=a+3,P.vertexPosition=l,P.indexPosition=c,P}function R(t,e,n,r,x,o,i,u,f,s,l){const c=10+u.length,a=o.length/c,h=[t[e+0],t[e+1]],y=[t[n],t[n+1]],p=t[e+2],v=t[n+2],g=I(f,[...h]),b=I(f,[...y]);function M(t,e,n){const r=Math.sqrt((e[0]-t[0])*(e[0]-t[0])+(e[1]-t[1])*(e[1]-t[1])),x=[(e[0]-t[0])/r,(e[1]-t[1])/r],o=[-x[1],x[0]],i=Math.sqrt((n[0]-t[0])*(n[0]-t[0])+(n[1]-t[1])*(n[1]-t[1])),u=[(n[0]-t[0])/i,(n[1]-t[1])/i],f=0===r||0===i?0:Math.acos((s=u[0]*x[0]+u[1]*x[1],l=-1,c=1,Math.min(Math.max(s,l),c)));var s,l,c;return u[0]*o[0]+u[1]*o[1]>0?f:2*Math.PI-f}let m=-1,Z=-1,d=l;const w=null!==x;if(null!==r){m=M(g,b,I(f,[...[t[r],t[r+1]]])),Math.cos(m)<=.985&&(d+=Math.tan((m-Math.PI)/2))}if(w){Z=M(b,g,I(f,[...[t[x],t[x+1]]])),Math.cos(Z)<=.985&&(d+=Math.tan((Math.PI-Z)/2))}function A(t,e){return 0===e?1e4*t:Math.sign(e)*(1e4*t+Math.abs(e))}return o.push(h[0],h[1],p,y[0],y[1],v,m,Z,s,A(0,l)),o.push(...u),o.push(h[0],h[1],p,y[0],y[1],v,m,Z,s,A(1,l)),o.push(...u),o.push(h[0],h[1],p,y[0],y[1],v,m,Z,s,A(2,l)),o.push(...u),o.push(h[0],h[1],p,y[0],y[1],v,m,Z,s,A(3,l)),o.push(...u),i.push(a,a+1,a+2,a+1,a+3,a+2),{length:s+Math.sqrt((b[0]-g[0])*(b[0]-g[0])+(b[1]-g[1])*(b[1]-g[1])),angle:d}}function S(e,n,r,x,o){const i=2+o;let u=n;const f=e.slice(u,u+o);u+=o;const s=e[u++];let l=0;const c=new Array(s-1);for(let t=0;t<s;t++)l+=e[u++],t<s-1&&(c[t]=l);const a=e.slice(u,u+2*l),h=t(a,c,2);for(let t=0;t<h.length;t++)x.push(h[t]+r.length/i);for(let t=0;t<a.length;t+=2)r.push(a[t],a[t+1],...f);return u+2*l}const T=\\\"GENERATE_POLYGON_BUFFERS\\\",_=\\\"GENERATE_POINT_BUFFERS\\\",O=\\\"GENERATE_LINE_STRING_BUFFERS\\\",U=self;U.onmessage=t=>{const e=t.data;switch(e.type){case _:{const t=3,n=2,r=e.customAttributesSize,x=n+r,o=new Float32Array(e.renderInstructions),i=o.length/x,u=4*i*(r+t),f=new Uint32Array(6*i),s=new Float32Array(u);let l;for(let t=0;t<o.length;t+=x)l=N(o,t,s,f,r,l);const c=Object.assign({vertexBuffer:s.buffer,indexBuffer:f.buffer,renderInstructions:o.buffer},e);U.postMessage(c,[s.buffer,f.buffer,o.buffer]);break}case O:{const t=[],n=[],r=e.customAttributesSize,x=3,o=new Float32Array(e.renderInstructions);let i=0;const u=[1,0,0,1,0,0];let f,s;for(z(u,e.renderInstructionsTransform);i<o.length;){s=Array.from(o.slice(i,i+r)),i+=r,f=o[i++];const e=i,l=i+(f-1)*x,c=o[e]===o[l]&&o[e+1]===o[l+1];let a=0,h=0;for(let r=0;r<f-1;r++){let y=null;r>0?y=i+(r-1)*x:c&&(y=l-x);let p=null;r<f-2?p=i+(r+2)*x:c&&(p=e+x);const v=R(o,i+r*x,i+(r+1)*x,y,p,t,n,s,u,a,h);a=v.length,h=v.angle}i+=f*x}const l=Uint32Array.from(n),c=Float32Array.from(t),a=Object.assign({vertexBuffer:c.buffer,indexBuffer:l.buffer,renderInstructions:o.buffer},e);U.postMessage(a,[c.buffer,l.buffer,o.buffer]);break}case T:{const t=[],n=[],r=e.customAttributesSize,x=new Float32Array(e.renderInstructions);let o=0;for(;o<x.length;)o=S(x,o,t,n,r);const i=Uint32Array.from(n),u=Float32Array.from(t),f=Object.assign({vertexBuffer:u.buffer,indexBuffer:i.buffer,renderInstructions:x.buffer},e);U.postMessage(f,[u.buffer,i.buffer,x.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","/**\n * Utilities for encoding/decoding values to be used in shaders\n * @module ol/render/webgl/encodeUtil\n */\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_,\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0,\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1],\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_,\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {assert} from '../../asserts.js';\nimport {listen, unlistenByKey} from '../../events.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport BaseVector from '../../layer/BaseVector.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport MixedGeometryBatch from '../../render/webgl/MixedGeometryBatch.js';\nimport VectorStyleRenderer from '../../render/webgl/VectorStyleRenderer.js';\nimport {colorDecodeId} from '../../render/webgl/encodeUtil.js';\nimport {breakDownFlatStyle} from '../../render/webgl/style.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  setFromArray as setFromTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  create as createMat4,\n  fromTransform as mat4FromTransform,\n} from '../../vec/mat4.js';\nimport {DefaultUniform} from '../../webgl/Helper.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {getWorldParameters} from './worldUtil.js';\n\nexport const Uniforms = {\n  ...DefaultUniform,\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  PATTERN_ORIGIN: 'u_patternOrigin',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n};\n\n/**\n * @typedef {import('../../render/webgl/VectorStyleRenderer.js').AsShaders} StyleAsShaders\n */\n/**\n * @typedef {import('../../render/webgl/VectorStyleRenderer.js').AsRule} StyleAsRule\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {import('../../style/flat.js').FlatStyleLike | Array<StyleAsShaders> | StyleAsShaders} style Flat vector style; also accepts shaders\n * @property {Object<string, number|Array<number>|string|boolean>} variables Style variables\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Experimental WebGL vector renderer. Supports polygons, lines and points:\n *  Polygons are broken down into triangles\n *  Lines are rendered as strips of quads\n *  Points are rendered as quads\n *\n * You need to provide vertex and fragment shaders as well as custom attributes for each type of geometry. All shaders\n * can access the uniforms in the {@link module:ol/webgl/Helper~DefaultUniform} enum.\n * The vertex shaders can access the following attributes depending on the geometry type:\n *  For polygons: {@link module:ol/render/webgl/PolygonBatchRenderer~Attributes}\n *  For line strings: {@link module:ol/render/webgl/LineStringBatchRenderer~Attributes}\n *  For points: {@link module:ol/render/webgl/PointBatchRenderer~Attributes}\n *\n * Please note that the fragment shaders output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Note: this uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n */\nclass WebGLVectorLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = {\n      [Uniforms.RENDER_EXTENT]: [0, 0, 0, 0],\n      [Uniforms.PATTERN_ORIGIN]: [0, 0],\n      [Uniforms.GLOBAL_ALPHA]: 1,\n    };\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = !options.disableHitDetection;\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * @private\n     */\n    this.sourceRevision_ = -1;\n\n    /**\n     * @private\n     */\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = createTransform();\n\n    /**\n     * @private\n     */\n    this.tmpCoords_ = [0, 0];\n    /**\n     * @private\n     */\n    this.tmpTransform_ = createTransform();\n    /**\n     * @private\n     */\n    this.tmpMat4_ = createMat4();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentFrameStateTransform_ = createTransform();\n\n    /**\n     * @type {import('../../style/flat.js').StyleVariables}\n     * @private\n     */\n    this.styleVariables_ = {};\n\n    /**\n     * @type {Array<StyleAsRule | StyleAsShaders>}\n     * @private\n     */\n    this.styles_ = [];\n\n    /**\n     * @type {Array<VectorStyleRenderer>}\n     * @private\n     */\n    this.styleRenderers_ = [];\n\n    /**\n     * @type {Array<import('../../render/webgl/VectorStyleRenderer.js').WebGLBuffers>}\n     * @private\n     */\n    this.buffers_ = [];\n\n    this.applyOptions_(options);\n\n    /**\n     * @private\n     */\n    this.batch_ = new MixedGeometryBatch();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initialFeaturesAdded_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../events.js\").EventsKey|null>}\n     */\n    this.sourceListenKeys_ = null;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  addInitialFeatures_(frameState) {\n    const source = this.getLayer().getSource();\n    const userProjection = getUserProjection();\n    let projectionTransform;\n    if (userProjection) {\n      projectionTransform = getTransformFromProjections(\n        userProjection,\n        frameState.viewState.projection,\n      );\n    }\n    this.batch_.addFeatures(source.getFeatures(), projectionTransform);\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_.bind(this, projectionTransform),\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {Options} options Options.\n   * @private\n   */\n  applyOptions_(options) {\n    this.styleVariables_ = options.variables;\n    this.styles_ = breakDownFlatStyle(options.style);\n  }\n\n  /**\n   * @private\n   */\n  createRenderers_() {\n    this.buffers_ = [];\n    this.styleRenderers_ = this.styles_.map(\n      (style) =>\n        new VectorStyleRenderer(\n          style,\n          this.styleVariables_,\n          this.helper,\n          this.hitDetectionEnabled_,\n          'filter' in style ? style.filter : null,\n        ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  reset(options) {\n    this.applyOptions_(options);\n    if (this.helper) {\n      this.createRenderers_();\n    }\n    super.reset(options);\n  }\n\n  /**\n   * @override\n   */\n  afterHelperCreated() {\n    if (this.styleRenderers_.length) {\n      // To reuse buffers\n      this.styleRenderers_.forEach((renderer, i) =>\n        renderer.setHelper(this.helper, this.buffers_[i]),\n      );\n    } else {\n      this.createRenderers_();\n    }\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../proj.js\").TransformFunction} projectionTransform Transform function.\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(projectionTransform, event) {\n    const feature = event.feature;\n    this.batch_.addFeature(feature, projectionTransform);\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.batch_.changeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    this.batch_.removeFeature(feature);\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.batch_.clear();\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} batchInvertTransform Inverse of the transformation in which geometries are expressed\n   * @private\n   */\n  applyUniforms_(batchInvertTransform) {\n    // world to screen matrix\n    setFromTransform(this.tmpTransform_, this.currentFrameStateTransform_);\n    multiplyTransform(this.tmpTransform_, batchInvertTransform);\n    this.helper.setUniformMatrixValue(\n      Uniforms.PROJECTION_MATRIX,\n      mat4FromTransform(this.tmpMat4_, this.tmpTransform_),\n    );\n\n    // screen to world matrix\n    makeInverseTransform(this.tmpTransform_, this.tmpTransform_);\n    this.helper.setUniformMatrixValue(\n      Uniforms.SCREEN_TO_WORLD_MATRIX,\n      mat4FromTransform(this.tmpMat4_, this.tmpTransform_),\n    );\n\n    // pattern origin should always be [0, 0] in world coordinates\n    this.tmpCoords_[0] = 0;\n    this.tmpCoords_[1] = 0;\n    makeInverseTransform(this.tmpTransform_, batchInvertTransform);\n    applyTransform(this.tmpTransform_, this.tmpCoords_);\n    this.helper.setUniformFloatVec2(Uniforms.PATTERN_ORIGIN, this.tmpCoords_);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const [startWorld, endWorld, worldWidth] = getWorldParameters(\n      frameState,\n      this.getLayer(),\n    );\n\n    // draw the normal canvas\n    this.helper.prepareDraw(frameState);\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    if (this.hitDetectionEnabled_) {\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.initialFeaturesAdded_) {\n      this.addInitialFeatures_(frameState);\n      this.initialFeaturesAdded_ = true;\n    }\n\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        vectorSource.loadFeatures(\n          toUserExtent(extent, userProjection),\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      } else {\n        vectorSource.loadFeatures(extent, resolution, projection);\n      }\n\n      this.ready = false;\n\n      const transform = this.helper.makeProjectionTransform(\n        frameState,\n        createTransform(),\n      );\n\n      const generatePromises = this.styleRenderers_.map((renderer, i) =>\n        renderer.generateBuffers(this.batch_, transform).then((buffers) => {\n          if (this.buffers_[i]) {\n            this.disposeBuffers(this.buffers_[i]);\n          }\n          this.buffers_[i] = buffers;\n        }),\n      );\n      Promise.all(generatePromises).then(() => {\n        this.ready = true;\n        this.getLayer().changed();\n      });\n\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    return true;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true,\n      );\n    }\n\n    do {\n      this.helper.makeProjectionTransform(\n        frameState,\n        this.currentFrameStateTransform_,\n      );\n      translateTransform(\n        this.currentFrameStateTransform_,\n        world * worldWidth,\n        0,\n      );\n      for (let i = 0, ii = this.styleRenderers_.length; i < ii; i++) {\n        const renderer = this.styleRenderers_[i];\n        const buffers = this.buffers_[i];\n        if (!buffers) {\n          continue;\n        }\n        renderer.render(buffers, frameState, () => {\n          this.applyUniforms_(buffers.invertVerticesTransform);\n          this.helper.applyHitDetectionUniform(forHitDetection);\n        });\n      }\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    assert(\n      this.hitDetectionEnabled_,\n      '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has been disabled using the `disableHitDetection: true` option.',\n    );\n    if (!this.styleRenderers_.length || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(),\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const ref = colorDecodeId(color);\n    const feature = this.batch_.getFeatureFromRef(ref);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Will release a set of Webgl buffers\n   * @param {import('../../render/webgl/VectorStyleRenderer.js').WebGLBuffers} buffers Buffers\n   */\n  disposeBuffers(buffers) {\n    /**\n     * @param {Array<import('../../webgl/Buffer.js').default>} typeBuffers Buffers\n     */\n    const disposeBuffersOfType = (typeBuffers) => {\n      for (const buffer of typeBuffers) {\n        if (buffer) {\n          this.helper.deleteBuffer(buffer);\n        }\n      }\n    };\n    if (buffers.pointBuffers) {\n      disposeBuffersOfType(buffers.pointBuffers);\n    }\n    if (buffers.lineStringBuffers) {\n      disposeBuffersOfType(buffers.lineStringBuffers);\n    }\n    if (buffers.polygonBuffers) {\n      disposeBuffersOfType(buffers.polygonBuffers);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.buffers_.forEach((buffers) => {\n      if (buffers) {\n        this.disposeBuffers(buffers);\n      }\n    });\n    if (this.sourceListenKeys_) {\n      this.sourceListenKeys_.forEach(function (key) {\n        unlistenByKey(key);\n      });\n      this.sourceListenKeys_ = null;\n    }\n    super.disposeInternal();\n  }\n\n  renderDeclutter() {}\n}\n\nexport default WebGLVectorLayerRenderer;\n","import {getWidth} from '../../extent.js';\n\n/**\n * Compute world params\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {any} layer The layer\n * @return {Array<number>} The world start, end and width.\n */\nexport function getWorldParameters(frameState, layer) {\n  const projection = frameState.viewState.projection;\n\n  const vectorSource = layer.getSource();\n  const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n  const projectionExtent = projection.getExtent();\n\n  const extent = frameState.extent;\n  const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n  const endWorld = multiWorld\n    ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n    : 1;\n\n  const startWorld = multiWorld\n    ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n    : 0;\n\n  return [startWorld, endWorld, worldWidth];\n}\n","/**\n * @module ol/layer/Heatmap\n */\nimport {createCanvasContext2D} from '../dom.js';\nimport {BooleanType, NumberType} from '../expr/expression.js';\nimport {newCompilationContext} from '../expr/gpu.js';\nimport {clamp} from '../math.js';\nimport {ShaderBuilder} from '../render/webgl/ShaderBuilder.js';\nimport {\n  applyContextToBuilder,\n  expressionToGlsl,\n  generateAttributesFromContext,\n  generateUniformsFromContext,\n} from '../render/webgl/compileUtil.js';\nimport WebGLVectorLayerRenderer from '../renderer/webgl/VectorLayer.js';\nimport BaseVector from './BaseVector.js';\n\n/**\n * @typedef {import(\"../style/flat.js\").NumberExpression|string|function(import(\"../Feature.js\").default):number} WeightExpression\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<FeatureType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {import(\"../style/flat.js\").NumberExpression} [radius=8] Radius size in pixels. Note that for LineStrings,\n * the width of the line will be double the radius.\n * @property {import(\"../style/flat.js\").NumberExpression} [blur=15] Blur size in pixels. This is added to the `radius`\n * parameter above to create the final size of the blur effect.\n * @property {WeightExpression} [weight='weight'] The feature\n * attribute to use for the weight. This also supports expressions returning a number or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../style/flat.js\").BooleanExpression} [filter] Optional filter expression.\n * @property {Object<string, number|Array<number>|string|boolean>} [variables] Variables used in expressions (optional)\n * @property {VectorSourceType} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<FeatureType>]\n * @extends {BaseVector<FeatureType, VectorSourceType, WebGLVectorLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    this.filter_ = options.filter ?? true;\n\n    /**\n     * @type {import('../style/flat.js').StyleVariables}\n     * @private\n     */\n    this.styleVariables_ = options.variables || {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n\n    /**\n     * @private\n     */\n    this.weight_ = weight;\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {import(\"../style/flat.js\").NumberExpression} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {import(\"../style/flat.js\").NumberExpression} */ (\n      this.get(Property.BLUR)\n    );\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {import(\"../style/flat.js\").NumberExpression} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {import(\"../style/flat.js\").NumberExpression} */ (\n      this.get(Property.RADIUS)\n    );\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {import(\"../style/flat.js\").NumberExpression} blur Blur size in pixels (supports expressions).\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    const previousValue = this.get(Property.BLUR);\n    this.set(Property.BLUR, blur);\n    // if the value stays numerical, simply refresh the layer\n    if (typeof blur === 'number' && typeof previousValue === 'number') {\n      this.changed();\n      return;\n    }\n    this.clearRenderer();\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {import(\"../style/flat.js\").NumberExpression} radius Radius size in pixel (supports expressions).\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    const previousValue = this.get(Property.RADIUS);\n    this.set(Property.RADIUS, radius);\n    // if the value stays numerical, simply refresh the layer\n    if (typeof radius === 'number' && typeof previousValue === 'number') {\n      this.changed();\n      return;\n    }\n    this.clearRenderer();\n  }\n\n  /**\n   * Set the filter expression\n   * @param {import(\"../style/flat.js\").BooleanExpression} filter Filter expression\n   * @api\n   */\n  setFilter(filter) {\n    this.filter_ = filter;\n    this.changed();\n    this.clearRenderer();\n  }\n\n  /**\n   * Set the weight expression\n   * @param {WeightExpression} weight Weight expression\n   * @api\n   */\n  setWeight(weight) {\n    this.weight_ = weight;\n    this.changed();\n    this.clearRenderer();\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    const builder = new ShaderBuilder();\n\n    const context = newCompilationContext();\n    const filterCompiled = expressionToGlsl(context, this.filter_, BooleanType);\n    let radiusCompiled = expressionToGlsl(\n      context,\n      this.getRadius(),\n      NumberType,\n    );\n    let blurCompiled = expressionToGlsl(context, this.getBlur(), NumberType);\n\n    /** @type {import('../render/webgl/VectorStyleRenderer.js').UniformDefinitions} */\n    const blurRadiusUniforms = {};\n    if (typeof this.getBlur() === 'number') {\n      blurCompiled = 'a_blur';\n      blurRadiusUniforms['a_blur'] = () => this.getBlur();\n      builder.addUniform('float a_blur');\n    }\n    if (typeof this.getRadius() === 'number') {\n      radiusCompiled = 'a_radius';\n      blurRadiusUniforms['a_radius'] = () => this.getRadius();\n      builder.addUniform('float a_radius');\n    }\n\n    /** @type {import('../render/webgl/VectorStyleRenderer.js').AttributeDefinitions} */\n    const weightAttribute = {};\n    let weightExpression = null;\n    if (\n      typeof this.weight_ === 'string' ||\n      typeof this.weight_ === 'function'\n    ) {\n      const weightFunction =\n        typeof this.weight_ === 'string'\n          ? (feature) => feature.get(this.weight_)\n          : this.weight_;\n      weightAttribute['prop_weight'] = {\n        size: 1,\n        callback: (feature) => {\n          const weightValue = weightFunction(feature);\n          return weightValue !== undefined ? clamp(weightValue, 0, 1) : 1;\n        },\n      };\n      weightExpression = 'a_prop_weight';\n      builder.addAttribute('a_prop_weight', 'float');\n    } else {\n      const clampedWeight = ['clamp', this.weight_, 0, 1];\n      weightExpression = expressionToGlsl(context, clampedWeight, NumberType);\n    }\n\n    builder\n      .addFragmentShaderFunction(\n        `float getBlurSlope() {\n  float blur = max(1., ${blurCompiled});\n  float radius = ${radiusCompiled};\n  return radius / blur;\n}`,\n      )\n      .setSymbolSizeExpression(`vec2(${radiusCompiled} + ${blurCompiled}) * 2.`)\n      .setSymbolColorExpression(\n        `vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * getBlurSlope()) * ${weightExpression})`,\n      )\n      .setStrokeColorExpression(\n        `vec4(smoothstep(0., 1., (1. - length(currentRadiusPx * 2. / v_width)) * getBlurSlope()) * ${weightExpression})`,\n      )\n      .setStrokeWidthExpression(`(${radiusCompiled} + ${blurCompiled}) * 2.`)\n      .setFillColorExpression(`vec4(${weightExpression})`)\n      .setFragmentDiscardExpression(`!${filterCompiled}`);\n\n    applyContextToBuilder(builder, context);\n    const attributes = generateAttributesFromContext(context);\n    const uniforms = generateUniformsFromContext(context, this.styleVariables_);\n\n    return new WebGLVectorLayerRenderer(this, {\n      className: this.getClassName(),\n      variables: this.styleVariables_,\n      style: {\n        builder,\n        attributes: {\n          ...attributes,\n          ...weightAttribute,\n        },\n        uniforms: {\n          ...uniforms,\n          ...blurRadiusUniforms,\n        },\n      },\n      disableHitDetection: false,\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {import('../style/flat.js').StyleVariables} variables Variables to update.\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection,\n          ),\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file),\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/Draw\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {toUserExtent} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/**\n * @typedef {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} PointerHandler\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {PointerHandler|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]]),\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y]),\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection(),\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {PointerHandler|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport MapEventType from '../MapEventType.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {function(string):void} Callback\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {},\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    /**\n     * @private\n     */\n    this.updateState_ = this.updateState_.bind(this);\n\n    /**\n     * The tracked parameter callbacks.\n     * @private\n     * @type {Object<string, Callback>}\n     */\n    this.trackedCallbacks_ = {};\n\n    /**\n     * The tracked parameter values.\n     * @private\n     * @type {Object<string, string|null>}\n     */\n    this.trackedValues_ = {};\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this),\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    for (const key in this.trackedCallbacks_) {\n      const value = params.get(key);\n      if (key in this.trackedCallbacks_ && value !== this.trackedValues_[key]) {\n        this.trackedValues_[key] = value;\n        this.trackedCallbacks_[key](value);\n      }\n    }\n\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Register a listener for a URL search parameter.  The callback will be called with a new value\n   * when the corresponding search parameter changes due to history events (e.g. browser navigation).\n   *\n   * @param {string} key The URL search parameter.\n   * @param {Callback} callback The function to call when the search parameter changes.\n   * @return {string|null} The initial value of the search parameter (or null if absent from the URL).\n   * @api\n   */\n  track(key, callback) {\n    this.trackedCallbacks_[key] = callback;\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    const value = params.get(key);\n    this.trackedValues_[key] = value;\n    return value;\n  }\n\n  /**\n   * Update the URL with a new search parameter value.  If the value is null, it will be\n   * deleted from the search parameters.\n   *\n   * @param {string} key The URL search parameter.\n   * @param {string|null} value The updated value (or null to remove it from the URL).\n   * @api\n   */\n  update(key, value) {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    if (value === null) {\n      params.delete(key);\n    } else {\n      params.set(key, value);\n    }\n    if (key in this.trackedValues_) {\n      this.trackedValues_[key] = value;\n    }\n    this.updateHistory_(url);\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    this.updateHistory_(url);\n    this.initial_ = false;\n  }\n\n  /**\n   * @private\n   * @param {URL} url The URL.\n   */\n  updateHistory_(url) {\n    if (url.href !== window.location.href) {\n      if (this.initial_ || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {getUid} from '../util.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {[SegmentData, number]} DragSegment\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have an `existing` property -\n * indicating whether there is an existing vertex underneath or not, a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array<DragSegment>}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     * @private\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this),\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this),\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer',\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this),\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this),\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     * @private\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(map.getCoordinateFromPixel(this.lastPixel_));\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<SegmentData>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const feature = segments[i].feature;\n        if (feature && !features.includes(feature)) {\n          this.featuresBeingModified_.push(feature);\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_,\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      },\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @param {boolean} existing The vertex represents an existing vertex.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries, existing) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    vertexFeature.set('existing', existing);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  findInsertVerticesAndUpdateDragSegments_(pixelCoordinate) {\n    this.handlePointerAtPixel_(pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      return;\n    }\n\n    const projection = this.getMap().getView().getProjection();\n    const insertVertices = [];\n    const vertex = vertexFeature.getGeometry().getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.geometry);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n\n      if (\n        segmentDataMatch.geometry.getType() === 'Circle' &&\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n      ) {\n        const closestVertex = closestOnSegmentData(\n          pixelCoordinate,\n          segmentDataMatch,\n          projection,\n        );\n        if (\n          coordinatesEqual(closestVertex, vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n        continue;\n      }\n\n      if (coordinatesEqual(segment[0], vertex) && !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n        continue;\n      }\n\n      if (coordinatesEqual(segment[1], vertex) && !componentSegments[uid][1]) {\n        if (\n          componentSegments[uid][0] &&\n          componentSegments[uid][0].index === 0\n        ) {\n          let coordinates = segmentDataMatch.geometry.getCoordinates();\n          switch (segmentDataMatch.geometry.getType()) {\n            // prevent dragging closed linestrings by the connecting node\n            case 'LineString':\n            case 'MultiLineString':\n              continue;\n            // if dragging the first vertex of a polygon, ensure the other segment\n            // belongs to the closing vertex of the linear ring\n            case 'MultiPolygon':\n              coordinates = coordinates[depth[1]];\n            /* falls through */\n            case 'Polygon':\n              if (segmentDataMatch.index !== coordinates[depth[0]].length - 2) {\n                continue;\n              }\n              break;\n            default:\n            // pass\n          }\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n        continue;\n      }\n\n      if (\n        getUid(segment) in this.vertexSegments_ &&\n        !componentSegments[uid][0] &&\n        !componentSegments[uid][1]\n      ) {\n        insertVertices.push(segmentDataMatch);\n      }\n    }\n\n    return insertVertices;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @override\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(\n      evt,\n      this.dragSegments_.map(([segment]) => segment),\n    );\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          const circle = /** @type {import(\"../geom/Circle.js\").default} */ (\n            geometry\n          );\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            circle.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(circle.getCenter(), projection),\n              fromUserCoordinate(vertex, projection),\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = circle\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            circle.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries, true);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    const insertVertices =\n      this.findInsertVerticesAndUpdateDragSegments_(pixelCoordinate);\n\n    if (insertVertices?.length && this.insertVertexCondition_(evt)) {\n      this.willModifyFeatures_(evt, insertVertices);\n\n      if (this.vertexFeature_) {\n        const vertex = this.vertexFeature_.getGeometry().getCoordinates();\n        for (let j = insertVertices.length - 1; j >= 0; --j) {\n          this.insertVertex_(insertVertices[j], vertex);\n        }\n        this.ignoreNextSingleClick_ = true;\n      }\n    }\n\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        const circle = /** @type {import(\"../geom/Circle.js\").default} */ (\n          geometry\n        );\n        // Update a circle object in the R* bush:\n        const coordinates = circle.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        /** @type {import(\"../geom/Circle.js\").default | import(\"../geom/Polygon.js\").default} */\n        let circleGeometry = circle;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection,\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData,\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt,\n        ),\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixelCoordinate) {\n    const map = this.getMap();\n    const pixel = map.getPixelFromCoordinate(pixelCoordinate);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection),\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n\n          if (\n            geom &&\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter},\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection,\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection,\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n            this.snappedToVertex_,\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          // Stop and cleanup overlay vertex feature if a segment was hit and new vertex creation is not allowed by the insertVertexCondition\n          if (\n            !this.snappedToVertex_ &&\n            !this.insertVertexCondition_(this.lastPointerEvent_)\n          ) {\n            if (this.vertexFeature_) {\n              this.overlay_.getSource().removeFeature(this.vertexFeature_);\n              this.vertexFeature_ = null;\n            }\n            return;\n          }\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n            this.snappedToVertex_,\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @return {boolean} A vertex was inserted.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return false;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    return true;\n  }\n\n  updatePointer_(coordinate) {\n    if (coordinate) {\n      this.findInsertVerticesAndUpdateDragSegments_(coordinate);\n    }\n    return this.vertexFeature_?.getGeometry().getCoordinates();\n  }\n\n  /**\n   * Get the current pointer position.\n   * @return {import(\"../coordinate.js\").Coordinate | null} The current pointer coordinate.\n   */\n  getPoint() {\n    const coordinate = this.vertexFeature_?.getGeometry().getCoordinates();\n    if (!coordinate) {\n      return null;\n    }\n    return toUserCoordinate(\n      coordinate,\n      this.getMap().getView().getProjection(),\n    );\n  }\n\n  /**\n   * Check if a point can be removed from the current linestring or polygon at the current\n   * pointer position.\n   * @return {boolean} A point can be deleted at the current pointer position.\n   * @api\n   */\n  canRemovePoint() {\n    if (!this.vertexFeature_) {\n      return false;\n    }\n    if (\n      this.vertexFeature_\n        .get('geometries')\n        .every(\n          (geometry) =>\n            geometry.getType() === 'Circle' ||\n            geometry.getType().endsWith('Point'),\n        )\n    ) {\n      return false;\n    }\n    const coordinate = this.vertexFeature_.getGeometry().getCoordinates();\n    const segments = this.rBush_.getInExtent(boundingExtent([coordinate]));\n    return segments.some(\n      ({segment}) =>\n        coordinatesEqual(segment[0], coordinate) ||\n        coordinatesEqual(segment[1], coordinate),\n    );\n  }\n\n  /**\n   * Removes the vertex currently being pointed from the current linestring or polygon.\n   * @param {import('../coordinate.js').Coordinate} [coordinate] If provided, the pointer\n   * will be set to the provided coordinate. If not, the current pointer coordinate will be used.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint(coordinate) {\n    if (coordinate) {\n      coordinate = fromUserCoordinate(\n        coordinate,\n        this.getMap().getView().getProjection(),\n      );\n      this.updatePointer_(coordinate);\n    }\n    if (\n      !this.lastPointerEvent_ ||\n      (this.lastPointerEvent_ &&\n        this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG)\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(\n        evt,\n        this.dragSegments_.map(([segment]) => segment),\n      );\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData,\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * Check if a point can be inserted to the current linestring or polygon at the current\n   * pointer position.\n   * @return {boolean} A point can be inserted at the current pointer position.\n   * @api\n   */\n  canInsertPoint() {\n    if (!this.vertexFeature_) {\n      return false;\n    }\n    if (\n      this.vertexFeature_\n        .get('geometries')\n        .every(\n          (geometry) =>\n            geometry.getType() === 'Circle' ||\n            geometry.getType().endsWith('Point'),\n        )\n    ) {\n      return false;\n    }\n    const coordinate = this.vertexFeature_.getGeometry().getCoordinates();\n    const segments = this.rBush_.getInExtent(boundingExtent([coordinate]));\n    return segments.some(\n      ({segment}) =>\n        !(\n          coordinatesEqual(segment[0], coordinate) ||\n          coordinatesEqual(segment[1], coordinate)\n        ),\n    );\n  }\n\n  /**\n   * Inserts the vertex currently being pointed to the current linestring or polygon.\n   * @param {import('../coordinate.js').Coordinate} [coordinate] If provided, the pointer\n   * will be set to the provided coordinate. If not, the current pointer coordinate will be used.\n   * @return {boolean} A vertex was inserted.\n   * @api\n   */\n  insertPoint(coordinate) {\n    const pixelCoordinate = coordinate\n      ? fromUserCoordinate(coordinate, this.getMap().getView().getProjection())\n      : this.vertexFeature_?.getGeometry().getCoordinates();\n    if (!pixelCoordinate) {\n      return false;\n    }\n    const insertVertices =\n      this.findInsertVerticesAndUpdateDragSegments_(pixelCoordinate);\n    return insertVertices.reduce(\n      (prev, segmentData) =>\n        prev || this.insertVertex_(segmentData, pixelCoordinate),\n      false,\n    );\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      },\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection,\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = circleGeometry\n          .clone()\n          .transform(userProjection, projection);\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection),\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection),\n      ),\n      projection,\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection,\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport Event from '../events/Event.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {getUid} from '../util.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n  UNSNAP: 'unsnap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  boundingExtent,\n  buffer,\n  createEmpty,\n  intersects as intersectsExtent,\n} from '../extent.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {getIntersectionPoint} from '../geom/flat/segments.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} Segment\n * An array of two coordinates representing a line segment, or an array of one\n * coordinate representing a point.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Segment} segment Segment.\n * @property {boolean} [isIntersection] Is intersection.\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [GeometryType=import(\"../geom/Geometry.js\").default]\n * @typedef {(geometry: GeometryType, projection?: import(\"../proj/Projection.js\").default) => Array<Segment>} Segmenter\n * A function taking a {@link module:ol/geom/Geometry~Geometry} as argument and returning an array of {@link Segment}s.\n */\n\n/**\n * Each segmenter specified here will override the default segmenter for the\n * corresponding geometry type. To exclude all geometries of a specific geometry type from being snapped to,\n * set the segmenter to `null`.\n * @typedef {Object} Segmenters\n * @property {Segmenter<import(\"../geom/Point.js\").default>|null} [Point] Point segmenter.\n * @property {Segmenter<import(\"../geom/LineString.js\").default>|null} [LineString] LineString segmenter.\n * @property {Segmenter<import(\"../geom/Polygon.js\").default>|null} [Polygon] Polygon segmenter.\n * @property {Segmenter<import(\"../geom/Circle.js\").default>|null} [Circle] Circle segmenter.\n * @property {Segmenter<import(\"../geom/GeometryCollection.js\").default>|null} [GeometryCollection] GeometryCollection segmenter.\n * @property {Segmenter<import(\"../geom/MultiPoint.js\").default>|null} [MultiPoint] MultiPoint segmenter.\n * @property {Segmenter<import(\"../geom/MultiLineString.js\").default>|null} [MultiLineString] MultiLineString segmenter.\n * @property {Segmenter<import(\"../geom/MultiPolygon.js\").default>|null} [MultiPolygon] MultiPolygon segmenter.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {boolean} [intersection=false] Snap to intersections between segments.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {Segmenters} [segmenters] Custom segmenters by {@link module:ol/geom/Geometry~Type}. By default, the\n * following segmenters are used:\n *   - `Point`: A one-dimensional segment (e.g. `[[10, 20]]`) representing the point.\n *   - `LineString`: One two-dimensional segment (e.g. `[[10, 20], [30, 40]]`) for each segment of the linestring.\n *   - `Polygon`: One two-dimensional segment for each segment of the exterior ring and the interior rings.\n *   - `Circle`: One two-dimensional segment for each segment of a regular polygon with 32 points representing the circle circumference.\n *   - `GeometryCollection`: All segments of the contained geometries.\n *   - `MultiPoint`: One one-dimensional segment for each point.\n *   - `MultiLineString`: One two-dimensional segment for each segment of the linestrings.\n *   - `MultiPolygon`: One two-dimensional segment for each segment of the polygons.\n */\n\n/**\n * Information about the last snapped state.\n * @typedef {Object} SnappedInfo\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex - The snapped vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel - The pixel of the snapped vertex.\n * @property {import(\"../Feature.js\").default|null} feature - The feature being snapped.\n * @property {Segment|null} segment - Segment, or `null` if snapped to a vertex.\n */\n\n/***\n * @type {Object<string, Segmenter>}\n */\nconst GEOMETRY_SEGMENTERS = {\n  /**\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {Array<Segment>} Segments\n   */\n  Circle(geometry, projection) {\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    return GEOMETRY_SEGMENTERS.Polygon(polygon);\n  },\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {Array<Segment>} Segments\n   */\n  GeometryCollection(geometry, projection) {\n    /** @type {Array<Array<Segment>>} */\n    const segments = [];\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = GEOMETRY_SEGMENTERS[geometries[i].getType()];\n      if (segmenter) {\n        segments.push(segmenter(geometries[i], projection));\n      }\n    }\n    return segments.flat();\n  },\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  LineString(geometry) {\n    /** @type {Array<Segment>} */\n    const segments = [];\n    const coordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coordinates.length - stride; i < ii; i += stride) {\n      segments.push([\n        coordinates.slice(i, i + 2),\n        coordinates.slice(i + stride, i + stride + 2),\n      ]);\n    }\n    return segments;\n  },\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  MultiLineString(geometry) {\n    /** @type {Array<Segment>} */\n    const segments = [];\n    const coordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    const ends = geometry.getEnds();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      for (let j = offset, jj = end - stride; j < jj; j += stride) {\n        segments.push([\n          coordinates.slice(j, j + 2),\n          coordinates.slice(j + stride, j + stride + 2),\n        ]);\n      }\n      offset = end;\n    }\n    return segments;\n  },\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  MultiPoint(geometry) {\n    /** @type {Array<Segment>} */\n    const segments = [];\n    const coordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coordinates.length - stride; i < ii; i += stride) {\n      segments.push([coordinates.slice(i, i + 2)]);\n    }\n    return segments;\n  },\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  MultiPolygon(geometry) {\n    /** @type {Array<Segment>} */\n    const segments = [];\n    const coordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    const endss = geometry.getEndss();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      for (let j = 0, jj = ends.length; j < jj; ++j) {\n        const end = ends[j];\n        for (let k = offset, kk = end - stride; k < kk; k += stride) {\n          segments.push([\n            coordinates.slice(k, k + 2),\n            coordinates.slice(k + stride, k + stride + 2),\n          ]);\n        }\n        offset = end;\n      }\n    }\n    return segments;\n  },\n\n  /**\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  Point(geometry) {\n    return [[geometry.getFlatCoordinates().slice(0, 2)]];\n  },\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @return {Array<Segment>} Segments\n   */\n  Polygon(geometry) {\n    /** @type {Array<Segment>} */\n    const segments = [];\n    const coordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    const ends = geometry.getEnds();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      for (let j = offset, jj = end - stride; j < jj; j += stride) {\n        segments.push([\n          coordinates.slice(j, j + 2),\n          coordinates.slice(j + stride, j + stride + 2),\n        ]);\n      }\n      offset = end;\n    }\n    return segments;\n  },\n};\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n/** @type {Array<import('../extent.js').Extent>} */\nconst tempExtents = [];\n/** @type {Array<SegmentData>} */\nconst tempSegmentData = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap'|'unsnap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap'|'unsnap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that uses them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.intersection_ =\n      options.intersection !== undefined ? options.intersection : false;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * Holds information about the last snapped state.\n     * @type {SnappedInfo|null}\n     * @private\n     */\n    this.snapped_ = null;\n\n    /**\n     * @type {Object<string, Segmenter>}\n     * @private\n     */\n    this.segmenters_ = Object.assign(\n      {},\n      GEOMETRY_SEGMENTERS,\n      options.segmenters,\n    );\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.segmenters_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] =\n          geometry.getExtent(createEmpty());\n        const segments = segmenter(\n          geometry,\n          this.getMap().getView().getProjection(),\n        );\n        let segmentCount = segments.length;\n        for (let i = 0; i < segmentCount; ++i) {\n          const segment = segments[i];\n          tempExtents[i] = boundingExtent(segment);\n          tempSegmentData[i] = {\n            feature: feature,\n            segment: segment,\n          };\n        }\n        tempExtents.length = segmentCount;\n        tempSegmentData.length = segmentCount;\n\n        if (this.intersection_) {\n          for (let j = 0, jj = segments.length; j < jj; ++j) {\n            const segment = segments[j];\n            if (segment.length === 1) {\n              continue;\n            }\n            const extent = tempExtents[j];\n            // Calculate intersections with own segments\n            for (let k = 0, kk = segments.length; k < kk; ++k) {\n              if (j === k || j - 1 === k || j + 1 === k) {\n                // Exclude self and neighbours\n                continue;\n              }\n              const otherSegment = segments[k];\n              if (!intersectsExtent(extent, tempExtents[k])) {\n                continue;\n              }\n              const intersection = getIntersectionPoint(segment, otherSegment);\n              if (!intersection) {\n                continue;\n              }\n              const intersectionSegment = [intersection];\n              tempExtents[segmentCount] = boundingExtent(intersectionSegment);\n              tempSegmentData[segmentCount++] = {\n                feature,\n                segment: intersectionSegment,\n                isIntersection: true,\n              };\n            }\n            // Calculate intersections with existing segments\n            const otherSegments = this.rBush_.getInExtent(tempExtents[j]);\n            for (const {segment: otherSegment} of otherSegments) {\n              if (otherSegment.length === 1) {\n                continue;\n              }\n              const intersection = getIntersectionPoint(segment, otherSegment);\n              if (!intersection) {\n                continue;\n              }\n              const intersectionSegment = [intersection];\n              tempExtents[segmentCount] = boundingExtent(intersectionSegment);\n              tempSegmentData[segmentCount++] = {\n                feature,\n                segment: intersectionSegment,\n                isIntersection: true,\n              };\n            }\n          }\n        }\n\n        if (segmentCount === 1) {\n          this.rBush_.insert(tempExtents[0], tempSegmentData[0]);\n        } else {\n          this.rBush_.load(tempExtents, tempSegmentData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * Checks if two snap data sets are equal.\n   * Compares the segment and the feature.\n   *\n   * @param {SnappedInfo} data1 The first snap data set.\n   * @param {SnappedInfo} data2 The second snap data set.\n   * @return {boolean} `true` if the data sets are equal, otherwise `false`.\n   * @private\n   */\n  areSnapDataEqual_(data1, data2) {\n    return data1.segment === data2.segment && data1.feature === data2.feature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n\n      // Dispatch UNSNAP event if already snapped\n      if (this.snapped_ && !this.areSnapDataEqual_(this.snapped_, result)) {\n        this.dispatchEvent(new SnapEvent(SnapEventType.UNSNAP, this.snapped_));\n      }\n\n      this.snapped_ = {\n        vertex: evt.coordinate,\n        vertexPixel: evt.pixel,\n        feature: result.feature,\n        segment: result.segment,\n      };\n      this.dispatchEvent(new SnapEvent(SnapEventType.SNAP, this.snapped_));\n    } else if (this.snapped_) {\n      // Dispatch UNSNAP event if no longer snapped\n      this.dispatchEvent(new SnapEvent(SnapEventType.UNSNAP, this.snapped_));\n      this.snapped_ = null;\n    }\n\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      for (const feature of featuresToUpdate) {\n        this.updateFeature_(feature);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    let features = this.getFeatures_();\n    if (!Array.isArray(features)) {\n      features = features.getArray();\n    }\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      }\n      for (const feature of features) {\n        this.addFeature(feature);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {SnappedInfo|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_,\n      ),\n      projection,\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n    let closestSegment = null;\n    let isIntersection;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (\n          squaredPixelDistance <= squaredPixelTolerance &&\n          ((isIntersection && this.intersection_) ||\n            (!isIntersection && (this.vertex_ || this.edge_)))\n        ) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n            segment: closestSegment,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_ || this.intersection_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          for (const vertex of segmentData.segment) {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n              isIntersection = segmentData.isIntersection;\n            }\n          }\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            closestSegment =\n              segmentData.feature.getGeometry().getType() === 'Circle'\n                ? null\n                : segmentData.segment;\n            minSquaredDistance = delta;\n            closestFeature = segmentData.feature;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Feature from '../Feature.js';\nimport Event from '../events/Event.js';\nimport {always} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_,\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection,\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      },\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout || 'XY', object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options),\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @override\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {padNumber} from '../string.js';\nimport {getAllTextContent, getDocument} from '../xml.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\nconst whiteSpaceStart = /^\\s/;\nconst whiteSpaceEnd = /\\s$/;\nconst cdataCharacters = /(\\n|\\t|\\r|<|&| {2})/;\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  if (\n    typeof string === 'string' &&\n    (whiteSpaceStart.test(string) ||\n      whiteSpaceEnd.test(string) ||\n      cdataCharacters.test(string))\n  ) {\n    string.split(']]>').forEach((part, i, a) => {\n      if (i < a.length - 1) {\n        part += ']]';\n      }\n      if (i > 0) {\n        part = '>' + part;\n      }\n      writeCDATASection(node, part);\n    });\n  } else {\n    node.appendChild(getDocument().createTextNode(string));\n  }\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @typedef {Object} GPXLink\n * @property {string} [text] text\n * @property {string} [type] type\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @typedef {Object} GPXAuthor\n * @property {string} [name] name\n * @property {string} [email] email\n * @property {GPXLink} [link] link\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst AUTHOR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'email': parseEmail,\n  'link': parseLink,\n});\n\n/**\n * @typedef {Object} GPXMetadata\n * @property {string} [name] name\n * @property {string} [desc] desc\n * @property {GPXAuthor} [author] author\n * @property {GPXLink} [link] link\n * @property {number} [time] time\n * @property {string} [keywords] keywords\n * @property {Array<number>} [bounds] bounds\n * @property {Object} [extensions] extensions\n *\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'author': makeObjectPropertySetter(readAuthor),\n  'copyright': makeObjectPropertySetter(readCopyright),\n  'link': parseLink,\n  'time': makeObjectPropertySetter(readDateTime),\n  'keywords': makeObjectPropertySetter(readString),\n  'bounds': parseBounds,\n  'extensions': parseExtensions,\n});\n\n/**\n * @typedef {Object} GPXCopyright\n * @property {string} [author] author\n * @property {number} [year] year\n * @property {string} [license] license\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst COPYRIGHT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'year': makeObjectPropertySetter(readPositiveInteger),\n  'license': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @typedef {function(Feature, Node): void} ReadExtensions\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {ReadExtensions|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * Reads a GPX file's metadata tag, reading among other things:\n   *   - the name and description of this GPX\n   *   - its author\n   *   - the copyright associated with this GPX file\n   *\n   * Will return null if no metadata tag is present (or no valid source is given).\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {GPXMetadata | null} Metadata\n   * @api\n   */\n  readMetadata(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      return this.readMetadataFromDocument(parse(source));\n    }\n    if (isDocument(source)) {\n      return this.readMetadataFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readMetadataFromNode(source);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {GPXMetadata | null} Metadata\n   */\n  readMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        const metadata = this.readMetadataFromNode(/** @type {Element} */ (n));\n        if (metadata) {\n          return metadata;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Metadata\n   */\n  readMetadataFromNode(node) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName === 'metadata'\n      ) {\n        return pushParseAndPop({}, METADATA_PARSERS, n, []);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options],\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXAuthor | undefined} Person object.\n */\nfunction readAuthor(node, objectStack) {\n  const values = pushParseAndPop({}, AUTHOR_PARSERS, node, objectStack);\n  if (values) {\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXCopyright | undefined} Person object.\n */\nfunction readCopyright(node, objectStack) {\n  const values = pushParseAndPop({}, COPYRIGHT_PARSERS, node, objectStack);\n  if (values) {\n    const author = node.getAttribute('author');\n    if (author !== null) {\n      values['author'] = author;\n    }\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseBounds(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const minlat = node.getAttribute('minlat');\n  const minlon = node.getAttribute('minlon');\n  const maxlat = node.getAttribute('maxlat');\n  const maxlon = node.getAttribute('maxlon');\n  if (\n    minlon !== null &&\n    minlat !== null &&\n    maxlon !== null &&\n    maxlat !== null\n  ) {\n    values['bounds'] = [\n      [parseFloat(minlon), parseFloat(minlat)],\n      [parseFloat(maxlon), parseFloat(maxlat)],\n    ];\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseEmail(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  const domain = node.getAttribute('domain');\n  if (id !== null && domain !== null) {\n    values['email'] = `${id}@${domain}`;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTEDATE_RECORD_RE = /^HFDTEDATE:(\\d{2})(\\d{2})(\\d{2}),(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.lad_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.lod_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ladStart_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ladStop_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lodStart_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lodStop_ = 0;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (this.lad_) {\n            y +=\n              parseInt(line.slice(this.ladStart_, this.ladStop_), 10) /\n              60000 /\n              10 ** (this.ladStop_ - this.ladStart_);\n          }\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (this.lod_) {\n            x +=\n              parseInt(line.slice(this.lodStart_, this.lodStop_), 10) /\n              60000 /\n              10 ** (this.lodStop_ - this.lodStart_);\n          }\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTEDATE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = HFDTE_RECORD_RE.exec(line);\n          if (m) {\n            day = parseInt(m[1], 10);\n            month = parseInt(m[2], 10) - 1;\n            year = 2000 + parseInt(m[3], 10);\n          } else {\n            m = H_RECORD_RE.exec(line);\n            if (m) {\n              properties[m[1]] = m[2].trim();\n            }\n          }\n        }\n      } else if (line.charAt(0) == 'I') {\n        const numberAdds = parseInt(line.slice(1, 3), 10);\n        for (let i = 0; i < numberAdds; i++) {\n          const addCode = line.slice(7 + i * 7, 10 + i * 7);\n          if (addCode === 'LAD' || addCode === 'LOD') {\n            // in IGC format, columns are numbered from 1\n            const addStart = parseInt(line.slice(3 + i * 7, 5 + i * 7), 10) - 1;\n            const addStop = parseInt(line.slice(5 + i * 7, 7 + i * 7), 10);\n            if (addCode === 'LAD') {\n              this.lad_ = true;\n              this.ladStart_ = addStart;\n              this.ladStop_ = addStop;\n            } else if (addCode === 'LOD') {\n              this.lod_ = true;\n              this.lodStart_ = addStart;\n              this.lodStop_ = addStop;\n            }\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options),\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport ImageState from '../ImageState.js';\nimport {extend} from '../array.js';\nimport {asArray} from '../color.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_,\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source)),\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n)),\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this,\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames,\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i],\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection' || type.startsWith('Multi')) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this,\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                }),\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                }),\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName'],\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value'],\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value'],\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeStringTextNode(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this,\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  }),\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ],\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints(),\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings(),\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons(),\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack,\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack,\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport PBF from 'pbf';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport {get} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options],\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = values.flatCoordinates;\n        if (!flatCoordinates.length) {\n          for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n            const point = state.nodes[values.ndrefs[i]];\n            extend(flatCoordinates, point);\n          }\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      flatCoordinates: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack,\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n  if (node.hasAttribute('lon') && node.hasAttribute('lat')) {\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lon')));\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lat')));\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport XML from './XML.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    throw new Error('Expected `feature` to have a geometry');\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options,\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this,\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName'),\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal,\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.startsWith('en')) {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4],\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null && value !== undefined) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ',' + point[1]\n      : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1],\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const axisOrientation = containerSrs\n      ? getProjection(containerSrs).getAxisOrientation()\n      : 'enu';\n    if (axisOrientation === 'neu') {\n      for (let i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    const axisOrientation = containerSrs\n      ? getProjection(containerSrs).getAxisOrientation()\n      : 'enu';\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'),\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    const asXYZ = axisOrientation.startsWith('en');\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (asXYZ) {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    const point = value.getCoordinates();\n    // only 2d for simple features profile\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ' ' + point[1]\n      : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ' ' + point[1]\n      : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null && value !== undefined) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this,\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation,\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport {writeStringTextNode} from '../format/xsd.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @override\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context,\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {assert} from '../../asserts.js';\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 'At least 2 conditions are required');\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])',\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds',\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * @typedef {Object} TransactionSummary\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {TransactionSummary} transactionSummary Transaction summary.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_,\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n),\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'),\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_,\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      [],\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_,\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array',\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set',\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter,\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context],\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter,\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version],\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request,\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj,\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack,\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  const name = createElementNS(ns, tagName);\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack,\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack,\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {readHref} from './xlink.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/control/FullScreen\n */\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Control from './Control.js';\n\nconst events = ['fullscreenchange', 'webkitfullscreenchange'];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this),\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport {wrapX} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport Control from './Control.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this),\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this),\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection,\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection,\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, listenOnce} from '../events.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport Control from './Control.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = (mousePosition) => {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinate(\n        /** @type {MouseEvent} */ (position),\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = (event) => {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      const map = this.getMap();\n\n      map.getView().setCenterInternal(coordinates);\n\n      const ownerDocument = map.getOwnerDocument();\n      ownerDocument.removeEventListener('pointermove', move);\n      ownerDocument.removeEventListener('pointerup', endMoving);\n    };\n\n    /* Binding */\n\n    this.ovmapDiv_.addEventListener('pointerdown', (event) => {\n      const ownerDocument = this.getMap().getOwnerDocument();\n      if (event.target === overlayBox) {\n        ownerDocument.addEventListener('pointermove', move);\n      }\n      ownerDocument.addEventListener('pointerup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this,\n        ),\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n\n    if (view.isDef()) {\n      this.ovmap_.updateSize();\n      this.resetExtent_();\n    }\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent),\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent),\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenter();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      (event) => {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport Control from './Control.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount = 0;\n    let previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport Control from './Control.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false,\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false,\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2,\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this),\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","import {CollectionEvent as _ol_Collection$CollectionEvent} from '../../ol/Collection.js';\nimport $ol$Collection from '../../ol/Collection.js';\nimport {asImageLike as _ol_DataTile$asImageLike} from '../../ol/DataTile.js';\nimport {asArrayLike as _ol_DataTile$asArrayLike} from '../../ol/DataTile.js';\nimport {disposedError as _ol_DataTile$disposedError} from '../../ol/DataTile.js';\nimport {toArray as _ol_DataTile$toArray} from '../../ol/DataTile.js';\nimport $ol$DataTile from '../../ol/DataTile.js';\nimport $ol$Disposable from '../../ol/Disposable.js';\nimport $ol$Feature from '../../ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from '../../ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from '../../ol/Geolocation.js';\nimport $ol$Geolocation from '../../ol/Geolocation.js';\nimport $ol$Image from '../../ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from '../../ol/Image.js';\nimport {load as _ol_Image$load} from '../../ol/Image.js';\nimport {decodeFallback as _ol_Image$decodeFallback} from '../../ol/Image.js';\nimport {decode as _ol_Image$decode} from '../../ol/Image.js';\nimport $ol$ImageCanvas from '../../ol/ImageCanvas.js';\nimport $ol$ImageTile from '../../ol/ImageTile.js';\nimport $ol$Kinetic from '../../ol/Kinetic.js';\nimport $ol$Map from '../../ol/Map.js';\nimport $ol$MapBrowserEvent from '../../ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from '../../ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from '../../ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from '../../ol/Object.js';\nimport $ol$Object from '../../ol/Object.js';\nimport $ol$Observable from '../../ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from '../../ol/Observable.js';\nimport $ol$Overlay from '../../ol/Overlay.js';\nimport $ol$Tile from '../../ol/Tile.js';\nimport $ol$TileQueue from '../../ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from '../../ol/TileQueue.js';\nimport $ol$TileRange from '../../ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from '../../ol/TileRange.js';\nimport $ol$VectorRenderTile from '../../ol/VectorRenderTile.js';\nimport $ol$View from '../../ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from '../../ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from '../../ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from '../../ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from '../../ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from '../../ol/array.js';\nimport {ascending as _ol_array$ascending} from '../../ol/array.js';\nimport {descending as _ol_array$descending} from '../../ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from '../../ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from '../../ol/array.js';\nimport {extend as _ol_array$extend} from '../../ol/array.js';\nimport {remove as _ol_array$remove} from '../../ol/array.js';\nimport {equals as _ol_array$equals} from '../../ol/array.js';\nimport {stableSort as _ol_array$stableSort} from '../../ol/array.js';\nimport {isSorted as _ol_array$isSorted} from '../../ol/array.js';\nimport {assert as _ol_asserts$assert} from '../../ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from '../../ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from '../../ol/centerconstraint.js';\nimport {NO_COLOR as _ol_color$NO_COLOR} from '../../ol/color.js';\nimport {asString as _ol_color$asString} from '../../ol/color.js';\nimport {withAlpha as _ol_color$withAlpha} from '../../ol/color.js';\nimport {rgbaToLcha as _ol_color$rgbaToLcha} from '../../ol/color.js';\nimport {lchaToRgba as _ol_color$lchaToRgba} from '../../ol/color.js';\nimport {fromString as _ol_color$fromString} from '../../ol/color.js';\nimport {asArray as _ol_color$asArray} from '../../ol/color.js';\nimport {toString as _ol_color$toString} from '../../ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from '../../ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from '../../ol/colorlike.js';\nimport {setLevel as _ol_console$setLevel} from '../../ol/console.js';\nimport {log as _ol_console$log} from '../../ol/console.js';\nimport {warn as _ol_console$warn} from '../../ol/console.js';\nimport {error as _ol_console$error} from '../../ol/console.js';\nimport {add as _ol_coordinate$add} from '../../ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from '../../ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from '../../ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from '../../ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from '../../ol/coordinate.js';\nimport {format as _ol_coordinate$format} from '../../ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from '../../ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from '../../ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from '../../ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from '../../ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from '../../ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from '../../ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from '../../ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from '../../ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from '../../ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from '../../ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from '../../ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from '../../ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from '../../ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from '../../ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from '../../ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from '../../ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from '../../ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from '../../ol/dom.js';\nimport {getSharedCanvasContext2D as _ol_dom$getSharedCanvasContext2D} from '../../ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from '../../ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from '../../ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from '../../ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from '../../ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from '../../ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from '../../ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from '../../ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from '../../ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from '../../ol/easing.js';\nimport {linear as _ol_easing$linear} from '../../ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from '../../ol/easing.js';\nimport {listen as _ol_events$listen} from '../../ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from '../../ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from '../../ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from '../../ol/extent.js';\nimport {buffer as _ol_extent$buffer} from '../../ol/extent.js';\nimport {clone as _ol_extent$clone} from '../../ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from '../../ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from '../../ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from '../../ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from '../../ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from '../../ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from '../../ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from '../../ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from '../../ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from '../../ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from '../../ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from '../../ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from '../../ol/extent.js';\nimport {equals as _ol_extent$equals} from '../../ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from '../../ol/extent.js';\nimport {extend as _ol_extent$extend} from '../../ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from '../../ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from '../../ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from '../../ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from '../../ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from '../../ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from '../../ol/extent.js';\nimport {getArea as _ol_extent$getArea} from '../../ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from '../../ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from '../../ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from '../../ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from '../../ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from '../../ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from '../../ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from '../../ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from '../../ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from '../../ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from '../../ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from '../../ol/extent.js';\nimport {getSize as _ol_extent$getSize} from '../../ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from '../../ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from '../../ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from '../../ol/extent.js';\nimport {intersects as _ol_extent$intersects} from '../../ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from '../../ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from '../../ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from '../../ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from '../../ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from '../../ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from '../../ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from '../../ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from '../../ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from '../../ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from '../../ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from '../../ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from '../../ol/functions.js';\nimport {VOID as _ol_functions$VOID} from '../../ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from '../../ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from '../../ol/functions.js';\nimport {SAFARI as _ol_has$SAFARI} from '../../ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from '../../ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from '../../ol/has.js';\nimport {MAC as _ol_has$MAC} from '../../ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from '../../ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from '../../ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from '../../ol/has.js';\nimport {CREATE_IMAGE_BITMAP as _ol_has$CREATE_IMAGE_BITMAP} from '../../ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from '../../ol/has.js';\nimport {all as _ol_loadingstrategy$all} from '../../ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from '../../ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from '../../ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from '../../ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from '../../ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from '../../ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from '../../ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from '../../ol/math.js';\nimport {toRadians as _ol_math$toRadians} from '../../ol/math.js';\nimport {modulo as _ol_math$modulo} from '../../ol/math.js';\nimport {lerp as _ol_math$lerp} from '../../ol/math.js';\nimport {toFixed as _ol_math$toFixed} from '../../ol/math.js';\nimport {round as _ol_math$round} from '../../ol/math.js';\nimport {floor as _ol_math$floor} from '../../ol/math.js';\nimport {ceil as _ol_math$ceil} from '../../ol/math.js';\nimport {wrap as _ol_math$wrap} from '../../ol/math.js';\nimport {jsonp as _ol_net$jsonp} from '../../ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from '../../ol/net.js';\nimport {ClientError as _ol_net$ClientError} from '../../ol/net.js';\nimport {getJSON as _ol_net$getJSON} from '../../ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from '../../ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from '../../ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from '../../ol/net.js';\nimport {clear as _ol_obj$clear} from '../../ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from '../../ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from '../../ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from '../../ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from '../../ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from '../../ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from '../../ol/proj.js';\nimport {get as _ol_proj$get} from '../../ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from '../../ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from '../../ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from '../../ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from '../../ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from '../../ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from '../../ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from '../../ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from '../../ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from '../../ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from '../../ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from '../../ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from '../../ol/proj.js';\nimport {transform as _ol_proj$transform} from '../../ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from '../../ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from '../../ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from '../../ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from '../../ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from '../../ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from '../../ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from '../../ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from '../../ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from '../../ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from '../../ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from '../../ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from '../../ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from '../../ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from '../../ol/proj.js';\nimport {toContext as _ol_render$toContext} from '../../ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from '../../ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from '../../ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from '../../ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from '../../ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from '../../ol/reproj.js';\nimport {render as _ol_reproj$render} from '../../ol/reproj.js';\nimport {fromResolutionLike as _ol_resolution$fromResolutionLike} from '../../ol/resolution.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from '../../ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from '../../ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from '../../ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from '../../ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from '../../ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from '../../ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from '../../ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from '../../ol/size.js';\nimport {hasArea as _ol_size$hasArea} from '../../ol/size.js';\nimport {scale as _ol_size$scale} from '../../ol/size.js';\nimport {toSize as _ol_size$toSize} from '../../ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from '../../ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from '../../ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from '../../ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from '../../ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from '../../ol/sphere.js';\nimport {offset as _ol_sphere$offset} from '../../ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from '../../ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from '../../ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from '../../ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from '../../ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from '../../ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from '../../ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from '../../ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from '../../ol/tilecoord.js';\nimport {hashZXY as _ol_tilecoord$hashZXY} from '../../ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from '../../ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from '../../ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from '../../ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from '../../ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from '../../ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from '../../ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from '../../ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from '../../ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from '../../ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from '../../ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from '../../ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from '../../ol/transform.js';\nimport {reset as _ol_transform$reset} from '../../ol/transform.js';\nimport {multiply as _ol_transform$multiply} from '../../ol/transform.js';\nimport {set as _ol_transform$set} from '../../ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from '../../ol/transform.js';\nimport {apply as _ol_transform$apply} from '../../ol/transform.js';\nimport {rotate as _ol_transform$rotate} from '../../ol/transform.js';\nimport {scale as _ol_transform$scale} from '../../ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from '../../ol/transform.js';\nimport {translate as _ol_transform$translate} from '../../ol/transform.js';\nimport {compose as _ol_transform$compose} from '../../ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from '../../ol/transform.js';\nimport {invert as _ol_transform$invert} from '../../ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from '../../ol/transform.js';\nimport {determinant as _ol_transform$determinant} from '../../ol/transform.js';\nimport {toString as _ol_transform$toString} from '../../ol/transform.js';\nimport {equivalent as _ol_transform$equivalent} from '../../ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from '../../ol/uri.js';\nimport {renderXYZTemplate as _ol_uri$renderXYZTemplate} from '../../ol/uri.js';\nimport {pickUrl as _ol_uri$pickUrl} from '../../ol/uri.js';\nimport {expandUrl as _ol_uri$expandUrl} from '../../ol/uri.js';\nimport {abstract as _ol_util$abstract} from '../../ol/util.js';\nimport {getUid as _ol_util$getUid} from '../../ol/util.js';\nimport {VERSION as _ol_util$VERSION} from '../../ol/util.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from '../../ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from '../../ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from '../../ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from '../../ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from '../../ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from '../../ol/xml.js';\nimport {parse as _ol_xml$parse} from '../../ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from '../../ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from '../../ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from '../../ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from '../../ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from '../../ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from '../../ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from '../../ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from '../../ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from '../../ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from '../../ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from '../../ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from '../../ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from '../../ol/xml.js';\nimport {serialize as _ol_xml$serialize} from '../../ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from '../../ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from '../../ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from '../../ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from '../../ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from '../../ol/xml.js';\nimport {create as _ol_vec_mat4$create} from '../../ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from '../../ol/vec/mat4.js';\nimport {orthographic as _ol_vec_mat4$orthographic} from '../../ol/vec/mat4.js';\nimport {scale as _ol_vec_mat4$scale} from '../../ol/vec/mat4.js';\nimport {translate as _ol_vec_mat4$translate} from '../../ol/vec/mat4.js';\nimport {translation as _ol_vec_mat4$translation} from '../../ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from '../../ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from '../../ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from '../../ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from '../../ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from '../../ol/tilegrid/common.js';\nimport $ol$style$Circle from '../../ol/style/Circle.js';\nimport $ol$style$Fill from '../../ol/style/Fill.js';\nimport $ol$style$Icon from '../../ol/style/Icon.js';\nimport $ol$style$IconImage from '../../ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from '../../ol/style/IconImage.js';\nimport $ol$style$IconImageCache from '../../ol/style/IconImageCache.js';\nimport {getCacheKey as _ol_style_IconImageCache$getCacheKey} from '../../ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from '../../ol/style/IconImageCache.js';\nimport $ol$style$Image from '../../ol/style/Image.js';\nimport $ol$style$RegularShape from '../../ol/style/RegularShape.js';\nimport $ol$style$Stroke from '../../ol/style/Stroke.js';\nimport $ol$style$Style from '../../ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from '../../ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from '../../ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from '../../ol/style/Style.js';\nimport $ol$style$Text from '../../ol/style/Text.js';\nimport {createDefaultStyle as _ol_style_flat$createDefaultStyle} from '../../ol/style/flat.js';\nimport $ol$structs$LRUCache from '../../ol/structs/LRUCache.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from '../../ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from '../../ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from '../../ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from '../../ol/source/BingMaps.js';\nimport $ol$source$BingMaps from '../../ol/source/BingMaps.js';\nimport $ol$source$Cluster from '../../ol/source/Cluster.js';\nimport $ol$source$DataTile from '../../ol/source/DataTile.js';\nimport $ol$source$Google from '../../ol/source/Google.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from '../../ol/source/Image.js';\nimport $ol$source$Image from '../../ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from '../../ol/source/Image.js';\nimport {getRequestExtent as _ol_source_Image$getRequestExtent} from '../../ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from '../../ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from '../../ol/source/ImageCanvas.js';\nimport $ol$source$ImageStatic from '../../ol/source/ImageStatic.js';\nimport $ol$source$ImageTile from '../../ol/source/ImageTile.js';\nimport $ol$source$ImageWMS from '../../ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from '../../ol/source/OGCMapTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from '../../ol/source/OSM.js';\nimport $ol$source$OSM from '../../ol/source/OSM.js';\nimport {Processor as _ol_source_Raster$Processor} from '../../ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from '../../ol/source/Raster.js';\nimport $ol$source$Raster from '../../ol/source/Raster.js';\nimport $ol$source$Source from '../../ol/source/Source.js';\nimport $ol$source$StadiaMaps from '../../ol/source/StadiaMaps.js';\nimport $ol$source$Tile from '../../ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from '../../ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from '../../ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from '../../ol/source/TileDebug.js';\nimport $ol$source$TileImage from '../../ol/source/TileImage.js';\nimport $ol$source$TileJSON from '../../ol/source/TileJSON.js';\nimport $ol$source$TileWMS from '../../ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from '../../ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from '../../ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from '../../ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from '../../ol/source/Vector.js';\nimport $ol$source$Vector from '../../ol/source/Vector.js';\nimport $ol$source$WMTS from '../../ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from '../../ol/source/WMTS.js';\nimport $ol$source$XYZ from '../../ol/source/XYZ.js';\nimport {getRequestUrl as _ol_source_arcgisRest$getRequestUrl} from '../../ol/source/arcgisRest.js';\nimport {createLoader as _ol_source_arcgisRest$createLoader} from '../../ol/source/arcgisRest.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from '../../ol/source/common.js';\nimport {DECIMALS as _ol_source_common$DECIMALS} from '../../ol/source/common.js';\nimport {createLoader as _ol_source_mapserver$createLoader} from '../../ol/source/mapserver.js';\nimport {appendCollectionsQueryParam as _ol_source_ogcTileUtil$appendCollectionsQueryParam} from '../../ol/source/ogcTileUtil.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from '../../ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from '../../ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from '../../ol/source/ogcTileUtil.js';\nimport {createLoader as _ol_source_static$createLoader} from '../../ol/source/static.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from '../../ol/source/wms.js';\nimport {getRequestUrl as _ol_source_wms$getRequestUrl} from '../../ol/source/wms.js';\nimport {getImageSrc as _ol_source_wms$getImageSrc} from '../../ol/source/wms.js';\nimport {getRequestParams as _ol_source_wms$getRequestParams} from '../../ol/source/wms.js';\nimport {createLoader as _ol_source_wms$createLoader} from '../../ol/source/wms.js';\nimport {getFeatureInfoUrl as _ol_source_wms$getFeatureInfoUrl} from '../../ol/source/wms.js';\nimport {getLegendUrl as _ol_source_wms$getLegendUrl} from '../../ol/source/wms.js';\nimport $ol$reproj$DataTile from '../../ol/reproj/DataTile.js';\nimport $ol$reproj$Image from '../../ol/reproj/Image.js';\nimport $ol$reproj$Tile from '../../ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from '../../ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from '../../ol/reproj/common.js';\nimport {createCanvasContextWebGL as _ol_reproj_glreproj$createCanvasContextWebGL} from '../../ol/reproj/glreproj.js';\nimport {releaseGLCanvas as _ol_reproj_glreproj$releaseGLCanvas} from '../../ol/reproj/glreproj.js';\nimport {canvasGLPool as _ol_reproj_glreproj$canvasGLPool} from '../../ol/reproj/glreproj.js';\nimport {render as _ol_reproj_glreproj$render} from '../../ol/reproj/glreproj.js';\nimport $ol$renderer$Composite from '../../ol/renderer/Composite.js';\nimport $ol$renderer$Layer from '../../ol/renderer/Layer.js';\nimport $ol$renderer$Map from '../../ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from '../../ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from '../../ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from '../../ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from '../../ol/renderer/vector.js';\nimport $ol$renderer$canvas$ImageLayer from '../../ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from '../../ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from '../../ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from '../../ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from '../../ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from '../../ol/renderer/canvas/VectorLayer.js';\nimport $ol$render$Box from '../../ol/render/Box.js';\nimport $ol$render$Event from '../../ol/render/Event.js';\nimport $ol$render$Feature from '../../ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from '../../ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from '../../ol/render/Feature.js';\nimport $ol$render$VectorContext from '../../ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from '../../ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from '../../ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from '../../ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from '../../ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from '../../ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from '../../ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from '../../ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from '../../ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from '../../ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from '../../ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from '../../ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from '../../ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from '../../ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from '../../ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from '../../ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from '../../ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from '../../ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from '../../ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from '../../ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from '../../ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from '../../ol/render/canvas.js';\nimport $ol$render$canvas$Builder from '../../ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from '../../ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from '../../ol/render/canvas/Executor.js';\nimport {ALL as _ol_render_canvas_ExecutorGroup$ALL} from '../../ol/render/canvas/ExecutorGroup.js';\nimport {DECLUTTER as _ol_render_canvas_ExecutorGroup$DECLUTTER} from '../../ol/render/canvas/ExecutorGroup.js';\nimport {NON_DECLUTTER as _ol_render_canvas_ExecutorGroup$NON_DECLUTTER} from '../../ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ExecutorGroup from '../../ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from '../../ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from '../../ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from '../../ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from '../../ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from '../../ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from '../../ol/render/canvas/PolygonBuilder.js';\nimport {TEXT_ALIGN as _ol_render_canvas_TextBuilder$TEXT_ALIGN} from '../../ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$TextBuilder from '../../ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$ZIndexContext from '../../ol/render/canvas/ZIndexContext.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from '../../ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from '../../ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from '../../ol/render/canvas/hitdetect.js';\nimport {rulesToStyleFunction as _ol_render_canvas_style$rulesToStyleFunction} from '../../ol/render/canvas/style.js';\nimport {flatStylesToStyleFunction as _ol_render_canvas_style$flatStylesToStyleFunction} from '../../ol/render/canvas/style.js';\nimport {buildRuleSet as _ol_render_canvas_style$buildRuleSet} from '../../ol/render/canvas/style.js';\nimport {buildStyle as _ol_render_canvas_style$buildStyle} from '../../ol/render/canvas/style.js';\nimport $ol$proj$Projection from '../../ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from '../../ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from '../../ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from '../../ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from '../../ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from '../../ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from '../../ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from '../../ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from '../../ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from '../../ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from '../../ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from '../../ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from '../../ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from '../../ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from '../../ol/proj/epsg4326.js';\nimport {isRegistered as _ol_proj_proj4$isRegistered} from '../../ol/proj/proj4.js';\nimport {unregister as _ol_proj_proj4$unregister} from '../../ol/proj/proj4.js';\nimport {register as _ol_proj_proj4$register} from '../../ol/proj/proj4.js';\nimport {setEPSGLookup as _ol_proj_proj4$setEPSGLookup} from '../../ol/proj/proj4.js';\nimport {getEPSGLookup as _ol_proj_proj4$getEPSGLookup} from '../../ol/proj/proj4.js';\nimport {fromEPSGCode as _ol_proj_proj4$fromEPSGCode} from '../../ol/proj/proj4.js';\nimport {epsgLookupMapTiler as _ol_proj_proj4$epsgLookupMapTiler} from '../../ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from '../../ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from '../../ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from '../../ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from '../../ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from '../../ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from '../../ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from '../../ol/proj/transforms.js';\nimport {zoneFromCode as _ol_proj_utm$zoneFromCode} from '../../ol/proj/utm.js';\nimport {makeProjection as _ol_proj_utm$makeProjection} from '../../ol/proj/utm.js';\nimport {makeTransforms as _ol_proj_utm$makeTransforms} from '../../ol/proj/utm.js';\nimport $ol$layer$Base from '../../ol/layer/Base.js';\nimport $ol$layer$BaseImage from '../../ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from '../../ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from '../../ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from '../../ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from '../../ol/layer/Group.js';\nimport $ol$layer$Group from '../../ol/layer/Group.js';\nimport $ol$layer$Heatmap from '../../ol/layer/Heatmap.js';\nimport $ol$layer$Image from '../../ol/layer/Image.js';\nimport $ol$layer$Layer from '../../ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from '../../ol/layer/Layer.js';\nimport $ol$layer$Tile from '../../ol/layer/Tile.js';\nimport $ol$layer$Vector from '../../ol/layer/Vector.js';\nimport $ol$layer$VectorImage from '../../ol/layer/VectorImage.js';\nimport $ol$interaction$DblClickDragZoom from '../../ol/interaction/DblClickDragZoom.js';\nimport $ol$interaction$DoubleClickZoom from '../../ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from '../../ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from '../../ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from '../../ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from '../../ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from '../../ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from '../../ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from '../../ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from '../../ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from '../../ol/interaction/Draw.js';\nimport $ol$interaction$Draw from '../../ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from '../../ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from '../../ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from '../../ol/interaction/Extent.js';\nimport $ol$interaction$Extent from '../../ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from '../../ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from '../../ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from '../../ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from '../../ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from '../../ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from '../../ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from '../../ol/interaction/Modify.js';\nimport $ol$interaction$Modify from '../../ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from '../../ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from '../../ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from '../../ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from '../../ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from '../../ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from '../../ol/interaction/Select.js';\nimport $ol$interaction$Select from '../../ol/interaction/Select.js';\nimport $ol$interaction$Snap from '../../ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from '../../ol/interaction/Translate.js';\nimport $ol$interaction$Translate from '../../ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from '../../ol/interaction/defaults.js';\nimport $ol$geom$Circle from '../../ol/geom/Circle.js';\nimport $ol$geom$Geometry from '../../ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from '../../ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from '../../ol/geom/LineString.js';\nimport $ol$geom$LinearRing from '../../ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from '../../ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from '../../ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from '../../ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from '../../ol/geom/Point.js';\nimport $ol$geom$Polygon from '../../ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from '../../ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from '../../ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from '../../ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from '../../ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from '../../ol/geom/SimpleGeometry.js';\nimport {getLayoutForStride as _ol_geom_SimpleGeometry$getLayoutForStride} from '../../ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from '../../ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from '../../ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from '../../ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from '../../ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from '../../ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from '../../ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from '../../ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from '../../ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from '../../ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from '../../ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from '../../ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from '../../ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from '../../ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from '../../ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from '../../ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from '../../ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from '../../ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from '../../ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from '../../ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from '../../ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from '../../ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from '../../ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from '../../ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from '../../ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from '../../ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from '../../ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from '../../ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from '../../ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from '../../ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from '../../ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from '../../ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from '../../ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from '../../ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from '../../ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from '../../ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from '../../ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from '../../ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from '../../ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from '../../ol/geom/flat/segments.js';\nimport {getIntersectionPoint as _ol_geom_flat_segments$getIntersectionPoint} from '../../ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from '../../ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from '../../ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from '../../ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from '../../ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from '../../ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from '../../ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from '../../ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from '../../ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from '../../ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from '../../ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from '../../ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from '../../ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from '../../ol/geom/flat/transform.js';\nimport $ol$format$Feature from '../../ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from '../../ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from '../../ol/format/Feature.js';\nimport {createRenderFeature as _ol_format_Feature$createRenderFeature} from '../../ol/format/Feature.js';\nimport {createGeometry as _ol_format_Feature$createGeometry} from '../../ol/format/Feature.js';\nimport $ol$format$GPX from '../../ol/format/GPX.js';\nimport $ol$format$GeoJSON from '../../ol/format/GeoJSON.js';\nimport $ol$format$IGC from '../../ol/format/IGC.js';\nimport $ol$format$JSONFeature from '../../ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from '../../ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from '../../ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from '../../ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from '../../ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from '../../ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from '../../ol/format/KML.js';\nimport $ol$format$KML from '../../ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from '../../ol/format/KML.js';\nimport $ol$format$MVT from '../../ol/format/MVT.js';\nimport $ol$format$OSMXML from '../../ol/format/OSMXML.js';\nimport $ol$format$OWS from '../../ol/format/OWS.js';\nimport $ol$format$Polyline from '../../ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from '../../ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from '../../ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from '../../ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from '../../ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from '../../ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from '../../ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from '../../ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from '../../ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from '../../ol/format/Polyline.js';\nimport $ol$format$TextFeature from '../../ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from '../../ol/format/TopoJSON.js';\nimport $ol$format$WFS from '../../ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from '../../ol/format/WFS.js';\nimport $ol$format$WMSGetFeatureInfo from '../../ol/format/WMSGetFeatureInfo.js';\nimport $ol$format$WMTSCapabilities from '../../ol/format/WMTSCapabilities.js';\nimport {readHref as _ol_format_xlink$readHref} from '../../ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from '../../ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from '../../ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from '../../ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from '../../ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from '../../ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from '../../ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from '../../ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from '../../ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from '../../ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from '../../ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from '../../ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from '../../ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from '../../ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from '../../ol/format/xsd.js';\nimport {newEvaluationContext as _ol_expr_cpu$newEvaluationContext} from '../../ol/expr/cpu.js';\nimport {buildExpression as _ol_expr_cpu$buildExpression} from '../../ol/expr/cpu.js';\nimport {NoneType as _ol_expr_expression$NoneType} from '../../ol/expr/expression.js';\nimport {BooleanType as _ol_expr_expression$BooleanType} from '../../ol/expr/expression.js';\nimport {NumberType as _ol_expr_expression$NumberType} from '../../ol/expr/expression.js';\nimport {StringType as _ol_expr_expression$StringType} from '../../ol/expr/expression.js';\nimport {ColorType as _ol_expr_expression$ColorType} from '../../ol/expr/expression.js';\nimport {NumberArrayType as _ol_expr_expression$NumberArrayType} from '../../ol/expr/expression.js';\nimport {SizeType as _ol_expr_expression$SizeType} from '../../ol/expr/expression.js';\nimport {AnyType as _ol_expr_expression$AnyType} from '../../ol/expr/expression.js';\nimport {typeName as _ol_expr_expression$typeName} from '../../ol/expr/expression.js';\nimport {includesType as _ol_expr_expression$includesType} from '../../ol/expr/expression.js';\nimport {overlapsType as _ol_expr_expression$overlapsType} from '../../ol/expr/expression.js';\nimport {isType as _ol_expr_expression$isType} from '../../ol/expr/expression.js';\nimport {LiteralExpression as _ol_expr_expression$LiteralExpression} from '../../ol/expr/expression.js';\nimport {CallExpression as _ol_expr_expression$CallExpression} from '../../ol/expr/expression.js';\nimport {newParsingContext as _ol_expr_expression$newParsingContext} from '../../ol/expr/expression.js';\nimport {parse as _ol_expr_expression$parse} from '../../ol/expr/expression.js';\nimport {Ops as _ol_expr_expression$Ops} from '../../ol/expr/expression.js';\nimport {computeGeometryType as _ol_expr_expression$computeGeometryType} from '../../ol/expr/expression.js';\nimport {numberToGlsl as _ol_expr_gpu$numberToGlsl} from '../../ol/expr/gpu.js';\nimport {arrayToGlsl as _ol_expr_gpu$arrayToGlsl} from '../../ol/expr/gpu.js';\nimport {colorToGlsl as _ol_expr_gpu$colorToGlsl} from '../../ol/expr/gpu.js';\nimport {sizeToGlsl as _ol_expr_gpu$sizeToGlsl} from '../../ol/expr/gpu.js';\nimport {getStringNumberEquivalent as _ol_expr_gpu$getStringNumberEquivalent} from '../../ol/expr/gpu.js';\nimport {stringToGlsl as _ol_expr_gpu$stringToGlsl} from '../../ol/expr/gpu.js';\nimport {uniformNameForVariable as _ol_expr_gpu$uniformNameForVariable} from '../../ol/expr/gpu.js';\nimport {newCompilationContext as _ol_expr_gpu$newCompilationContext} from '../../ol/expr/gpu.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_expr_gpu$PALETTE_TEXTURE_ARRAY} from '../../ol/expr/gpu.js';\nimport {FEATURE_ID_PROPERTY_NAME as _ol_expr_gpu$FEATURE_ID_PROPERTY_NAME} from '../../ol/expr/gpu.js';\nimport {GEOMETRY_TYPE_PROPERTY_NAME as _ol_expr_gpu$GEOMETRY_TYPE_PROPERTY_NAME} from '../../ol/expr/gpu.js';\nimport {UNDEFINED_PROP_VALUE as _ol_expr_gpu$UNDEFINED_PROP_VALUE} from '../../ol/expr/gpu.js';\nimport {buildExpression as _ol_expr_gpu$buildExpression} from '../../ol/expr/gpu.js';\nimport $ol$events$Event from '../../ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from '../../ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from '../../ol/events/Event.js';\nimport {SnapEvent as _ol_events_SnapEvent$SnapEvent} from '../../ol/events/SnapEvent.js';\nimport $ol$events$Target from '../../ol/events/Target.js';\nimport {all as _ol_events_condition$all} from '../../ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from '../../ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from '../../ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from '../../ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from '../../ol/events/condition.js';\nimport {always as _ol_events_condition$always} from '../../ol/events/condition.js';\nimport {click as _ol_events_condition$click} from '../../ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from '../../ol/events/condition.js';\nimport {never as _ol_events_condition$never} from '../../ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from '../../ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from '../../ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from '../../ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from '../../ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from '../../ol/events/condition.js';\nimport {platformModifierKey as _ol_events_condition$platformModifierKey} from '../../ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from '../../ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from '../../ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from '../../ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from '../../ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from '../../ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from '../../ol/events/condition.js';\nimport $ol$control$Attribution from '../../ol/control/Attribution.js';\nimport $ol$control$Control from '../../ol/control/Control.js';\nimport $ol$control$FullScreen from '../../ol/control/FullScreen.js';\nimport $ol$control$MousePosition from '../../ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from '../../ol/control/OverviewMap.js';\nimport $ol$control$Rotate from '../../ol/control/Rotate.js';\nimport $ol$control$ScaleLine from '../../ol/control/ScaleLine.js';\nimport $ol$control$Zoom from '../../ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from '../../ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from '../../ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from '../../ol/control/defaults.js';\n\nvar ol = {};\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.DataTile.asArrayLike = _ol_DataTile$asArrayLike;\nol.DataTile.asImageLike = _ol_DataTile$asImageLike;\nol.DataTile.disposedError = _ol_DataTile$disposedError;\nol.DataTile.toArray = _ol_DataTile$toArray;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.Image.decode = _ol_Image$decode;\nol.Image.decodeFallback = _ol_Image$decodeFallback;\nol.Image.listenImage = _ol_Image$listenImage;\nol.Image.load = _ol_Image$load;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.ascending = _ol_array$ascending;\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.descending = _ol_array$descending;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.NO_COLOR = _ol_color$NO_COLOR;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.lchaToRgba = _ol_color$lchaToRgba;\nol.color.rgbaToLcha = _ol_color$rgbaToLcha;\nol.color.toString = _ol_color$toString;\nol.color.withAlpha = _ol_color$withAlpha;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.console = {};\nol.console.error = _ol_console$error;\nol.console.log = _ol_console$log;\nol.console.setLevel = _ol_console$setLevel;\nol.console.warn = _ol_console$warn;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.getSharedCanvasContext2D = _ol_dom$getSharedCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.SnapEvent = {};\nol.events.SnapEvent.SnapEvent = _ol_events_SnapEvent$SnapEvent;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKey = _ol_events_condition$platformModifierKey;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.expr = {};\nol.expr.cpu = {};\nol.expr.cpu.buildExpression = _ol_expr_cpu$buildExpression;\nol.expr.cpu.newEvaluationContext = _ol_expr_cpu$newEvaluationContext;\nol.expr.expression = {};\nol.expr.expression.AnyType = _ol_expr_expression$AnyType;\nol.expr.expression.BooleanType = _ol_expr_expression$BooleanType;\nol.expr.expression.CallExpression = _ol_expr_expression$CallExpression;\nol.expr.expression.ColorType = _ol_expr_expression$ColorType;\nol.expr.expression.LiteralExpression = _ol_expr_expression$LiteralExpression;\nol.expr.expression.NoneType = _ol_expr_expression$NoneType;\nol.expr.expression.NumberArrayType = _ol_expr_expression$NumberArrayType;\nol.expr.expression.NumberType = _ol_expr_expression$NumberType;\nol.expr.expression.Ops = _ol_expr_expression$Ops;\nol.expr.expression.SizeType = _ol_expr_expression$SizeType;\nol.expr.expression.StringType = _ol_expr_expression$StringType;\nol.expr.expression.computeGeometryType = _ol_expr_expression$computeGeometryType;\nol.expr.expression.includesType = _ol_expr_expression$includesType;\nol.expr.expression.isType = _ol_expr_expression$isType;\nol.expr.expression.newParsingContext = _ol_expr_expression$newParsingContext;\nol.expr.expression.overlapsType = _ol_expr_expression$overlapsType;\nol.expr.expression.parse = _ol_expr_expression$parse;\nol.expr.expression.typeName = _ol_expr_expression$typeName;\nol.expr.gpu = {};\nol.expr.gpu.FEATURE_ID_PROPERTY_NAME = _ol_expr_gpu$FEATURE_ID_PROPERTY_NAME;\nol.expr.gpu.GEOMETRY_TYPE_PROPERTY_NAME = _ol_expr_gpu$GEOMETRY_TYPE_PROPERTY_NAME;\nol.expr.gpu.PALETTE_TEXTURE_ARRAY = _ol_expr_gpu$PALETTE_TEXTURE_ARRAY;\nol.expr.gpu.UNDEFINED_PROP_VALUE = _ol_expr_gpu$UNDEFINED_PROP_VALUE;\nol.expr.gpu.arrayToGlsl = _ol_expr_gpu$arrayToGlsl;\nol.expr.gpu.buildExpression = _ol_expr_gpu$buildExpression;\nol.expr.gpu.colorToGlsl = _ol_expr_gpu$colorToGlsl;\nol.expr.gpu.getStringNumberEquivalent = _ol_expr_gpu$getStringNumberEquivalent;\nol.expr.gpu.newCompilationContext = _ol_expr_gpu$newCompilationContext;\nol.expr.gpu.numberToGlsl = _ol_expr_gpu$numberToGlsl;\nol.expr.gpu.sizeToGlsl = _ol_expr_gpu$sizeToGlsl;\nol.expr.gpu.stringToGlsl = _ol_expr_gpu$stringToGlsl;\nol.expr.gpu.uniformNameForVariable = _ol_expr_gpu$uniformNameForVariable;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.createGeometry = _ol_format_Feature$createGeometry;\nol.format.Feature.createRenderFeature = _ol_format_Feature$createRenderFeature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getLayoutForStride = _ol_geom_SimpleGeometry$getLayoutForStride;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.segments.getIntersectionPoint = _ol_geom_flat_segments$getIntersectionPoint;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.CREATE_IMAGE_BITMAP = _ol_has$CREATE_IMAGE_BITMAP;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DblClickDragZoom = $ol$interaction$DblClickDragZoom;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.math.wrap = _ol_math$wrap;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.epsgLookupMapTiler = _ol_proj_proj4$epsgLookupMapTiler;\nol.proj.proj4.fromEPSGCode = _ol_proj_proj4$fromEPSGCode;\nol.proj.proj4.getEPSGLookup = _ol_proj_proj4$getEPSGLookup;\nol.proj.proj4.isRegistered = _ol_proj_proj4$isRegistered;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.proj4.setEPSGLookup = _ol_proj_proj4$setEPSGLookup;\nol.proj.proj4.unregister = _ol_proj_proj4$unregister;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.proj.utm = {};\nol.proj.utm.makeProjection = _ol_proj_utm$makeProjection;\nol.proj.utm.makeTransforms = _ol_proj_utm$makeTransforms;\nol.proj.utm.zoneFromCode = _ol_proj_utm$zoneFromCode;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.ALL = _ol_render_canvas_ExecutorGroup$ALL;\nol.render.canvas.ExecutorGroup.DECLUTTER = _ol_render_canvas_ExecutorGroup$DECLUTTER;\nol.render.canvas.ExecutorGroup.NON_DECLUTTER = _ol_render_canvas_ExecutorGroup$NON_DECLUTTER;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.TextBuilder.TEXT_ALIGN = _ol_render_canvas_TextBuilder$TEXT_ALIGN;\nol.render.canvas.ZIndexContext = $ol$render$canvas$ZIndexContext;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.style = {};\nol.render.canvas.style.buildRuleSet = _ol_render_canvas_style$buildRuleSet;\nol.render.canvas.style.buildStyle = _ol_render_canvas_style$buildStyle;\nol.render.canvas.style.flatStylesToStyleFunction = _ol_render_canvas_style$flatStylesToStyleFunction;\nol.render.canvas.style.rulesToStyleFunction = _ol_render_canvas_style$rulesToStyleFunction;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.glreproj = {};\nol.reproj.glreproj.canvasGLPool = _ol_reproj_glreproj$canvasGLPool;\nol.reproj.glreproj.createCanvasContextWebGL = _ol_reproj_glreproj$createCanvasContextWebGL;\nol.reproj.glreproj.releaseGLCanvas = _ol_reproj_glreproj$releaseGLCanvas;\nol.reproj.glreproj.render = _ol_reproj_glreproj$render;\nol.reproj.render = _ol_reproj$render;\nol.resolution = {};\nol.resolution.fromResolutionLike = _ol_resolution$fromResolutionLike;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.Google = $ol$source$Google;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.Image.getRequestExtent = _ol_source_Image$getRequestExtent;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageTile = $ol$source$ImageTile;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Source = $ol$source$Source;\nol.source.StadiaMaps = $ol$source$StadiaMaps;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.arcgisRest = {};\nol.source.arcgisRest.createLoader = _ol_source_arcgisRest$createLoader;\nol.source.arcgisRest.getRequestUrl = _ol_source_arcgisRest$getRequestUrl;\nol.source.common = {};\nol.source.common.DECIMALS = _ol_source_common$DECIMALS;\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.mapserver = {};\nol.source.mapserver.createLoader = _ol_source_mapserver$createLoader;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.appendCollectionsQueryParam = _ol_source_ogcTileUtil$appendCollectionsQueryParam;\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.static = {};\nol.source.static.createLoader = _ol_source_static$createLoader;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.source.wms.createLoader = _ol_source_wms$createLoader;\nol.source.wms.getFeatureInfoUrl = _ol_source_wms$getFeatureInfoUrl;\nol.source.wms.getImageSrc = _ol_source_wms$getImageSrc;\nol.source.wms.getLegendUrl = _ol_source_wms$getLegendUrl;\nol.source.wms.getRequestParams = _ol_source_wms$getRequestParams;\nol.source.wms.getRequestUrl = _ol_source_wms$getRequestUrl;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.getCacheKey = _ol_style_IconImageCache$getCacheKey;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.flat = {};\nol.style.flat.createDefaultStyle = _ol_style_flat$createDefaultStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.hashZXY = _ol_tilecoord$hashZXY;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.equivalent = _ol_transform$equivalent;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.uri.expandUrl = _ol_uri$expandUrl;\nol.uri.pickUrl = _ol_uri$pickUrl;\nol.uri.renderXYZTemplate = _ol_uri$renderXYZTemplate;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.vec.mat4.orthographic = _ol_vec_mat4$orthographic;\nol.vec.mat4.scale = _ol_vec_mat4$scale;\nol.vec.mat4.translate = _ol_vec_mat4$translate;\nol.vec.mat4.translation = _ol_vec_mat4$translation;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nol.VERSION = ol.util.VERSION;\n\nol.getUid = ol.util.getUid;\n\nexport default ol;","/**\n * @module ol/control/ZoomToExtent\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport EventType from '../events/EventType.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {fromUserExtent} from '../proj.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label,\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : fromUserExtent(this.extent, view.getProjection());\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase,\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase,\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_,\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers,\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_,\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_,\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent.originalEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default<PointerEvent>} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/layer/VectorImage\n */\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text on this layer. Any truthy value will enable\n * decluttering. The priority is defined by the `zIndex` of the style and the render order of features. Higher z-index means higher\n * priority. Within the same z-index, a feature rendered before another has higher priority. Items will\n * not be decluttered against or together with items on other layers with the same `declutter` value. If\n * that is needed, use {@link import(\"../layer/Vector.js\").default} instead.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/source/Cluster\n */\n\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport {getUid} from '../util.js';\nimport VectorSource from './Vector.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").FeatureLike]\n * @typedef {(feature: FeatureType) => (Point|null)} GeometryFunction\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {GeometryFunction<FeatureType>} [geometryFunction]\n * Function that takes a {@link module:ol/Feature~Feature} as argument and returns a\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<FeatureType>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource<FeatureType>} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import('../Feature.js').default]\n * @extends {VectorSource<Feature<import(\"../geom/Geometry.js\").default>>}\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options<FeatureType>} [options] Cluster options.\n   */\n  constructor(options) {\n    options = options || {};\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @type {GeometryFunction<import(\"../Feature.js\").FeatureLike>}\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries',\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<FeatureType>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource<FeatureType>|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   * @override\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource<FeatureType>|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @override\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source?.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource<FeatureType>|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   * @override\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<FeatureType>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/source/Google\n */\n\nimport ViewHint from '../ViewHint.js';\nimport {getBottomLeft, getTopRight} from '../extent.js';\nimport {toLonLat} from '../proj.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\nconst createSessionUrl = 'https://tile.googleapis.com/v1/createSession';\nconst tileUrl = 'https://tile.googleapis.com/v1/2dtiles';\nconst attributionUrl = 'https://tile.googleapis.com/tile/v1/viewport';\nconst maxZoom = 22;\n\n/**\n * @typedef {Object} Options\n * @property {string} key Google Map Tiles API key. Get yours at https://developers.google.com/maps/documentation/tile/get-api-key.\n * @property {string} [mapType='roadmap'] The type of [base map](https://developers.google.com/maps/documentation/tile/session_tokens#required_fields).\n * @property {string} [language='en-US'] An [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) for information displayed on the tiles.\n * @property {string} [region='US'] A [Common Locale Data Repository](https://cldr.unicode.org/) (CLDR) region identifier that represents the user location.\n * @property {string} [imageFormat] The image format used for the map tiles (e.g. `'jpeg'`, or `'png'`).\n * @property {string} [scale] Scale for map elements (`'scaleFactor1x'`, `'scaleFactor2x'`, or `'scaleFactor4x'`).\n * @property {boolean} [highDpi=false] Use high-resolution tiles.\n * @property {Array<string>} [layerTypes] The layer types added to the map (e.g. `'layerRoadmap'`, `'layerStreetview'`, or `'layerTraffic'`).\n * @property {boolean} [overlay=false] Display only the `layerTypes` and not the underlying `mapType` (only works if `layerTypes` is provided).\n * @property {Array<Object>} [styles] [Custom styles](https://developers.google.com/maps/documentation/tile/style-reference) applied to the map.\n * @property {boolean} [attributionsCollapsible=true] Allow the attributions to be collapsed.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [apiOptions] An array of values specifying additional options to apply.\n * @property {boolean} [wrapX=true] Wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} SessionTokenRequest\n * @property {string} mapType The map type.\n * @property {string} language The language.\n * @property {string} region The region.\n * @property {string} [imageFormat] The image format.\n * @property {string} [scale] The scale.\n * @property {boolean} [highDpi] Use high resolution tiles.\n * @property {Array<string>} [layerTypes] The layer types.\n * @property {boolean} [overlay] The overlay.\n * @property {Array<Object>} [styles] The styles.\n * @property {Array<string>} [apiOptions] An array of values specifying additional options to apply.\n */\n\n/**\n * @typedef {Object} SessionTokenResponse\n * @property {string} session The session token.\n * @property {string} expiry The session token expiry (seconds since the epoch as a string).\n * @property {number} tileWidth The tile width.\n * @property {number} tileHeight The tile height.\n * @property {string} imageFormat The image format.\n */\n\n/**\n * @classdesc\n * A tile layer source that renders tiles from the Google [Map Tiles API](https://developers.google.com/maps/documentation/tile/overview).\n * The constructor takes options that are passed to the request to create a session token.  Refer to the\n * [documentation](https://developers.google.com/maps/documentation/tile/session_tokens#required_fields)\n * for additional details.\n * @api\n */\nclass Google extends TileImage {\n  /**\n   * @param {Options} options Google Maps options.\n   */\n  constructor(options) {\n    const highDpi = !!options.highDpi;\n\n    super({\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      projection: 'EPSG:3857',\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: highDpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @type {Error|null}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {SessionTokenRequest}\n     */\n    const sessionTokenRequest = {\n      mapType: options.mapType || 'roadmap',\n      language: options.language || 'en-US',\n      region: options.region || 'US',\n    };\n    if (options.imageFormat) {\n      sessionTokenRequest.imageFormat = options.imageFormat;\n    }\n    if (options.scale) {\n      sessionTokenRequest.scale = options.scale;\n    }\n    if (highDpi) {\n      sessionTokenRequest.highDpi = true;\n    }\n    if (options.layerTypes) {\n      sessionTokenRequest.layerTypes = options.layerTypes;\n    }\n    if (options.styles) {\n      sessionTokenRequest.styles = options.styles;\n    }\n    if (options.overlay === true) {\n      sessionTokenRequest.overlay = true;\n    }\n    if (options.apiOptions) {\n      sessionTokenRequest.apiOptions = options.apiOptions;\n    }\n\n    /**\n     * @type {SessionTokenRequest}\n     * @private\n     */\n    this.sessionTokenRequest_ = sessionTokenRequest;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.sessionTokenValue_;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.sessionRefreshId_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousViewportAttribution_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousViewportExtent_;\n\n    this.createSession_();\n  }\n\n  /**\n   * @return {Error|null} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * source.on('change', () => {\n   *   if (source.getState() === 'error') {\n   *     console.error(source.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Exposed here so it can be overridden in the tests.\n   * @param {string} url The URL.\n   * @param {RequestInit} config The config.\n   * @return {Promise<Response>} A promise that resolves with the response.\n   */\n  fetchSessionToken(url, config) {\n    return fetch(url, config);\n  }\n\n  /**\n   * Get or renew a session token for use with tile requests.\n   * @private\n   */\n  async createSession_() {\n    const url = createSessionUrl + '?key=' + this.apiKey_;\n    const config = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.sessionTokenRequest_),\n    };\n\n    const response = await this.fetchSessionToken(url, config);\n    if (!response.ok) {\n      try {\n        const body = await response.json();\n        this.error_ = new Error(body.error.message);\n      } catch {\n        this.error_ = new Error('Error fetching session token');\n      }\n      this.setState('error');\n      return;\n    }\n\n    /**\n     * @type {SessionTokenResponse}\n     */\n    const sessionTokenResponse = await response.json();\n\n    const tilePixelRatio = this.getTilePixelRatio(1);\n    const tileSize = [\n      sessionTokenResponse.tileWidth / tilePixelRatio,\n      sessionTokenResponse.tileHeight / tilePixelRatio,\n    ];\n\n    this.tileGrid = createXYZ({\n      extent: extentFromProjection(this.getProjection()),\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n\n    const session = sessionTokenResponse.session;\n    this.sessionTokenValue_ = session;\n    const key = this.apiKey_;\n    this.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n      const z = tileCoord[0];\n      const x = tileCoord[1];\n      const y = tileCoord[2];\n      const url = `${tileUrl}/${z}/${x}/${y}?session=${session}&key=${key}`;\n      return url;\n    };\n\n    const expiry = parseInt(sessionTokenResponse.expiry, 10) * 1000;\n    const timeout = Math.max(expiry - Date.now() - 60 * 1000, 1);\n    this.sessionRefreshId_ = setTimeout(() => this.createSession_(), timeout);\n\n    this.setAttributions(this.fetchAttributions_.bind(this));\n    // even if the state is already ready, we want the change event\n    this.setState('ready');\n  }\n\n  /**\n   * @param {import('../Map.js').FrameState} frameState The frame state.\n   * @return {Promise<string>} The attributions.\n   * @private\n   */\n  async fetchAttributions_(frameState) {\n    if (\n      frameState.viewHints[ViewHint.ANIMATING] ||\n      frameState.viewHints[ViewHint.INTERACTING] ||\n      frameState.animate\n    ) {\n      return this.previousViewportAttribution_;\n    }\n    const [west, south] = toLonLat(\n      getBottomLeft(frameState.extent),\n      frameState.viewState.projection,\n    );\n    const [east, north] = toLonLat(\n      getTopRight(frameState.extent),\n      frameState.viewState.projection,\n    );\n    const tileGrid = this.getTileGrid();\n    const zoom = tileGrid.getZForResolution(\n      frameState.viewState.resolution,\n      this.zDirection,\n    );\n    const viewportExtent = `zoom=${zoom}&north=${north}&south=${south}&east=${east}&west=${west}`;\n    // check if the extent or zoom has actually changed to avoid unnecessary requests\n    if (this.previousViewportExtent_ == viewportExtent) {\n      return this.previousViewportAttribution_;\n    }\n    this.previousViewportExtent_ = viewportExtent;\n    const session = this.sessionTokenValue_;\n    const key = this.apiKey_;\n    const url = `${attributionUrl}?session=${session}&key=${key}&${viewportExtent}`;\n    this.previousViewportAttribution_ = await fetch(url)\n      .then((response) => response.json())\n      .then((json) => json.copyright);\n\n    return this.previousViewportAttribution_;\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    clearTimeout(this.sessionRefreshId_);\n    super.disposeInternal();\n  }\n}\n\nexport default Google;\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport {decode} from '../Image.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader} from './arcgisRest.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @override\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  setParams(params) {\n    this.params_ = Object.assign({}, params);\n    this.changed();\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\nimport ImageSource from './Image.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   * @override\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection,\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper, {decode} from '../Image.js';\nimport EventType from '../events/EventType.js';\nimport {intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader} from './static.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    this.image = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      createLoader({\n        url: options.url,\n        imageExtent: options.imageExtent,\n        crossOrigin,\n        load: (image, src) => {\n          this.image.setImage(image);\n          imageLoadFunction(this.image, src);\n          return decode(image);\n        },\n      }),\n    );\n\n    this.image.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this),\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @override\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image.getExtent())) {\n      return this.image;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {decode} from '../Image.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader, getFeatureInfoUrl, getLegendUrl} from './wms.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution,\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const options = {\n      url: this.url_,\n      params: {\n        ...this.params_,\n        ...params,\n      },\n      projection: sourceProjectionObj || projectionObj,\n    };\n    return getFeatureInfoUrl(options, coordinate, resolution);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    return getLegendUrl(\n      {\n        url: this.url_,\n        params: {\n          ...this.params_,\n          ...params,\n        },\n      },\n      resolution,\n    );\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @override\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        serverType: this.serverType_,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  setParams(params) {\n    this.params_ = Object.assign({}, params);\n    this.changed();\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OGCMapTile\n */\nimport {error as logError} from '../console.js';\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {Array<string>} [collections] A list of geospatial data sub-resources to include. If not provided, the entire dataset will\n * be included. This option is not applicable when requesting the tileset for a single collection.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes. For supporting the `collections`\n * option, the service must conform to the collections selection\n * (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/collections-selection) conformance class.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n      collections: options.collections,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.projection = tileSetInfo.projection;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport TileImage from './TileImage.js';\nimport {getRequestUrl} from './arcgisRest.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params,\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getRequestUrl(\n      url,\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      params,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Set the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  setParams(params) {\n    this.params_ = Object.assign({}, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {get as getProjection} from '../proj.js';\nimport {toSize} from '../size.js';\nimport {renderXYZTemplate} from '../uri.js';\nimport DataTile from './DataTile.js';\nimport ImageTile from './ImageTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {import(\"./Tile.js\").default} [source] Tile source.\n * This allows `projection`, `tileGrid`, `wrapX` and `zDirection` to be copied from another source.\n * If both `source` and individual options are specified the individual options will have precedence.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends ImageTile {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n    const template = options.template || 'z:{z} x:{x} y:{y}';\n    const source = options.source;\n\n    super({\n      transition: 0,\n      wrapX:\n        options.wrapX !== undefined\n          ? options.wrapX\n          : source !== undefined\n            ? source.getWrapX()\n            : undefined,\n    });\n\n    const setReady = () => {\n      this.projection =\n        options.projection !== undefined\n          ? getProjection(options.projection)\n          : source !== undefined\n            ? source.getProjection()\n            : this.projection;\n      this.tileGrid =\n        options.tileGrid !== undefined\n          ? options.tileGrid\n          : source !== undefined\n            ? source.getTileGrid()\n            : this.tileGrid;\n      this.zDirection =\n        options.zDirection !== undefined\n          ? options.zDirection\n          : source !== undefined\n            ? source.zDirection\n            : this.zDirection;\n\n      if (source instanceof DataTile) {\n        this.transformMatrix = source.transformMatrix?.slice() || null;\n      }\n\n      const tileGrid = this.tileGrid;\n      if (tileGrid) {\n        this.setTileSizes(\n          tileGrid\n            .getResolutions()\n            .map((r, i) =>\n              toSize(tileGrid.getTileSize(i)).map((s) =>\n                Math.max(Math.floor(s), 1),\n              ),\n            ),\n        );\n      }\n\n      this.setLoader((z, x, y, loaderOptions) => {\n        const text = renderXYZTemplate(template, z, x, y, loaderOptions.maxY);\n        const [width, height] = this.getTileSize(z);\n        const context = createCanvasContext2D(width, height);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, width + 0.5, height + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, width / 2, height / 2, width);\n        context.fillText(text, width / 2, height / 2, width);\n        // make the loader aysnc, so it behaves like other sources that fetch data from a remote server\n        return Promise.resolve(context.canvas);\n      });\n      this.setState('ready');\n    };\n\n    if (source === undefined || source.getState() === 'ready') {\n      setReady();\n    } else {\n      const handler = () => {\n        if (source.getState() === 'ready') {\n          source.removeEventListener(EventType.CHANGE, handler);\n          setReady();\n        }\n      };\n      source.addEventListener(EventType.CHANGE, handler);\n    }\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {buffer, createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj,\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution,\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params,\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams,\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * @param {Object} params New URL paremeters.\n   * @private\n   */\n  setParams_(params) {\n    this.params_ = params;\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Set the URL parameters passed to the WMS source.\n   * @param {Object} params New URL paremeters.\n   * @api\n   */\n  setParams(params) {\n    this.setParams_(Object.assign({}, params));\n  }\n\n  /**\n   * Update the URL parameters. This method can be used to update a subset of the WMS\n   * parameters. Call `setParams` to set all of the parameters.\n   * @param {Object} params Updated URL parameters.\n   * @api\n   */\n  updateParams(params) {\n    this.setParams_(Object.assign(this.params_, params));\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap'),\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/WMTS\n */\n\nimport {containsExtent} from '../extent.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {appendParams, expandUrl} from '../uri.js';\nimport TileImage from './TileImage.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   * @override\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      ),\n      key,\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return encodeURIComponent(localContext[p]);\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers?.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().startsWith('ne');\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix,\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326',\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits,\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/source/mapserver\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {appendParams} from '../uri.js';\nimport {getRequestExtent} from './Image.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {string} url The MapServer url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * the image from the remote server.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Object} [params] Additional query parameters.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * @param {string} baseUrl The MapServer url.\n * @param {Object<string, string|number>} params Request parameters.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @return {string} The MapServer map image request URL.\n */\nfunction getUrl(baseUrl, params, extent, size) {\n  const width = Math.round(size[0]);\n  const height = Math.round(size[1]);\n  const mapSize = `${width} ${height}`;\n  const mapExt = `${extent[0]} ${extent[1]} ${extent[2]} ${extent[3]}`;\n\n  const baseParams = {\n    mode: 'map',\n    map_imagetype: 'png',\n    mapext: mapExt,\n    imgext: mapExt,\n    map_size: mapSize,\n    imgx: width / 2,\n    imgy: height / 2,\n    imgxy: mapSize,\n  };\n  Object.assign(baseParams, params);\n  return appendParams(baseUrl, baseParams);\n}\n\n/**\n * Creates a loader for MapServer images generated using the CGI interface,\n * which predates OGC services. It is **strongly** recommended to configure\n * MapServer to use WMS, and use the WMS createLoader.\n * @param {LoaderOptions} options LoaderOptions Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} MapServer image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const ratio = options.ratio ?? 1;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  /** @type {import('../Image.js').ImageObjectPromiseLoader} */\n  return function (extent, resolution, pixelRatio) {\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n    const src = getUrl(options.url, options.params, extent, size);\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n","/**\n * @module ol/source\n */\n\nimport {getIntersection} from './extent.js';\nimport LRUCache from './structs/LRUCache.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as Google} from './source/Google.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageTile} from './source/ImageTile.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OGCMapTile} from './source/OGCMapTile.js';\nexport {default as OGCVectorTile} from './source/OGCVectorTile.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as StadiaMaps} from './source/StadiaMaps.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\nexport {createLoader as createWMSLoader} from './source/wms.js';\nexport {createLoader as createArcGISRestLoader} from './source/arcgisRest.js';\nexport {createLoader as createStaticLoader} from './source/static.js';\nexport {createLoader as createMapGuideLoader} from './source/mapguide.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n"],"names":["CollectionEventType","ObjectEventType","EventType","Disposable","constructor","this","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","evt","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","Property","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","Tile","tileCoord","state","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getTileCoord","getState","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeChildren","node","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","removeChild","appendChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","disposedError","sharedContext","toArray","image","willReadFrequently","drawImage","getImageData","defaultSize","DataTile","loader_","loader","data_","error_","size_","size","controller_","controller","getSize","imageData","getData","getError","then","catch","error","abort","assert","assertion","errorMessage","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","name","styles","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","multiWorld","isFinite","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","j","coef","k","m","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","ceil","wrap","range","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","getLengthInternal","getAreaInternal","distance","bearing","lon1","dByR","lat","asin","levels","info","warn","none","level","args","console","padNumber","number","precision","numberString","decimal","join","compareVersions","v1","v2","s1","split","s2","n1","n2","add","closestOnCircle","circle","getRadius","d","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","replace","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","coord1","coord2","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","unitByCode","METERS_PER_UNIT","radians","ft","Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","destination","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c","d2","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","match","makeTransformFunction","transformer","coord","makeProjection","makeTransforms","forward","inverse","transformFactories","makeUTMTransforms","projectionFactories","makeUTMProjection","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","sourceProj","destProj","lonLat","transform","lon","equivalent","equalUnits","transformFunc","getTransformFunc","sourceTransforms","destinationTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","sourceProjection","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmp_","create","multiply","transform1","transform2","a1","b1","d1","e1","f1","b2","e2","f2","e","setFromArray","translate","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","matrixPrecision","toString","fromString","cssTransform","substring","map","parseFloat","cssTransform1","cssTransform2","mat1","mat2","transform2D","destinationStride","anchor","anchorX","anchorY","tmpTransform","tmpPoint","NaN","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","Number","MIN_VALUE","getClosestPoint","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","projTransform","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","startsWith","transformGeom2D","simpleGeometry","linearRing","twiceArea","linearRings","ends","linearRingss","endss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","getIntersectionPoint","segment1","segment2","u","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationErrorType","GeolocationError","message","ImageState","ImageWrapper","pixelRatio","stateOrLoader","pixelRatio_","image_","getImage","getPixelRatio","getResolution","requestResolution","HTMLImageElement","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","handleLoad","unlisten","handleError","decodeFallback","complete","ImageCanvas","canvas_","handleLoad_","ImageTile","crossOrigin","tileLoadFunction","crossOrigin_","src_","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","MapEvent","frameState","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","viewState","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_TILE_SIZE","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","zoom","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","series","animation","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","centerNone","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","enableRotation","constrainRotation","rotationNone","coordinatesEqual","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","Control","pointerEvents","target_","render","setTarget","getMap","setMap","getOverlayContainerStopEvent","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","attributions","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","layers","getAllLayers","visibleAttributions","Set","flatMap","layer","getAttributions","some","getSource","getAttributionsCollapsible","setCollapsible","from","updateElement_","display","all","attribution","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","rotateOptions","attributionOptions","InteractionProperty","Interaction","setActive","getActive","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","rootNode","activeElement","ShadowRoot","host","focusWithTabindex","hasAttribute","always","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","LayerProperty","BaseLayer","background_","background","opacity","zIndex","className_","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","GroupEvent","LayerGroup","baseOptions","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","RenderEventType","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","clearRenderer","getFeatures","isVisible","getMapInternal","layerStatesArray","getLayerGroup","find","layerExtent","inView","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","hasRenderer","quickselect","defaultCompare","s","sd","swap","RBush$1","maxEntries","_maxEntries","_minEntries","_all","search","bbox","toBBox","nodesToSearch","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","NO_COLOR","colorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","endsWith","throwInvalidColor","color","parseRgba","rgb","alpha","rgbDivider","hex","step","colorFromHex","colorComponent","desynchronized","invalidCheckFillStyle","colorString","colorFromImage","asString","cacheSize","withAlpha","v","rgbaToLcha","g","q","lchaToRgba","asArray","hasArea","toSize","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","featureId","geometryType","mapState","parse","encoded","expectedType","colorFromString","returnType","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","LineMetric","Any","All","Not","Resolution","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","Has","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","usesMapState","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","interpolationType","base","JSON","stringify","interpolation","stop","operation","argCount","needleType","arg","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","parsed","computeGeometryType","getGeometries","newEvaluationContext","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getCacheKey","getPattern","pattern","getImageState","ready","createPattern","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","color_","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getHitDetectionImage","getSrc","globalCompositeOperation","onChange","cacheKey","iconImageCache","asColorLike","iconCache","canvasPattern","patternCanvasContext","getIconImage","asCanvasPattern","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape","hitDetectionCanvas_","fill_","fill","origin_","points","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius2","getStroke","setFill","createHitDetectionCanvas_","fillKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","lineTo","closePath","CircleStyle","setRadius","Fill","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","Text","font_","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","Circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","styleLike","toStyleLike","toStyleFunction","setDeclutter","RenderEvent","inversePixelTransform","MapRenderer","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","redrawText","container","firstChild","children_","renderedLayerStates","previousElement","layerIndex","sourceState","removeLayerMapProperty","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","targetRoot","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","Overlay","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","TileRange","containsTileRange","tileRange","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","setRequestHeader","resolveUrl","URL","href","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasImmediateRenderer","viewRotation","userTransform","context_","transformRotation_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","beginPath","setTransform","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","acc","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","getBuilder","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","hasImage","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","fromResolutionLike","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","keep","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","hash","hashZXY","withinExtentAndZ","getFullTileRange","tmpTileCoord","TileGrid","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","getTileRangeForExtentAndZ","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","getTileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileSize","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","appendParams","uri","params","keyParams","encodeURIComponent","qs","zRegEx","xRegEx","yRegEx","dashYRegEx","renderXYZTemplate","pickUrl","urls","expandUrl","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","createFromTemplate","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","applyMatrix","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ERROR_THRESHOLD","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","Source","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","attributionLike","TileSource","tilePixelRatio_","tilePixelRatio","tmpSize","tileOptions","zDirection","getGutterForProjection","setKey","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","gridProjection","TileSourceEvent","TileEventType","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","quadKey","digits","mask","XYZ","interpolatePoint","o","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","setCenterAndRadius","getRadiusSquared_","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","lineStringLength","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","appendPoint","multiPoint","getPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","midpoint","enableSimplifyTransformed","toGeometry","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorEventType","VectorSourceEvent","VectorSource","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","setOverlaps","fromTransform","mat4","orthographic","bottom","near","far","lr","bt","nf","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","translation","Canvas","gl","gl_","program_","createProgram","positionLocation","getAttribLocation","texcoordLocation","matrixLocation","getUniformLocation","textureMatrixLocation","textureLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","positions","bufferData","STATIC_DRAW","texcoordBuffer","texcoords","tex","texWidth","texHeight","dstX","dstY","dstWidth","dstHeight","bindTexture","TEXTURE_2D","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","matrix","mat4.orthographic","mat4.translate","mat4.scale","uniformMatrix4fv","texMatrix","mat4.translation","uniform1i","drawArrays","TRIANGLES","createShader","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentSource","vertexSource","program","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","createCanvasContextWebGL","releaseGLCanvas","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","canvasGLPool","height_","dataType","resultFrameBuffer","resultTexture","createTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","NEAREST","texImage2D","RGBA","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","framebuffer","texture","stitchTexture","stitchWidth","stitchHeight","maxTexSize","getParameter","MAX_TEXTURE_SIZE","largeSide","scaleFactor","stitchWidthFixed","stitchHeightFixed","fb","webGLCanvas","WebGLCanvas","enable","SCISSOR_TEST","scissor","deleteFramebuffer","getUVs","triProgram","su0","sv0","su1","sv1","su2","sv2","edgeProgram","burnval","burnvalLocation","uniform4fv","lines","LINES","ReprojDataTile","reprojData_","reprojError_","reprojSize_","sourceTileGridExtent","transformMatrix","dataSources","imageLike","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","targetWidth","targetHeight","outWidth","outHeight","dataR","premultipliedAlpha","antialias","willInterpolate","textureType","getExtension","UNSIGNED_BYTE","reproj","dataSource","dataS","rows","cols","readPixels","flipY","ImageData","putImageData","DataTileSource","tileGridForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","textureSize","sourceLoader","AbortController","loaderOptions","signal","requestZ","requestX","requestY","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","getRequestExtent","handleImageChange","defaultImageLoadFunction","imageResolution","getRequestUrl","baseUrl","srid","createLoader","hidpi","F","FORMAT","TRANSPARENT","imageExtent","resolutionX","resolutionY","loadError","loadImage","makeLoaderFromTemplates","makeLoaderFromUrlLike","keyCount","keyFromUrlLike","ImageTileSource","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","v13","getImageSrc","serverType","REQUEST","dpi","getRequestParams","request","SERVICE","VERSION","STYLES","getFeatureInfoUrl","projectionObj","baseParams","QUERY_LAYERS","INFO_FORMAT","getLegendUrl","mpu","knownMapMediaTypes","knownVectorMediaTypes","appendCollectionsQueryParam","tileUrlTemplate","collections","pathname","logError","encodedCollections","searchParams","append","decodeURIComponent","getMapTileUrlTemplate","links","mediaType","fallbackUrlTemplate","link","rel","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","sourceInfo","tileMatrixSet","tileMatrixSetLimits","crs","orderedAxes","backwards","matrices","tileMatrices","matrixLookup","limitLookup","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","grid","urlTemplate","urlFunction","upsideDown","localContext","tileCol","tileRow","getTileSetInfo","tileSet","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","ATTRIBUTION","ZIndexContext","instructions_","Proxy","push_","pushMethodArgs_","instructions","pushFunction","draw","instructionsAtIndex","instructionAtIndex","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","getLayer","renderIfReadyAndVisible","pixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","prepareContainer","canvasTransform","toTransformString","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","imageResolutionX","imageResolutionY","viewCenter","clipped","dw","dh","BaseImageLayer","ImageLayer","sourceKey","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","gridExtent","CanvasTileLayerRenderer","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision_","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempTileRange_","tempTileCoord_","createTileCoord","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","tileOrigin","sourceRevision","enqueueTiles","initialZ","preload","minZ","tileQueueKey","findStaleTile_","staleKeys","findAltTiles_","altZ","covered","frameExtent","canvasExtent","getPreload","targetZ","renderExtent","parentZ","canvasScale","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","postRenderFunction","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","TileProperty","BaseTileLayer","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","getUseInterimTilesOnError","TileLayer","createMinion","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","imageOps_","workers","onWorkerMessage_","minion","terminated","postMessage","terminate","createFauxWorker","workers_","queue_","maxQueueLength_","queue","running_","dataLookup_","job_","process","inputs","enqueue_","dispatch_","job","slices","resolveJob_","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttributions","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","LayerConfig","stamen_terrain","stamen_terrain_background","stamen_terrain_labels","stamen_terrain_lines","stamen_toner_background","stamen_toner","stamen_toner_labels","stamen_toner_lines","stamen_toner_lite","stamen_watercolor","alidade_smooth","alidade_smooth_dark","alidade_satellite","outdoors","osm_bright","ProviderConfig","retina","CustomTile","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","loadInternal_","handleError_","json","requestJSONP","onXHRLoad_","onXHRError_","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleToState","fillPatternScale","strokeStyleToState","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","CanvasTextBuilder","labels_","textKeepUpright_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","hitDetectionBackgroundFill","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","baseline","textKeepUpright","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","richTextToPlainText","part","Executor","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","widths_","zIndexContext_","getZIndexContext","createLabel","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","getSquaredRenderTolerance","lastIndexOf","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","dirty","replayGroupInstructions","CanvasVectorImageLayerRenderer","vectorRenderer_","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","registered","register","proj4","projCodes","defs","getCachedProjection","def","projName","axis","to_meter","code1","proj1","code2","proj2","epsgLookup","fetch","ok","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","frac","parallel","lon2","VectorLayer","DEFAULT_STROKE_STYLE","INTERVALS","ELEMENT_ARRAY_BUFFER","CONTEXT_IDS","BufferUsage","WebGLArrayBuffer","usage","usage_","ofSize","getArrayClassForType","fromArray","fromArrayBuffer","setArray","ArrayType","getUsage","Uint32Array","ContextEventType","WebGLPostProcessingPass","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","renderTargetTextureSize_","frameBuffer_","depthBuffer_","createRenderbuffer","renderTargetProgram_","renderTargetVerticesBuffer_","renderTargetAttribLocation_","renderTargetUniformLocation_","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getRenderTargetTexture","getGL","init","drawingBufferWidth","drawingBufferHeight","getFrameBuffer","bindRenderbuffer","RENDERBUFFER","getDepthBuffer","internalFormat","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","attributes","getContextAttributes","preserveDrawingBuffer","clearColor","clearDepth","DEPTH_TEST","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","uniform2f","uniform1f","applyUniforms","textureSlot","uniform","uniform3f","uniform4f","DefaultUniform","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TIME","ZOOM","VIEWPORT_SIZE_PX","PIXEL_RATIO","HIT_DETECTION","AttributeType","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getOrCreateContext","cacheItem","users","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","bufferCache_","extensionCache_","currentProgram_","needsToBeRecreated_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","shaderCompileErrors_","addUniforms","canvasCacheKeyMatches","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","loseContext","prepareDraw","disableAlphaBlend","enableDepth","getCanvas","depthRange","ZERO","depthFunc","LEQUAL","bindFrameBuffer","frameBuffer","bindInitialFrameBuffer","slot","uniformName","bindAttribute","attributeName","getAttributeLocation","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getDepthbuffer","getTexture","drawElements","elementType","UNSIGNED_INT","numItems","offsetInBytes","finalizeDraw","applyFrameState","setUniformFloatValue","setUniformFloatVec2","applyHitDetectionUniform","loc","WebGLTexture","prevValue","imageReady","setUniformMatrixValue","getProgram","fragmentShaderSource","vertexShaderSource","deleteShader","programUid","makeProjectionTransform","uniform2fv","setUniformFloatVec4","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","needsToBeRecreated","Uint16Array","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","helper","onMapChanged_","clearCache","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","reset","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","Uniforms","PaletteTexture","texture_","deleteTexture","numberToGlsl","arrayToGlsl","colorToGlsl","sizeToGlsl","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","string","stringToGlsl","uniformNameForVariable","variableName","newCompilationContext","functions","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","FEATURE_ID_PROPERTY_NAME","GEOMETRY_TYPE_PROPERTY_NAME","UNDEFINED_PROP_VALUE","compilationContext","compile","createCompiler","compilers","propName","varName","compiledArgs","firstValue","secondValue","exponent","stop1","stop2","funcName","computeOperatorFunctionName","tests","band","xOffset","yOffset","ifBlocks","colorIndex","bandIndex","numColors","palette","paletteTextures","paletteName","paletteTexture","compiler","COMMON_HEADER","DEFAULT_STYLE","ShaderBuilder","attributes_","hasSymbol_","symbolSizeExpression_","symbolRotationExpression_","symbolOffsetExpression_","symbolColorExpression_","texCoordExpression_","discardExpression_","symbolRotateWithView_","hasStroke_","strokeWidthExpression_","strokeColorExpression_","strokeOffsetExpression_","strokeCapExpression_","strokeJoinExpression_","strokeMiterLimitExpression_","strokeDistanceFieldExpression_","hasFill_","fillColorExpression_","vertexShaderFunctions_","fragmentShaderFunctions_","addUniform","addAttribute","transformedType","varyingName","varyingType","varyingExpression","setSymbolSizeExpression","getSymbolSizeExpression","setSymbolRotationExpression","setSymbolOffsetExpression","getSymbolOffsetExpression","setSymbolColorExpression","getSymbolColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","getFragmentDiscardExpression","setSymbolRotateWithView","setStrokeWidthExpression","setStrokeColorExpression","getStrokeColorExpression","setStrokeOffsetExpression","setStrokeCapExpression","setStrokeJoinExpression","setStrokeMiterLimitExpression","setStrokeDistanceFieldExpression","setFillColorExpression","getFillColorExpression","addVertexShaderFunction","addFragmentShaderFunction","getSymbolVertexShader","attribute","getSymbolFragmentShader","getStrokeVertexShader","getStrokeFragmentShader","getFillVertexShader","getFillFragmentShader","expressionToGlsl","packColor","getGlslSizeFromType","getGlslTypeFromType","applyContextToBuilder","builder","variable","glslType","functionName","generateUniformsFromContext","generateAttributesFromContext","MixedGeometryBatch","globalCounter_","refToFeature_","Map","uidToRef_","freeGlobalRef_","polygonBatch","entries","geometriesCount","verticesCount","ringsCount","pointBatch","lineStringBatch","projectionTransform","addGeometry_","clearFeatureEntryInPointBatch_","featureUid","flatCoordss","clearFeatureEntryInLineStringBatch_","clearFeatureEntryInPolygonBatch_","multiPolygonGeom","addCoordinates_","multiLineGeom","multiPointGeom","polygonGeom","pointGeom","lineGeom","flatCoords","multiPolygonEndss","polygonEnds","prevPolygonEnds","endIndex","multiLineEnds","multiPolygonEnds","addRefToEntry_","ringsVerticesCounts","ringsVerticesCount","ind","getFlatCoordinatesXY","getFlatCoordinatesXYM","currentRef","ref","removeRef_","changeFeature","getFeatureFromRef","featureFilter","filtered","WebGLWorkerMessageType","pushCustomAttributesInRenderInstructions","renderInstructions","customAttributes","batchEntry","currentIndex","getCustomAttributesSize","computeHash","parseCommonSymbolProperties","vertContext","getColorFromDistanceField","distanceField","fillColor","strokeColor","parseImageProperties","textureId","parseImageOffsetProperties","sampleSize","offsetExpression","parseLiteralStyle","sizeExpression","fullsize","shiftPx","offsetPx","parseIconProperties","currentPoint","numPoints","shapeField","colorExpression","parseShapeProperties","parseCircleProperties","sampleSizeExpression","spacingExpression","textureName","tintExpression","dashPattern","dashFunctionName","dashLengthsDef","totalLengthDef","currentDashOffset","distanceExpression","parseStrokeProperties","parseFillProperties","parsedFilter","defineSpecialInput","contextPropName","glslPropName","attrSize","tmpColor","WEBGL_WORKER","getWebGLWorker","createWebGLWorker","workerMessageCounter","Attributes","VectorStyleRenderer","styleOrShaders","enableHitDetection","helper_","hitDetectionEnabled_","asShaders","asRule","parseResult","fillProgram_","strokeProgram_","symbolProgram_","fillVertexShader_","fillFragmentShader_","strokeVertexShader_","strokeFragmentShader_","symbolVertexShader_","symbolFragmentShader_","featureFilter_","computeFeatureFilter","hitDetectionAttributes","hitColor","radix","divide","colorEncodeId","customAttributes_","customAttributesDesc","polygonAttributesDesc_","lineStringAttributesDesc_","pointAttributesDesc_","setHelper","compiled","evalContext","generateBuffers","geometryBatch","filteredBatch","generateRenderInstructions_","polygonBuffers","lineStringBuffers","pointBuffers","generateBuffersForType_","polygonInstructions","lineStringInstructions","pointInstructions","invertVerticesTransform","makeInverseTransform","batch","totalInstructionsCount","renderIndex","generatePolygonRenderInstructions","generateLineStringRenderInstructions","tmpCoords","generatePointRenderInstructions","messageId","messageType","renderInstructionsTransform","customAttributesSize","handleMessage","received","verticesBuffer","vertexBuffer","indicesBuffer","indexBuffer","preRenderCallback","renderInternal_","renderCount","tmpArray4","WebGLRenderTarget","framebuffer_","depthbuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixel","RENDER_EXTENT","PATTERN_ORIGIN","GLOBAL_ALPHA","WebGLVectorLayerRenderer","disableHitDetection","hitRenderTarget_","sourceRevision_","currentTransform_","tmpCoords_","tmpTransform_","currentFrameStateTransform_","styleVariables_","styles_","styleRenderers_","buffers_","batch_","initialFeaturesAdded_","sourceListenKeys_","addInitialFeatures_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","previousFilters","ruleStyles","currentFilter","stylesWithFilters","breakDownFlatStyle","createRenderers_","applyUniforms_","batchInvertTransform","setFromTransform","mat4FromTransform","startWorld","getWorldParameters","viewNotMoving","sourceChanged","BaseVector","generatePromises","disposeBuffers","forHitDetection","translateTransform","mult","colorDecodeId","disposeBuffersOfType","typeBuffers","DEFAULT_GRADIENT","DragAndDropEventType","DragAndDropEvent","file","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","getPointSegmentRelationship","sharedRel","py","getDefaultStyleFunction","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","readNumber","writeNumber","to5","differentNumber","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","squaredCoordinateDistance","distanceToCircumference","closestOnSegmentData","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","addFeature_","boundRemoveFeature_","removeFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","features_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","SnapEventType","SnapEvent","vertex","vertexPixel","GEOMETRY_SEGMENTERS","segments","segmenter","getFeatureFromEvent","tempExtents","tempSegmentData","TranslateEventType","TranslateEvent","startCoordinate","flipXY","destOffset","FeatureFormat","defaultFeatureProjection","featureClass","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","equivalentProjection","fromProjection","toProjection","transformExtentWithOptions","GeometryConstructor","createRenderFeature","orientFlatCoordinates","createGeometry","XMLFeature","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","whiteSpaceStart","whiteSpaceEnd","cdataCharacters","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","AUTHOR_PARSERS","email","getAttribute","domain","parseLink","METADATA_PARSERS","desc","author","copyright","COPYRIGHT_PARSERS","keywords","bounds","minlat","minlon","maxlat","maxlon","extensions","parseExtensions","year","license","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","rtept","RTEPT_PARSERS","rteValues","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","layoutOptions","hasZ","hasM","applyLayoutOptions","setAttributeNS","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","HFDTEDATE_RECORD_RE","NEWLINE_RE","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","substr","readFlatCoordinates","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","ArrayBuffer","isView","dataView","readFields","readField","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","toNum","readVarintRemainder","readVarint64","readSVarint","num","subarray","str","b0","b3","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","writeFixed32","setInt32","writeSFixed32","writeFixed64","writeSFixed64","pbf","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeSVarint","writeBoolean","writeString","lead","writeUtf8","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","extraLen","LN2","layersPBFReader","layerPBFReader","version","featurePBFReader","readRawFeature","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","nodes","tags","NODE_PARSERS","way","ways","XML","read","readFromDocument","readFromNode","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","current","GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","geometryReader","transformArc","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","geometryName","_content_","fid","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","readFlatPosList","contextDimension","dim","asXYZ","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","geom","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML32","Filter","tagName_","getTagName","LogicalNary","And","Bbox","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","writeLogicalFilter","Or","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","matchCase","writeLiteral","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","timeInstant","timePosition","writeGetFeature","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","Format","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","readBoundingBox","BoundingBox","WGS84_BBOX_READERS","Identifier","LegendURL","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","PROJECTION","COORDINATE_FORMAT","MAX_RATIO","MIN_RATIO","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","Direction","ol","$ol$Collection","_ol_Collection$CollectionEvent","$ol$DataTile","_ol_DataTile$asArrayLike","_ol_DataTile$asImageLike","_ol_DataTile$disposedError","_ol_DataTile$toArray","$ol$Disposable","$ol$Feature","_ol_Feature$createStyleFunction","Geolocation","position_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","_ol_Geolocation$GeolocationError","$ol$Image","_ol_Image$decode","_ol_Image$decodeFallback","_ol_Image$listenImage","_ol_Image$load","$ol$ImageCanvas","$ol$ImageTile","$ol$Kinetic","$ol$Map","$ol$MapBrowserEvent","$ol$MapBrowserEventHandler","$ol$MapEvent","$ol$Object","_ol_Object$ObjectEvent","$ol$Observable","_ol_Observable$unByKey","$ol$Overlay","$ol$Tile","$ol$TileQueue","_ol_TileQueue$getTilePriority","$ol$TileRange","_ol_TileRange$createOrUpdate","VectorRenderTile","getSourceTiles","removeSourceTiles","executorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","removeSourceTiles_","hasContext","getReplayState","renderedRenderOrder","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","$ol$View","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$ascending","_ol_array$binarySearch","_ol_array$descending","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$NO_COLOR","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","isStringColor","_ol_color$lchaToRgba","_ol_color$rgbaToLcha","_ol_color$toString","_ol_color$withAlpha","colorlike","_ol_colorlike$asColorLike","_ol_console$error","setLevel","_ol_console$warn","$ol$control$Attribution","$ol$control$Control","FullScreen","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","oldMap","MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","ovmap_","boxSizing","boxOverlay_","overlayBox","move","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","updateBoxAfterOvmapIsRendered_","newView","resetExtent_","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","$ol$control$Rotate","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousWidth","previousDecimalCount","previousCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","$ol$control$Zoom","ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","ZoomToExtent","handleZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$getSharedCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","$ol$events$Event","_ol_events_Event$stopPropagation","_ol_events_SnapEvent$SnapEvent","$ol$events$Target","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","_ol_events_condition$platformModifierKey","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","expr","cpu","_ol_expr_cpu$buildExpression","_ol_expr_cpu$newEvaluationContext","_ol_expr_expression$AnyType","_ol_expr_expression$BooleanType","_ol_expr_expression$CallExpression","_ol_expr_expression$ColorType","_ol_expr_expression$LiteralExpression","NoneType","_ol_expr_expression$NumberArrayType","_ol_expr_expression$NumberType","_ol_expr_expression$Ops","_ol_expr_expression$SizeType","_ol_expr_expression$StringType","_ol_expr_expression$computeGeometryType","_ol_expr_expression$includesType","_ol_expr_expression$isType","_ol_expr_expression$newParsingContext","overlapsType","oneType","otherType","_ol_expr_expression$parse","_ol_expr_expression$typeName","gpu","_ol_expr_gpu$FEATURE_ID_PROPERTY_NAME","_ol_expr_gpu$GEOMETRY_TYPE_PROPERTY_NAME","_ol_expr_gpu$PALETTE_TEXTURE_ARRAY","_ol_expr_gpu$UNDEFINED_PROP_VALUE","_ol_expr_gpu$arrayToGlsl","_ol_expr_gpu$buildExpression","_ol_expr_gpu$colorToGlsl","_ol_expr_gpu$getStringNumberEquivalent","_ol_expr_gpu$newCompilationContext","_ol_expr_gpu$numberToGlsl","_ol_expr_gpu$sizeToGlsl","_ol_expr_gpu$stringToGlsl","_ol_expr_gpu$uniformNameForVariable","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","$ol$format$Feature","_ol_format_Feature$createGeometry","_ol_format_Feature$createRenderFeature","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","readMetadata","readMetadataFromDocument","readMetadataFromNode","metadata","featureReader","gpx","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","geometryObject","objects","IGC","altitudeMode_","lad_","lod_","ladStart_","ladStop_","lodStart_","lodStop_","month","day","lastDateTime","hour","minute","second","UTC","numberAdds","addCode","addStart","addStop","$ol$format$JSONFeature","KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","MVT","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","pbfLayer","OSMXML","$ol$format$OWS","Polyline","factor_","geometryLayout_","geometryLayout","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","$ol$format$TextFeature","TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","WFS","version_","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","writeFilter","WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","WMTSCapabilities","owsParser_","WMTSCapabilityObject","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","$ol$geom$Circle","$ol$geom$Geometry","$ol$geom$GeometryCollection","$ol$geom$LineString","$ol$geom$LinearRing","$ol$geom$MultiLineString","$ol$geom$MultiPoint","$ol$geom$MultiPolygon","$ol$geom$Point","$ol$geom$Polygon","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","$ol$geom$SimpleGeometry","_ol_geom_SimpleGeometry$getLayoutForStride","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_segments$getIntersectionPoint","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","_ol_has$CREATE_IMAGE_BITMAP","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","DblClickDragZoom","opt_options","scaleDeltaByPixel_","handlingDownUpSequence_","handlingDoubleDownSequence_","doubleTapTimeoutId_","trackedPointers_","waitForDblTap_","isPointerDraggingEvent","$ol$interaction$DoubleClickZoom","DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","handleResult_","formats","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","_ol_interaction_DragAndDrop$DragAndDropEvent","$ol$interaction$DragBox","_ol_interaction_DragBox$DragBoxEvent","$ol$interaction$DragPan","$ol$interaction$DragRotate","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","$ol$interaction$DragZoom","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","mode","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","getSegments","closestSegment","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","_ol_interaction_Extent$ExtentEvent","$ol$interaction$Interaction","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","$ol$interaction$KeyboardPan","$ol$interaction$KeyboardZoom","animationOptions","animationOptions_","params_","replace_","prefix_","initial_","trackedCallbacks_","trackedValues_","getParamName_","get_","set_","delete_","updateUrl_","handleChangeLayerGroup_","history","replaceState","updateView","viewProperties","layersParam","track","updateHistory_","visibilities","pushState","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","findInsertVerticesAndUpdateDragSegments_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","dragSegment","setGeometryCoordinates_","insertVertex_","hitPointGeometry","bufferExtent","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","updatePointer_","canRemovePoint","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","canInsertPoint","insertPoint","_ol_interaction_Modify$ModifyEvent","$ol$interaction$MouseWheelZoom","$ol$interaction$PinchRotate","$ol$interaction$PinchZoom","Pointer","$ol$interaction$Pointer","_ol_interaction_Pointer$centroid","$ol$interaction$Select","_ol_interaction_Select$SelectEvent","Snap","vertex_","edge_","intersection_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","snapped_","segmenters_","segmenters","feature_uid","segmentCount","otherSegment","intersectionSegment","isIntersection","otherSegments","getFeatures_","areSnapDataEqual_","data1","data2","snapTo","updateFeature_","featuresToUpdate","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","segmentStart","segmentEnd","Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","$ol$layer$Base","BaseImage","$ol$layer$BaseImage","BaseTile","$ol$layer$BaseTile","$ol$layer$BaseVector","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","epsg4326Projection","toLonLatTransform","lonLatCoordinates","worldExtentP","Group","$ol$layer$Group","_ol_layer_Group$GroupEvent","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weight_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","previousValue","setFilter","setWeight","filterCompiled","radiusCompiled","blurCompiled","blurRadiusUniforms","weightAttribute","weightExpression","weightFunction","weightValue","u_gradientTexture","u_opacity","updateStyleVariables","$ol$layer$Image","$ol$layer$Layer","_ol_layer_Layer$inView","$ol$layer$Tile","Vector","$ol$layer$Vector","VectorImage","imageRatio","imageRatio_","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","_ol_math$wrap","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","$ol$proj$Projection","Units","_ol_proj_Units$METERS_PER_UNIT","fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","epsgLookupMapTiler","results","defaultTransform","fromEPSGCode","epsgCode","getEPSGLookup","isRegistered","_ol_proj_proj4$register","setEPSGLookup","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","_ol_proj$toLonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","destinationProjection","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","utm","_ol_proj_utm$makeProjection","_ol_proj_utm$makeTransforms","_ol_proj_utm$zoneFromCode","$ol$render$Box","$ol$render$Event","$ol$render$Feature","toFeature","_ol_render_Feature$toGeometry","$ol$render$VectorContext","$ol$render$canvas$Builder","$ol$render$canvas$BuilderGroup","$ol$render$canvas$Executor","$ol$render$canvas$ExecutorGroup","_ol_render_canvas_ExecutorGroup$ALL","_ol_render_canvas_ExecutorGroup$DECLUTTER","_ol_render_canvas_ExecutorGroup$NON_DECLUTTER","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","$ol$render$canvas$ImageBuilder","Immediate","$ol$render$canvas$Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","$ol$render$canvas$LineStringBuilder","$ol$render$canvas$PolygonBuilder","$ol$render$canvas$TextBuilder","_ol_render_canvas_TextBuilder$TEXT_ALIGN","$ol$render$canvas$ZIndexContext","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas_style$buildRuleSet","_ol_render_canvas_style$buildStyle","_ol_render_canvas_style$flatStylesToStyleFunction","_ol_render_canvas_style$rulesToStyleFunction","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","scaleTransform","Composite","$ol$renderer$Composite","$ol$renderer$Layer","$ol$renderer$Map","$ol$renderer$canvas$ImageLayer","$ol$renderer$canvas$Layer","_ol_renderer_canvas_Layer$canvasPool","$ol$renderer$canvas$TileLayer","VectorImageLayer","$ol$renderer$canvas$VectorImageLayer","$ol$renderer$canvas$VectorLayer","vector","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","$ol$reproj$DataTile","$ol$reproj$Image","$ol$reproj$Tile","$ol$reproj$Triangulation","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","_ol_reproj_common$ERROR_THRESHOLD","glreproj","_ol_reproj_glreproj$canvasGLPool","_ol_reproj_glreproj$createCanvasContextWebGL","_ol_reproj_glreproj$releaseGLCanvas","_ol_reproj_glreproj$render","_ol_reproj$render","_ol_resolution$fromResolutionLike","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","placeholderTiles_","placeholderTiles","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","_ol_source_BingMaps$quadKey","Cluster","interpolationRatio","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$source$DataTile","Google","highDpi","sessionTokenRequest","mapType","language","region","imageFormat","layerTypes","apiOptions","sessionTokenRequest_","sessionTokenValue_","sessionRefreshId_","previousViewportAttribution_","previousViewportExtent_","createSession_","fetchSessionToken","createSessionUrl","method","headers","sessionTokenResponse","session","expiry","fetchAttributions_","viewportExtent","$ol$source$Image","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","_ol_source_Image$getRequestExtent","ImageArcGISRest","imageLoadFunction_","imageLoadFunction","imageSize_","ratio_","loaderProjection_","getParams","getImageLoadFunction","setImageLoadFunction","setParams","updateParams","canvasFunction_","canvasFunction","canvasElement","ImageStatic","imageExtent_","getImageExtent","$ol$source$ImageTile","ImageWMS","serverType_","sourceProjectionObj","OGCMapTile","handleTileSetInfo_","tileSetInfo","OSM","_ol_source_OSM$ATTRIBUTION","Raster","$ol$source$Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","$ol$source$Source","StadiaMaps","provider","providerConfig","layerConfig","query","apiKey","OSM_ATTRIBUTION","$ol$source$Tile","_ol_source_Tile$TileSourceEvent","TileArcGISRest","getKeyForParams_","getRequestUrl_","tileExtent","TileDebug","setReady","strokeRect","handler","$ol$source$TileImage","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","tileJSON","getTileJSON","attributionExtent","TileWMS","v13_","updateV13_","sourceProjCoord","LAYERS","setParams_","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","_ol_source_UTFGrid$CustomTile","$ol$source$UrlTile","$ol$source$Vector","_ol_source_Vector$VectorSourceEvent","WMTS","requestEncoding","dimensions_","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","TileCol","TileRow","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","el","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","tileMatrixValue","tileSpanX","tileSpanY","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","$ol$source$XYZ","arcgisRest","_ol_source_arcgisRest$createLoader","_ol_source_arcgisRest$getRequestUrl","DECIMALS","DEFAULT_WMS_VERSION","mapserver","mapExt","map_imagetype","mapext","imgext","map_size","imgx","imgy","imgxy","ogcTileUtil","_ol_source_ogcTileUtil$appendCollectionsQueryParam","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","static","_ol_source_static$createLoader","wms","_ol_source_wms$DEFAULT_VERSION","_ol_source_wms$createLoader","_ol_source_wms$getFeatureInfoUrl","_ol_source_wms$getImageSrc","_ol_source_wms$getLegendUrl","_ol_source_wms$getRequestParams","_ol_source_wms$getRequestUrl","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","$ol$structs$LRUCache","$ol$structs$PriorityQueue","_ol_structs_PriorityQueue$DROP","$ol$structs$RBush","$ol$style$Circle","$ol$style$Fill","$ol$style$Icon","$ol$style$IconImage","_ol_style_IconImage$get","$ol$style$IconImageCache","_ol_style_IconImageCache$getCacheKey","_ol_style_IconImageCache$shared","$ol$style$Image","$ol$style$RegularShape","$ol$style$Stroke","$ol$style$Style","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","$ol$style$Text","_ol_style_flat$createDefaultStyle","tilecoord","_ol_tilecoord$createOrUpdate","fromKey","getCacheKeyForTileKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$hashZXY","_ol_tilecoord$withinExtentAndZ","$ol$tilegrid$TileGrid","$ol$tilegrid$WMTS","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","DEFAULT_MAX_ZOOM","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","_ol_transform$equivalent","invert","_ol_transform$makeInverse","makeScale","_ol_transform$multiply","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","_ol_uri$expandUrl","_ol_uri$pickUrl","_ol_uri$renderXYZTemplate","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_vec_mat4$orthographic","_ol_vec_mat4$scale","_ol_vec_mat4$translate","_ol_vec_mat4$translation","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"+BAOe,IAAAA,EAMR,MANQA,EAYL,SCZKC,EAMG,iBCLHC,EAML,SANKA,EAaN,QAbMA,EAiBA,cAjBAA,EAkBN,QAlBMA,EAmBH,WAnBGA,EAoBF,YApBEA,EAqBH,WArBGA,EAsBP,OAtBOA,EAwBJ,UAxBIA,EAyBH,WAzBGA,EA0BP,OA1BOA,EA4BF,YA5BEA,EA6BN,QC7BT,MAAMC,EACJ,WAAAC,GAMEC,KAAKC,UAAW,CACpB,CAKE,OAAAC,GACOF,KAAKC,WACRD,KAAKC,UAAW,EAChBD,KAAKG,kBAEX,CAME,eAAAA,GAAkB,ECnBb,SAASC,EAAaC,EAAUC,EAAQC,GAC7C,IAAIC,EAAKC,EACTF,EAAaA,GAAcG,EAC3B,IAAIC,EAAM,EACNC,EAAOP,EAASQ,OAChBC,GAAQ,EAEZ,KAAOH,EAAMC,GAGXJ,EAAMG,GAAQC,EAAOD,GAAQ,GAC7BF,GAAOF,EAAWF,EAASG,GAAMF,GAE7BG,EAAM,EAERE,EAAMH,EAAM,GAGZI,EAAOJ,EACPM,GAASL,GAKb,OAAOK,EAAQH,GAAOA,CACxB,CASO,SAASD,EAAUK,EAAGC,GAC3B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAI,EAAK,CAClC,CASO,SAASC,EAAWF,EAAGC,GAC5B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAI,EAAK,CAClC,CAyBO,SAASE,EAAkBC,EAAKC,EAAQC,GAC7C,GAAIF,EAAI,IAAMC,EACZ,OAAO,EAGT,MAAME,EAAIH,EAAIN,OACd,GAAIO,GAAUD,EAAIG,EAAI,GACpB,OAAOA,EAAI,EAGb,GAAyB,mBAAdD,EAA0B,CACnC,IAAK,IAAIE,EAAI,EAAGA,EAAID,IAAKC,EAAG,CAC1B,MAAMC,EAAYL,EAAII,GACtB,GAAIC,IAAcJ,EAChB,OAAOG,EAET,GAAIC,EAAYJ,EACd,OAAIC,EAAUD,EAAQD,EAAII,EAAI,GAAIC,GAAa,EACtCD,EAAI,EAENA,CAEf,CACI,OAAOD,EAAI,CACf,CAEE,GAAID,EAAY,EAAG,CACjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,IAAKC,EACvB,GAAIJ,EAAII,GAAKH,EACX,OAAOG,EAAI,EAGf,OAAOD,EAAI,CACf,CAEE,GAAID,EAAY,EAAG,CACjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,IAAKC,EACvB,GAAIJ,EAAII,IAAMH,EACZ,OAAOG,EAGX,OAAOD,EAAI,CACf,CAEE,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAKC,EAAG,CAC1B,GAAIJ,EAAII,IAAMH,EACZ,OAAOG,EAET,GAAIJ,EAAII,GAAKH,EACX,OAAID,EAAII,EAAI,GAAKH,EAASA,EAASD,EAAII,GAC9BA,EAAI,EAENA,CAEb,CACE,OAAOD,EAAI,CACb,CAOO,SAASG,EAAgBN,EAAKO,EAAOC,GAC1C,KAAOD,EAAQC,GAAK,CAClB,MAAMC,EAAMT,EAAIO,GAChBP,EAAIO,GAASP,EAAIQ,GACjBR,EAAIQ,GAAOC,IACTF,IACAC,CACN,CACA,CAOO,SAASE,EAAOV,EAAKW,GAC1B,MAAMC,EAAYC,MAAMC,QAAQH,GAAQA,EAAO,CAACA,GAC1CjB,EAASkB,EAAUlB,OACzB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAQU,IAC1BJ,EAAIA,EAAIN,QAAUkB,EAAUR,EAEhC,CAsBO,SAASW,EAAOC,EAAMC,GAC3B,MAAMC,EAAOF,EAAKtB,OAClB,GAAIwB,IAASD,EAAKvB,OAChB,OAAO,EAET,IAAK,IAAIU,EAAI,EAAGA,EAAIc,EAAMd,IACxB,GAAIY,EAAKZ,KAAOa,EAAKb,GACnB,OAAO,EAGX,OAAO,CACT,CA8BO,SAASe,EAASnB,EAAKoB,EAAMC,GAClC,MAAMC,EAAUF,GAAQ7B,EACxB,OAAOS,EAAIuB,OAAM,SAAUC,EAAYC,GACrC,GAAc,IAAVA,EACF,OAAO,EAET,MAAMC,EAAMJ,EAAQtB,EAAIyB,EAAQ,GAAID,GACpC,QAASE,EAAM,GAAML,GAAkB,IAARK,EACnC,GACA,CCvOO,SAASC,IACd,OAAO,CACT,CAMO,SAASC,IACd,OAAO,CACT,CAOO,SAASC,IAAO,CAWhB,SAASC,EAAWC,GAEzB,IAAIC,EAGAC,EAEAC,EAMJ,OAAO,WACL,MAAMC,EAAWtB,MAAMuB,UAAUC,MAAMC,KAAKC,WAM5C,OALKN,GAAYpD,OAASqD,GAAaM,EAAYL,EAAUF,KAC3DC,EAAWrD,KACXoD,EAAWE,EACXH,EAAaD,EAAGU,MAAM5D,KAAM0D,YAEvBP,CACR,CACH,CAOO,SAASU,EAAUC,GAaxB,OAZA,WACE,IAAIC,EACJ,IACEA,EAAQD,GACT,CAAC,MAAOE,GACP,OAAOC,QAAQC,OAAOF,EAC5B,CACI,OAAID,aAAiBE,QACZF,EAEFE,QAAQE,QAAQJ,EAC3B,CACSK,EACT,CCzEO,SAASC,EAAMC,GACpB,IAAK,MAAMC,KAAYD,SACdA,EAAOC,EAElB,CAOO,SAASC,EAAQF,GACtB,IAAIC,EACJ,IAAKA,KAAYD,EACf,OAAO,EAET,OAAQC,CACV,CCXA,MAAME,EAIJ,WAAA1E,CAAY2E,GAIV1E,KAAK2E,mBAKL3E,KAAK4E,iBAOL5E,KAAK0E,KAAOA,EAOZ1E,KAAKoB,OAAS,IAClB,CAOE,cAAAyD,GACE7E,KAAK4E,kBAAmB,CAC5B,CAME,eAAAE,GACE9E,KAAK2E,oBAAqB,CAC9B,EAMO,SAASG,EAAgBC,GAC9BA,EAAID,iBACN,CCxCA,MAAME,UAAelF,EAInB,WAAAC,CAAYqB,GACV6D,QAMAjF,KAAKkF,aAAe9D,EAMpBpB,KAAKmF,iBAAmB,KAMxBnF,KAAKoF,aAAe,KAMpBpF,KAAKqF,WAAa,IACtB,CAME,gBAAAC,CAAiBZ,EAAMa,GACrB,IAAKb,IAASa,EACZ,OAEF,MAAMC,EAAYxF,KAAKqF,aAAerF,KAAKqF,WAAa,CAAA,GAClDI,EAAmBD,EAAUd,KAAUc,EAAUd,GAAQ,IAC1De,EAAiBC,SAASH,IAC7BE,EAAiBE,KAAKJ,EAE5B,CAYE,aAAAK,CAAcC,GACZ,MAAMC,EAA4B,iBAAVD,EAClBnB,EAAOoB,EAAWD,EAAQA,EAAMnB,KAChCc,EAAYxF,KAAKqF,YAAcrF,KAAKqF,WAAWX,GACrD,IAAKc,EACH,OAGF,MAAMT,EAAMe,EAAW,IAAIC,EAAMF,GAA+B,EAC3Dd,EAAI3D,SACP2D,EAAI3D,OAASpB,KAAKkF,cAAgBlF,MAEpC,MAAMgG,EAAchG,KAAKoF,eAAiBpF,KAAKoF,aAAe,CAAA,GACxDa,EACJjG,KAAKmF,mBAAqBnF,KAAKmF,iBAAmB,CAAA,GAMpD,IAAIe,EALExB,KAAQsB,IACZA,EAAYtB,GAAQ,EACpBuB,EAAgBvB,GAAQ,KAExBsB,EAAYtB,GAEd,IAAK,IAAInD,EAAI,EAAG4E,EAAKX,EAAU3E,OAAQU,EAAI4E,IAAM5E,EAU/C,GARE2E,EADE,gBAAiBV,EAAUjE,GAE3BiE,EAAUjE,GACV6E,YAAYrB,GAGZS,EAAUjE,GACVkC,KAAKzD,KAAM+E,IAEG,IAAdmB,GAAuBnB,EAAIJ,mBAAoB,CACjDuB,GAAY,EACZ,KACR,CAEI,GAA4B,KAAtBF,EAAYtB,GAAa,CAC7B,IAAI2B,EAAKJ,EAAgBvB,GAEzB,WADOuB,EAAgBvB,GAChB2B,KACLrG,KAAKsG,oBAAoB5B,EAAM1B,UAE1BgD,EAAYtB,EACzB,CACI,OAAOwB,CACX,CAME,eAAA/F,GACEH,KAAKqF,YAAchB,EAAMrE,KAAKqF,WAClC,CASE,YAAAkB,CAAa7B,GACX,OAAQ1E,KAAKqF,YAAcrF,KAAKqF,WAAWX,SAAU8B,CACzD,CAOE,WAAAC,CAAY/B,GACV,QAAK1E,KAAKqF,aAGHX,EACHA,KAAQ1E,KAAKqF,WACbqB,OAAOC,KAAK3G,KAAKqF,YAAYxE,OAAS,EAC9C,CAME,mBAAAyF,CAAoB5B,EAAMa,GACxB,IAAKvF,KAAKqF,WACR,OAEF,MAAMG,EAAYxF,KAAKqF,WAAWX,GAClC,IAAKc,EACH,OAEF,MAAM5C,EAAQ4C,EAAUoB,QAAQrB,IAClB,IAAV3C,IACE5C,KAAKmF,kBAAoBT,KAAQ1E,KAAKmF,kBAExCK,EAAU5C,GAASI,IACjBhD,KAAKmF,iBAAiBT,KAExBc,EAAUqB,OAAOjE,EAAO,GACC,IAArB4C,EAAU3E,eACLb,KAAKqF,WAAWX,IAIjC,EC/IO,SAASoC,EAAO1F,EAAQsD,EAAMa,EAAUwB,EAASC,GACtD,GAAIA,EAAM,CACR,MAAMC,EAAmB1B,EAMzBA,EAAW,SAAUM,GAEnB,OADAzE,EAAOkF,oBAAoB5B,EAAMa,GAC1B0B,EAAiBxD,KAAKsD,GAAW/G,KAAM6F,EAC/C,CACL,MAAakB,GAAWA,IAAY3F,IAChCmE,EAAWA,EAAS2B,KAAKH,IAE3B,MAAMI,EAAY,CAChB/F,OAAQA,EACRsD,KAAMA,EACNa,SAAUA,GAGZ,OADAnE,EAAOkE,iBAAiBZ,EAAMa,GACvB4B,CACT,CAsBO,SAASC,EAAWhG,EAAQsD,EAAMa,EAAUwB,GACjD,OAAOD,EAAO1F,EAAQsD,EAAMa,EAAUwB,GAAS,EACjD,CAWO,SAASM,EAAcC,GACxBA,GAAOA,EAAIlG,SACbkG,EAAIlG,OAAOkF,oBAAoBgB,EAAI5C,KAAM4C,EAAI/B,UAC7ClB,EAAMiD,GAEV,CCpEA,MAAMC,UAAmBC,EACvB,WAAAzH,GACEkF,QAEAjF,KAAKyH,GAEDzH,KACD,WAEHA,KAAKgH,KAEDhH,KACD,aAEHA,KAAK0H,GAAiD1H,KAAe,WAMrEA,KAAK2H,UAAY,CACrB,CAME,OAAAC,KACI5H,KAAK2H,UACP3H,KAAK4F,cAAc/F,EACvB,CAQE,WAAAgI,GACE,OAAO7H,KAAK2H,SAChB,CAQE,UAAAG,CAAWpD,EAAMa,GACf,GAAIvD,MAAMC,QAAQyC,GAAO,CACvB,MAAMqD,EAAMrD,EAAK7D,OACX8F,EAAO,IAAI3E,MAAM+F,GACvB,IAAK,IAAIxG,EAAI,EAAGA,EAAIwG,IAAOxG,EACzBoF,EAAKpF,GAAKuF,EAAO9G,KAAM0E,EAAKnD,GAAIgE,GAElC,OAAOoB,CACb,CACI,OAAOG,EAAO9G,OAAoCuF,EACtD,CAQE,YAAAyC,CAAatD,EAAMa,GACjB,IAAI+B,EACJ,GAAItF,MAAMC,QAAQyC,GAAO,CACvB,MAAMqD,EAAMrD,EAAK7D,OACjByG,EAAM,IAAItF,MAAM+F,GAChB,IAAK,IAAIxG,EAAI,EAAGA,EAAIwG,IAAOxG,EACzB+F,EAAI/F,GAAK6F,EAAWpH,KAAM0E,EAAKnD,GAAIgE,EAE3C,MACM+B,EAAMF,EAAWpH,KAA6B,EAAOuF,GAGvD,OADsB,EAAW0C,OAASX,EACnCA,CACX,CAQE,UAAAY,CAAWxD,EAAMa,GACf,MAAM+B,EAA4B,EAAWW,OAC7C,GAAIX,EACFa,EAAQb,QACH,GAAItF,MAAMC,QAAQyC,GACvB,IAAK,IAAInD,EAAI,EAAG4E,EAAKzB,EAAK7D,OAAQU,EAAI4E,IAAM5E,EAC1CvB,KAAKsG,oBAAoB5B,EAAKnD,GAAIgE,QAGpCvF,KAAKsG,oBAAoB5B,EAAMa,EAErC,EA0CO,SAAS4C,EAAQb,GACtB,GAAItF,MAAMC,QAAQqF,GAChB,IAAK,IAAI/F,EAAI,EAAG4E,EAAKmB,EAAIzG,OAAQU,EAAI4E,IAAM5E,EACzC8F,EAAcC,EAAI/F,SAGpB8F,EAA8D,EAElE,CCrLO,SAASe,IACd,MAAM,IAAIC,MAAM,iCAClB,CD8IAd,EAAWhE,UAAUkE,GAYrBF,EAAWhE,UAAUyD,KASrBO,EAAWhE,UAAUmE,GC5JrB,IAAIY,EAAc,EAWX,SAASC,EAAOC,GACrB,OAAOA,EAAIC,SAAWD,EAAIC,OAASC,SAASJ,GAC9C,CChBO,MAAMK,UAAoB5C,EAM/B,WAAAhG,CAAY2E,EAAM4C,EAAKsB,GACrB3D,MAAMP,GAON1E,KAAKsH,IAAMA,EAQXtH,KAAK4I,SAAWA,CACpB,EAqDA,MAAMC,UAAmBtB,EAIvB,WAAAxH,CAAY+I,GACV7D,QAKAjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAMLa,EAAOvI,MAMPA,KAAK+I,QAAU,UAEAvC,IAAXsC,GACF9I,KAAKgJ,cAAcF,EAEzB,CAQE,GAAAG,CAAI3B,GACF,IAAIvD,EAIJ,OAHI/D,KAAK+I,SAAW/I,KAAK+I,QAAQG,eAAe5B,KAC9CvD,EAAQ/D,KAAK+I,QAAQzB,IAEhBvD,CACX,CAOE,OAAAoF,GACE,OAAQnJ,KAAK+I,SAAWrC,OAAOC,KAAK3G,KAAK+I,UAAa,EAC1D,CAOE,aAAAK,GACE,OAAQpJ,KAAK+I,SAAWrC,OAAO2C,OAAO,GAAIrJ,KAAK+I,UAAa,CAAE,CAClE,CAME,qBAAAO,GACE,OAAOtJ,KAAK+I,OAChB,CAKE,aAAAQ,GACE,QAASvJ,KAAK+I,OAClB,CAME,MAAAS,CAAOlC,EAAKsB,GACV,IAAIa,EACJA,EAAY,UAAUnC,IAClBtH,KAAKyG,YAAYgD,IACnBzJ,KAAK4F,cAAc,IAAI+C,EAAYc,EAAWnC,EAAKsB,IAErDa,EAAY7J,EACRI,KAAKyG,YAAYgD,IACnBzJ,KAAK4F,cAAc,IAAI+C,EAAYc,EAAWnC,EAAKsB,GAEzD,CAME,iBAAAc,CAAkBpC,EAAK/B,GACrBvF,KAAKsF,iBAAiB,UAAUgC,IAAO/B,EAC3C,CAME,oBAAAoE,CAAqBrC,EAAK/B,GACxBvF,KAAKsG,oBAAoB,UAAUgB,IAAO/B,EAC9C,CASE,GAAAqE,CAAItC,EAAKvD,EAAO8F,GACd,MAAMf,EAAS9I,KAAK+I,UAAY/I,KAAK+I,QAAU,CAAA,GAC/C,GAAIc,EACFf,EAAOxB,GAAOvD,MACT,CACL,MAAM6E,EAAWE,EAAOxB,GACxBwB,EAAOxB,GAAOvD,EACV6E,IAAa7E,GACf/D,KAAKwJ,OAAOlC,EAAKsB,EAEzB,CACA,CASE,aAAAI,CAAcF,EAAQe,GACpB,IAAK,MAAMvC,KAAOwB,EAChB9I,KAAK4J,IAAItC,EAAKwB,EAAOxB,GAAMuC,EAEjC,CAOE,eAAAC,CAAgBC,GACTA,EAAOhB,SAGZrC,OAAO2C,OAAOrJ,KAAK+I,UAAY/I,KAAK+I,QAAU,CAAE,GAAGgB,EAAOhB,QAC9D,CAQE,KAAAiB,CAAM1C,EAAKuC,GACT,GAAI7J,KAAK+I,SAAWzB,KAAOtH,KAAK+I,QAAS,CACvC,MAAMH,EAAW5I,KAAK+I,QAAQzB,UACvBtH,KAAK+I,QAAQzB,GAChB9C,EAAQxE,KAAK+I,WACf/I,KAAK+I,QAAU,MAEZc,GACH7J,KAAKwJ,OAAOlC,EAAKsB,EAEzB,CACA,EClQA,MAAMqB,EACI,SASH,MAAMC,UAAwBnE,EAMnC,WAAAhG,CAAY2E,EAAMyF,EAASvH,GACzBqC,MAAMP,GAON1E,KAAKmK,QAAUA,EAOfnK,KAAK4C,MAAQA,CACjB,EAgCA,MAAMwH,UAAmBvB,EAKvB,WAAA9I,CAAYsK,EAAOC,GAgCjB,GA/BArF,QAKAjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAEL4C,EAAUA,GAAW,CAAE,EAMvBtK,KAAKuK,UAAYD,EAAQE,OAMzBxK,KAAKyK,OAASJ,GAAgB,GAE1BrK,KAAKuK,QACP,IAAK,IAAIhJ,EAAI,EAAG4E,EAAKnG,KAAKyK,OAAO5J,OAAQU,EAAI4E,IAAM5E,EACjDvB,KAAK0K,cAAc1K,KAAKyK,OAAOlJ,GAAIA,GAIvCvB,KAAK2K,eACT,CAME,KAAAtG,GACE,KAAOrE,KAAK4K,YAAc,GACxB5K,KAAK6K,KAEX,CASE,MAAAhJ,CAAOV,GACL,IAAK,IAAII,EAAI,EAAG4E,EAAKhF,EAAIN,OAAQU,EAAI4E,IAAM5E,EACzCvB,KAAK2F,KAAKxE,EAAII,IAEhB,OAAOvB,IACX,CASE,OAAA8K,CAAQC,GACN,MAAMV,EAAQrK,KAAKyK,OACnB,IAAK,IAAIlJ,EAAI,EAAG4E,EAAKkE,EAAMxJ,OAAQU,EAAI4E,IAAM5E,EAC3CwJ,EAAEV,EAAM9I,GAAIA,EAAG8I,EAErB,CAUE,QAAAW,GACE,OAAOhL,KAAKyK,MAChB,CAQE,IAAAQ,CAAKrI,GACH,OAAO5C,KAAKyK,OAAO7H,EACvB,CAQE,SAAAgI,GACE,OAAO5K,KAAKiJ,IAAIgB,EACpB,CAQE,QAAAiB,CAAStI,EAAOuI,GACd,GAAIvI,EAAQ,GAAKA,EAAQ5C,KAAK4K,YAC5B,MAAM,IAAIvC,MAAM,wBAA0BzF,GAExC5C,KAAKuK,SACPvK,KAAK0K,cAAcS,GAErBnL,KAAKyK,OAAO5D,OAAOjE,EAAO,EAAGuI,GAC7BnL,KAAK2K,gBACL3K,KAAK4F,cACH,IAAIsE,EAAgBvK,EAAyBwL,EAAMvI,GAEzD,CAQE,GAAAiI,GACE,OAAO7K,KAAKoL,SAASpL,KAAK4K,YAAc,EAC5C,CAQE,IAAAjF,CAAKwF,GACCnL,KAAKuK,SACPvK,KAAK0K,cAAcS,GAErB,MAAM7J,EAAItB,KAAK4K,YAEf,OADA5K,KAAKkL,SAAS5J,EAAG6J,GACVnL,KAAK4K,WAChB,CAQE,MAAAS,CAAOF,GACL,MAAMhK,EAAMnB,KAAKyK,OACjB,IAAK,IAAIlJ,EAAI,EAAG4E,EAAKhF,EAAIN,OAAQU,EAAI4E,IAAM5E,EACzC,GAAIJ,EAAII,KAAO4J,EACb,OAAOnL,KAAKoL,SAAS7J,EAI7B,CASE,QAAA6J,CAASxI,GACP,GAAIA,EAAQ,GAAKA,GAAS5C,KAAK4K,YAC7B,OAEF,MAAMU,EAAOtL,KAAKyK,OAAO7H,GAQzB,OAPA5C,KAAKyK,OAAO5D,OAAOjE,EAAO,GAC1B5C,KAAK2K,gBACL3K,KAAK4F,cACT,IACYsE,EAAgBvK,EAA4B2L,EAAM1I,IAGnD0I,CACX,CAQE,KAAAC,CAAM3I,EAAOuI,GAEX,GAAIvI,GADM5C,KAAK4K,YAGb,YADA5K,KAAKkL,SAAStI,EAAOuI,GAGvB,GAAIvI,EAAQ,EACV,MAAM,IAAIyF,MAAM,wBAA0BzF,GAExC5C,KAAKuK,SACPvK,KAAK0K,cAAcS,EAAMvI,GAE3B,MAAM0I,EAAOtL,KAAKyK,OAAO7H,GACzB5C,KAAKyK,OAAO7H,GAASuI,EACrBnL,KAAK4F,cACT,IACYsE,EAAgBvK,EAA4B2L,EAAM1I,IAG1D5C,KAAK4F,cACT,IACYsE,EAAgBvK,EAAyBwL,EAAMvI,GAG3D,CAKE,aAAA+H,GACE3K,KAAK4J,IAAIK,EAAiBjK,KAAKyK,OAAO5J,OAC1C,CAOE,aAAA6J,CAAcS,EAAMK,GAClB,IAAK,IAAIjK,EAAI,EAAG4E,EAAKnG,KAAKyK,OAAO5J,OAAQU,EAAI4E,IAAM5E,EACjD,GAAIvB,KAAKyK,OAAOlJ,KAAO4J,GAAQ5J,IAAMiK,EACnC,MAAM,IAAInD,MAAM,8CAGxB,EC7Te,IAAAoD,EACP,EADOA,EAEJ,EAFIA,EAGL,EAHKA,EAQN,EARMA,EASN,ECNF,SAASC,EAAOC,GACrB,OAAOC,KAAKC,IAAIF,EAAG,EACrB,CAQO,SAASG,GAAQH,GACtB,OAAO,EAAID,EAAO,EAAIC,EACxB,CAQO,SAASI,GAASJ,GACvB,OAAO,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,CACjC,CAQO,SAASK,GAAOL,GACrB,OAAOA,CACT,CCkCA,MAAMM,WAAazE,EAMjB,WAAAzH,CAAYmM,EAAWC,EAAO7B,GAC5BrF,QAEAqF,EAAUA,GAAoB,CAAE,EAKhCtK,KAAKkM,UAAYA,EAMjBlM,KAAKmM,MAAQA,EAObnM,KAAKsH,IAAM,GAOXtH,KAAKoM,iBACoB5F,IAAvB8D,EAAQ+B,WAA2B,IAAM/B,EAAQ+B,WAQnDrM,KAAKsM,kBAAoB,CAAE,EAK3BtM,KAAKuM,cAAgBjC,EAAQiC,WACjC,CAKE,OAAA3E,GACE5H,KAAK4F,cAAc/F,EACvB,CAKE,OAAA2M,GAEExM,KAAKyM,SAAShB,EAClB,CAKE,MAAAiB,GACE,OAAO1M,KAAKsH,IAAM,IAAMtH,KAAKkM,SACjC,CAOE,YAAAS,GACE,OAAO3M,KAAKkM,SAChB,CAKE,QAAAU,GACE,OAAO5M,KAAKmM,KAChB,CAUE,QAAAM,CAASN,GACP,GAAInM,KAAKmM,QAAUV,EAAnB,CAIA,GAAIzL,KAAKmM,QAAUV,GAAmBzL,KAAKmM,MAAQA,EACjD,MAAM,IAAI9D,MAAM,gCAElBrI,KAAKmM,MAAQA,EACbnM,KAAK4H,SALT,CAMA,CASE,IAAAiF,GACEzE,GACJ,CAQE,QAAA0E,CAASC,EAAIC,GACX,IAAKhN,KAAKoM,YACR,OAAO,EAGT,IAAIa,EAAQjN,KAAKsM,kBAAkBS,GACnC,GAAKE,GAGE,QAAIA,EACT,OAAO,OAHPA,EAAQD,EACRhN,KAAKsM,kBAAkBS,GAAME,EAK/B,MAAMC,EAAQF,EAAOC,EAAQ,IAAO,GACpC,OAAIC,GAASlN,KAAKoM,YACT,EAEFV,EAAOwB,EAAQlN,KAAKoM,YAC/B,CASE,YAAAe,CAAaJ,GACX,QAAK/M,KAAKoM,cAG8B,IAAjCpM,KAAKsM,kBAAkBS,EAClC,CAME,aAAAK,CAAcL,GACR/M,KAAKoM,cACPpM,KAAKsM,kBAAkBS,IAAQ,EAErC,CAKE,eAAA5M,GACEH,KAAKwM,UACLvH,MAAM9E,iBACV,ECxPA,MAAMkN,GACiB,oBAAdC,gBAA4D,IAAxBA,UAAUC,UACjDD,UAAUC,UAAUC,cACpB,GAMOC,GAASJ,GAAG3H,SAAS,YAAc2H,GAAG3H,SAAS,SAM/CgI,GACXD,KACCJ,GAAG3H,SAAS,iBACX,wCAAwCiI,KAAKN,KAMpCO,GAASP,GAAG3H,SAAS,YAAc2H,GAAG3H,SAAS,QAM/CmI,GAAMR,GAAG3H,SAAS,aASlBoI,GACiB,oBAArBC,iBAAmCA,iBAAmB,EAOlDC,GACkB,oBAAtBC,mBACoB,oBAApBC,iBACPC,gBAAgBF,kBAMLG,GACM,oBAAVC,OAAyBA,MAAM9K,UAAU+K,OAMrCC,GAAmD,mBAAtBC,kBAK7BC,GAA0B,WACrC,IAAIC,GAAU,EACd,IACE,MAAMpE,EAAU5D,OAAOiI,eAAe,CAAA,EAAI,UAAW,CACnD1F,IAAK,WACHyF,GAAU,CACX,IAIHE,OAAOtJ,iBAAiB,IAAK,KAAMgF,GAEnCsE,OAAOtI,oBAAoB,IAAK,KAAMgE,EAC1C,CAAI,MAEJ,CACE,OAAOoE,CACR,CAjBsC,GCzDhC,SAASG,GAAsBC,EAAOC,EAAQC,EAAYC,GAE/D,IAAIC,EAeJ,OAbEA,EADEF,GAAcA,EAAWnO,OACgBmO,EAAWG,QAC7CnB,GACA,IAAIE,gBAAgBY,GAAS,IAAKC,GAAU,KAE5CK,SAASC,cAAc,UAE9BP,IACFI,EAAOJ,MAAQA,GAEbC,IACFG,EAAOH,OAASA,GAIhBG,EAAOI,WAAW,KAAML,EAE5B,CAGA,IAAIM,GAKG,SAASC,KAId,OAHKD,KACHA,GAAsBV,GAAsB,EAAG,IAE1CU,EACT,CAOO,SAASE,GAAcC,GAC5B,MAAMR,EAASQ,EAAQR,OACvBA,EAAOJ,MAAQ,EACfI,EAAOH,OAAS,EAChBW,EAAQC,UAAU,EAAG,EAAG,EAAG,EAC7B,CASO,SAASC,GAAWzF,GACzB,IAAI2E,EAAQ3E,EAAQ0F,YACpB,MAAMC,EAAQC,iBAAiB5F,GAG/B,OAFA2E,GAASkB,SAASF,EAAMG,WAAY,IAAMD,SAASF,EAAMI,YAAa,IAE/DpB,CACT,CASO,SAASqB,GAAYhG,GAC1B,IAAI4E,EAAS5E,EAAQiG,aACrB,MAAMN,EAAQC,iBAAiB5F,GAG/B,OAFA4E,GAAUiB,SAASF,EAAMO,UAAW,IAAML,SAASF,EAAMQ,aAAc,IAEhEvB,CACT,CAMO,SAASwB,GAAYC,EAASC,GACnC,MAAMC,EAASD,EAAQE,WACnBD,GACFA,EAAOE,aAAaJ,EAASC,EAEjC,CAKO,SAASI,GAAeC,GAC7B,KAAOA,EAAKC,WACVD,EAAKC,UAAU1F,QAEnB,CAUO,SAAS2F,GAAgBF,EAAMG,GACpC,MAAMC,EAAcJ,EAAKK,WAEzB,IAAK,IAAI5P,EAAI,KAAWA,EAAG,CACzB,MAAM6P,EAAWF,EAAY3P,GACvB8P,EAAWJ,EAAS1P,GAG1B,IAAK6P,IAAaC,EAChB,MAIED,IAAaC,IAKZD,EAMAC,EAOLP,EAAKQ,aAAaD,EAAUD,IAN1BN,EAAKS,YAAYH,KACf7P,GAPFuP,EAAKU,YAAYH,GAavB,CACA,CCjIO,SAASI,GAAY3P,GAC1B,OAAOA,aAAgBuM,OACrBvM,aAAgB4P,mBAChB5P,aAAgB6P,kBAChB7P,aAAgB8P,YACd9P,EACA,IACN,CAMO,SAAS+P,GAAY/P,GAC1B,OAAOA,aAAgBgQ,YACrBhQ,aAAgBiQ,mBAChBjQ,aAAgBkQ,cAChBlQ,aAAgBmQ,SACdnQ,EACA,IACN,CAKO,MAAMoQ,GAAgB,IAAI7J,MAAM,YAKvC,IAAI8J,GAAgB,KAMb,SAASC,GAAQC,GACjBF,KACHA,GAAgBtD,GACdwD,EAAMvD,MACNuD,EAAMtD,YACNvI,EACA,CAAC8L,oBAAoB,KAGzB,MAAMpD,EAASiD,GAAcjD,OACvBJ,EAAQuD,EAAMvD,MAChBI,EAAOJ,QAAUA,IACnBI,EAAOJ,MAAQA,GAEjB,MAAMC,EAASsD,EAAMtD,OAMrB,OALIG,EAAOH,SAAWA,IACpBG,EAAOH,OAASA,GAElBoD,GAAcxC,UAAU,EAAG,EAAGb,EAAOC,GACrCoD,GAAcI,UAAUF,EAAO,EAAG,GAC3BF,GAAcK,aAAa,EAAG,EAAG1D,EAAOC,GAAQjN,IACzD,CAKA,MAAM2Q,GAAc,CAAC,IAAK,KAgB1B,MAAMC,WAAiBzG,GAIrB,WAAAlM,CAAYuK,GACV,MAAM6B,EAAQV,EAEdxG,MAAMqF,EAAQ4B,UAAWC,EAAO,CAC9BE,WAAY/B,EAAQ+B,WACpBE,YAAajC,EAAQiC,cAOvBvM,KAAK2S,QAAUrI,EAAQsI,OAMvB5S,KAAK6S,MAAQ,KAMb7S,KAAK8S,OAAS,KAMd9S,KAAK+S,MAAQzI,EAAQ0I,MAAQ,KAM7BhT,KAAKiT,YAAc3I,EAAQ4I,YAAc,IAC7C,CAME,OAAAC,GACE,GAAInT,KAAK+S,MACP,OAAO/S,KAAK+S,MAEd,MAAMK,EAAY3B,GAAYzR,KAAK6S,OACnC,OAAIO,EACK,CAACA,EAAUtE,MAAOsE,EAAUrE,QAE9B0D,EACX,CAOE,OAAAY,GACE,OAAOrT,KAAK6S,KAChB,CAOE,QAAAS,GACE,OAAOtT,KAAK8S,MAChB,CAOE,IAAAjG,GACE,GAAI7M,KAAKmM,QAAUV,GAAkBzL,KAAKmM,QAAUV,EAClD,OAEFzL,KAAKmM,MAAQV,EACbzL,KAAK4H,UAEL,MAAMuG,EAAOnO,KACbA,KAAK2S,UACFY,MAAK,SAAUzR,GACdqM,EAAK0E,MAAQ/Q,EACbqM,EAAKhC,MAAQV,EACb0C,EAAKvG,SACN,IACA4L,OAAM,SAAUC,GACftF,EAAK2E,OAASW,EACdtF,EAAKhC,MAAQV,EACb0C,EAAKvG,SACb,GACA,CAME,eAAAzH,GACMH,KAAKiT,cACPjT,KAAKiT,YAAYS,MAAMxB,IACvBlS,KAAKiT,YAAc,MAErBhO,MAAM9E,iBACV,EC9MO,SAASwT,GAAOC,EAAWC,GAChC,IAAKD,EACH,MAAM,IAAIvL,MAAMwL,EAEpB,CC8DA,MAAMC,WAAgBjL,EAOpB,WAAA9I,CAAYgU,GAmDV,GAlDA9O,QAKAjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAKgU,SAAMxN,EAMXxG,KAAKiU,cAAgB,WAOrBjU,KAAKkU,OAAS,KAMdlU,KAAKmU,oBAAiB3N,EAMtBxG,KAAKoU,mBAAqB,KAE1BpU,KAAK0J,kBAAkB1J,KAAKiU,cAAejU,KAAKqU,wBAE5CN,EACF,GAGQ,mBADa,EAC3B,sBACQ,CACA,MAAMO,EAAoC,EAC1CtU,KAAKuU,YAAYD,EACzB,KAAa,CAEL,MAAME,EAAaT,EACnB/T,KAAKgJ,cAAcwL,EAC3B,CAEA,CAQE,KAAAC,GACE,MAAMA,EAAK,IACLX,GAAQ9T,KAAKuJ,gBAAkBvJ,KAAKoJ,gBAAkB,MAE5DqL,EAAMC,gBAAgB1U,KAAK2U,mBAC3B,MAAML,EAAWtU,KAAK4U,cAClBN,GACFG,EAAMF,YAAqCD,EAASG,SAEtD,MAAM3E,EAAQ9P,KAAK6U,WAInB,OAHI/E,GACF2E,EAAMK,SAAShF,GAEV2E,CACX,CAUE,WAAAG,GACE,OAA0C5U,KAAKiJ,IAAIjJ,KAAKiU,cAC5D,CASE,KAAAc,GACE,OAAO/U,KAAKgU,GAChB,CASE,eAAAW,GACE,OAAO3U,KAAKiU,aAChB,CAQE,QAAAY,GACE,OAAO7U,KAAKkU,MAChB,CAQE,gBAAAc,GACE,OAAOhV,KAAKmU,cAChB,CAKE,qBAAAc,GACEjV,KAAK4H,SACT,CAKE,sBAAAyM,GACMrU,KAAKoU,qBACP/M,EAAcrH,KAAKoU,oBACnBpU,KAAKoU,mBAAqB,MAE5B,MAAME,EAAWtU,KAAK4U,cAClBN,IACFtU,KAAKoU,mBAAqBtN,EACxBwN,EACAzU,EACAG,KAAKiV,sBACLjV,OAGJA,KAAK4H,SACT,CASE,WAAA2M,CAAYD,GACVtU,KAAK4J,IAAI5J,KAAKiU,cAAeK,EACjC,CAWE,QAAAQ,CAAShF,GACP9P,KAAKkU,OAASpE,EACd9P,KAAKmU,eAAkBrE,EAAoBoF,GAAoBpF,QAAhCtJ,EAC/BxG,KAAK4H,SACT,CAWE,KAAAuN,CAAMpI,GACJ/M,KAAKgU,IAAMjH,EACX/M,KAAK4H,SACT,CASE,eAAA8M,CAAgBU,GACdpV,KAAK2J,qBAAqB3J,KAAKiU,cAAejU,KAAKqU,wBACnDrU,KAAKiU,cAAgBmB,EACrBpV,KAAK0J,kBAAkB1J,KAAKiU,cAAejU,KAAKqU,wBAChDrU,KAAKqU,wBACT,EAWO,SAASa,GAAoB1M,GAClC,GAAmB,mBAARA,EACT,OAAOA,EAKT,IAAI6M,EACJ,GAAIrT,MAAMC,QAAQuG,GAChB6M,EAAS7M,MACJ,CACLmL,GACgD,mBAArB,EAAe,UACxC,mEAGF0B,EAAS,CADwD,EAErE,CACE,OAAO,WACL,OAAOA,CACR,CACH,CCvUe,IAAAC,GACJ,EADIA,GAEC,EAFDA,GAGN,EAHMA,GAIN,EAJMA,GAKN,EALMA,GAMP,GCSD,SAASC,GAAeC,GAC7B,MAAMC,EAASC,KACf,IAAK,IAAInU,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EACjDoU,GAAiBF,EAAQD,EAAYjU,IAEvC,OAAOkU,CACT,CAyBO,SAASG,GAAOH,EAAQ1R,EAAO8R,GACpC,OAAIA,GACFA,EAAK,GAAKJ,EAAO,GAAK1R,EACtB8R,EAAK,GAAKJ,EAAO,GAAK1R,EACtB8R,EAAK,GAAKJ,EAAO,GAAK1R,EACtB8R,EAAK,GAAKJ,EAAO,GAAK1R,EACf8R,GAEF,CACLJ,EAAO,GAAK1R,EACZ0R,EAAO,GAAK1R,EACZ0R,EAAO,GAAK1R,EACZ0R,EAAO,GAAK1R,EAEhB,CASO,SAAS0Q,GAAMgB,EAAQI,GAC5B,OAAIA,GACFA,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACVI,GAEFJ,EAAOjS,OAChB,CAQO,SAASsS,GAAyBL,EAAQM,EAAGC,GAClD,IAAIC,EAAIC,EAeR,OAbED,EADEF,EAAIN,EAAO,GACRA,EAAO,GAAKM,EACRN,EAAO,GAAKM,EAChBA,EAAIN,EAAO,GAEX,EAGLS,EADEF,EAAIP,EAAO,GACRA,EAAO,GAAKO,EACRP,EAAO,GAAKO,EAChBA,EAAIP,EAAO,GAEX,EAEAQ,EAAKA,EAAKC,EAAKA,CACxB,CAUO,SAASC,GAAmBV,EAAQW,GACzC,OAAOC,GAAWZ,EAAQW,EAAW,GAAIA,EAAW,GACtD,CAcO,SAASE,GAAeC,EAASC,GACtC,OACED,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,EAE1B,CAWO,SAASF,GAAWZ,EAAQM,EAAGC,GACpC,OAAOP,EAAO,IAAMM,GAAKA,GAAKN,EAAO,IAAMA,EAAO,IAAMO,GAAKA,GAAKP,EAAO,EAC3E,CASO,SAASgB,GAAuBhB,EAAQW,GAC7C,MAAMM,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdoB,EAAOpB,EAAO,GACdM,EAAIK,EAAW,GACfJ,EAAII,EAAW,GACrB,IAAIU,EAAexB,GAcnB,OAbIS,EAAIW,EACNI,GAA8BxB,GACrBS,EAAIa,IACbE,GAA8BxB,IAE5BU,EAAIW,EACNG,GAA8BxB,GACrBU,EAAIa,IACbC,GAA8BxB,IAE5BwB,IAAiBxB,KACnBwB,EAAexB,IAEVwB,CACT,CAOO,SAASpB,KACd,MAAO,CAACqB,IAAUA,KAAWA,KAAWA,IAC1C,CAWO,SAASC,GAAeN,EAAMC,EAAMC,EAAMC,EAAMhB,GACrD,OAAIA,GACFA,EAAK,GAAKa,EACVb,EAAK,GAAKc,EACVd,EAAK,GAAKe,EACVf,EAAK,GAAKgB,EACHhB,GAEF,CAACa,EAAMC,EAAMC,EAAMC,EAC5B,CAOO,SAASI,GAAoBpB,GAClC,OAAOmB,GAAeD,IAAUA,KAAWA,KAAWA,IAAUlB,EAClE,CAOO,SAASqB,GAA6Bd,EAAYP,GACvD,MAAME,EAAIK,EAAW,GACfJ,EAAII,EAAW,GACrB,OAAOY,GAAejB,EAAGC,EAAGD,EAAGC,EAAGH,EACpC,CAoBO,SAASsB,GACdC,EACAC,EACA1V,EACA2V,EACAzB,GAGA,OAAO0B,GADQN,GAAoBpB,GACEuB,EAAiBC,EAAQ1V,EAAK2V,EACrE,CAmBO,SAASpV,GAAOqU,EAASC,GAC9B,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CASO,SAASgB,GAAoBjB,EAASC,EAASiB,GACpD,OACE7L,KAAK8L,IAAInB,EAAQ,GAAKC,EAAQ,IAAMiB,GACpC7L,KAAK8L,IAAInB,EAAQ,GAAKC,EAAQ,IAAMiB,GACpC7L,KAAK8L,IAAInB,EAAQ,GAAKC,EAAQ,IAAMiB,GACpC7L,KAAK8L,IAAInB,EAAQ,GAAKC,EAAQ,IAAMiB,CAExC,CASO,SAAS5V,GAAO0U,EAASC,GAa9B,OAZIA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEhBD,CACT,CAMO,SAASZ,GAAiBF,EAAQW,GACnCA,EAAW,GAAKX,EAAO,KACzBA,EAAO,GAAKW,EAAW,IAErBA,EAAW,GAAKX,EAAO,KACzBA,EAAO,GAAKW,EAAW,IAErBA,EAAW,GAAKX,EAAO,KACzBA,EAAO,GAAKW,EAAW,IAErBA,EAAW,GAAKX,EAAO,KACzBA,EAAO,GAAKW,EAAW,GAE3B,CAOO,SAASuB,GAAkBlC,EAAQD,GACxC,IAAK,IAAIjU,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EACjDoU,GAAiBF,EAAQD,EAAYjU,IAEvC,OAAOkU,CACT,CAUO,SAAS8B,GACd9B,EACA2B,EACAC,EACA1V,EACA2V,GAEA,KAAOD,EAAS1V,EAAK0V,GAAUC,EAC7BM,GAASnC,EAAQ2B,EAAgBC,GAASD,EAAgBC,EAAS,IAErE,OAAO5B,CACT,CAOO,SAASoC,GAAYpC,EAAQqC,GAClC,IAAK,IAAIvW,EAAI,EAAG4E,EAAK2R,EAAMjX,OAAQU,EAAI4E,IAAM5E,EAC3CoW,GAAkBlC,EAAQqC,EAAMvW,IAElC,OAAOkU,CACT,CAOO,SAASmC,GAASnC,EAAQM,EAAGC,GAClCP,EAAO,GAAK7J,KAAKmM,IAAItC,EAAO,GAAIM,GAChCN,EAAO,GAAK7J,KAAKmM,IAAItC,EAAO,GAAIO,GAChCP,EAAO,GAAK7J,KAAKoM,IAAIvC,EAAO,GAAIM,GAChCN,EAAO,GAAK7J,KAAKoM,IAAIvC,EAAO,GAAIO,EAClC,CAWO,SAASiC,GAAcxC,EAAQyC,GACpC,IAAIC,EAEJ,OADAA,EAAMD,EAASE,GAAc3C,IACzB0C,IAGJA,EAAMD,EAASG,GAAe5C,IAC1B0C,IAGJA,EAAMD,EAASI,GAAY7C,IACvB0C,IAGJA,EAAMD,EAASK,GAAW9C,IACtB0C,IAGG,IACT,CAQO,SAASK,GAAQ/C,GACtB,IAAIgD,EAAO,EAIX,OAHKjU,GAAQiR,KACXgD,EAAOC,GAASjD,GAAUkD,GAAUlD,IAE/BgD,CACT,CAQO,SAASL,GAAc3C,GAC5B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAAS4C,GAAe5C,GAC7B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASmD,GAAUnD,GACxB,MAAO,EAAEA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,EACjE,CAQO,SAASoD,GAAUpD,EAAQqD,GAChC,IAAI1C,EACJ,GAAe,gBAAX0C,EACF1C,EAAagC,GAAc3C,QACtB,GAAe,iBAAXqD,EACT1C,EAAaiC,GAAe5C,QACvB,GAAe,aAAXqD,EACT1C,EAAamC,GAAW9C,OACnB,IAAe,cAAXqD,EAGT,MAAM,IAAIzQ,MAAM,kBAFhB+N,EAAakC,GAAY7C,EAG7B,CACE,OAAOW,CACT,CAuBO,SAAS2C,GAAkBC,EAAQC,EAAYC,EAAUlG,EAAM6C,GACpE,MAAOsD,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAMC,GACvCX,EACAC,EACAC,EACAlG,GAEF,OAAOgE,GACLpL,KAAKmM,IAAIoB,EAAIE,EAAIE,EAAIE,GACrB7N,KAAKmM,IAAIqB,EAAIE,EAAIE,EAAIE,GACrB9N,KAAKoM,IAAImB,EAAIE,EAAIE,EAAIE,GACrB7N,KAAKoM,IAAIoB,EAAIE,EAAIE,EAAIE,GACrB7D,EAEJ,CASO,SAAS8D,GAAmBX,EAAQC,EAAYC,EAAUlG,GAC/D,MAAMiD,EAAMgD,EAAajG,EAAK,GAAM,EAC9BkD,EAAM+C,EAAajG,EAAK,GAAM,EAC9B4G,EAAchO,KAAKiO,IAAIX,GACvBY,EAAclO,KAAKmO,IAAIb,GACvBc,EAAO/D,EAAK2D,EACZK,EAAOhE,EAAK6D,EACZI,EAAOhE,EAAK0D,EACZO,EAAOjE,EAAK4D,EACZ/D,EAAIiD,EAAO,GACXhD,EAAIgD,EAAO,GACjB,MAAO,CACLjD,EAAIiE,EAAOG,EACXnE,EAAIiE,EAAOC,EACXnE,EAAIiE,EAAOG,EACXnE,EAAIiE,EAAOC,EACXnE,EAAIiE,EAAOG,EACXnE,EAAIiE,EAAOC,EACXnE,EAAIiE,EAAOG,EACXnE,EAAIiE,EAAOC,EACXnE,EAAIiE,EAAOG,EACXnE,EAAIiE,EAAOC,EAEf,CAQO,SAASvB,GAAUlD,GACxB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CAoBO,SAAS2E,GAAgB7D,EAASC,EAASX,GAChD,MAAMwE,EAAexE,GAvZd,CAACkB,IAAUA,KAAU,KAAW,KAgbvC,OAxBIuD,GAAW/D,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvB6D,EAAa,GAAK9D,EAAQ,GAE1B8D,EAAa,GAAK7D,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB6D,EAAa,GAAK9D,EAAQ,GAE1B8D,EAAa,GAAK7D,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB6D,EAAa,GAAK9D,EAAQ,GAE1B8D,EAAa,GAAK7D,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB6D,EAAa,GAAK9D,EAAQ,GAE1B8D,EAAa,GAAK7D,EAAQ,IAG5BS,GAAoBoD,GAEfA,CACT,CA0BO,SAAS9B,GAAW9C,GACzB,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAAS6C,GAAY7C,GAC1B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASiD,GAASjD,GACvB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CASO,SAAS6E,GAAW/D,EAASC,GAClC,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CAQO,SAAShS,GAAQiR,GACtB,OAAOA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,EACrD,CAOO,SAAS8E,GAAe9E,EAAQI,GACrC,OAAIA,GACFA,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACVI,GAEFJ,CACT,CAMO,SAAS+E,GAAgB/E,EAAQ1R,GACtC,MAAM0W,GAAWhF,EAAO,GAAKA,EAAO,IAAM,GAAM1R,EAAQ,GAClD2W,GAAWjF,EAAO,GAAKA,EAAO,IAAM,GAAM1R,EAAQ,GACxD0R,EAAO,IAAMgF,EACbhF,EAAO,IAAMgF,EACbhF,EAAO,IAAMiF,EACbjF,EAAO,IAAMiF,CACf,CAUO,SAASC,GAAkBlF,EAAQxI,EAAOtL,GAC/C,IAAI2Y,GAAa,EACjB,MAAMM,EAAWnE,GAAuBhB,EAAQxI,GAC1C4N,EAASpE,GAAuBhB,EAAQ9T,GAC9C,GACEiZ,IAAatF,IACbuF,IAAWvF,GAEXgF,GAAa,MACR,CACL,MAAM5D,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdoB,EAAOpB,EAAO,GACdqF,EAAS7N,EAAM,GACf8N,EAAS9N,EAAM,GACf+N,EAAOrZ,EAAI,GACXsZ,EAAOtZ,EAAI,GACXuZ,GAASD,EAAOF,IAAWC,EAAOF,GACxC,IAAI/E,EAAGC,EACA6E,EAASvF,MAAyBsF,EAAWtF,MAElDS,EAAIiF,GAAQC,EAAOpE,GAAQqE,EAC3BZ,EAAavE,GAAKW,GAAQX,GAAKa,GAG9B0D,KACEO,EAASvF,KACVsF,EAAWtF,KAGbU,EAAIiF,GAAQD,EAAOpE,GAAQsE,EAC3BZ,EAAatE,GAAKW,GAAQX,GAAKa,GAG9ByD,KACEO,EAASvF,KACVsF,EAAWtF,KAGbS,EAAIiF,GAAQC,EAAOtE,GAAQuE,EAC3BZ,EAAavE,GAAKW,GAAQX,GAAKa,GAG9B0D,KACEO,EAASvF,KACVsF,EAAWtF,KAGbU,EAAIiF,GAAQD,EAAOtE,GAAQwE,EAC3BZ,EAAatE,GAAKW,GAAQX,GAAKa,EAErC,CACE,OAAOyD,CACT,CAaO,SAASa,GAAe1F,EAAQ2F,EAAavF,EAAMwF,GACxD,GAAI7W,GAAQiR,GACV,OAAOwB,GAAoBpB,GAE7B,IAAIL,EAAc,GAClB,GAAI6F,EAAQ,EAAG,CACb,MAAMvM,EAAQ2G,EAAO,GAAKA,EAAO,GAC3B1G,EAAS0G,EAAO,GAAKA,EAAO,GAClC,IAAK,IAAIlU,EAAI,EAAGA,EAAI8Z,IAAS9Z,EAC3BiU,EAAY7P,KACV8P,EAAO,GAAM3G,EAAQvN,EAAK8Z,EAC1B5F,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM1G,EAASxN,EAAK8Z,EAC3B5F,EAAO,GAAM3G,EAAQvN,EAAK8Z,EAC1B5F,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM1G,EAASxN,EAAK8Z,EAGnC,MACI7F,EAAc,CACZC,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGX2F,EAAY5F,EAAaA,EAAa,GACtC,MAAM8F,EAAK,GACLC,EAAK,GACX,IAAK,IAAIha,EAAI,EAAGia,EAAIhG,EAAY3U,OAAQU,EAAIia,EAAGja,GAAK,EAClD+Z,EAAG3V,KAAK6P,EAAYjU,IACpBga,EAAG5V,KAAK6P,EAAYjU,EAAI,IAE1B,OA1yBF,SAA4B+Z,EAAIC,EAAI1F,GAKlC,OAAOmB,GAJMpL,KAAKmM,IAAInU,MAAM,KAAM0X,GACrB1P,KAAKmM,IAAInU,MAAM,KAAM2X,GACrB3P,KAAKoM,IAAIpU,MAAM,KAAM0X,GACrB1P,KAAKoM,IAAIpU,MAAM,KAAM2X,GACY1F,EAChD,CAoyBS4F,CAAmBH,EAAIC,EAAI1F,EACpC,CAUO,SAAS6F,GAAMjG,EAAQkG,GAC5B,MAAMC,EAAmBD,EAAWE,YAC9B7C,EAASJ,GAAUnD,GACzB,GACEkG,EAAWG,aACV9C,EAAO,GAAK4C,EAAiB,IAAM5C,EAAO,IAAM4C,EAAiB,IAClE,CACA,MAAMG,EAAarD,GAASkD,GAItBvE,EAHazL,KAAKoQ,OACrBhD,EAAO,GAAK4C,EAAiB,IAAMG,GAEVA,EAC5BtG,EAAO,IAAM4B,EACb5B,EAAO,IAAM4B,CACjB,CACE,OAAO5B,CACT,CAeO,SAASwG,GAAcxG,EAAQkG,EAAYO,GAChD,GAAIP,EAAWG,WAAY,CACzB,MAAMF,EAAmBD,EAAWE,YAEpC,IAAKM,SAAS1G,EAAO,MAAQ0G,SAAS1G,EAAO,IAC3C,MAAO,CAAC,CAACmG,EAAiB,GAAInG,EAAO,GAAImG,EAAiB,GAAInG,EAAO,KAGvEiG,GAAMjG,EAAQkG,GACd,MAAMI,EAAarD,GAASkD,GAE5B,GAAIlD,GAASjD,GAAUsG,IAAeG,EAEpC,MAAO,CAAC,CAACN,EAAiB,GAAInG,EAAO,GAAImG,EAAiB,GAAInG,EAAO,KAEvE,GAAIA,EAAO,GAAKmG,EAAiB,GAE/B,MAAO,CACL,CAACnG,EAAO,GAAKsG,EAAYtG,EAAO,GAAImG,EAAiB,GAAInG,EAAO,IAChE,CAACmG,EAAiB,GAAInG,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAGvD,GAAIA,EAAO,GAAKmG,EAAiB,GAE/B,MAAO,CACL,CAACnG,EAAO,GAAIA,EAAO,GAAImG,EAAiB,GAAInG,EAAO,IACnD,CAACmG,EAAiB,GAAInG,EAAO,GAAIA,EAAO,GAAKsG,EAAYtG,EAAO,IAGxE,CAEE,MAAO,CAACA,EACV,CC94BO,SAAS2G,GAAMrY,EAAOgU,EAAKC,GAChC,OAAOpM,KAAKmM,IAAInM,KAAKoM,IAAIjU,EAAOgU,GAAMC,EACxC,CAaO,SAASqE,GAAuBtG,EAAGC,EAAGqD,EAAIC,EAAIC,EAAIC,GACvD,MAAMvD,EAAKsD,EAAKF,EACVnD,EAAKsD,EAAKF,EAChB,GAAW,IAAPrD,GAAmB,IAAPC,EAAU,CACxB,MAAMvK,IAAMoK,EAAIsD,GAAMpD,GAAMD,EAAIsD,GAAMpD,IAAOD,EAAKA,EAAKC,EAAKA,GACxDvK,EAAI,GACN0N,EAAKE,EACLD,EAAKE,GACI7N,EAAI,IACb0N,GAAMpD,EAAKtK,EACX2N,GAAMpD,EAAKvK,EAEjB,CACE,OAAO2Q,GAAgBvG,EAAGC,EAAGqD,EAAIC,EACnC,CAUO,SAASgD,GAAgBjD,EAAIC,EAAIC,EAAIC,GAC1C,MAAMvD,EAAKsD,EAAKF,EACVnD,EAAKsD,EAAKF,EAChB,OAAOrD,EAAKA,EAAKC,EAAKA,CACxB,CASO,SAASqG,GAAkBC,GAChC,MAAMlb,EAAIkb,EAAI3b,OAEd,IAAK,IAAIU,EAAI,EAAGA,EAAID,EAAGC,IAAK,CAE1B,IAAIkb,EAASlb,EACTmb,EAAQ9Q,KAAK8L,IAAI8E,EAAIjb,GAAGA,IAC5B,IAAK,IAAIob,EAAIpb,EAAI,EAAGob,EAAIrb,EAAGqb,IAAK,CAC9B,MAAMC,EAAWhR,KAAK8L,IAAI8E,EAAIG,GAAGpb,IAC7Bqb,EAAWF,IACbA,EAAQE,EACRH,EAASE,EAEjB,CAEI,GAAc,IAAVD,EACF,OAAO,KAIT,MAAM9a,EAAM4a,EAAIC,GAChBD,EAAIC,GAAUD,EAAIjb,GAClBib,EAAIjb,GAAKK,EAGT,IAAK,IAAIib,EAAItb,EAAI,EAAGsb,EAAIvb,EAAGub,IAAK,CAC9B,MAAMC,GAAQN,EAAIK,GAAGtb,GAAKib,EAAIjb,GAAGA,GACjC,IAAK,IAAIwb,EAAIxb,EAAGwb,EAAIzb,EAAI,EAAGyb,IACrBxb,GAAKwb,EACPP,EAAIK,GAAGE,GAAK,EAEZP,EAAIK,GAAGE,IAAMD,EAAON,EAAIjb,GAAGwb,EAGrC,CACA,CAGE,MAAMhH,EAAI,IAAI/T,MAAMV,GACpB,IAAK,IAAIka,EAAIla,EAAI,EAAGka,GAAK,EAAGA,IAAK,CAC/BzF,EAAEyF,GAAKgB,EAAIhB,GAAGla,GAAKkb,EAAIhB,GAAGA,GAC1B,IAAK,IAAIwB,EAAIxB,EAAI,EAAGwB,GAAK,EAAGA,IAC1BR,EAAIQ,GAAG1b,IAAMkb,EAAIQ,GAAGxB,GAAKzF,EAAEyF,EAEjC,CACE,OAAOzF,CACT,CAQO,SAASkH,GAAUC,GACxB,OAAyB,IAAjBA,EAAwBtR,KAAKuR,EACvC,CAQO,SAASC,GAAUC,GACxB,OAAQA,EAAiBzR,KAAKuR,GAAM,GACtC,CASO,SAASG,GAAOvc,EAAGC,GACxB,MAAM2b,EAAI5b,EAAIC,EACd,OAAO2b,EAAI3b,EAAI,EAAI2b,EAAI3b,EAAI2b,CAC7B,CAUO,SAASY,GAAKxc,EAAGC,EAAG+U,GACzB,OAAOhV,EAAIgV,GAAK/U,EAAID,EACtB,CAQO,SAASyc,GAAQlc,EAAGmc,GACzB,MAAMC,EAAS9R,KAAKC,IAAI,GAAI4R,GAC5B,OAAO7R,KAAK+R,MAAMrc,EAAIoc,GAAUA,CAClC,CASO,SAASC,GAAMrc,EAAGmc,GACvB,OAAO7R,KAAK+R,MAAMH,GAAQlc,EAAGmc,GAC/B,CASO,SAASzB,GAAM1a,EAAGmc,GACvB,OAAO7R,KAAKoQ,MAAMwB,GAAQlc,EAAGmc,GAC/B,CASO,SAASG,GAAKtc,EAAGmc,GACtB,OAAO7R,KAAKgS,KAAKJ,GAAQlc,EAAGmc,GAC9B,CASO,SAASI,GAAKvc,EAAGyW,EAAKC,GAC3B,GAAI1W,GAAKyW,GAAOzW,EAAI0W,EAClB,OAAO1W,EAET,MAAMwc,EAAQ9F,EAAMD,EACpB,QAAWzW,EAAIyW,GAAO+F,EAASA,GAASA,EAAS/F,CACnD,CC/LO,MAAMgG,GAAiB,UAWvB,SAASC,GAAYC,EAAIC,EAAIC,GAClCA,EAASA,GAAUJ,GACnB,MAAMK,EAAOhB,GAAUa,EAAG,IACpBI,EAAOjB,GAAUc,EAAG,IACpBI,GAAeD,EAAOD,GAAQ,EAC9BG,EAAcnB,GAAUc,EAAG,GAAKD,EAAG,IAAM,EACzCld,EACJ6K,KAAKmO,IAAIuE,GAAe1S,KAAKmO,IAAIuE,GACjC1S,KAAKmO,IAAIwE,GACP3S,KAAKmO,IAAIwE,GACT3S,KAAKiO,IAAIuE,GACTxS,KAAKiO,IAAIwE,GACb,OAAO,EAAIF,EAASvS,KAAK4S,MAAM5S,KAAK6S,KAAK1d,GAAI6K,KAAK6S,KAAK,EAAI1d,GAC7D,CAQA,SAAS2d,GAAkBlJ,EAAa2I,GACtC,IAAItd,EAAS,EACb,IAAK,IAAIU,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,EAAK,IAAK5E,EACrDV,GAAUmd,GAAYxI,EAAYjU,GAAIiU,EAAYjU,EAAI,GAAI4c,GAE5D,OAAOtd,CACT,CA0FA,SAAS8d,GAAgBnJ,EAAa2I,GACpC,IAAI1F,EAAO,EACX,MAAM1Q,EAAMyN,EAAY3U,OACxB,IAAIwY,EAAK7D,EAAYzN,EAAM,GAAG,GAC1BuR,EAAK9D,EAAYzN,EAAM,GAAG,GAC9B,IAAK,IAAIxG,EAAI,EAAGA,EAAIwG,EAAKxG,IAAK,CAC5B,MAAMgY,EAAK/D,EAAYjU,GAAG,GACpBiY,EAAKhE,EAAYjU,GAAG,GAC1BkX,GACE2E,GAAU7D,EAAKF,IACd,EAAIzN,KAAKmO,IAAIqD,GAAU9D,IAAO1N,KAAKmO,IAAIqD,GAAU5D,KACpDH,EAAKE,EACLD,EAAKE,CACT,CACE,OAAQf,EAAO0F,EAASA,EAAU,CACpC,CAiFO,SAAS9G,GAAO4G,EAAIW,EAAUC,EAASV,GAC5CA,EAASA,GAAUJ,GACnB,MAAMK,EAAOhB,GAAUa,EAAG,IACpBa,EAAO1B,GAAUa,EAAG,IACpBc,EAAOH,EAAWT,EAClBa,EAAMpT,KAAKqT,KACfrT,KAAKmO,IAAIqE,GAAQxS,KAAKiO,IAAIkF,GACxBnT,KAAKiO,IAAIuE,GAAQxS,KAAKmO,IAAIgF,GAAQnT,KAAKiO,IAAIgF,IAQ/C,MAAO,CAAC5B,GALN6B,EACAlT,KAAK4S,MACH5S,KAAKmO,IAAI8E,GAAWjT,KAAKmO,IAAIgF,GAAQnT,KAAKiO,IAAIuE,GAC9CxS,KAAKiO,IAAIkF,GAAQnT,KAAKmO,IAAIqE,GAAQxS,KAAKmO,IAAIiF,KAEvB/B,GAAU+B,GACpC,CC3PA,MAAME,GAAS,CACbC,KAAM,EACNC,KAAM,EACN3L,MAAO,EACP4L,KAAM,GAMR,IAAIC,GAAQJ,GAAOC,KA0BZ,SAASC,MAAQG,GAClBD,GAAQJ,GAAOE,MAGnBI,QAAQJ,QAAQG,EAClB,CAKO,SAAS9L,MAAS8L,GACnBD,GAAQJ,GAAOzL,OAGnB+L,QAAQ/L,SAAS8L,EACnB,CCpDO,SAASE,GAAUC,EAAQ5Q,EAAO6Q,GACvC,MAAMC,OACUpZ,IAAdmZ,EAA0BD,EAAOlC,QAAQmC,GAAa,GAAKD,EAC7D,IAAIG,EAAUD,EAAahZ,QAAQ,KAEnC,OADAiZ,GAAsB,IAAZA,EAAiBD,EAAa/e,OAASgf,EAC1CA,EAAU/Q,EACb8Q,EACA,IAAI5d,MAAM,EAAI8M,EAAQ+Q,GAASC,KAAK,KAAOF,CACjD,CAQO,SAASG,GAAgBC,EAAIC,GAClC,MAAMC,GAAM,GAAKF,GAAIG,MAAM,KACrBC,GAAM,GAAKH,GAAIE,MAAM,KAE3B,IAAK,IAAI5e,EAAI,EAAGA,EAAIqK,KAAKoM,IAAIkI,EAAGrf,OAAQuf,EAAGvf,QAASU,IAAK,CACvD,MAAM8e,EAAKrQ,SAASkQ,EAAG3e,IAAM,IAAK,IAC5B+e,EAAKtQ,SAASoQ,EAAG7e,IAAM,IAAK,IAElC,GAAI8e,EAAKC,EACP,OAAO,EAET,GAAIA,EAAKD,EACP,OAAS,CAEf,CAEE,OAAO,CACT,CCHO,SAASE,GAAInK,EAAYlJ,GAG9B,OAFAkJ,EAAW,KAAOlJ,EAAM,GACxBkJ,EAAW,KAAOlJ,EAAM,GACjBkJ,CACT,CASO,SAASoK,GAAgBpK,EAAYqK,GAC1C,MAAM9D,EAAI8D,EAAOC,YACX1H,EAASyH,EAAO7H,YAChBO,EAAKH,EAAO,GACZI,EAAKJ,EAAO,GAIlB,IAAI/C,EAHOG,EAAW,GAGR+C,EACd,MAAMjD,EAHKE,EAAW,GAGNgD,EACL,IAAPnD,GAAmB,IAAPC,IACdD,EAAK,GAEP,MAAM0K,EAAI/U,KAAK6S,KAAKxI,EAAKA,EAAKC,EAAKA,GAKnC,MAAO,CAHGiD,EAAMwD,EAAI1G,EAAM0K,EAChBvH,EAAMuD,EAAIzG,EAAMyK,EAG5B,CAcO,SAASC,GAAiBxK,EAAYyK,GAC3C,MAAM1H,EAAK/C,EAAW,GAChBgD,EAAKhD,EAAW,GAChBnJ,EAAQ4T,EAAQ,GAChBlf,EAAMkf,EAAQ,GACdxH,EAAKpM,EAAM,GACXqM,EAAKrM,EAAM,GACXsM,EAAK5X,EAAI,GACT6X,EAAK7X,EAAI,GACTsU,EAAKsD,EAAKF,EACVnD,EAAKsD,EAAKF,EACVwH,EACG,IAAP7K,GAAmB,IAAPC,EACR,GACCD,GAAMkD,EAAKE,GAAMnD,GAAMkD,EAAKE,KAAQrD,EAAKA,EAAKC,EAAKA,GAAM,GAChE,IAAIH,EAAGC,EAWP,OAVI8K,GAAS,GACX/K,EAAIsD,EACJrD,EAAIsD,GACKwH,GAAS,GAClB/K,EAAIwD,EACJvD,EAAIwD,IAEJzD,EAAIsD,EAAKyH,EAAQ7K,EACjBD,EAAIsD,EAAKwH,EAAQ5K,GAEZ,CAACH,EAAGC,EACb,CAiDO,SAAS+K,GAAoBC,EAAaC,EAASC,GACxD,MAAMC,EAAoB7D,GAAO2D,EAAU,IAAK,KAAO,IACjDlL,EAAInK,KAAK8L,IAAI,KAAOyJ,GACpB1D,EAAWyD,GAAkB,EAEnC,IAAIE,EAAMxV,KAAKoQ,MAAMjG,EAAI,MACrBgC,EAAMnM,KAAKoQ,OAAOjG,EAAU,KAANqL,GAAc,IACpCC,EAAM7D,GAAQzH,EAAU,KAANqL,EAAmB,GAANrJ,EAAU0F,GAEzC4D,GAAO,KACTA,EAAM,EACNtJ,GAAO,GAGLA,GAAO,KACTA,EAAM,EACNqJ,GAAO,GAGT,IAAIE,EAAOF,EAAM,IAWjB,OAVY,IAARrJ,GAAqB,IAARsJ,IACfC,GAAQ,IAAM7B,GAAU1H,EAAK,GAAK,KAExB,IAARsJ,IACFC,GAAQ,IAAM7B,GAAU4B,EAAK,EAAG5D,GAAY,KAEpB,IAAtB0D,IACFG,GAAQ,IAAMN,EAAYO,OAAOJ,EAAoB,EAAI,EAAI,IAGxDG,CACT,CAiCO,SAASE,GAAOpL,EAAYqL,EAAUP,GAC3C,OAAI9K,EACKqL,EACJC,QAAQ,MAAOtL,EAAW,GAAGoH,QAAQ0D,IACrCQ,QAAQ,MAAOtL,EAAW,GAAGoH,QAAQ0D,IAEnC,EACT,CAOO,SAAShf,GAAOyf,EAAaC,GAClC,IAAI1f,GAAS,EACb,IAAK,IAAIX,EAAIogB,EAAY9gB,OAAS,EAAGU,GAAK,IAAKA,EAC7C,GAAIogB,EAAYpgB,IAAMqgB,EAAYrgB,GAAI,CACpCW,GAAS,EACT,KACN,CAEE,OAAOA,CACT,CAoBO,SAAS2f,GAAOzL,EAAY0L,GACjC,MAAMC,EAAWnW,KAAKiO,IAAIiI,GACpBE,EAAWpW,KAAKmO,IAAI+H,GACpB/L,EAAIK,EAAW,GAAK2L,EAAW3L,EAAW,GAAK4L,EAC/ChM,EAAII,EAAW,GAAK2L,EAAW3L,EAAW,GAAK4L,EAGrD,OAFA5L,EAAW,GAAKL,EAChBK,EAAW,GAAKJ,EACTI,CACT,CAmBO,SAAS6L,GAAM7L,EAAY6L,GAGhC,OAFA7L,EAAW,IAAM6L,EACjB7L,EAAW,IAAM6L,EACV7L,CACT,CAOO,SAASkG,GAAgB4F,EAAQC,GACtC,MAAMlM,EAAKiM,EAAO,GAAKC,EAAO,GACxBjM,EAAKgM,EAAO,GAAKC,EAAO,GAC9B,OAAOlM,EAAKA,EAAKC,EAAKA,CACxB,CAOO,SAAS0I,GAASsD,EAAQC,GAC/B,OAAOvW,KAAK6S,KAAKnC,GAAgB4F,EAAQC,GAC3C,CAUO,SAASC,GAAyBhM,EAAYyK,GACnD,OAAOvE,GAAgBlG,EAAYwK,GAAiBxK,EAAYyK,GAClE,CAgEO,SAASwB,GAAWjM,EAAY8K,GACrC,OAAOM,GAAOpL,EAAY,WAAY8K,EACxC,CAWO,SAASxF,GAAMtF,EAAYuF,GAChC,GAAIA,EAAWG,WAAY,CACzB,MAAMC,EAAarD,GAASiD,EAAWE,aACjCyG,EAAaC,GAAcnM,EAAYuF,EAAYI,GACrDuG,IACFlM,EAAW,IAAMkM,EAAavG,EAEpC,CACE,OAAO3F,CACT,CAOO,SAASmM,GAAcnM,EAAYuF,EAAY6G,GACpD,MAAM5G,EAAmBD,EAAWE,YACpC,IAAIyG,EAAa,EAUjB,OARE3G,EAAWG,aACV1F,EAAW,GAAKwF,EAAiB,IAAMxF,EAAW,GAAKwF,EAAiB,MAEzE4G,EAAoBA,GAAqB9J,GAASkD,GAClD0G,EAAa1W,KAAKoQ,OACf5F,EAAW,GAAKwF,EAAiB,IAAM4G,IAGrCF,CACT,CCzaA,MAAMG,GAAa,CACjB,KAAQ,IACR,KAAQ,KACR,KAAQ,QACR,KAAQ,UACR,KAAQ,WA0BH,MAAMC,GAAkB,CAE7BC,QAAW,SAAW,EAAI/W,KAAKuR,IAC/B8D,QAAY,EAAIrV,KAAKuR,GAAK,QAAW,IACrCyF,GAAM,MACN5F,EAAK,EACL,QAAS,KAAO,MCWlB,MAAM6F,GAIJ,WAAA9iB,CAAYuK,GAKVtK,KAAK8iB,MAAQxY,EAAQyY,KASrB/iB,KAAKgjB,OAAoD1Y,EAAa,MAStEtK,KAAKijB,aAA6Bzc,IAAnB8D,EAAQmL,OAAuBnL,EAAQmL,OAAS,KAS/DzV,KAAKkjB,kBACqB1c,IAAxB8D,EAAQ6Y,YAA4B7Y,EAAQ6Y,YAAc,KAM5DnjB,KAAKojB,sBACyB5c,IAA5B8D,EAAQ+Y,gBAAgC/Y,EAAQ+Y,gBAAkB,MAMpErjB,KAAKsjB,aAA6B9c,IAAnB8D,EAAQiZ,QAAuBjZ,EAAQiZ,OAMtDvjB,KAAKwjB,aAAexjB,KAAKsjB,UAAWtjB,KAAKijB,SAMzCjjB,KAAKyjB,wBAA0BnZ,EAAQoZ,mBAMvC1jB,KAAK2jB,iBAAmB,KAMxB3jB,KAAK4jB,eAAiBtZ,EAAQuZ,aAClC,CAKE,QAAA/H,GACE,OAAO9b,KAAKwjB,SAChB,CAOE,OAAAM,GACE,OAAO9jB,KAAK8iB,KAChB,CAOE,SAAAjH,GACE,OAAO7b,KAAKijB,OAChB,CAOE,QAAAc,GACE,OAAO/jB,KAAKgjB,MAChB,CASE,gBAAAgB,GACE,OAAOhkB,KAAK4jB,gBAAkBlB,GAAgB1iB,KAAKgjB,OACvD,CAOE,cAAAiB,GACE,OAAOjkB,KAAKkjB,YAChB,CAaE,kBAAAgB,GACE,OAAOlkB,KAAKojB,gBAChB,CAOE,QAAAe,GACE,OAAOnkB,KAAKsjB,OAChB,CAOE,SAAAc,CAAUb,GACRvjB,KAAKsjB,QAAUC,EACfvjB,KAAKwjB,aAAeD,IAAUvjB,KAAKijB,QACvC,CAKE,kBAAAoB,GACE,OAAOrkB,KAAK2jB,gBAChB,CAKE,kBAAAW,CAAmBC,GACjBvkB,KAAK2jB,iBAAmBY,CAC5B,CAOE,SAAAC,CAAU/O,GACRzV,KAAKijB,QAAUxN,EACfzV,KAAKwjB,aAAexjB,KAAKsjB,UAAW7N,EACxC,CAQE,cAAAgP,CAAetB,GACbnjB,KAAKkjB,aAAeC,CACxB,CAQE,qBAAAuB,CAAsBniB,GACpBvC,KAAKyjB,wBAA0BlhB,CACnC,CAOE,sBAAAoiB,GACE,OAAO3kB,KAAKyjB,uBAChB,EC1QO,MAAMmB,GAAS,QAMTC,GAAYjZ,KAAKuR,GAAKyH,GAMtBE,GAAS,EAAED,IAAYA,GAAWA,GAAWA,IAM7CE,GAAe,EAAK,QAAO,IAAK,IAOhCC,GAAaJ,GAAShZ,KAAKqZ,IAAIrZ,KAAKsZ,IAAItZ,KAAKuR,GAAK,IAM/D,MAAMgI,WAA2BtC,GAI/B,WAAA9iB,CAAYgjB,GACV9d,MAAM,CACJ8d,KAAMA,EACNqC,MAAO,IACP3P,OAAQqP,GACRvB,QAAQ,EACRJ,YAAa4B,GACbrB,mBAAoB,SAAUzK,EAAYoM,GACxC,OAAOpM,EAAarN,KAAK0Z,KAAKD,EAAM,GAAKT,GAC1C,GAEP,EASO,MAAMW,GAAc,CACzB,IAAIJ,GAAmB,aACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,8CACvB,IAAIA,GAAmB,iDAYlB,SAASK,GAAaC,EAAOC,EAAQC,EAAWrO,GACrD,MAAMzW,EAAS4kB,EAAM5kB,OACrB8kB,EAAYA,EAAY,EAAIA,EAAY,EACxCrO,EAASA,GAAUqO,OACJnf,IAAXkf,IAGAA,EAFEC,EAAY,EAELF,EAAMjiB,QAEN,IAAIxB,MAAMnB,IAGvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAQU,GAAK+V,EAAQ,CACvCoO,EAAOnkB,GAAMsjB,GAAYY,EAAMlkB,GAAM,IACrC,IAAIyU,EAAI4O,GAAShZ,KAAKqZ,IAAIrZ,KAAKsZ,IAAKtZ,KAAKuR,KAAOsI,EAAMlkB,EAAI,GAAK,IAAO,MAClEyU,EAAIgP,GACNhP,EAAIgP,GACKhP,GAAKgP,KACdhP,GAAKgP,IAEPU,EAAOnkB,EAAI,GAAKyU,CACpB,CACE,OAAO0P,CACT,CAWO,SAASE,GAAWH,EAAOC,EAAQC,EAAWrO,GACnD,MAAMzW,EAAS4kB,EAAM5kB,OACrB8kB,EAAYA,EAAY,EAAIA,EAAY,EACxCrO,EAASA,GAAUqO,OACJnf,IAAXkf,IAGAA,EAFEC,EAAY,EAELF,EAAMjiB,QAEN,IAAIxB,MAAMnB,IAGvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAQU,GAAK+V,EAC/BoO,EAAOnkB,GAAM,IAAMkkB,EAAMlkB,GAAMsjB,GAC/Ba,EAAOnkB,EAAI,GACR,IAAMqK,KAAKia,KAAKja,KAAKka,IAAIL,EAAMlkB,EAAI,GAAKqjB,KAAYhZ,KAAKuR,GAAK,GAEnE,OAAOuI,CACT,CC7HO,MAAMd,GAAS,QAQTE,GAAS,EAAK,QAAO,IAAK,IAM1BpC,GAAmB9W,KAAKuR,GAAKyH,GAAU,IAUpD,MAAMmB,WAA2BlD,GAK/B,WAAA9iB,CAAYgjB,EAAMM,GAChBpe,MAAM,CACJ8d,KAAMA,EACNqC,MAAO,UACP3P,OAAQqP,GACRzB,gBAAiBA,EACjBE,QAAQ,EACRM,cAAenB,GACfS,YAAa2B,IAEnB,EASO,MAAMS,GAAc,CACzB,IAAIQ,GAAmB,UACvB,IAAIA,GAAmB,YAAa,OACpC,IAAIA,GAAmB,iCACvB,IAAIA,GAAmB,4BACvB,IAAIA,GAAmB,gDACvB,IAAIA,GAAmB,+CAAgD,OACvE,IAAIA,GAAmB,6CAA8C,QC3DvE,IAAIC,GAAQ,CAAE,EAKP,SAAS3hB,KACd2hB,GAAQ,CAAE,CACZ,CAOO,SAAS/c,GAAI8Z,GAClB,OACEiD,GAAMjD,IACNiD,GAAMjD,EAAKrB,QAAQ,yCAA0C,aAC7D,IAEJ,CAOO,SAASnB,GAAIwC,EAAMpH,GACxBqK,GAAMjD,GAAQpH,CAChB,CC3BA,IAAIsK,GAAa,CAAE,EAKZ,SAAS5hB,KACd4hB,GAAa,CAAE,CACjB,CAUO,SAAS1F,GAAIxW,EAAQmc,EAAa9K,GACvC,MAAM+K,EAAapc,EAAO+Z,UACpBsC,EAAkBF,EAAYpC,UAC9BqC,KAAcF,KAClBA,GAAWE,GAAc,CAAE,GAE7BF,GAAWE,GAAYC,GAAmBhL,CAC5C,CA4BO,SAASnS,GAAIkd,EAAYC,GAC9B,OAAID,KAAcF,IAAcG,KAAmBH,GAAWE,GACrDF,GAAWE,GAAYC,GAEzB,IACT,CC3CA,MAAMC,GAAK,MAELC,GAAI,UACJC,GAAKD,GAAIA,GACTE,GAAKD,GAAKD,GACVG,GAAOH,IAAK,EAAIA,IAEhBI,GAAS9a,KAAK6S,KAAK,EAAI6H,IACvBK,IAAM,EAAID,KAAW,EAAIA,IACzBE,GAAMD,GAAKA,GACXE,GAAMD,GAAMD,GACZG,GAAMD,GAAMF,GACZI,GAAMD,GAAMH,GAEZK,GAAK,kBAELC,GAAM,GAAKV,GAAM,IAAO,GAAKC,GAAM,KACnCU,GAAM,GAAKV,GAAM,KAEjBW,GAAK,IAAUR,GAAM,GAAK,GAAME,GAAO,IAAM,IAAOE,GACpDK,GAAM,GAAK,GAAMR,GAAO,GAAK,GAAME,GACnCO,GAAM,IAAM,GAAMR,GAAO,IAAM,IAAOE,GACtCO,GAAM,KAAO,IAAOR,GAEpBS,GAAI,QAQV,SAASC,GAASC,EAASC,EAAUC,GACnC,MAAM5R,EAAI0R,EAAU,IAIdG,GAHID,EAAKE,MAAQH,EAAWA,EAAW,KAE/BrB,IACEkB,GAAIP,IAEdc,EACJF,EACAT,GAAKvb,KAAKmO,IAAI,EAAI6N,GAClBR,GAAKxb,KAAKmO,IAAI,EAAI6N,GAClBP,GAAKzb,KAAKmO,IAAI,EAAI6N,GAClBN,GAAK1b,KAAKmO,IAAI,EAAI6N,GAEdG,EAAOnc,KAAKmO,IAAI+N,GAChBE,EAAQD,EAAOA,EAEfE,EAAOrc,KAAKiO,IAAIiO,GAEhBI,EAAOH,EAAOE,EACdE,EAAQD,EAAOA,EACfE,EAAQD,EAAQA,EAEhBE,EAAQ,EAAI/B,GAAI0B,EAChBM,EAAY1c,KAAK6S,KAAK,EAAI6H,GAAI0B,GAK9BO,EAAI9B,GAAOwB,GAAQ,EACnB/J,EAAKqK,EAAIA,EAET5H,EAAI5K,GANAwR,GAAIe,EAMKjC,IACbmC,EAAK7H,EAAIA,EACT8H,EAAKD,EAAK7H,EACV+H,EAAKD,EAAK9H,EACVgI,EAAKD,EAAK/H,EAGViI,EACJd,EACCI,IAdQ,EAAI5B,IAAK+B,IAefG,EAAK,EAAKE,EAAK,IAAO,EAAI,EAAIP,EAAQ,GAAKI,EAAI,EAAIrK,EAAK,EAAIuI,KALtDkC,EAAKhI,EAMR,KAAQ,GAAK,GAAKwH,EAAQ,IAAMI,EAAI,GAAKH,EAAQ,IAAM3B,GAAO,EAAIvI,GAE1E,IAAI2K,GACDlI,EACE8H,EAAK,GAAM,EAAI,EAAIN,EAAQI,GAC3BI,EAAK,KAAQ,EAAI,EAAIJ,EAAI,GAAKJ,EAAQ,EAAIjK,EAAK,EAAIuI,GAAO,GAAK2B,IAClEH,EAQF,OANAY,EAAYhL,GACVgL,EAAYzL,GAAU0L,GAAuBnB,EAAKjI,UACjD9T,KAAKuR,GACNvR,KAAKuR,IAGA,CAACF,GAAU4L,GAAY5L,GAAU2L,GAC1C,CAaA,SAASG,GAAWF,EAAWD,EAAUjB,GACvCkB,EAAYhL,GAAKgL,GAVG,IACA,KAWhBD,GAde,GAejBA,GAfiB,GAgBRA,EAfQ,KAgBjBA,EAhBiB,IAmBnB,MAAMI,EAAS5L,GAAUwL,GACnBK,EAASrd,KAAKmO,IAAIiP,GAClBE,EAAStd,KAAKiO,IAAImP,GAElBG,EAASF,EAASC,EAClBE,EAAUD,EAASA,EACnBE,EAAUD,EAAUA,EAEpBE,EAASlM,GAAUyL,GAEnBU,EAAgBnM,GADH0L,GAAuBnB,EAAKjI,SAGzCpe,EAAIimB,GAAI3b,KAAK6S,KAAK,EAAI6H,GAAI2C,GAAU,GACpCV,EAAI9B,GAAOyC,GAAU,EAErBnoB,EAAImoB,EAASrL,GAAKyL,EAASC,GAAgB3d,KAAKuR,GAAIvR,KAAKuR,IACzDqM,EAAKzoB,EAAIA,EACT0oB,EAAKD,EAAKzoB,EACV2oB,EAAKD,EAAK1oB,EACV4oB,EAAKD,EAAK3oB,EACV6oB,EAAKD,EAAK5oB,EAEVic,EACJuK,IACCP,GAAKgC,EAzHC,oBA0HApd,KAAKmO,IAAI,EAAIiP,GAClB/B,GAAKrb,KAAKmO,IAAI,EAAIiP,GAClB9B,GAAKtb,KAAKmO,IAAI,EAAIiP,IAEhBvB,EACJpB,GACE/kB,GACCP,EACE0oB,EAAK,GAAM,EAAIL,EAAUb,GACzBoB,EAAK,KAAQ,EAAI,GAAKP,EAAUC,EAAU,GAAKd,EAAI,GAAK9B,KAC7D,IAEF,IAAIiB,EACFrB,IACCrJ,EACC1b,EACE6nB,GACCK,EAAK,EACHE,EAAK,IAAO,EAAIN,EAAU,EAAIb,EAAI,EAAIA,GAAK,GAC3CqB,EAAK,KAAQ,GAAK,GAAKR,EAAUC,EAAU,IAAMd,EAAI,IAAM9B,MAMpE,OAJKkB,EAAKE,QACRH,GAAY,KAGP,CAACD,EAASC,EACnB,CAMA,SAASoB,GAAuBnB,GAC9B,OAAoB,GAAZA,EAAO,GAAS,IAAM,CAChC,CAKA,MAAMkC,GAAc,CAClB,eACA,gCACA,0DAOK,SAASC,GAAa/G,GAC3B,IAAIgH,EAAS,EACb,IAAK,MAAMC,KAAMH,GAAa,CAC5B,MAAMI,EAAQlH,EAAKkH,MAAMD,GACzB,GAAIC,EAAO,CACTF,EAAS/Z,SAASia,EAAM,IACxB,KACN,CACA,CACE,IAAKF,EACH,OAAO,KAGT,IAAIrK,EAAS,EACTmI,GAAQ,EAOZ,OANIkC,EAAS,OAASA,EAAS,MAC7BrK,EAASqK,EAAS,MACTA,EAAS,OAASA,EAAS,QACpClC,GAAQ,EACRnI,EAASqK,EAAS,OAEfrK,EAIE,CAACA,SAAQmI,SAHP,IAIX,CAOA,SAASqC,GAAsBC,EAAaxC,GAC1C,OAAO,SAAUlC,EAAOC,EAAQC,EAAWrO,GACzC,MAAMzW,EAAS4kB,EAAM5kB,OACrB8kB,EAAYA,EAAY,EAAIA,EAAY,EACxCrO,EAASA,GAAUqO,EACdD,IAEDA,EADEC,EAAY,EACLF,EAAMjiB,QAEN,IAAIxB,MAAMnB,IAGvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAQU,GAAK+V,EAAQ,CACvC,MAAMvB,EAAI0P,EAAMlkB,GACVyU,EAAIyP,EAAMlkB,EAAI,GACd6oB,EAAQD,EAAYpU,EAAGC,EAAG2R,GAChCjC,EAAOnkB,GAAK6oB,EAAM,GAClB1E,EAAOnkB,EAAI,GAAK6oB,EAAM,EAC5B,CACI,OAAO1E,CACR,CACH,CAMO,SAAS2E,GAAetH,GAE7B,OADa+G,GAAa/G,GAInB,IAAIF,GAAW,CAACE,OAAMqC,MAAO,MAF3B,IAGX,CAMO,SAASkF,GAAe3O,GAC7B,MAAMgM,EAAOmC,GAAanO,EAAWmI,WACrC,OAAK6D,EAIE,CACL4C,QAASL,GAAsBnB,GAAYpB,GAC3C6C,QAASN,GAAsB1C,GAAUG,IALlC,IAOX,CChMA,MAAM8C,GAAqB,CAACC,IAKtBC,GAAsB,CAACC,IAsB7B,IAAIC,IAAwB,EAKrB,SAASC,GAAyBC,GAEvCF,UADyBrkB,IAAZukB,GAA+BA,EAE9C,CAQO,SAASC,GAAevF,EAAOC,GACpC,QAAelf,IAAXkf,EACF,IAAK,IAAInkB,EAAI,EAAG4E,EAAKsf,EAAM5kB,OAAQU,EAAI4E,IAAM5E,EAC3CmkB,EAAOnkB,GAAKkkB,EAAMlkB,QAIpBmkB,EAASD,EAAMjiB,QAEjB,OAAOkiB,CACT,CAOO,SAASuF,GAAkBxF,EAAOC,GACvC,QAAelf,IAAXkf,GAAwBD,IAAUC,EAAQ,CAC5C,IAAK,IAAInkB,EAAI,EAAG4E,EAAKsf,EAAM5kB,OAAQU,EAAI4E,IAAM5E,EAC3CmkB,EAAOnkB,GAAKkkB,EAAMlkB,GAEpBkkB,EAAQC,CACZ,CACE,OAAOD,CACT,CASO,SAASyF,GAAcvP,GAC5BwP,GAAQxP,EAAWmI,UAAWnI,GAC9ByP,GAAiBzP,EAAYA,EAAYqP,GAC3C,CAKO,SAASK,GAAeC,GAC7BA,EAAYxgB,QAAQogB,GACtB,CAWO,SAASjiB,GAAIsiB,GAClB,GAAgC,iBAAnBA,EACX,OAAOA,EAET,MAAM5P,EAAa6P,GAAQD,GAC3B,GAAI5P,EACF,OAAOA,EAET,IAAK,MAAM0O,KAAkBM,GAAqB,CAChD,MAAMhP,EAAa0O,EAAekB,GAClC,GAAI5P,EACF,OAAOA,CAEb,CACE,OAAO,IACT,CAsBO,SAAS+H,GAAmB/H,EAAY1C,EAAYoM,EAAOD,GAEhE,IAAIqG,EACJ,MAAM3nB,GAFN6X,EAAa1S,GAAI0S,IAESgJ,yBAC1B,GAAI7gB,GAEF,GADA2nB,EAAkB3nB,EAAOmV,EAAYoM,GACjCD,GAASA,IAAUzJ,EAAWoI,WAAY,CAC5C,MAAMF,EAAgBlI,EAAWqI,mBAC7BH,IACF4H,EACGA,EAAkB5H,EAAiBnB,GAAgB0C,GAE9D,MACS,CACL,MAAMsG,EAAY/P,EAAWoI,WAC7B,GAAkB,WAAb2H,IAA2BtG,GAAmB,WAATA,EACxCqG,EAAkBxS,MACb,CAIL,MAAM2M,EAAa+F,GACjBhQ,EACA1S,GAAI,cAEN,GAAK2c,GAA4B,YAAd8F,EAGZ,CACL,IAAIE,EAAW,CACbvG,EAAM,GAAKpM,EAAa,EACxBoM,EAAM,GACNA,EAAM,GAAKpM,EAAa,EACxBoM,EAAM,GACNA,EAAM,GACNA,EAAM,GAAKpM,EAAa,EACxBoM,EAAM,GACNA,EAAM,GAAKpM,EAAa,GAE1B2S,EAAWhG,EAAWgG,EAAUA,EAAU,GAG1CH,GAFczN,GAAY4N,EAASpoB,MAAM,EAAG,GAAIooB,EAASpoB,MAAM,EAAG,IACnDwa,GAAY4N,EAASpoB,MAAM,EAAG,GAAIooB,EAASpoB,MAAM,EAAG,KAC9B,CAC7C,MAhBQioB,EAAkBxS,EAAa0C,EAAWqI,mBAiB5C,MAAMH,EAAgBuB,EAClB1C,GAAgB0C,GAChBzJ,EAAWqI,wBACOxd,IAAlBqd,IACF4H,GAAmB5H,EAE3B,CACA,CACE,OAAO4H,CACT,CASO,SAASI,GAAyBP,GACvCD,GAAeC,GACfA,EAAYxgB,SAAQ,SAAUf,GAC5BuhB,EAAYxgB,SAAQ,SAAUob,GACxBnc,IAAWmc,GACbkF,GAAiBrhB,EAAQmc,EAAa8E,GAE9C,GACA,GACA,CAeO,SAASc,GACdC,EACAC,EACAC,EACAC,GAEAH,EAAajhB,SAAQ,SAAUqhB,GAC7BH,EAAalhB,SAAQ,SAAUshB,GAC7BhB,GAAiBe,EAAaC,EAAaH,GAC3Cb,GAAiBgB,EAAaD,EAAaD,EACjD,GACA,GACA,CAeO,SAASG,GAAiB1Q,EAAY2Q,GAC3C,OAAK3Q,EAGqB,iBAAfA,EACF1S,GAAI0S,KAHJ1S,GAAIqjB,EAMf,CASO,SAASC,GAAuCC,GACrD,OAAA,SAQY/G,EAAOC,EAAQC,EAAWrO,GAClC,MAAMzW,EAAS4kB,EAAM5kB,OACrB8kB,OAA0Bnf,IAAdmf,EAA0BA,EAAY,EAClDrO,EAASA,GAAUqO,EACnBD,OAAoBlf,IAAXkf,EAAuBA,EAAS,IAAI1jB,MAAMnB,GACnD,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAQU,GAAK+V,EAAQ,CACvC,MAAM+N,EAAQmH,EAAe/G,EAAMjiB,MAAMjC,EAAGA,EAAIokB,IAC1C8G,EAAcpH,EAAMxkB,OAC1B,IAAK,IAAIgc,EAAI,EAAG6P,EAAKpV,EAAQuF,EAAI6P,IAAM7P,EACrC6I,EAAOnkB,EAAIsb,GAAKA,GAAK4P,EAAchH,EAAMlkB,EAAIsb,GAAKwI,EAAMxI,EAElE,CACM,OAAO6I,CAEb,CACA,CAwBO,SAASiH,GAAwB5iB,EAAQmc,EAAaqE,EAASC,GACpE,MAAMoC,EAAa3jB,GAAIc,GACjB8iB,EAAW5jB,GAAIid,GACrBkF,GACEwB,EACAC,EACAN,GAAuChC,IAEzCa,GACEyB,EACAD,EACAL,GAAuC/B,GAE3C,CA6BO,SAAShD,GAASpR,EAAYuF,GACnC,MAAMmR,EAASC,GACb3W,OACe5P,IAAfmV,EAA2BA,EAAa,YACxC,aAEIqR,EAAMF,EAAO,GAInB,OAHIE,GAAM,KAAQA,EAAM,OACtBF,EAAO,GAAKxP,GAAO0P,EAAM,IAAK,KAAO,KAEhCF,CACT,CAYO,SAASG,GAAWd,EAAaC,GACtC,GAAID,IAAgBC,EAClB,OAAO,EAET,MAAMc,EAAaf,EAAYpI,aAAeqI,EAAYrI,WAC1D,GAAIoI,EAAYrI,YAAcsI,EAAYtI,UACxC,OAAOoJ,EAGT,OADsBvB,GAA4BQ,EAAaC,KACtCpB,IAAkBkC,CAC7C,CAWO,SAASvB,GAA4B5hB,EAAQmc,GAClD,MAAMC,EAAapc,EAAO+Z,UACpBsC,EAAkBF,EAAYpC,UACpC,IAAIqJ,EAAgBC,GAAiBjH,EAAYC,GACjD,GAAI+G,EACF,OAAOA,EAMT,IAAIE,EAAmB,KAKnBC,EAAwB,KAG5B,IAAK,MAAMhD,KAAkBG,GACtB4C,IACHA,EAAmB/C,EAAevgB,IAE/BujB,IACHA,EAAwBhD,EAAepE,IAI3C,IAAKmH,IAAqBC,EACxB,OAAO,KAGT,MAAMC,EAAmB,YACzB,GAAKD,EAQE,GAAKD,EASVF,EAAgBK,GACdH,EAAiB7C,QACjB8C,EAAsB/C,aAXI,CAC5B,MAAMkD,EAAaL,GAAiBjH,EAAYoH,GAC5CE,IACFN,EAAgBK,GACdC,EACAH,EAAsB/C,SAG9B,KAhB8B,CAC1B,MAAMmD,EAAgBN,GAAiBG,EAAkBnH,GACrDsH,IACFP,EAAgBK,GACdH,EAAiB7C,QACjBkD,GAGR,CAqBE,OANIP,IACFjC,GAAcnhB,GACdmhB,GAAchF,GACdkF,GAAiBrhB,EAAQmc,EAAaiH,IAGjCA,CACT,CAOA,SAASK,GAAsBG,EAAIC,GACjC,OAAO,SAAUnI,EAAOC,EAAQmI,EAAYvW,GAE1C,OADAoO,EAASiI,EAAGlI,EAAOC,EAAQmI,EAAYvW,GAChCsW,EAAGlI,EAAQA,EAAQmI,EAAYvW,EACvC,CACH,CAYO,SAASwW,GAAa/jB,EAAQmc,GAGnC,OAAOyF,GAFkB1iB,GAAIc,GACCd,GAAIid,GAEpC,CAkBO,SAAS6G,GAAU3W,EAAYrM,EAAQmc,GAC5C,MAAMiH,EAAgBW,GAAa/jB,EAAQmc,GAC3C,IAAKiH,EAAe,CAClB,MAAMhH,EAAald,GAAIc,GAAQ+Z,UACzBsC,EAAkBnd,GAAIid,GAAapC,UACzC,MAAM,IAAIzb,MACR,kCAAkC8d,SAAkBC,IAE1D,CACE,OAAO+G,EAAc/W,OAAY5P,EAAW4P,EAAWvV,OACzD,CAcO,SAASktB,GAAgBtY,EAAQ1L,EAAQmc,EAAa7K,GAE3D,OAAOF,GAAe1F,EADAqY,GAAa/jB,EAAQmc,QACE1f,EAAW6U,EAC1D,CAyBA,IAAI2S,GAAiB,KASd,SAASC,GAAkBtS,GAChCqS,GAAiB/kB,GAAI0S,EACvB,CAeO,SAASuS,KACd,OAAOF,EACT,CAmBO,SAASG,GAAiB/X,EAAYgY,GAC3C,OAAKJ,GAGEjB,GAAU3W,EAAYgY,EAAkBJ,IAFtC5X,CAGX,CASO,SAASiY,GAAmBjY,EAAYkY,GAC7C,OAAKN,GAgBEjB,GAAU3W,EAAY4X,GAAgBM,IAdzCzD,KACC3oB,GAAOkU,EAAY,CAAC,EAAG,KACxBA,EAAW,KAAU,KACrBA,EAAW,IAAM,KACjBA,EAAW,KAAS,IACpBA,EAAW,IAAM,KAEjByU,IAAwB,EACxBzL,GACE,2FAGGhJ,EAGX,CASO,SAASmY,GAAa9Y,EAAQ2Y,GACnC,OAAKJ,GAGED,GAAgBtY,EAAQ2Y,EAAkBJ,IAFxCvY,CAGX,CASO,SAAS+Y,GAAe/Y,EAAQ6Y,GACrC,OAAKN,GAGED,GAAgBtY,EAAQuY,GAAgBM,GAFtC7Y,CAGX,CAUO,SAASgZ,GAAiBxV,EAAYmV,GAC3C,IAAKJ,GACH,OAAO/U,EAET,MAAMyV,EAAsBzlB,GAAImlB,GAAkBpK,mBAC5C2K,EAAoBX,GAAehK,mBACzC,OAAO0K,GAAuBC,EACzB1V,EAAayV,EAAuBC,EACrC1V,CACN,CAUO,SAAS2V,GAAmB3V,EAAYqV,GAC7C,IAAKN,GACH,OAAO/U,EAET,MAAM4V,EAAoB5lB,GAAIqlB,GAAgBtK,mBACxC2K,EAAoBX,GAAehK,mBACzC,OAAO6K,GAAqBF,EACvB1V,EAAa0V,EAAqBE,EACnC5V,CACN,CAYO,SAAS6V,GAA8BlC,EAAYC,EAAUE,GAClE,OAAO,SAAU3C,GACf,IAAI2E,EAAazM,EACjB,GAAIsK,EAAW9Q,WAAY,CACzB,MAAMkT,EAAepC,EAAW/Q,YAC1B2G,EAAoB9J,GAASsW,GAEnC1M,EAAaC,GADb6H,EAAQA,EAAM5mB,MAAM,GACcopB,EAAYpK,GAC1CF,IAEF8H,EAAM,GAAKA,EAAM,GAAK9H,EAAaE,GAErC4H,EAAM,GAAKhO,GAAMgO,EAAM,GAAI4E,EAAa,GAAIA,EAAa,IACzD5E,EAAM,GAAKhO,GAAMgO,EAAM,GAAI4E,EAAa,GAAIA,EAAa,IACzDD,EAAchC,EAAU3C,EAC9B,MACM2E,EAAchC,EAAU3C,GAM1B,OAJI9H,GAAcuK,EAAS/Q,aAEzBiT,EAAY,IAAMzM,EAAa5J,GAASmU,EAAShR,cAE5CkT,CACR,CACH,CAOO,SAASE,KAGdpD,GAAyBqD,IACzBrD,GAAyBsD,IAGzBrD,GACEqD,GACAD,GACA1J,GACAI,GAEJ,CAEAqJ,KCl0BA,MAAMG,GAAO,IAAIptB,MAAM,GAMhB,SAASqtB,KACd,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EACzB,CAkBO,SAASC,GAASC,EAAYC,GACnC,MAAMC,EAAKF,EAAW,GAChBG,EAAKH,EAAW,GAChBtR,EAAKsR,EAAW,GAChBI,EAAKJ,EAAW,GAChBK,EAAKL,EAAW,GAChBM,EAAKN,EAAW,GAChB/F,EAAKgG,EAAW,GAChBM,EAAKN,EAAW,GAChBtR,EAAKsR,EAAW,GAChBhH,EAAKgH,EAAW,GAChBO,EAAKP,EAAW,GAChBQ,EAAKR,EAAW,GAStB,OAPAD,EAAW,GAAKE,EAAKjG,EAAKvL,EAAK6R,EAC/BP,EAAW,GAAKG,EAAKlG,EAAKmG,EAAKG,EAC/BP,EAAW,GAAKE,EAAKvR,EAAKD,EAAKuK,EAC/B+G,EAAW,GAAKG,EAAKxR,EAAKyR,EAAKnH,EAC/B+G,EAAW,GAAKE,EAAKM,EAAK9R,EAAK+R,EAAKJ,EACpCL,EAAW,GAAKG,EAAKK,EAAKJ,EAAKK,EAAKH,EAE7BN,CACT,CAaO,SAAS3lB,GAAImjB,EAAWhsB,EAAGC,EAAGunB,EAAG5H,EAAGsP,EAAGllB,GAO5C,OANAgiB,EAAU,GAAKhsB,EACfgsB,EAAU,GAAK/rB,EACf+rB,EAAU,GAAKxE,EACfwE,EAAU,GAAKpM,EACfoM,EAAU,GAAKkD,EACflD,EAAU,GAAKhiB,EACRgiB,CACT,CAQO,SAASmD,GAAaX,EAAYC,GAOvC,OANAD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GACpBD,CACT,CAWO,SAAS3rB,GAAMmpB,EAAW3W,GAC/B,MAAML,EAAIK,EAAW,GACfJ,EAAII,EAAW,GAGrB,OAFAA,EAAW,GAAK2W,EAAU,GAAKhX,EAAIgX,EAAU,GAAK/W,EAAI+W,EAAU,GAChE3W,EAAW,GAAK2W,EAAU,GAAKhX,EAAIgX,EAAU,GAAK/W,EAAI+W,EAAU,GACzD3W,CACT,CAqBO,SAAS6L,GAAM8K,EAAWhX,EAAGC,GAClC,OAAOsZ,GAASvC,EAAWnjB,GAAIwlB,GAAMrZ,EAAG,EAAG,EAAGC,EAAG,EAAG,GACtD,CAoBO,SAASma,GAAUpD,EAAW9W,EAAIC,GACvC,OAAOoZ,GAASvC,EAAWnjB,GAAIwlB,GAAM,EAAG,EAAG,EAAG,EAAGnZ,EAAIC,GACvD,CAeO,SAASka,GAAQrD,EAAWsD,EAAKC,EAAKC,EAAIC,EAAI1O,EAAO2O,EAAKC,GAC/D,MAAM3W,EAAMnO,KAAKmO,IAAI+H,GACfjI,EAAMjO,KAAKiO,IAAIiI,GAOrB,OANAiL,EAAU,GAAKwD,EAAK1W,EACpBkT,EAAU,GAAKyD,EAAKzW,EACpBgT,EAAU,IAAMwD,EAAKxW,EACrBgT,EAAU,GAAKyD,EAAK3W,EACpBkT,EAAU,GAAK0D,EAAMF,EAAK1W,EAAM6W,EAAMH,EAAKxW,EAAMsW,EACjDtD,EAAU,GAAK0D,EAAMD,EAAKzW,EAAM2W,EAAMF,EAAK3W,EAAMyW,EAC1CvD,CACT,CAoCO,SAAS4D,GAAYvvB,EAAQ2I,GAClC,MAAM6mB,EAAMC,GAAY9mB,GACxB4J,GAAe,IAARid,EAAW,4CAElB,MAAM7vB,EAAIgJ,EAAO,GACX/I,EAAI+I,EAAO,GACXwe,EAAIxe,EAAO,GACX4W,EAAI5W,EAAO,GACXkmB,EAAIlmB,EAAO,GACXgB,EAAIhB,EAAO,GASjB,OAPA3I,EAAO,GAAKuf,EAAIiQ,EAChBxvB,EAAO,IAAMJ,EAAI4vB,EACjBxvB,EAAO,IAAMmnB,EAAIqI,EACjBxvB,EAAO,GAAKL,EAAI6vB,EAChBxvB,EAAO,IAAMmnB,EAAIxd,EAAI4V,EAAIsP,GAAKW,EAC9BxvB,EAAO,KAAOL,EAAIgK,EAAI/J,EAAIivB,GAAKW,EAExBxvB,CACT,CAOO,SAASyvB,GAAYrU,GAC1B,OAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EACxC,CAKA,MAAMsU,GAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,GAQzC,SAASC,GAASvU,GAEvB,MADwB,UAAYA,EAAIsD,KAAK,MAAQ,GAEvD,CAOA,SAASkR,GAAWC,GAElB,OADeA,EAAaC,UAAU,EAAGD,EAAapwB,OAAS,GAAGsf,MAAM,KAC1DgR,IAAIC,WACpB,CAQO,SAASnE,GAAWoE,EAAeC,GACxC,MAAMC,EAAOP,GAAWK,GAClBG,EAAOR,GAAWM,GACxB,IAAK,IAAI/vB,EAAI,EAAGA,EAAI,IAAKA,EACvB,GAA6D,IAAzDqK,KAAK+R,OAAO4T,EAAKhwB,GAAKiwB,EAAKjwB,IAAMuvB,GAAgBvvB,IACnD,OAAO,EAGX,OAAO,CACT,CCrSO,SAASkwB,GACdra,EACAC,EACA1V,EACA2V,EACAyV,EACAlX,EACA6b,GAEA7b,EAAOA,GAAc,GACrB6b,EAAoBA,GAAwC,EAC5D,IAAInwB,EAAI,EACR,IAAK,IAAIsb,EAAIxF,EAAQwF,EAAIlb,EAAKkb,GAAKvF,EAAQ,CACzC,MAAMvB,EAAIqB,EAAgByF,GACpB7G,EAAIoB,EAAgByF,EAAI,GAC9BhH,EAAKtU,KAAOwrB,EAAU,GAAKhX,EAAIgX,EAAU,GAAK/W,EAAI+W,EAAU,GAC5DlX,EAAKtU,KAAOwrB,EAAU,GAAKhX,EAAIgX,EAAU,GAAK/W,EAAI+W,EAAU,GAE5D,IAAK,IAAIhQ,EAAI,EAAGA,EAAI2U,EAAmB3U,IACrClH,EAAKtU,KAAO6V,EAAgByF,EAAIE,EAEtC,CAKE,OAHIlH,GAAQA,EAAKhV,QAAUU,IACzBsU,EAAKhV,OAASU,GAETsU,CACT,CAYO,SAASgM,GACdzK,EACAC,EACA1V,EACA2V,EACAwK,EACA6P,EACA9b,GAEAA,EAAOA,GAAc,GACrB,MAAMgE,EAAMjO,KAAKiO,IAAIiI,GACf/H,EAAMnO,KAAKmO,IAAI+H,GACf8P,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACvB,IAAIpwB,EAAI,EACR,IAAK,IAAIsb,EAAIxF,EAAQwF,EAAIlb,EAAKkb,GAAKvF,EAAQ,CACzC,MAAMmD,EAASrD,EAAgByF,GAAK+U,EAC9BlX,EAAStD,EAAgByF,EAAI,GAAKgV,EACxChc,EAAKtU,KAAOqwB,EAAUnX,EAASZ,EAAMa,EAASX,EAC9ClE,EAAKtU,KAAOswB,EAAUpX,EAASV,EAAMW,EAASb,EAC9C,IAAK,IAAIkD,EAAIF,EAAI,EAAGE,EAAIF,EAAIvF,IAAUyF,EACpClH,EAAKtU,KAAO6V,EAAgB2F,EAElC,CAIE,OAHIlH,GAAQA,EAAKhV,QAAUU,IACzBsU,EAAKhV,OAASU,GAETsU,CACT,CAcO,SAASoM,GACd7K,EACAC,EACA1V,EACA2V,EACAiZ,EACAC,EACAmB,EACA9b,GAEAA,EAAOA,GAAc,GACrB,MAAM+b,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACvB,IAAIpwB,EAAI,EACR,IAAK,IAAIsb,EAAIxF,EAAQwF,EAAIlb,EAAKkb,GAAKvF,EAAQ,CACzC,MAAMmD,EAASrD,EAAgByF,GAAK+U,EAC9BlX,EAAStD,EAAgByF,EAAI,GAAKgV,EACxChc,EAAKtU,KAAOqwB,EAAUrB,EAAK9V,EAC3B5E,EAAKtU,KAAOswB,EAAUrB,EAAK9V,EAC3B,IAAK,IAAIqC,EAAIF,EAAI,EAAGE,EAAIF,EAAIvF,IAAUyF,EACpClH,EAAKtU,KAAO6V,EAAgB2F,EAElC,CAIE,OAHIlH,GAAQA,EAAKhV,QAAUU,IACzBsU,EAAKhV,OAASU,GAETsU,CACT,CAYO,SAASsa,GACd/Y,EACAC,EACA1V,EACA2V,EACAmD,EACAC,EACA7E,GAEAA,EAAOA,GAAc,GACrB,IAAItU,EAAI,EACR,IAAK,IAAIsb,EAAIxF,EAAQwF,EAAIlb,EAAKkb,GAAKvF,EAAQ,CACzCzB,EAAKtU,KAAO6V,EAAgByF,GAAKpC,EACjC5E,EAAKtU,KAAO6V,EAAgByF,EAAI,GAAKnC,EACrC,IAAK,IAAIqC,EAAIF,EAAI,EAAGE,EAAIF,EAAIvF,IAAUyF,EACpClH,EAAKtU,KAAO6V,EAAgB2F,EAElC,CAIE,OAHIlH,GAAQA,EAAKhV,QAAUU,IACzBsU,EAAKhV,OAASU,GAETsU,CACT,CCzHA,MAAMic,GFAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GEGnBC,GAAW,CAACC,IAAKA,KAcvB,MAAMC,WAAiBppB,EACrB,WAAA9I,GACEkF,QAMAjF,KAAKijB,QhBwIA,CAAClM,IAAUA,KAAU,KAAW,KgBlIrC/W,KAAKkyB,iBAAoB,EAMzBlyB,KAAKmyB,yCAA2C,EAMhDnyB,KAAKoyB,2BAA6B,EAUlCpyB,KAAKqyB,4BAA8BpvB,GACjC,CAACqvB,EAAUC,EAAkBxF,KAC3B,IAAKA,EACH,OAAO/sB,KAAKwyB,sBAAsBD,GAEpC,MAAM9d,EAAQzU,KAAKyU,QAEnB,OADAA,EAAM0G,eAAe4R,GACdtY,EAAM+d,sBAAsBD,EAAiB,GAG5D,CASE,mBAAAE,CAAoBF,EAAkBxF,GACpC,OAAO/sB,KAAKqyB,4BACVryB,KAAK6H,cACL0qB,EACAxF,EAEN,CAOE,KAAAtY,GACE,OAAOrM,GACX,CAUE,cAAAsqB,CAAe3c,EAAGC,EAAG2c,EAAcC,GACjC,OAAOxqB,GACX,CAOE,UAAAiO,CAAWN,EAAGC,GACZ,OAAiE,IAA1DhW,KAAK0yB,eAAe3c,EAAGC,EAAG+b,GAAUc,OAAOC,UACtD,CAUE,eAAAC,CAAgB1N,EAAOsN,GAGrB,OAFAA,EAAeA,GAA8B,CAACX,IAAKA,KACnDhyB,KAAK0yB,eAAerN,EAAM,GAAIA,EAAM,GAAIsN,EAAc5b,KAC/C4b,CACX,CASE,oBAAAK,CAAqB5c,GACnB,OAAOpW,KAAKqW,WAAWD,EAAW,GAAIA,EAAW,GACrD,CAQE,aAAA6c,CAAcxd,GACZ,OAAOrN,GACX,CAQE,SAAAyT,CAAUpG,GACR,GAAIzV,KAAKkyB,iBAAmBlyB,KAAK6H,cAAe,CAC9C,MAAM4N,EAASzV,KAAKizB,cAAcjzB,KAAKijB,UACnCiQ,MAAMzd,EAAO,KAAOyd,MAAMzd,EAAO,MACnCwB,GAAoBxB,GAEtBzV,KAAKkyB,gBAAkBlyB,KAAK6H,aAClC,CACI,OAAO0S,GAAeva,KAAKijB,QAASxN,EACxC,CAUE,MAAAoM,CAAOC,EAAO6P,GACZvpB,GACJ,CAYE,KAAA6Z,CAAMsO,EAAIC,EAAImB,GACZvpB,GACJ,CAWE,QAAA+qB,CAAS1b,GACP,OAAOzX,KAAKwyB,sBAAsB/a,EAAYA,EAClD,CAUE,qBAAA+a,CAAsBD,GACpB,OAAOnqB,GACX,CAOE,OAAAgrB,GACE,OAAOhrB,GACX,CAWE,cAAA+S,CAAeC,GACbhT,GACJ,CAQE,gBAAAirB,CAAiB5d,GACf,OAAOrN,GACX,CAUE,SAAA+nB,CAAU1V,EAAQC,GAChBtS,GACJ,CAiBE,SAAA2kB,CAAUhjB,EAAQmc,GAEhB,MAAM0G,EAAa0G,GAAcvpB,GAC3BqR,EACqB,eAAzBwR,EAAW7I,WACP,SAAUwP,EAAeC,EAAgBlc,GACvC,MAAMmc,EAAc7G,EAAW/Q,YACzB6X,EAAkB9G,EAAW3I,iBAC7BhC,EAAQtJ,GAAU+a,GAAmB/a,GAAU8a,GACrDE,GACE7B,GACA4B,EAAgB,GAChBA,EAAgB,GAChBzR,GACCA,EACD,EACA,EACA,GAEF,MAAM8M,EAAc0C,GAClB8B,EACA,EACAA,EAAc1yB,OACdyW,EACAwa,GACA0B,GAEII,EAAgB9F,GAAalB,EAAY1G,GAC/C,OAAI0N,EACKA,EAAc7E,EAAaA,EAAazX,GAE1CyX,CACnB,EACUjB,GAAalB,EAAY1G,GAE/B,OADAlmB,KAAKmb,eAAeC,GACbpb,IACX,ECvUA,MAAM6zB,WAAuB5B,GAC3B,WAAAlyB,GACEkF,QAMAjF,KAAK8zB,OAAS,KAMd9zB,KAAKsX,OAAS,EAMdtX,KAAKoX,eACT,CAQE,aAAA6b,CAAcxd,GACZ,OAAO0B,GACLnX,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACL7B,EAEN,CAME,cAAAse,GACE,OAAO3rB,GACX,CAOE,kBAAA4rB,GACE,OAAOh0B,KAAKoX,gBAAgB5T,MAAM,EAAGxD,KAAKsX,OAC9C,CAKE,kBAAA2c,GACE,OAAOj0B,KAAKoX,eAChB,CAOE,iBAAA8c,GACE,OAAOl0B,KAAKoX,gBAAgB5T,MAC1BxD,KAAKoX,gBAAgBvW,OAASb,KAAKsX,OAEzC,CAOE,SAAA6c,GACE,OAAOn0B,KAAK8zB,MAChB,CAQE,qBAAAtB,CAAsBD,GAOpB,GANIvyB,KAAKoyB,6BAA+BpyB,KAAK6H,gBAC3C7H,KAAKmyB,yCAA2C,EAChDnyB,KAAKoyB,2BAA6BpyB,KAAK6H,eAKvC0qB,EAAmB,GACgC,IAAlDvyB,KAAKmyB,0CACJI,GAAoBvyB,KAAKmyB,yCAE3B,OAAOnyB,KAGT,MAAMo0B,EACJp0B,KAAKq0B,8BAA8B9B,GAErC,OADkC6B,EAAmBH,qBACvBpzB,OAASb,KAAKoX,gBAAgBvW,OACnDuzB,GAQTp0B,KAAKmyB,yCAA2CI,EACzCvyB,KACX,CAOE,6BAAAq0B,CAA8B9B,GAC5B,OAAOvyB,IACX,CAKE,SAAAs0B,GACE,OAAOt0B,KAAKsX,MAChB,CAME,kBAAAid,CAAmBT,EAAQ1c,GACzBpX,KAAKsX,OAASkd,GAAmBV,GACjC9zB,KAAK8zB,OAASA,EACd9zB,KAAKoX,gBAAkBA,CAC3B,CAOE,cAAAqd,CAAejf,EAAase,GAC1B1rB,GACJ,CAQE,SAAAssB,CAAUZ,EAAQte,EAAamf,GAC7B,IAAIrd,EACJ,GAAIwc,EACFxc,EAASkd,GAAmBV,OACvB,CACL,IAAK,IAAIvyB,EAAI,EAAGA,EAAIozB,IAAWpzB,EAAG,CAChC,GAA2B,IAAvBiU,EAAY3U,OAGd,OAFAb,KAAK8zB,OAAS,UACd9zB,KAAKsX,OAAS,GAGhB9B,EAA6CA,EAAY,EACjE,CACM8B,EAAS9B,EAAY3U,OACrBizB,EAASc,GAAmBtd,EAClC,CACItX,KAAK8zB,OAASA,EACd9zB,KAAKsX,OAASA,CAClB,CAYE,cAAA6D,CAAeC,GACTpb,KAAKoX,kBACPgE,EACEpb,KAAKoX,gBACLpX,KAAKoX,gBACLpX,KAAK8zB,OAAOe,WAAW,OAAS,EAAI,EACpC70B,KAAKsX,QAEPtX,KAAK4H,UAEX,CAUE,MAAAia,CAAOC,EAAO6P,GACZ,MAAMva,EAAkBpX,KAAKi0B,qBAC7B,GAAI7c,EAAiB,CACnB,MAAME,EAAStX,KAAKs0B,YACpBzS,GACEzK,EACA,EACAA,EAAgBvW,OAChByW,EACAwK,EACA6P,EACAva,GAEFpX,KAAK4H,SACX,CACA,CAYE,KAAAqa,CAAMsO,EAAIC,EAAImB,QACDnrB,IAAPgqB,IACFA,EAAKD,GAEFoB,IACHA,EAAS/Y,GAAU5Y,KAAK6b,cAE1B,MAAMzE,EAAkBpX,KAAKi0B,qBAC7B,GAAI7c,EAAiB,CACnB,MAAME,EAAStX,KAAKs0B,YACpBrS,GACE7K,EACA,EACAA,EAAgBvW,OAChByW,EACAiZ,EACAC,EACAmB,EACAva,GAEFpX,KAAK4H,SACX,CACA,CAUE,SAAAuoB,CAAU1V,EAAQC,GAChB,MAAMtD,EAAkBpX,KAAKi0B,qBAC7B,GAAI7c,EAAiB,CACnB,MAAME,EAAStX,KAAKs0B,YACpBnE,GACE/Y,EACA,EACAA,EAAgBvW,OAChByW,EACAmD,EACAC,EACAtD,GAEFpX,KAAK4H,SACX,CACA,EAOO,SAASgtB,GAAmBtd,GACjC,IAAIwc,EAQJ,OAPc,GAAVxc,EACFwc,EAAS,KACU,GAAVxc,EACTwc,EAAS,MACU,GAAVxc,IACTwc,EAAS,SAGb,CAMO,SAASU,GAAmBV,GACjC,IAAIxc,EAQJ,MAPc,MAAVwc,EACFxc,EAAS,EACU,OAAVwc,GAA6B,OAAVA,EAC5Bxc,EAAS,EACU,QAAVwc,IACTxc,EAAS,IAGb,CAQO,SAASwd,GAAgBC,EAAgBhI,EAAWlX,GACzD,MAAMuB,EAAkB2d,EAAed,qBACvC,IAAK7c,EACH,OAAO,KAET,MAAME,EAASyd,EAAeT,YAC9B,OAAO7C,GACLra,EACA,EACAA,EAAgBvW,OAChByW,EACAyV,EACAlX,EAEJ,CCzVO,SAASmf,GAAW5d,EAAiBC,EAAQ1V,EAAK2V,GACvD,IAAI2d,EAAY,EAChB,MAAM9b,EAAK/B,EAAgBzV,EAAM2V,GAC3B8B,EAAKhC,EAAgBzV,EAAM2V,EAAS,GAC1C,IAAI+Y,EAAM,EACNC,EAAM,EACV,KAAOjZ,EAAS1V,EAAK0V,GAAUC,EAAQ,CACrC,MAAMmZ,EAAMrZ,EAAgBC,GAAU8B,EAChCuX,EAAMtZ,EAAgBC,EAAS,GAAK+B,EAC1C6b,GAAa3E,EAAMG,EAAMJ,EAAMK,EAC/BL,EAAMI,EACNH,EAAMI,CACV,CACE,OAAOuE,EAAY,CACrB,CASO,SAASC,GAAY9d,EAAiBC,EAAQ8d,EAAM7d,GACzD,IAAImB,EAAO,EACX,IAAK,IAAIlX,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACjBkX,GAAQuc,GAAW5d,EAAiBC,EAAQ1V,EAAK2V,GACjDD,EAAS1V,CACb,CACE,OAAO8W,CACT,CASO,SAAS2c,GAAahe,EAAiBC,EAAQge,EAAO/d,GAC3D,IAAImB,EAAO,EACX,IAAK,IAAIlX,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GACnBkX,GAAQyc,GAAY9d,EAAiBC,EAAQ8d,EAAM7d,GACnDD,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CACE,OAAO4X,CACT,CC1CA,SAAS6c,GACPle,EACAme,EACAC,EACAle,EACAvB,EACAC,EACA2c,GAEA,MAAMtZ,EAAKjC,EAAgBme,GACrBjc,EAAKlC,EAAgBme,EAAU,GAC/Btf,EAAKmB,EAAgBoe,GAAWnc,EAChCnD,EAAKkB,EAAgBoe,EAAU,GAAKlc,EAC1C,IAAIjC,EACJ,GAAW,IAAPpB,GAAmB,IAAPC,EACdmB,EAASke,MACJ,CACL,MAAM5pB,IAAMoK,EAAIsD,GAAMpD,GAAMD,EAAIsD,GAAMpD,IAAOD,EAAKA,EAAKC,EAAKA,GAC5D,GAAIvK,EAAI,EACN0L,EAASme,MACJ,IAAI7pB,EAAI,EAAG,CAChB,IAAK,IAAIpK,EAAI,EAAGA,EAAI+V,IAAU/V,EAC5BoxB,EAAapxB,GAAKgc,GAChBnG,EAAgBme,EAAUh0B,GAC1B6V,EAAgBoe,EAAUj0B,GAC1BoK,GAIJ,YADAgnB,EAAa9xB,OAASyW,EAE5B,CACMD,EAASke,CACf,CACA,CACE,IAAK,IAAIh0B,EAAI,EAAGA,EAAI+V,IAAU/V,EAC5BoxB,EAAapxB,GAAK6V,EAAgBC,EAAS9V,GAE7CoxB,EAAa9xB,OAASyW,CACxB,CAYO,SAASme,GAAgBre,EAAiBC,EAAQ1V,EAAK2V,EAAQU,GACpE,IAAIqB,EAAKjC,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAClC,IAAKA,GAAUC,EAAQD,EAAS1V,EAAK0V,GAAUC,EAAQ,CACrD,MAAMiC,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAC9Bqe,EAAeC,GAAUtc,EAAIC,EAAIC,EAAIC,GACvCkc,EAAe1d,IACjBA,EAAM0d,GAERrc,EAAKE,EACLD,EAAKE,CACT,CACE,OAAOxB,CACT,CAUO,SAAS4d,GACdxe,EACAC,EACA8d,EACA7d,EACAU,GAEA,IAAK,IAAIzW,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACjByW,EAAMyd,GAAgBre,EAAiBC,EAAQ1V,EAAK2V,EAAQU,GAC5DX,EAAS1V,CACb,CACE,OAAOqW,CACT,CAUO,SAAS6d,GACdze,EACAC,EACAge,EACA/d,EACAU,GAEA,IAAK,IAAIzW,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GACnByW,EAAM4d,GAAqBxe,EAAiBC,EAAQ8d,EAAM7d,EAAQU,GAClEX,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CACE,OAAOmX,CACT,CAgBO,SAAS8d,GACd1e,EACAC,EACA1V,EACA2V,EACAye,EACAC,EACAjgB,EACAC,EACA2c,EACAC,EACAb,GAEA,GAAI1a,GAAU1V,EACZ,OAAOixB,EAET,IAAIrxB,EAAG+a,EACP,GAAiB,IAAbyZ,EAAgB,CAQlB,GANAzZ,EAAkBqZ,GAChB5f,EACAC,EACAoB,EAAgBC,GAChBD,EAAgBC,EAAS,IAEvBiF,EAAkBsW,EAAoB,CACxC,IAAKrxB,EAAI,EAAGA,EAAI+V,IAAU/V,EACxBoxB,EAAapxB,GAAK6V,EAAgBC,EAAS9V,GAG7C,OADAoxB,EAAa9xB,OAASyW,EACfgF,CACb,CACI,OAAOsW,CACX,CACEb,EAAWA,GAAsB,CAACC,IAAKA,KACvC,IAAIpvB,EAAQyU,EAASC,EACrB,KAAO1U,EAAQjB,GAWb,GAVA2zB,GACEle,EACAxU,EAAQ0U,EACR1U,EACA0U,EACAvB,EACAC,EACA+b,GAEFzV,EAAkBqZ,GAAU5f,EAAGC,EAAG+b,EAAS,GAAIA,EAAS,IACpDzV,EAAkBsW,EAAoB,CAExC,IADAA,EAAqBtW,EAChB/a,EAAI,EAAGA,EAAI+V,IAAU/V,EACxBoxB,EAAapxB,GAAKwwB,EAASxwB,GAE7BoxB,EAAa9xB,OAASyW,EACtB1U,GAAS0U,CACf,MAWM1U,GACE0U,EACA1L,KAAKoM,KACDpM,KAAK6S,KAAKnC,GAAmB1Q,KAAK6S,KAAKmU,IACvCmD,EACA,EACF,GAIR,GAAIC,IAEFV,GACEle,EACAzV,EAAM2V,EACND,EACAC,EACAvB,EACAC,EACA+b,GAEFzV,EAAkBqZ,GAAU5f,EAAGC,EAAG+b,EAAS,GAAIA,EAAS,IACpDzV,EAAkBsW,GAAoB,CAExC,IADAA,EAAqBtW,EAChB/a,EAAI,EAAGA,EAAI+V,IAAU/V,EACxBoxB,EAAapxB,GAAKwwB,EAASxwB,GAE7BoxB,EAAa9xB,OAASyW,CAC5B,CAEE,OAAOsb,CACT,CAgBO,SAASqD,GACd7e,EACAC,EACA8d,EACA7d,EACAye,EACAC,EACAjgB,EACAC,EACA2c,EACAC,EACAb,GAEAA,EAAWA,GAAsB,CAACC,IAAKA,KACvC,IAAK,IAAIzwB,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACjBqxB,EAAqBkD,GACnB1e,EACAC,EACA1V,EACA2V,EACAye,EACAC,EACAjgB,EACAC,EACA2c,EACAC,EACAb,GAEF1a,EAAS1V,CACb,CACE,OAAOixB,CACT,CAgBO,SAASsD,GACd9e,EACAC,EACAge,EACA/d,EACAye,EACAC,EACAjgB,EACAC,EACA2c,EACAC,EACAb,GAEAA,EAAWA,GAAsB,CAACC,IAAKA,KACvC,IAAK,IAAIzwB,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GACnBqxB,EAAqBqD,GACnB7e,EACAC,EACA8d,EACA7d,EACAye,EACAC,EACAjgB,EACAC,EACA2c,EACAC,EACAb,GAEF1a,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CACE,OAAO+xB,CACT,CCpUO,SAASuD,GAAkB/e,EAAiBC,EAAQjB,EAAYkB,GACrE,IAAK,IAAI/V,EAAI,EAAG4E,EAAKiQ,EAAWvV,OAAQU,EAAI4E,IAAM5E,EAChD6V,EAAgBC,KAAYjB,EAAW7U,GAEzC,OAAO8V,CACT,CASO,SAAS+e,GACdhf,EACAC,EACA7B,EACA8B,GAEA,IAAK,IAAI/V,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EAAG,CACpD,MAAM6U,EAAaZ,EAAYjU,GAC/B,IAAK,IAAIsb,EAAI,EAAGA,EAAIvF,IAAUuF,EAC5BzF,EAAgBC,KAAYjB,EAAWyG,EAE7C,CACE,OAAOxF,CACT,CAUO,SAASgf,GACdjf,EACAC,EACAif,EACAhf,EACA6d,GAEAA,EAAOA,GAAc,GACrB,IAAI5zB,EAAI,EACR,IAAK,IAAIsb,EAAI,EAAG6P,EAAK4J,EAAaz1B,OAAQgc,EAAI6P,IAAM7P,EAAG,CACrD,MAAMlb,EAAMy0B,GACVhf,EACAC,EACAif,EAAazZ,GACbvF,GAEF6d,EAAK5zB,KAAOI,EACZ0V,EAAS1V,CACb,CAEE,OADAwzB,EAAKt0B,OAASU,EACP4zB,CACT,CAUO,SAASoB,GACdnf,EACAC,EACAmf,EACAlf,EACA+d,GAEAA,EAAQA,GAAgB,GACxB,IAAI9zB,EAAI,EACR,IAAK,IAAIsb,EAAI,EAAG6P,EAAK8J,EAAc31B,OAAQgc,EAAI6P,IAAM7P,EAAG,CACtD,MAAMsY,EAAOkB,GACXjf,EACAC,EACAmf,EAAc3Z,GACdvF,EACA+d,EAAM9zB,IAEY,IAAhB4zB,EAAKt0B,SACPs0B,EAAK,GAAK9d,GAEZge,EAAM9zB,KAAO4zB,EACb9d,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CAEE,OADAw0B,EAAMx0B,OAASU,EACR8zB,CACT,CC5FO,SAASoB,GACdrf,EACAC,EACA1V,EACA2V,EACA9B,GAEAA,OAA8BhP,IAAhBgP,EAA4BA,EAAc,GACxD,IAAIjU,EAAI,EACR,IAAK,IAAIsb,EAAIxF,EAAQwF,EAAIlb,EAAKkb,GAAKvF,EACjC9B,EAAYjU,KAAO6V,EAAgB5T,MAAMqZ,EAAGA,EAAIvF,GAGlD,OADA9B,EAAY3U,OAASU,EACdiU,CACT,CAUO,SAASkhB,GACdtf,EACAC,EACA8d,EACA7d,EACAgf,GAEAA,OAAgC9vB,IAAjB8vB,EAA6BA,EAAe,GAC3D,IAAI/0B,EAAI,EACR,IAAK,IAAIsb,EAAI,EAAG6P,EAAKyI,EAAKt0B,OAAQgc,EAAI6P,IAAM7P,EAAG,CAC7C,MAAMlb,EAAMwzB,EAAKtY,GACjByZ,EAAa/0B,KAAOk1B,GAClBrf,EACAC,EACA1V,EACA2V,EACAgf,EAAa/0B,IAEf8V,EAAS1V,CACb,CAEE,OADA20B,EAAaz1B,OAASU,EACf+0B,CACT,CAWO,SAASK,GACdvf,EACAC,EACAge,EACA/d,EACAkf,GAEAA,OAAkChwB,IAAlBgwB,EAA8BA,EAAgB,GAC9D,IAAIj1B,EAAI,EACR,IAAK,IAAIsb,EAAI,EAAG6P,EAAK2I,EAAMx0B,OAAQgc,EAAI6P,IAAM7P,EAAG,CAC9C,MAAMsY,EAAOE,EAAMxY,GACnB2Z,EAAcj1B,KACI,IAAhB4zB,EAAKt0B,QAAgBs0B,EAAK,KAAO9d,EAC7B,GACAqf,GACEtf,EACAC,EACA8d,EACA7d,EACAkf,EAAcj1B,IAEtB8V,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CAEE,OADA21B,EAAc31B,OAASU,EAChBi1B,CACT,CCJO,SAASI,GACdxf,EACAC,EACA1V,EACA2V,EACAib,EACAsE,EACAC,GAEA,MAAMx1B,GAAKK,EAAM0V,GAAUC,EAC3B,GAAIhW,EAAI,EAAG,CACT,KAAO+V,EAAS1V,EAAK0V,GAAUC,EAC7Buf,EAA0BC,KAAsB1f,EAAgBC,GAChEwf,EAA0BC,KACxB1f,EAAgBC,EAAS,GAE7B,OAAOyf,CACX,CAEE,MAAMC,EAAU,IAAI/0B,MAAMV,GAC1By1B,EAAQ,GAAK,EACbA,EAAQz1B,EAAI,GAAK,EAEjB,MAAM01B,EAAQ,CAAC3f,EAAQ1V,EAAM2V,GAC7B,IAAI1U,EAAQ,EACZ,KAAOo0B,EAAMn2B,OAAS,GAAG,CACvB,MAAMo2B,EAAOD,EAAMnsB,MACbqsB,EAAQF,EAAMnsB,MACpB,IAAIssB,EAAqB,EACzB,MAAM9d,EAAKjC,EAAgB8f,GACrB5d,EAAKlC,EAAgB8f,EAAQ,GAC7B3d,EAAKnC,EAAgB6f,GACrBzd,EAAKpC,EAAgB6f,EAAO,GAClC,IAAK,IAAI11B,EAAI21B,EAAQ5f,EAAQ/V,EAAI01B,EAAM11B,GAAK+V,EAAQ,CAClD,MAEMgF,EAAkBD,GAFdjF,EAAgB7V,GAChB6V,EAAgB7V,EAAI,GACuB8X,EAAIC,EAAIC,EAAIC,GAC7D8C,EAAkB6a,IACpBv0B,EAAQrB,EACR41B,EAAqB7a,EAE7B,CACQ6a,EAAqB5E,IACvBwE,GAASn0B,EAAQyU,GAAUC,GAAU,EACjC4f,EAAQ5f,EAAS1U,GACnBo0B,EAAMrxB,KAAKuxB,EAAOt0B,GAEhBA,EAAQ0U,EAAS2f,GACnBD,EAAMrxB,KAAK/C,EAAOq0B,GAG1B,CACE,IAAK,IAAI11B,EAAI,EAAGA,EAAID,IAAKC,EACnBw1B,EAAQx1B,KACVs1B,EAA0BC,KACxB1f,EAAgBC,EAAS9V,EAAI+V,GAC/Buf,EAA0BC,KACxB1f,EAAgBC,EAAS9V,EAAI+V,EAAS,IAG5C,OAAOwf,CACT,CAcO,SAASM,GACdhgB,EACAC,EACA8d,EACA7d,EACAib,EACAsE,EACAC,EACAO,GAEA,IAAK,IAAI91B,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACjBu1B,EAAmBF,GACjBxf,EACAC,EACA1V,EACA2V,EACAib,EACAsE,EACAC,GAEFO,EAAe1xB,KAAKmxB,GACpBzf,EAAS1V,CACb,CACE,OAAOm1B,CACT,CAuDO,SAASQ,GACdlgB,EACAC,EACA1V,EACA2V,EACAib,EACAsE,EACAC,GAEA,GAAIn1B,GAAO0V,EAASC,EAAQ,CAE1B,KAAOD,EAAS1V,EAAK0V,GAAUC,EAC7Buf,EAA0BC,KAAsB1f,EAAgBC,GAChEwf,EAA0BC,KACxB1f,EAAgBC,EAAS,GAE7B,OAAOyf,CACX,CACE,IAAIzd,EAAKjC,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAElCwf,EAA0BC,KAAsBzd,EAChDwd,EAA0BC,KAAsBxd,EAChD,IAAIC,EAAKF,EACLG,EAAKF,EACT,IAAKjC,GAAUC,EAAQD,EAAS1V,EAAK0V,GAAUC,EAC7CiC,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAC1BiF,GAAgBjD,EAAIC,EAAIC,EAAIC,GAAM+Y,IAEpCsE,EAA0BC,KAAsBvd,EAChDsd,EAA0BC,KAAsBtd,EAChDH,EAAKE,EACLD,EAAKE,GAQT,OALID,GAAMF,GAAMG,GAAMF,IAEpBud,EAA0BC,KAAsBvd,EAChDsd,EAA0BC,KAAsBtd,GAE3Csd,CACT,CAOO,SAASS,GAAKxzB,EAAO0T,GAC1B,OAAOA,EAAY7L,KAAK+R,MAAM5Z,EAAQ0T,EACxC,CAqBO,SAAS+f,GACdpgB,EACAC,EACA1V,EACA2V,EACAG,EACAof,EACAC,GAGA,GAAIzf,GAAU1V,EACZ,OAAOm1B,EAGT,IAQIvd,EAAIC,EARJH,EAAKke,GAAKngB,EAAgBC,GAASI,GACnC6B,EAAKie,GAAKngB,EAAgBC,EAAS,GAAII,GAC3CJ,GAAUC,EAEVuf,EAA0BC,KAAsBzd,EAChDwd,EAA0BC,KAAsBxd,EAIhD,GAIE,GAHAC,EAAKge,GAAKngB,EAAgBC,GAASI,GACnC+B,EAAK+d,GAAKngB,EAAgBC,EAAS,GAAII,IACvCJ,GAAUC,IACI3V,EAOZ,OAFAk1B,EAA0BC,KAAsBvd,EAChDsd,EAA0BC,KAAsBtd,EACzCsd,QAEFvd,GAAMF,GAAMG,GAAMF,GAC3B,KAAOjC,EAAS1V,GAAK,CAEnB,MAAM8X,EAAK8d,GAAKngB,EAAgBC,GAASI,GACnCiC,EAAK6d,GAAKngB,EAAgBC,EAAS,GAAII,GAG7C,GAFAJ,GAAUC,EAENmC,GAAMF,GAAMG,GAAMF,EACpB,SAGF,MAAM6W,EAAM9W,EAAKF,EACXiX,EAAM9W,EAAKF,EAEXmX,EAAMhX,EAAKJ,EACXqX,EAAMhX,EAAKJ,EAKf+W,EAAMK,GAAOJ,EAAMG,IACjBJ,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,KACzDC,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,IAG3D/W,EAAKE,EACLD,EAAKE,IAMPmd,EAA0BC,KAAsBvd,EAChDsd,EAA0BC,KAAsBtd,EAChDH,EAAKE,EACLD,EAAKE,EACLD,EAAKE,EACLD,EAAKE,EACT,CAIE,OAFAmd,EAA0BC,KAAsBvd,EAChDsd,EAA0BC,KAAsBtd,EACzCsd,CACT,CAcO,SAASW,GACdrgB,EACAC,EACA8d,EACA7d,EACAG,EACAof,EACAC,EACAO,GAEA,IAAK,IAAI91B,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACjBu1B,EAAmBU,GACjBpgB,EACAC,EACA1V,EACA2V,EACAG,EACAof,EACAC,GAEFO,EAAe1xB,KAAKmxB,GACpBzf,EAAS1V,CACb,CACE,OAAOm1B,CACT,CAcO,SAASY,GACdtgB,EACAC,EACAge,EACA/d,EACAG,EACAof,EACAC,EACAa,GAEA,IAAK,IAAIp2B,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GAEb81B,EAAiB,GACvBP,EAAmBW,GACjBrgB,EACAC,EACA8d,EACA7d,EACAG,EACAof,EACAC,EACAO,GAEFM,EAAgBhyB,KAAK0xB,GACrBhgB,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CACE,OAAOi2B,CACT,CC3cA,MAAMc,WAAmB/D,GAMvB,WAAA9zB,CAAYyV,EAAase,GACvB7uB,QAMAjF,KAAK63B,WAAc,EAMnB73B,KAAK83B,mBAAsB,OAEZtxB,IAAXstB,GAAyB9xB,MAAMC,QAAQuT,EAAY,IAMrDxV,KAAKy0B,eACX,EAGQX,GATF9zB,KAAKu0B,mBACHT,EACR,EAUA,CAQE,KAAArf,GACE,OAAO,IAAImjB,GAAW53B,KAAKoX,gBAAgB5T,QAASxD,KAAK8zB,OAC7D,CAUE,cAAApB,CAAe3c,EAAGC,EAAG2c,EAAcC,GACjC,OAAIA,EAAqB9c,GAAyB9V,KAAK6b,YAAa9F,EAAGC,GAC9D4c,GAEL5yB,KAAK83B,mBAAqB93B,KAAK6H,gBACjC7H,KAAK63B,UAAYjsB,KAAK6S,KACpBgX,GACEz1B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACL,IAGJtX,KAAK83B,kBAAoB93B,KAAK6H,eAEzBiuB,GACL91B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACLtX,KAAK63B,WACL,EACA9hB,EACAC,EACA2c,EACAC,GAEN,CAOE,OAAApa,GACE,OAAOuf,GACL/3B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OAEX,CAQE,cAAAyc,GACE,OAAO0C,GACLz2B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OAEX,CAQE,6BAAA+c,CAA8B9B,GAE5B,MAAMsE,EAA4B,GAUlC,OATAA,EAA0Bh2B,OAAS+1B,GACjC52B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACLib,EACAsE,EACA,GAEK,IAAIe,GAAWf,EAA2B,KACrD,CAQE,OAAAzD,GACE,MAAO,YACX,CASE,gBAAAC,CAAiB5d,GACf,OAAO,CACX,CASE,cAAAgf,CAAejf,EAAase,GAC1B9zB,KAAK00B,UAAUZ,EAAQte,EAAa,GAC/BxV,KAAKoX,kBACRpX,KAAKoX,gBAAkB,IAEzBpX,KAAKoX,gBAAgBvW,OAASu1B,GAC5Bp2B,KAAKoX,gBACL,EACA5B,EACAxV,KAAKsX,QAEPtX,KAAK4H,SACT,EClLA,MAAMowB,WAAcnE,GAKlB,WAAA9zB,CAAYyV,EAAase,GACvB7uB,QACAjF,KAAKy0B,eAAejf,EAAase,EACrC,CAQE,KAAArf,GACE,MAAM4Q,EAAQ,IAAI2S,GAAMh4B,KAAKoX,gBAAgB5T,QAASxD,KAAK8zB,QAE3D,OADAzO,EAAMvb,gBAAgB9J,MACfqlB,CACX,CAUE,cAAAqN,CAAe3c,EAAGC,EAAG2c,EAAcC,GACjC,MAAMxb,EAAkBpX,KAAKoX,gBACvBkF,EAAkBqZ,GACtB5f,EACAC,EACAoB,EAAgB,GAChBA,EAAgB,IAElB,GAAIkF,EAAkBsW,EAAoB,CACxC,MAAMtb,EAAStX,KAAKsX,OACpB,IAAK,IAAI/V,EAAI,EAAGA,EAAI+V,IAAU/V,EAC5BoxB,EAAapxB,GAAK6V,EAAgB7V,GAGpC,OADAoxB,EAAa9xB,OAASyW,EACfgF,CACb,CACI,OAAOsW,CACX,CAQE,cAAAmB,GACE,OAAO/zB,KAAKoX,gBAAgB5T,OAChC,CAQE,aAAAyvB,CAAcxd,GACZ,OAAOyB,GAA6BlX,KAAKoX,gBAAiB3B,EAC9D,CAQE,OAAA2d,GACE,MAAO,OACX,CASE,gBAAAC,CAAiB5d,GACf,OAAOY,GAAWZ,EAAQzV,KAAKoX,gBAAgB,GAAIpX,KAAKoX,gBAAgB,GAC5E,CAQE,cAAAqd,CAAejf,EAAase,GAC1B9zB,KAAK00B,UAAUZ,EAAQte,EAAa,GAC/BxV,KAAKoX,kBACRpX,KAAKoX,gBAAkB,IAEzBpX,KAAKoX,gBAAgBvW,OAASs1B,GAC5Bn2B,KAAKoX,gBACL,EACA5B,EACAxV,KAAKsX,QAEPtX,KAAK4H,SACT,EC7GO,SAASqwB,GACd7gB,EACAC,EACA1V,EACA2V,EACA7B,GAmBA,OAjBgBwC,GACdxC,GAKA,SAAUW,GACR,OAAQ8hB,GACN9gB,EACAC,EACA1V,EACA2V,EACAlB,EAAW,GACXA,EAAW,GAEd,GAGL,CAWO,SAAS8hB,GACd9gB,EACAC,EACA1V,EACA2V,EACAvB,EACAC,GASA,IAAImiB,EAAK,EACL9e,EAAKjC,EAAgBzV,EAAM2V,GAC3BgC,EAAKlC,EAAgBzV,EAAM2V,EAAS,GACxC,KAAOD,EAAS1V,EAAK0V,GAAUC,EAAQ,CACrC,MAAMiC,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAChCiC,GAAMtD,EACJwD,EAAKxD,IAAMuD,EAAKF,IAAOrD,EAAIsD,IAAOvD,EAAIsD,IAAOG,EAAKF,GAAM,GAC1D6e,IAEO3e,GAAMxD,IAAMuD,EAAKF,IAAOrD,EAAIsD,IAAOvD,EAAIsD,IAAOG,EAAKF,GAAM,GAClE6e,IAEF9e,EAAKE,EACLD,EAAKE,CACT,CACE,OAAc,IAAP2e,CACT,CAWO,SAASC,GACdhhB,EACAC,EACA8d,EACA7d,EACAvB,EACAC,GAEA,GAAoB,IAAhBmf,EAAKt0B,OACP,OAAO,EAET,IAAKq3B,GAAqB9gB,EAAiBC,EAAQ8d,EAAK,GAAI7d,EAAQvB,EAAGC,GACrE,OAAO,EAET,IAAK,IAAIzU,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAC1C,GACE22B,GAAqB9gB,EAAiB+d,EAAK5zB,EAAI,GAAI4zB,EAAK5zB,GAAI+V,EAAQvB,EAAGC,GAEvE,OAAO,EAGX,OAAO,CACT,CAWO,SAASqiB,GACdjhB,EACAC,EACAge,EACA/d,EACAvB,EACAC,GAEA,GAAqB,IAAjBqf,EAAMx0B,OACR,OAAO,EAET,IAAK,IAAIU,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GACnB,GAAI62B,GAAsBhhB,EAAiBC,EAAQ8d,EAAM7d,EAAQvB,EAAGC,GAClE,OAAO,EAETqB,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CACE,OAAO,CACT,CC7HO,SAASy3B,GACdlhB,EACAC,EACA8d,EACA7d,EACAihB,EACAC,EACA3iB,GAEA,IAAItU,EAAG4E,EAAI4P,EAAGsD,EAAIE,EAAID,EAAIE,EAC1B,MAAMxD,EAAIuiB,EAAYC,EAAoB,GAEpCC,EAAgB,GAEtB,IAAK,IAAI9b,EAAI,EAAG+b,EAAKvD,EAAKt0B,OAAQ8b,EAAI+b,IAAM/b,EAAG,CAC7C,MAAMhb,EAAMwzB,EAAKxY,GAGjB,IAFAtD,EAAKjC,EAAgBzV,EAAM2V,GAC3BgC,EAAKlC,EAAgBzV,EAAM2V,EAAS,GAC/B/V,EAAI8V,EAAQ9V,EAAII,EAAKJ,GAAK+V,EAC7BiC,EAAKnC,EAAgB7V,GACrBiY,EAAKpC,EAAgB7V,EAAI,IACpByU,GAAKsD,GAAME,GAAMxD,GAAOsD,GAAMtD,GAAKA,GAAKwD,KAC3CzD,GAAMC,EAAIsD,IAAOE,EAAKF,IAAQC,EAAKF,GAAMA,EACzCof,EAAc9yB,KAAKoQ,IAErBsD,EAAKE,EACLD,EAAKE,CAEX,CAGE,IAAImf,EAAS3G,IACT4G,GAAoB7hB,IAGxB,IAFA0hB,EAAcI,KAAKn4B,GACnB2Y,EAAKof,EAAc,GACdl3B,EAAI,EAAG4E,EAAKsyB,EAAc53B,OAAQU,EAAI4E,IAAM5E,EAAG,CAClDgY,EAAKkf,EAAcl3B,GACnB,MAAMu3B,EAAgBltB,KAAK8L,IAAI6B,EAAKF,GAChCyf,EAAgBF,IAClB7iB,GAAKsD,EAAKE,GAAM,EACZ6e,GAAsBhhB,EAAiBC,EAAQ8d,EAAM7d,EAAQvB,EAAGC,KAClE2iB,EAAS5iB,EACT6iB,EAAmBE,IAGvBzf,EAAKE,CACT,CAME,OALI2Z,MAAMyF,KAGRA,EAASJ,EAAYC,IAEnB3iB,GACFA,EAAKlQ,KAAKgzB,EAAQ3iB,EAAG4iB,GACd/iB,GAEF,CAAC8iB,EAAQ3iB,EAAG4iB,EACrB,CAWO,SAASG,GACd3hB,EACAC,EACAge,EACA/d,EACAihB,GAGA,IAAIS,EAAiB,GACrB,IAAK,IAAIz3B,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GACnBy3B,EAAiBV,GACflhB,EACAC,EACA8d,EACA7d,EACAihB,EACA,EAAIh3B,EACJy3B,GAEF3hB,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CACE,OAAOm4B,CACT,CC7FO,SAASluB,GAAQsM,EAAiBC,EAAQ1V,EAAK2V,EAAQY,GAC5D,IAAI+gB,EAEJ,IADA5hB,GAAUC,EACHD,EAAS1V,EAAK0V,GAAUC,EAK7B,GAJA2hB,EAAM/gB,EACJd,EAAgB5T,MAAM6T,EAASC,EAAQD,GACvCD,EAAgB5T,MAAM6T,EAAQA,EAASC,IAErC2hB,EACF,OAAOA,EAGX,OAAO,CACT,CASO,SAASC,GAAqBC,EAAUC,GAC7C,MAAOr4B,EAAGC,GAAKm4B,GACR5Q,EAAG5H,GAAKyY,EACTztB,IACF5K,EAAE,GAAKwnB,EAAE,KAAOA,EAAE,GAAK5H,EAAE,KAAO5f,EAAE,GAAKwnB,EAAE,KAAOA,EAAE,GAAK5H,EAAE,OACzD5f,EAAE,GAAKC,EAAE,KAAOunB,EAAE,GAAK5H,EAAE,KAAO5f,EAAE,GAAKC,EAAE,KAAOunB,EAAE,GAAK5H,EAAE,KACvD0Y,IACFt4B,EAAE,GAAKwnB,EAAE,KAAOxnB,EAAE,GAAKC,EAAE,KAAOD,EAAE,GAAKwnB,EAAE,KAAOxnB,EAAE,GAAKC,EAAE,OACzDD,EAAE,GAAKC,EAAE,KAAOunB,EAAE,GAAK5H,EAAE,KAAO5f,EAAE,GAAKC,EAAE,KAAOunB,EAAE,GAAK5H,EAAE,KAG7D,GAAI,GAAKhV,GAAKA,GAAK,GAAK,GAAK0tB,GAAKA,GAAK,EACrC,MAAO,CAACt4B,EAAE,GAAK4K,GAAK3K,EAAE,GAAKD,EAAE,IAAKA,EAAE,GAAK4K,GAAK3K,EAAE,GAAKD,EAAE,IAG3D,CCjCO,SAASu4B,GACdliB,EACAC,EACA1V,EACA2V,EACA7B,EACA8jB,GAKA,OAHAA,EACEA,GACAhiB,G5BqKK,CAACR,IAAUA,KAAU,KAAW,K4BrKAK,EAAiBC,EAAQ1V,EAAK2V,KAChEgD,GAAW7E,EAAQ8jB,KAIrBA,EAAkB,IAAM9jB,EAAO,IAAM8jB,EAAkB,IAAM9jB,EAAO,IACpE8jB,EAAkB,IAAM9jB,EAAO,IAAM8jB,EAAkB,IAAM9jB,EAAO,IAIhE+jB,GACLpiB,EACAC,EACA1V,EACA2V,GAOA,SAAUmiB,EAAQC,GAChB,OAAO/e,GAAkBlF,EAAQgkB,EAAQC,EAC1C,IAEL,CAUO,SAASC,GACdviB,EACAC,EACA8d,EACA7d,EACA7B,GAEA,IAAK,IAAIlU,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,GACE+3B,GAAqBliB,EAAiBC,EAAQ8d,EAAK5zB,GAAI+V,EAAQ7B,GAE/D,OAAO,EAET4B,EAAS8d,EAAK5zB,EAClB,CACE,OAAO,CACT,CAUO,SAASq4B,GACdxiB,EACAC,EACA1V,EACA2V,EACA7B,GAEA,QAAI6jB,GAAqBliB,EAAiBC,EAAQ1V,EAAK2V,EAAQ7B,OAI7DyiB,GACE9gB,EACAC,EACA1V,EACA2V,EACA7B,EAAO,GACPA,EAAO,QAMTyiB,GACE9gB,EACAC,EACA1V,EACA2V,EACA7B,EAAO,GACPA,EAAO,QAMTyiB,GACE9gB,EACAC,EACA1V,EACA2V,EACA7B,EAAO,GACPA,EAAO,OAMTyiB,GACE9gB,EACAC,EACA1V,EACA2V,EACA7B,EAAO,GACPA,EAAO,MAMb,CAUO,SAASokB,GACdziB,EACAC,EACA8d,EACA7d,EACA7B,GAEA,IAAKmkB,GAAqBxiB,EAAiBC,EAAQ8d,EAAK,GAAI7d,EAAQ7B,GAClE,OAAO,EAET,GAAoB,IAAhB0f,EAAKt0B,OACP,OAAO,EAET,IAAK,IAAIU,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAC1C,GACE02B,GACE7gB,EACA+d,EAAK5zB,EAAI,GACT4zB,EAAK5zB,GACL+V,EACA7B,KAIC6jB,GACCliB,EACA+d,EAAK5zB,EAAI,GACT4zB,EAAK5zB,GACL+V,EACA7B,GAGF,OAAO,EAIb,OAAO,CACT,CAUO,SAASqkB,GACd1iB,EACAC,EACAge,EACA/d,EACA7B,GAEA,IAAK,IAAIlU,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GACnB,GACEs4B,GAA0BziB,EAAiBC,EAAQ8d,EAAM7d,EAAQ7B,GAEjE,OAAO,EAET4B,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CACE,OAAO,CACT,CCvNO,SAAS2U,GAAY4B,EAAiBC,EAAQ1V,EAAK2V,GACxD,KAAOD,EAAS1V,EAAM2V,GAAQ,CAC5B,IAAK,IAAI/V,EAAI,EAAGA,EAAI+V,IAAU/V,EAAG,CAC/B,MAAMK,EAAMwV,EAAgBC,EAAS9V,GACrC6V,EAAgBC,EAAS9V,GAAK6V,EAAgBzV,EAAM2V,EAAS/V,GAC7D6V,EAAgBzV,EAAM2V,EAAS/V,GAAKK,CAC1C,CACIyV,GAAUC,EACV3V,GAAO2V,CACX,CACA,CCLO,SAASyiB,GAAsB3iB,EAAiBC,EAAQ1V,EAAK2V,GAGlE,IAAI0iB,EAAO,EACP3gB,EAAKjC,EAAgBzV,EAAM2V,GAC3BgC,EAAKlC,EAAgBzV,EAAM2V,EAAS,GACxC,KAAOD,EAAS1V,EAAK0V,GAAUC,EAAQ,CACrC,MAAMiC,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GACpC2iB,IAASzgB,EAAKF,IAAOG,EAAKF,GAC1BD,EAAKE,EACLD,EAAKE,CACT,CACE,OAAgB,IAATwgB,OAAaxzB,EAAYwzB,EAAO,CACzC,CAeO,SAASC,GACd7iB,EACAC,EACA8d,EACA7d,EACA4iB,GAEAA,OAAkB1zB,IAAV0zB,GAAsBA,EAC9B,IAAK,IAAI34B,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACX44B,EAAcJ,GAClB3iB,EACAC,EACA1V,EACA2V,GAEF,GAAU,IAAN/V,GACF,GAAK24B,GAASC,IAAkBD,IAAUC,EACxC,OAAO,OAGT,GAAKD,IAAUC,IAAkBD,GAASC,EACxC,OAAO,EAGX9iB,EAAS1V,CACb,CACE,OAAO,CACT,CAeO,SAASy4B,GACdhjB,EACAC,EACAge,EACA/d,EACA4iB,GAEA,IAAK,IAAI34B,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GACnB,IAAK04B,GAAuB7iB,EAAiBC,EAAQ8d,EAAM7d,EAAQ4iB,GACjE,OAAO,EAEL/E,EAAKt0B,SACPwW,EAAS8d,EAAKA,EAAKt0B,OAAS,GAElC,CACE,OAAO,CACT,CAeO,SAASw5B,GACdjjB,EACAC,EACA8d,EACA7d,EACA4iB,GAEAA,OAAkB1zB,IAAV0zB,GAAsBA,EAC9B,IAAK,IAAI34B,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACX44B,EAAcJ,GAClB3iB,EACAC,EACA1V,EACA2V,IAGM,IAAN/V,EACK24B,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,IAE1CG,GAAmBljB,EAAiBC,EAAQ1V,EAAK2V,GAEnDD,EAAS1V,CACb,CACE,OAAO0V,CACT,CAeO,SAASkjB,GACdnjB,EACAC,EACAge,EACA/d,EACA4iB,GAEA,IAAK,IAAI34B,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAC3C8V,EAASgjB,GACPjjB,EACAC,EACAge,EAAM9zB,GACN+V,EACA4iB,GAGJ,OAAO7iB,CACT,CASO,SAASmjB,GAAYpjB,EAAiB+d,GAC3C,MAAME,EAAQ,GACd,IAEIoF,EAFApjB,EAAS,EACTqjB,EAAe,EAEnB,IAAK,IAAIn5B,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GAEXo5B,EAAcZ,GAAsB3iB,EAAiBC,EAAQ1V,EAAK,GAIxE,QAHyB6E,IAArBi0B,IACFA,EAAmBE,GAEjBA,IAAgBF,EAClBpF,EAAM1vB,KAAKwvB,EAAK3xB,MAAMk3B,EAAcn5B,EAAI,QACnC,CACL,GAAqB,IAAjB8zB,EAAMx0B,OACR,SAEFw0B,EAAMA,EAAMx0B,OAAS,GAAG8E,KAAKwvB,EAAKuF,GACxC,CACIA,EAAen5B,EAAI,EACnB8V,EAAS1V,CACb,CACE,OAAO0zB,CACT,CCxLA,MAAMuF,WAAgB/G,GAYpB,WAAA9zB,CAAYyV,EAAase,EAAQqB,GAC/BlwB,QAMAjF,KAAK66B,MAAQ,GAMb76B,KAAK86B,4BAA+B,EAMpC96B,KAAK+6B,mBAAqB,KAM1B/6B,KAAK63B,WAAc,EAMnB73B,KAAK83B,mBAAsB,EAM3B93B,KAAKg7B,mBAAsB,EAM3Bh7B,KAAKi7B,yBAA2B,UAEjBz0B,IAAXstB,GAAwBqB,GAC1Bn1B,KAAKu0B,mBACHT,EACR,GAEM9zB,KAAK66B,MAAQ1F,GAEbn1B,KAAKy0B,eACX,EAGQX,EAGR,CAOE,gBAAAoH,CAAiBlG,GACVh1B,KAAKoX,gBAGRvV,EAAO7B,KAAKoX,gBAAiB4d,EAAWf,sBAFxCj0B,KAAKoX,gBAAkB4d,EAAWf,qBAAqBzwB,QAIzDxD,KAAK66B,MAAMl1B,KAAK3F,KAAKoX,gBAAgBvW,QACrCb,KAAK4H,SACT,CAQE,KAAA6M,GACE,MAAM0mB,EAAU,IAAIP,GAClB56B,KAAKoX,gBAAgB5T,QACrBxD,KAAK8zB,OACL9zB,KAAK66B,MAAMr3B,SAGb,OADA23B,EAAQrxB,gBAAgB9J,MACjBm7B,CACX,CAUE,cAAAzI,CAAe3c,EAAGC,EAAG2c,EAAcC,GACjC,OAAIA,EAAqB9c,GAAyB9V,KAAK6b,YAAa9F,EAAGC,GAC9D4c,GAEL5yB,KAAK83B,mBAAqB93B,KAAK6H,gBACjC7H,KAAK63B,UAAYjsB,KAAK6S,KACpBmX,GACE51B,KAAKoX,gBACL,EACApX,KAAK66B,MACL76B,KAAKsX,OACL,IAGJtX,KAAK83B,kBAAoB93B,KAAK6H,eAEzBouB,GACLj2B,KAAKoX,gBACL,EACApX,KAAK66B,MACL76B,KAAKsX,OACLtX,KAAK63B,WACL,EACA9hB,EACAC,EACA2c,EACAC,GAEN,CAQE,UAAAvc,CAAWN,EAAGC,GACZ,OAAOoiB,GACLp4B,KAAKo7B,6BACL,EACAp7B,KAAK66B,MACL76B,KAAKsX,OACLvB,EACAC,EAEN,CAOE,OAAAwC,GACE,OAAO6iB,GACLr7B,KAAKo7B,6BACL,EACAp7B,KAAK66B,MACL76B,KAAKsX,OAEX,CAgBE,cAAAyc,CAAemG,GACb,IAAI9iB,EAQJ,YAPc5Q,IAAV0zB,GACF9iB,EAAkBpX,KAAKo7B,6BAA6B53B,QACpD62B,GAAkBjjB,EAAiB,EAAGpX,KAAK66B,MAAO76B,KAAKsX,OAAQ4iB,IAE/D9iB,EAAkBpX,KAAKoX,gBAGlBsf,GAAwBtf,EAAiB,EAAGpX,KAAK66B,MAAO76B,KAAKsX,OACxE,CAKE,OAAAgkB,GACE,OAAOt7B,KAAK66B,KAChB,CAKE,oBAAAU,GACE,GAAIv7B,KAAK86B,4BAA8B96B,KAAK6H,cAAe,CACzD,MAAM2zB,EAAa5iB,GAAU5Y,KAAK6b,aAClC7b,KAAK+6B,mBAAqBzC,GACxBt4B,KAAKo7B,6BACL,EACAp7B,KAAK66B,MACL76B,KAAKsX,OACLkkB,EACA,GAEFx7B,KAAK86B,2BAA6B96B,KAAK6H,aAC7C,CACI,OACE7H,KACN,kBACA,CAQE,gBAAAy7B,GACE,OAAO,IAAIzD,GAAMh4B,KAAKu7B,uBAAwB,MAClD,CASE,kBAAAG,GACE,OAAO17B,KAAK66B,MAAMh6B,MACtB,CAYE,aAAA86B,CAAc/4B,GACZ,OAAIA,EAAQ,GAAK5C,KAAK66B,MAAMh6B,QAAU+B,EAC7B,KAEF,IAAIg1B,GACT53B,KAAKoX,gBAAgB5T,MACT,IAAVZ,EAAc,EAAI5C,KAAK66B,MAAMj4B,EAAQ,GACrC5C,KAAK66B,MAAMj4B,IAEb5C,KAAK8zB,OAEX,CAOE,cAAA8H,GACE,MAAM9H,EAAS9zB,KAAK8zB,OACd1c,EAAkBpX,KAAKoX,gBACvB+d,EAAOn1B,KAAK66B,MACZ3F,EAAc,GACpB,IAAI7d,EAAS,EACb,IAAK,IAAI9V,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACXyzB,EAAa,IAAI4C,GACrBxgB,EAAgB5T,MAAM6T,EAAQ1V,GAC9BmyB,GAEFoB,EAAYvvB,KAAKqvB,GACjB3d,EAAS1V,CACf,CACI,OAAOuzB,CACX,CAKE,0BAAAkG,GACE,GAAIp7B,KAAKg7B,mBAAqBh7B,KAAK6H,cAAe,CAChD,MAAMuP,EAAkBpX,KAAKoX,gBACzB6iB,GAAuB7iB,EAAiB,EAAGpX,KAAK66B,MAAO76B,KAAKsX,QAC9DtX,KAAKi7B,yBAA2B7jB,GAEhCpX,KAAKi7B,yBAA2B7jB,EAAgB5T,QAChDxD,KAAKi7B,yBAAyBp6B,OAASw5B,GACrCr6B,KAAKi7B,yBACL,EACAj7B,KAAK66B,MACL76B,KAAKsX,SAGTtX,KAAKg7B,kBAAoBh7B,KAAK6H,aACpC,CACI,OAAqC7H,KAA6B,wBACtE,CAQE,6BAAAq0B,CAA8B9B,GAE5B,MAAMsE,EAA4B,GAE5BQ,EAAiB,GAWvB,OAVAR,EAA0Bh2B,OAAS42B,GACjCz3B,KAAKoX,gBACL,EACApX,KAAK66B,MACL76B,KAAKsX,OACL1L,KAAK6S,KAAK8T,GACVsE,EACA,EACAQ,GAEK,IAAIuD,GAAQ/D,EAA2B,KAAMQ,EACxD,CAQE,OAAAjE,GACE,MAAO,SACX,CASE,gBAAAC,CAAiB5d,GACf,OAAOokB,GACL75B,KAAKo7B,6BACL,EACAp7B,KAAK66B,MACL76B,KAAKsX,OACL7B,EAEN,CASE,cAAAgf,CAAejf,EAAase,GAC1B9zB,KAAK00B,UAAUZ,EAAQte,EAAa,GAC/BxV,KAAKoX,kBACRpX,KAAKoX,gBAAkB,IAEzB,MAAM+d,EAAOkB,GACXr2B,KAAKoX,gBACL,EACA5B,EACAxV,KAAKsX,OACLtX,KAAK66B,OAEP76B,KAAKoX,gBAAgBvW,OAAyB,IAAhBs0B,EAAKt0B,OAAe,EAAIs0B,EAAKA,EAAKt0B,OAAS,GACzEb,KAAK4H,SACT,EAiBO,SAASi0B,GAAS7iB,EAAQmF,EAAQ7c,EAAGw6B,GAC1Cx6B,EAAIA,GAAQ,GAEZ,MAAM8V,EAAkB,GACxB,IAAK,IAAI7V,EAAI,EAAGA,EAAID,IAAKC,EACvBM,EACEuV,EACA2kB,GAAa/iB,EAAQmF,EAAS,EAAIvS,KAAKuR,GAAK5b,EAAKD,EAAGw6B,IAIxD,OADA1kB,EAAgBzR,KAAKyR,EAAgB,GAAIA,EAAgB,IAClD,IAAIwjB,GAAQxjB,EAAiB,KAAM,CAACA,EAAgBvW,QAC7D,CAQO,SAASm7B,GAAWvmB,GACzB,GAAIjR,GAAQiR,GACV,MAAM,IAAIpN,MAAM,2CAElB,MAAMqO,EAAOjB,EAAO,GACdkB,EAAOlB,EAAO,GACdmB,EAAOnB,EAAO,GACdoB,EAAOpB,EAAO,GACd2B,EAAkB,CACtBV,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,GAEF,OAAO,IAAIikB,GAAQxjB,EAAiB,KAAM,CAACA,EAAgBvW,QAC7D,CAWO,SAASo7B,GAAWxb,EAAQyb,EAAOpa,GACxCoa,EAAQA,GAAgB,GACxB,MAAM5kB,EAASmJ,EAAO6T,YAChBR,EAASrT,EAAO0T,YAChBnb,EAASyH,EAAO7H,YAChBujB,EAAc7kB,GAAU4kB,EAAQ,GAChC9kB,EAAkB,IAAIpV,MAAMm6B,GAClC,IAAK,IAAI56B,EAAI,EAAGA,EAAI46B,EAAa56B,GAAK+V,EAAQ,CAC5CF,EAAgB7V,GAAK,EACrB6V,EAAgB7V,EAAI,GAAK,EACzB,IAAK,IAAIsb,EAAI,EAAGA,EAAIvF,EAAQuF,IAC1BzF,EAAgB7V,EAAIsb,GAAK7D,EAAO6D,EAEtC,CACE,MAAMsY,EAAO,CAAC/d,EAAgBvW,QACxBs6B,EAAU,IAAIP,GAAQxjB,EAAiB0c,EAAQqB,GAErD,OADAiH,GAAYjB,EAASniB,EAAQyH,EAAOC,YAAaoB,GAC1CqZ,CACT,CAUO,SAASiB,GAAYjB,EAASniB,EAAQmF,EAAQ2D,GACnD,MAAM1K,EAAkB+jB,EAAQlH,qBAC1B3c,EAAS6jB,EAAQ7G,YACjB4H,EAAQ9kB,EAAgBvW,OAASyW,EAAS,EAC1C+kB,EAAava,GAAgB,EACnC,IAAK,IAAIvgB,EAAI,EAAGA,GAAK26B,IAAS36B,EAAG,CAC/B,MAAM8V,EAAS9V,EAAI+V,EACbwK,EAAQua,EAAiC,EAAnB/e,GAAO/b,EAAG26B,GAAatwB,KAAKuR,GAAM+e,EAC9D9kB,EAAgBC,GAAU2B,EAAO,GAAKmF,EAASvS,KAAKiO,IAAIiI,GACxD1K,EAAgBC,EAAS,GAAK2B,EAAO,GAAKmF,EAASvS,KAAKmO,IAAI+H,EAChE,CACEqZ,EAAQvzB,SACV,CC3fA,MAAMqC,GACM,WADNA,GAEe,mBAFfA,GAGM,WAHNA,GAIe,mBAJfA,GAKK,UALLA,GAMM,WANNA,GAOQ,aAPRA,GAQG,QARHA,GASM,WATNA,GAUc,kBAMdqyB,GAMG,QAOF,MAAMC,WAAyB93B,EAIpC,WAAA1E,CAAY0T,GACVxO,MAAMq3B,IAONt8B,KAAK+iB,KAAOtP,EAAMsP,KAOlB/iB,KAAKw8B,QAAU/oB,EAAM+oB,OACzB,EC1De,IAAAC,GACP,EADOA,GAEJ,EAFIA,GAGL,EAHKA,GAIN,EAJMA,GAKN,EC8CT,MAAMC,WAAqBl1B,EAQzB,WAAAzH,CAAY0V,EAAQwD,EAAY0jB,EAAYC,GAC1C33B,QAMAjF,KAAKyV,OAASA,EAMdzV,KAAK68B,YAAcF,EAMnB38B,KAAKiZ,WAAaA,EAMlBjZ,KAAKmM,MACsB,mBAAlBywB,EAA+BH,GAAkBG,EAM1D58B,KAAK88B,OAAS,KAMd98B,KAAK4S,OAAkC,mBAAlBgqB,EAA+BA,EAAgB,IACxE,CAKE,OAAAh1B,GACE5H,KAAK4F,cAAc/F,EACvB,CAKE,SAAAgc,GACE,OAAO7b,KAAKyV,MAChB,CAKE,QAAAsnB,GACE,OAAO/8B,KAAK88B,MAChB,CAKE,aAAAE,GACE,OAAOh9B,KAAK68B,WAChB,CAKE,aAAAI,GACE,OAA8Bj9B,KAAe,UACjD,CAKE,QAAA4M,GACE,OAAO5M,KAAKmM,KAChB,CAKE,IAAAU,GACE,GAAI7M,KAAKmM,OAASswB,IACZz8B,KAAK4S,OAAQ,CACf5S,KAAKmM,MAAQswB,GACbz8B,KAAK4H,UACL,MAAMqR,EAAajZ,KAAKi9B,gBAClBC,EAAoBl7B,MAAMC,QAAQgX,GACpCA,EAAW,GACXA,EACJpV,GAAU,IACR7D,KAAK4S,OACH5S,KAAK6b,YACLqhB,EACAl9B,KAAKg9B,mBAGNzpB,MAAMlB,IACD,UAAWA,IACbrS,KAAK88B,OAASzqB,EAAMA,OAElB,WAAYA,IACdrS,KAAKyV,OAASpD,EAAMoD,QAElB,eAAgBpD,IAClBrS,KAAKiZ,WAAa5G,EAAM4G,YAEtB,eAAgB5G,IAClBrS,KAAK68B,YAAcxqB,EAAMsqB,aAGzBtqB,aAAiB8qB,kBAChB5uB,IAAuB8D,aAAiBT,aACzCS,aAAiBX,mBACjBW,aAAiBV,oBAEjB3R,KAAK88B,OAASzqB,GAEhBrS,KAAKmM,MAAQswB,EAAiB,IAE/BjpB,OAAOC,IACNzT,KAAKmM,MAAQswB,GACbjd,QAAQ/L,MAAMA,EAAM,IAErB2pB,SAAQ,IAAMp9B,KAAK4H,WAC9B,CAEA,CAKE,QAAAy1B,CAAShrB,GACPrS,KAAK88B,OAASzqB,CAClB,CAKE,aAAAirB,CAAcrkB,GACZjZ,KAAKiZ,WAAaA,CACtB,EASO,SAASskB,GAAYlrB,EAAOmrB,EAAaC,GAC9C,MAAMC,EAAuC,EAC7C,IAAIC,GAAY,EACZC,GAAW,EACXC,GAAS,EAEb,MAAMC,EAAe,CACnB12B,EAAWs2B,EAAK79B,GAAgB,WAC9Bg+B,GAAS,EACJD,GACHJ,GAER,KAyBE,OAtBIE,EAAIK,KAAO3vB,IACbwvB,GAAW,EACXF,EACGpvB,SACAiF,MAAK,WACAoqB,GACFH,GAEH,IACAhqB,OAAM,SAAUC,GACXkqB,IACEE,EACFL,IAEAC,IAGZ,KAEIK,EAAan4B,KAAKyB,EAAWs2B,EAAK79B,EAAiB49B,IAG9C,WACLE,GAAY,EACZG,EAAahzB,QAAQzD,EACtB,CACH,CASO,SAASwF,GAAKwF,EAAO0rB,GAC1B,OAAO,IAAI95B,SAAQ,CAACE,EAASD,KAC3B,SAAS85B,IACPC,IACA95B,EAAQkO,EACd,CACI,SAAS6rB,IACPD,IACA/5B,EAAO,IAAImE,MAAM,oBACvB,CACI,SAAS41B,IACP5rB,EAAM/L,oBAAoB,OAAQ03B,GAClC3rB,EAAM/L,oBAAoB,QAAS43B,EACzC,CACI7rB,EAAM/M,iBAAiB,OAAQ04B,GAC/B3rB,EAAM/M,iBAAiB,QAAS44B,GAC5BH,IACF1rB,EAAM0rB,IAAMA,EAClB,GAEA,CAOO,SAASI,GAAe9rB,EAAO0rB,GAIpC,OAHIA,IACF1rB,EAAM0rB,IAAMA,GAEP1rB,EAAM0rB,KAAO3vB,GAChB,IAAInK,SAAQ,CAACE,EAASD,IACpBmO,EACG/D,SACAiF,MAAK,IAAMpP,EAAQkO,KACnBmB,OAAOyc,GACN5d,EAAM+rB,UAAY/rB,EAAMvD,MAAQ3K,EAAQkO,GAASnO,EAAO+rB,OAG9DpjB,GAAKwF,EACX,CAWO,SAAS/D,GAAO+D,EAAO0rB,GAI5B,OAHIA,IACF1rB,EAAM0rB,IAAMA,GAEP1rB,EAAM0rB,KAAO3vB,IAAgBG,GAChC8D,EACG/D,SACAiF,MAAK,IAAM/E,kBAAkB6D,KAC7BmB,OAAOyc,IACN,GAAI5d,EAAM+rB,UAAY/rB,EAAMvD,MAC1B,OAAOuD,EAET,MAAM4d,CAAC,IAEXkO,GAAe9rB,EACrB,CCnUA,MAAMgsB,WAAoB3B,GASxB,WAAA38B,CAAY0V,EAAQwD,EAAY0jB,EAAYztB,EAAQ0D,GAGlD3N,MAAMwQ,EAAQwD,EAAY0jB,OAFDn2B,IAAXoM,EAAuB6pB,GAAkBA,IASvDz8B,KAAK2S,aAAqBnM,IAAXoM,EAAuBA,EAAS,KAM/C5S,KAAKs+B,QAAUpvB,EAMflP,KAAK8S,OAAS,IAClB,CAME,QAAAQ,GACE,OAAOtT,KAAK8S,MAChB,CAOE,WAAAyrB,CAAYv6B,GACNA,GACFhE,KAAK8S,OAAS9O,EACdhE,KAAKmM,MAAQswB,IAEbz8B,KAAKmM,MAAQswB,GAEfz8B,KAAK4H,SACT,CAME,IAAAiF,GACM7M,KAAKmM,OAASswB,KAChBz8B,KAAKmM,MAAQswB,GACbz8B,KAAK4H,UACL5H,KAAK2S,QAAQ3S,KAAKu+B,YAAYr3B,KAAKlH,OAEzC,CAME,QAAA+8B,GACE,OAAO/8B,KAAKs+B,OAChB,EClFA,MAAME,WAAkBvyB,GAStB,WAAAlM,CAAYmM,EAAWC,EAAO4xB,EAAKU,EAAaC,EAAkBp0B,GAChErF,MAAMiH,EAAWC,EAAO7B,GAMxBtK,KAAK2+B,aAAeF,EAQpBz+B,KAAK4+B,KAAOb,EAEZ/9B,KAAKsH,IAAMy2B,EAMX/9B,KAAK88B,OAAS,IAAIzuB,MACE,OAAhBowB,IACFz+B,KAAK88B,OAAO2B,YAAcA,GAO5Bz+B,KAAK6+B,UAAY,KAMjB7+B,KAAK8+B,kBAAoBJ,CAC7B,CAOE,QAAA3B,GACE,OAAO/8B,KAAK88B,MAChB,CAME,QAAAO,CAASlzB,GACPnK,KAAK88B,OAAS3yB,EACdnK,KAAKmM,MAAQV,EACbzL,KAAK++B,iBACL/+B,KAAK4H,SACT,CAOE,iBAAAo3B,GACEh/B,KAAKmM,MAAQV,EACbzL,KAAK++B,iBACL/+B,KAAK88B,OAuGT,WACE,MAAMmC,EAAMpwB,GAAsB,EAAG,GAGrC,OAFAowB,EAAIC,UAAY,gBAChBD,EAAIE,SAAS,EAAG,EAAG,EAAG,GACfF,EAAI/vB,MACb,CA5GkBkwB,GACdp/B,KAAK4H,SACT,CAOE,gBAAAy3B,GACE,MAAMhtB,EAAyCrS,KAAW,OACtDqS,EAAMitB,cAAgBjtB,EAAMktB,cAC9Bv/B,KAAKmM,MAAQV,EAEbzL,KAAKmM,MAAQV,EAEfzL,KAAK++B,iBACL/+B,KAAK4H,SACT,CAuCE,IAAAiF,GACM7M,KAAKmM,OAASV,IAChBzL,KAAKmM,MAAQV,EACbzL,KAAK88B,OAAS,IAAIzuB,MACQ,OAAtBrO,KAAK2+B,eACP3+B,KAAK88B,OAAO2B,YAAcz+B,KAAK2+B,eAG/B3+B,KAAKmM,OAASV,IAChBzL,KAAKmM,MAAQV,EACbzL,KAAK4H,UACL5H,KAAK8+B,kBAAkB9+B,KAAMA,KAAK4+B,MAClC5+B,KAAK6+B,UAAYtB,GACfv9B,KAAK88B,OACL98B,KAAKq/B,iBAAiBn4B,KAAKlH,MAC3BA,KAAKg/B,kBAAkB93B,KAAKlH,OAGpC,CAOE,cAAA++B,GACM/+B,KAAK6+B,YACP7+B,KAAK6+B,YACL7+B,KAAK6+B,UAAY,KAEvB,CAKE,eAAA1+B,GACEH,KAAK++B,iBACL/+B,KAAK88B,OAAS,KACd73B,MAAM9E,iBACV,EC5KA,MAAMq/B,GAOJ,WAAAz/B,CAAY0/B,EAAOC,EAAaC,GAK9B3/B,KAAK4/B,OAASH,EAMdz/B,KAAK6/B,aAAeH,EAMpB1/B,KAAK8/B,OAASH,EAMd3/B,KAAK+/B,QAAU,GAMf//B,KAAKggC,OAAS,EAMdhgC,KAAKigC,iBAAmB,CAC5B,CAKE,KAAAv+B,GACE1B,KAAK+/B,QAAQl/B,OAAS,EACtBb,KAAKggC,OAAS,EACdhgC,KAAKigC,iBAAmB,CAC5B,CAME,MAAAC,CAAOnqB,EAAGC,GACRhW,KAAK+/B,QAAQp6B,KAAKoQ,EAAGC,EAAGmqB,KAAKC,MACjC,CAKE,GAAAz+B,GACE,GAAI3B,KAAK+/B,QAAQl/B,OAAS,EAGxB,OAAO,EAET,MAAM8+B,EAAQQ,KAAKC,MAAQpgC,KAAK8/B,OAC1BO,EAAYrgC,KAAK+/B,QAAQl/B,OAAS,EACxC,GAAIb,KAAK+/B,QAAQM,EAAY,GAAKV,EAGhC,OAAO,EAIT,IAAIW,EAAaD,EAAY,EAC7B,KAAOC,EAAa,GAAKtgC,KAAK+/B,QAAQO,EAAa,GAAKX,GACtDW,GAAc,EAGhB,MAAMC,EAAWvgC,KAAK+/B,QAAQM,EAAY,GAAKrgC,KAAK+/B,QAAQO,EAAa,GAIzE,GAAIC,EAAW,IAAO,GACpB,OAAO,EAGT,MAAMtqB,EAAKjW,KAAK+/B,QAAQM,GAAargC,KAAK+/B,QAAQO,GAC5CpqB,EAAKlW,KAAK+/B,QAAQM,EAAY,GAAKrgC,KAAK+/B,QAAQO,EAAa,GAGnE,OAFAtgC,KAAKggC,OAASp0B,KAAK4S,MAAMtI,EAAID,GAC7BjW,KAAKigC,iBAAmBr0B,KAAK6S,KAAKxI,EAAKA,EAAKC,EAAKA,GAAMqqB,EAChDvgC,KAAKigC,iBAAmBjgC,KAAK6/B,YACxC,CAKE,WAAA7hB,GACE,OAAQhe,KAAK6/B,aAAe7/B,KAAKigC,kBAAoBjgC,KAAK4/B,MAC9D,CAKE,QAAAY,GACE,OAAOxgC,KAAKggC,MAChB,EChHA,MAAMS,WAAiB16B,EAMrB,WAAAhG,CAAY2E,EAAMysB,EAAKuP,GACrBz7B,MAAMP,GAON1E,KAAKmxB,IAAMA,EAOXnxB,KAAK0gC,gBAA4Bl6B,IAAfk6B,EAA2BA,EAAa,IAC9D,ECrBA,MAAMC,WAAwBF,GAS5B,WAAA1gC,CAAY2E,EAAMysB,EAAKyP,EAAeC,EAAUH,EAAYI,GAC1D77B,MAAMP,EAAMysB,EAAKuP,GAQjB1gC,KAAK4gC,cAAgBA,EAOrB5gC,KAAK+gC,OAAS,KAOd/gC,KAAKghC,YAAc,KASnBhhC,KAAK6gC,cAAwBr6B,IAAbq6B,GAAyBA,EAKzC7gC,KAAK8gC,eAAiBA,CAC1B,CAOE,SAAIG,GAIF,OAHKjhC,KAAK+gC,SACR/gC,KAAK+gC,OAAS/gC,KAAKmxB,IAAI+P,cAAclhC,KAAK4gC,gBAErC5gC,KAAK+gC,MAChB,CACE,SAAIE,CAAMA,GACRjhC,KAAK+gC,OAASE,CAClB,CAQE,cAAI7qB,GAIF,OAHKpW,KAAKghC,cACRhhC,KAAKghC,YAAchhC,KAAKmxB,IAAIgQ,uBAAuBnhC,KAAKihC,QAEnDjhC,KAAKghC,WAChB,CACE,cAAI5qB,CAAWA,GACbpW,KAAKghC,YAAc5qB,CACvB,CAQE,cAAAvR,GACEI,MAAMJ,iBACF,mBAAoB7E,KAAK4gC,eACH5gC,KAAkB,cAAE6E,gBAElD,CAQE,eAAAC,GACEG,MAAMH,kBACF,oBAAqB9E,KAAK4gC,eACJ5gC,KAAkB,cAAE8E,iBAElD,EC1Ge,IAAAs8B,GAAA,CAObC,YAAa,cAObC,MAAOzhC,EAOP0hC,SAAU1hC,EAOV2hC,YAAa,cAQbC,YAAa,cAEbC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,cAAe,iBC7CFC,GACA,cADAA,GAEA,cAFAA,GAGF,YAHEA,GAKD,aCDd,MAAMC,WAA+Bl9B,EAKnC,WAAAjF,CAAYoxB,EAAKgR,GACfl9B,MAAMksB,GAONnxB,KAAKoiC,KAAOjR,EAMZnxB,KAAKqiC,gBAMLriC,KAAKsiC,gBAAiB,EAMtBtiC,KAAKuiC,WAAY,EAMjBviC,KAAKwiC,kBAAoB,GAMzBxiC,KAAKyiC,oBAAmCj8B,IAAlB27B,EAA8B,EAAIA,EAQxDniC,KAAK0iC,MAAQ,KAEb,MAAMv4B,EAAUnK,KAAKoiC,KAAKO,cAM1B3iC,KAAK4iC,gBAAkB,GAMvB5iC,KAAK6iC,gBAAkB,CAAE,EAKzB7iC,KAAK8iC,SAAW34B,EAMhBnK,KAAK+iC,wBAA0Bj8B,EAC7BqD,EACA83B,GACAjiC,KAAKgjC,mBACLhjC,MAOFA,KAAKijC,0BAMLjjC,KAAKkjC,oBAAsBp8B,EACzBqD,EACA83B,GACAjiC,KAAKmjC,gBACLnjC,MAMFA,KAAKojC,sBAAwBpjC,KAAKqjC,iBAAiBn8B,KAAKlH,MAExDA,KAAK8iC,SAASx9B,iBACZzF,EACAG,KAAKojC,wBACL30B,IAA0B,CAACC,SAAS,GAE1C,CAOE,aAAA40B,CAAcC,GACZ,IAAIC,EAAW,IAAI7C,GACjBS,GAAoBE,MACpBthC,KAAKoiC,KACLmB,GAEFvjC,KAAK4F,cAAc49B,QACUh9B,IAAzBxG,KAAKqiC,iBAEPoB,aAAazjC,KAAKqiC,iBAClBriC,KAAKqiC,qBAAkB77B,EACvBg9B,EAAW,IAAI7C,GACbS,GAAoBG,SACpBvhC,KAAKoiC,KACLmB,GAEFvjC,KAAK4F,cAAc49B,IAGnBxjC,KAAKqiC,gBAAkBqB,YAAW,KAChC1jC,KAAKqiC,qBAAkB77B,EACvB,MAAMg9B,EAAW,IAAI7C,GACnBS,GAAoBC,YACpBrhC,KAAKoiC,KACLmB,GAEFvjC,KAAK4F,cAAc49B,EAAS,GAC3B,IAET,CASE,qBAAAG,CAAsBJ,GACpB,MAAM19B,EAAQ09B,EACRx2B,EAAKlH,EAAM+9B,UAEjB,GACE/9B,EAAMnB,MAAQ08B,GAAoBO,WAClC97B,EAAMnB,MAAQ08B,GAAoBY,cAClC,QACOhiC,KAAK6iC,gBAAgB91B,GAC5B,IAAK,MAAM62B,KAAa5jC,KAAK6iC,gBAC3B,GAAI7iC,KAAK6iC,gBAAgBe,GAAWxiC,SAAWyE,EAAMzE,OAAQ,QAKpDpB,KAAK6iC,gBAAgBe,GAC5B,KACV,CAEA,MACM/9B,EAAMnB,MAAQ08B,GAAoBM,aAClC77B,EAAMnB,MAAQ08B,GAAoBK,cAElCzhC,KAAK6iC,gBAAgB91B,GAAMlH,GAE7B7F,KAAK4iC,gBAAkBl8B,OAAOoC,OAAO9I,KAAK6iC,gBAC9C,CAOE,gBAAAgB,CAAiBN,GACfvjC,KAAK2jC,sBAAsBJ,GAC3B,MAAMC,EAAW,IAAI7C,GACnBS,GAAoBO,UACpB3hC,KAAKoiC,KACLmB,OACA/8B,OACAA,EACAxG,KAAK4iC,iBAEP5iC,KAAK4F,cAAc49B,GASjBxjC,KAAKsiC,iBACJkB,EAAS5+B,mBACT5E,KAAKuiC,WACNviC,KAAK8jC,qBAAqBP,IAE1BvjC,KAAKsjC,cAActjC,KAAK0iC,OAGU,IAAhC1iC,KAAK4iC,gBAAgB/hC,SACvBb,KAAKwiC,kBAAkB13B,QAAQzD,GAC/BrH,KAAKwiC,kBAAkB3hC,OAAS,EAChCb,KAAKuiC,WAAY,EACjBviC,KAAK0iC,MAAQ,KAEnB,CAQE,oBAAAoB,CAAqBP,GACnB,OAA+B,IAAxBA,EAAaQ,MACxB,CAOE,kBAAAf,CAAmBO,GACjBvjC,KAAKsiC,eAAiD,IAAhCtiC,KAAK4iC,gBAAgB/hC,OAC3Cb,KAAK2jC,sBAAsBJ,GAC3B,MAAMC,EAAW,IAAI7C,GACnBS,GAAoBM,YACpB1hC,KAAKoiC,KACLmB,OACA/8B,OACAA,EACAxG,KAAK4iC,iBAUP,GARA5iC,KAAK4F,cAAc49B,GAEnBxjC,KAAK0iC,MAAQ,IAAIsB,aAAaT,EAAa7+B,KAAM6+B,GACjD78B,OAAOiI,eAAe3O,KAAK0iC,MAAO,SAAU,CAC1CuB,UAAU,EACVlgC,MAAOw/B,EAAaniC,SAGgB,IAAlCpB,KAAKwiC,kBAAkB3hC,OAAc,CACvC,MAAMqjC,EAAMlkC,KAAKoiC,KAAK+B,mBACtBnkC,KAAKwiC,kBAAkB78B,KACrBmB,EACEo9B,EACA9C,GAAoBK,YACpBzhC,KAAKokC,mBACLpkC,MAEF8G,EAAOo9B,EAAK9C,GAAoBO,UAAW3hC,KAAK6jC,iBAAkB7jC,MAclE8G,EACE9G,KAAK8iC,SACL1B,GAAoBY,cACpBhiC,KAAK6jC,iBACL7jC,OAGAA,KAAK8iC,SAASuB,aAAerkC,KAAK8iC,SAASuB,gBAAkBH,GAC/DlkC,KAAKwiC,kBAAkB78B,KACrBmB,EACE9G,KAAK8iC,SAASuB,cACdjD,GAAoBO,UACpB3hC,KAAK6jC,iBACL7jC,MAIZ,CACA,CAOE,kBAAAokC,CAAmBb,GAIjB,GAAIvjC,KAAKskC,UAAUf,GAAe,CAChCvjC,KAAK2jC,sBAAsBJ,GAC3BvjC,KAAKuiC,WAAY,EACjB,MAAMiB,EAAW,IAAI7C,GACnBS,GAAoBI,YACpBxhC,KAAKoiC,KACLmB,EACAvjC,KAAKuiC,eACL/7B,EACAxG,KAAK4iC,iBAEP5iC,KAAK4F,cAAc49B,EACzB,CACA,CAQE,eAAAL,CAAgBI,GACdvjC,KAAKijC,0BAA4BM,EACjC,MAAM1C,KAAc7gC,KAAK0iC,QAAS1iC,KAAKskC,UAAUf,IACjDvjC,KAAK4F,cACH,IAAI+6B,GACFS,GAAoBK,YACpBzhC,KAAKoiC,KACLmB,EACA1C,GAGR,CAUE,gBAAAwC,CAAiBx9B,GAIf,MAAM+6B,EAAgB5gC,KAAKijC,0BAEvBrC,IAAiBA,EAAch8B,kBACJ,kBAArBiB,EAAM0+B,aAAiD,IAArB1+B,EAAM0+B,YAEhD1+B,EAAMhB,gBAEZ,CAQE,SAAAy/B,CAAUf,GACR,OACEvjC,KAAKuiC,WACL32B,KAAK8L,IAAI6rB,EAAaiB,QAAUxkC,KAAK0iC,MAAM8B,SACzCxkC,KAAKyiC,gBACP72B,KAAK8L,IAAI6rB,EAAakB,QAAUzkC,KAAK0iC,MAAM+B,SAAWzkC,KAAKyiC,cAEjE,CAME,eAAAtiC,GACMH,KAAKkjC,sBACP77B,EAAcrH,KAAKkjC,qBACnBljC,KAAKkjC,oBAAsB,MAE7BljC,KAAK8iC,SAASx8B,oBACZzG,EACAG,KAAKojC,uBAGHpjC,KAAK+iC,0BACP17B,EAAcrH,KAAK+iC,yBACnB/iC,KAAK+iC,wBAA0B,MAGjC/iC,KAAKwiC,kBAAkB13B,QAAQzD,GAC/BrH,KAAKwiC,kBAAkB3hC,OAAS,EAEhCb,KAAK8iC,SAAW,KAChB79B,MAAM9E,iBACV,ECxZe,IAAAukC,GAMD,aANCA,GAaF,YAbEA,GAoBJ,UApBIA,GA2BF,YA3BEA,GAkCJ,UClCIC,GACD,aADCA,GAEP,OAFOA,GAGL,SAHKA,GAIP,OCFD,MAAMC,GAAO7tB,IAcpB,MAAM8tB,GAKJ,WAAA9kC,CAAY+kC,EAAkBC,GAK5B/kC,KAAKglC,kBAAoBF,EAMzB9kC,KAAKilC,aAAeF,EAMpB/kC,KAAKklC,UAAY,GAMjBllC,KAAKmlC,YAAc,GAMnBnlC,KAAKolC,gBAAkB,CAAE,CAC7B,CAKE,KAAA/gC,GACErE,KAAKklC,UAAUrkC,OAAS,EACxBb,KAAKmlC,YAAYtkC,OAAS,EAC1BwD,EAAMrE,KAAKolC,gBACf,CAME,OAAAC,GACE,MAAMC,EAAWtlC,KAAKklC,UAChBK,EAAavlC,KAAKmlC,YAClBh7B,EAAUm7B,EAAS,GACF,GAAnBA,EAASzkC,QACXykC,EAASzkC,OAAS,EAClB0kC,EAAW1kC,OAAS,IAEpBykC,EAAS,GAAuBA,EAASz6B,MACzC06B,EAAW,GAA4BA,EAAW16B,MAClD7K,KAAKwlC,QAAQ,IAEf,MAAMC,EAAazlC,KAAKilC,aAAa96B,GAErC,cADOnK,KAAKolC,gBAAgBK,GACrBt7B,CACX,CAOE,OAAAu7B,CAAQv7B,GACNwJ,KACI3T,KAAKilC,aAAa96B,KAAYnK,KAAKolC,iBACrC,qEAEF,MAAMO,EAAW3lC,KAAKglC,kBAAkB76B,GACxC,OAAIw7B,GAAYf,KACd5kC,KAAKklC,UAAUv/B,KAAKwE,GACpBnK,KAAKmlC,YAAYx/B,KAAKggC,GACtB3lC,KAAKolC,gBAAgBplC,KAAKilC,aAAa96B,KAAY,EACnDnK,KAAK4lC,UAAU,EAAG5lC,KAAKklC,UAAUrkC,OAAS,IACnC,EAGb,CAKE,QAAAglC,GACE,OAAO7lC,KAAKklC,UAAUrkC,MAC1B,CAQE,kBAAAilC,CAAmBljC,GACjB,OAAe,EAARA,EAAY,CACvB,CAQE,mBAAAmjC,CAAoBnjC,GAClB,OAAe,EAARA,EAAY,CACvB,CAQE,eAAAojC,CAAgBpjC,GACd,OAAQA,EAAQ,GAAM,CAC1B,CAME,QAAAqjC,GACE,IAAI1kC,EACJ,IAAKA,GAAKvB,KAAKklC,UAAUrkC,QAAU,GAAK,EAAGU,GAAK,EAAGA,IACjDvB,KAAKwlC,QAAQjkC,EAEnB,CAKE,OAAAiD,GACE,OAAiC,IAA1BxE,KAAKklC,UAAUrkC,MAC1B,CAME,WAAAqlC,CAAY5+B,GACV,OAAOA,KAAOtH,KAAKolC,eACvB,CAME,QAAAe,CAASh8B,GACP,OAAOnK,KAAKkmC,YAAYlmC,KAAKilC,aAAa96B,GAC9C,CAME,OAAAq7B,CAAQ5iC,GACN,MAAM0iC,EAAWtlC,KAAKklC,UAChBK,EAAavlC,KAAKmlC,YAClBiB,EAAQd,EAASzkC,OACjBsJ,EAAUm7B,EAAS1iC,GACnB+iC,EAAWJ,EAAW3iC,GACtByjC,EAAazjC,EAEnB,KAAOA,EAAQwjC,GAAS,GAAG,CACzB,MAAME,EAAStmC,KAAK8lC,mBAAmBljC,GACjC2jC,EAASvmC,KAAK+lC,oBAAoBnjC,GAElC4jC,EACJD,EAASH,GAASb,EAAWgB,GAAUhB,EAAWe,GAC9CC,EACAD,EAENhB,EAAS1iC,GAAS0iC,EAASkB,GAC3BjB,EAAW3iC,GAAS2iC,EAAWiB,GAC/B5jC,EAAQ4jC,CACd,CAEIlB,EAAS1iC,GAASuH,EAClBo7B,EAAW3iC,GAAS+iC,EACpB3lC,KAAK4lC,UAAUS,EAAYzjC,EAC/B,CAOE,SAAAgjC,CAAUS,EAAYzjC,GACpB,MAAM0iC,EAAWtlC,KAAKklC,UAChBK,EAAavlC,KAAKmlC,YAClBh7B,EAAUm7B,EAAS1iC,GACnB+iC,EAAWJ,EAAW3iC,GAE5B,KAAOA,EAAQyjC,GAAY,CACzB,MAAMI,EAAczmC,KAAKgmC,gBAAgBpjC,GACzC,KAAI2iC,EAAWkB,GAAed,GAK5B,MAJAL,EAAS1iC,GAAS0iC,EAASmB,GAC3BlB,EAAW3iC,GAAS2iC,EAAWkB,GAC/B7jC,EAAQ6jC,CAIhB,CACInB,EAAS1iC,GAASuH,EAClBo7B,EAAW3iC,GAAS+iC,CACxB,CAKE,YAAAe,GACE,MAAM5B,EAAmB9kC,KAAKglC,kBACxBM,EAAWtlC,KAAKklC,UAChBK,EAAavlC,KAAKmlC,YACxB,IAAIviC,EAAQ,EACZ,MAAMtB,EAAIgkC,EAASzkC,OACnB,IAAIsJ,EAAS5I,EAAGokC,EAChB,IAAKpkC,EAAI,EAAGA,EAAID,IAAKC,EACnB4I,EAAUm7B,EAAS/jC,GACnBokC,EAAWb,EAAiB36B,GACxBw7B,GAAYf,UACP5kC,KAAKolC,gBAAgBplC,KAAKilC,aAAa96B,KAE9Co7B,EAAW3iC,GAAS+iC,EACpBL,EAAS1iC,KAAWuH,GAGxBm7B,EAASzkC,OAAS+B,EAClB2iC,EAAW1kC,OAAS+B,EACpB5C,KAAKimC,UACT,ECnPA,MAAMU,WAAkB9B,GAKtB,WAAA9kC,CAAY6mC,EAAsBC,GAChC5hC,OACGkF,GAAYy8B,EAAqBhjC,MAAM,KAAMuG,KAC7CA,GAAYA,EAAQ,GAAGuC,WAI1B1M,KAAK8mC,uBAAyB9mC,KAAK+mC,iBAAiB7/B,KAAKlH,MAMzDA,KAAKgnC,oBAAsBH,EAM3B7mC,KAAKinC,cAAgB,EAMrBjnC,KAAKknC,kBAAoB,CAAE,CAC/B,CAOE,OAAAxB,CAAQv7B,GACN,MAAMg9B,EAAQliC,MAAMygC,QAAQv7B,GAC5B,GAAIg9B,EAAO,CACIh9B,EAAQ,GAChB7E,iBAAiBzF,EAAkBG,KAAK8mC,uBACnD,CACI,OAAOK,CACX,CAKE,eAAAC,GACE,OAAOpnC,KAAKinC,aAChB,CAME,gBAAAF,CAAiBlhC,GACf,MAAMwhC,EAAmDxhC,EAAY,OAC/DsG,EAAQk7B,EAAKz6B,WACnB,GACET,IAAUV,GACVU,IAAUV,GACVU,IAAUV,EACV,CACIU,IAAUV,GACZ47B,EAAK/gC,oBAAoBzG,EAAkBG,KAAK8mC,wBAElD,MAAMQ,EAAUD,EAAK36B,SACjB46B,KAAWtnC,KAAKknC,2BACXlnC,KAAKknC,kBAAkBI,KAC5BtnC,KAAKinC,eAETjnC,KAAKgnC,qBACX,CACA,CAME,aAAAO,CAAcC,EAAiBC,GAC7B,IAAIC,EAAW,EACf,KACE1nC,KAAKinC,cAAgBO,GACrBE,EAAWD,GACXznC,KAAK6lC,WAAa,GAClB,CACA,MAAMwB,EAAOrnC,KAAKqlC,UAAU,GACtBiC,EAAUD,EAAK36B,SACP26B,EAAKz6B,aACLnB,GAAoB67B,KAAWtnC,KAAKknC,oBAChDlnC,KAAKknC,kBAAkBI,IAAW,IAChCtnC,KAAKinC,gBACLS,EACFL,EAAKx6B,OAEb,CACA,EAaO,SAAS86B,GACdjH,EACA2G,EACAO,EACAC,EACAC,GAIA,IAAKpH,KAAgBkH,KAAiBlH,EAAWqH,aAC/C,OAAOnD,GAET,IAAKlE,EAAWqH,YAAYH,GAAeP,EAAK36B,UAC9C,OAAOk4B,GAQT,MAAM5rB,EAAS0nB,EAAWsH,UAAUhvB,OAC9ByB,EAASotB,EAAW,GAAK7uB,EAAO,GAChC0B,EAASmtB,EAAW,GAAK7uB,EAAO,GACtC,OACE,MAAQpN,KAAKqZ,IAAI6iB,GACjBl8B,KAAK6S,KAAKhE,EAASA,EAASC,EAASA,GAAUotB,CAEnD,CCvJe,IAAAG,GACF,EADEA,GAEA,ECFAC,GAAA,CACbC,OAAQ,SACRC,WAAY,aACZC,SAAU,YCML,SAASC,GAAa7yB,EAAQ8yB,EAAYC,GAC/C,OAAA,SASYxvB,EAAQC,EAAYjG,EAAMy1B,EAAUC,GAC5C,IAAK1vB,EACH,OAEF,IAAKC,IAAesvB,EAClB,OAAOvvB,EAET,MAAM2vB,EAAYJ,EAAa,EAAIv1B,EAAK,GAAKiG,EACvC2vB,EAAaL,EAAa,EAAIv1B,EAAK,GAAKiG,EACxC4vB,EAASH,EAAcA,EAAY,GAAK,EACxCI,EAASJ,EAAcA,EAAY,GAAK,EAC9C,IAAIhyB,EAAOjB,EAAO,GAAKkzB,EAAY,EAAIE,EACnCjyB,EAAOnB,EAAO,GAAKkzB,EAAY,EAAIE,EACnClyB,EAAOlB,EAAO,GAAKmzB,EAAa,EAAIE,EACpCjyB,EAAOpB,EAAO,GAAKmzB,EAAa,EAAIE,EAIpCpyB,EAAOE,IACTF,GAAQE,EAAOF,GAAQ,EACvBE,EAAOF,GAELC,EAAOE,IACTF,GAAQE,EAAOF,GAAQ,EACvBE,EAAOF,GAGT,IAAIZ,EAAIqG,GAAMpD,EAAO,GAAItC,EAAME,GAC3BZ,EAAIoG,GAAMpD,EAAO,GAAIrC,EAAME,GAG/B,GAAI4xB,GAAYD,GAAUvvB,EAAY,CACpC,MAAM8vB,EAAQ,GAAK9vB,EACnBlD,IACGgzB,EAAQn9B,KAAKqZ,IAAI,EAAIrZ,KAAKoM,IAAI,EAAGtB,EAAOsC,EAAO,IAAM+vB,GACtDA,EAAQn9B,KAAKqZ,IAAI,EAAIrZ,KAAKoM,IAAI,EAAGgB,EAAO,GAAKpC,GAAQmyB,GACvD/yB,IACG+yB,EAAQn9B,KAAKqZ,IAAI,EAAIrZ,KAAKoM,IAAI,EAAGrB,EAAOqC,EAAO,IAAM+vB,GACtDA,EAAQn9B,KAAKqZ,IAAI,EAAIrZ,KAAKoM,IAAI,EAAGgB,EAAO,GAAKnC,GAAQkyB,EAC/D,CAEM,MAAO,CAAChzB,EAAGC,EAEjB,CACA,CAMO,SAASqJ,GAAKrG,GACnB,OAAOA,CACT,CC1DA,SAASgwB,GACP/vB,EACAgwB,EACAC,EACAC,GAEA,MAAMC,EAAc1wB,GAASuwB,GAAaC,EAAa,GACjDG,EAAc1wB,GAAUswB,GAAaC,EAAa,GAExD,OAAIC,EACKv9B,KAAKmM,IAAIkB,EAAYrN,KAAKoM,IAAIoxB,EAAaC,IAE7Cz9B,KAAKmM,IAAIkB,EAAYrN,KAAKmM,IAAIqxB,EAAaC,GACpD,CAcA,SAASC,GAA2BrwB,EAAYswB,EAAeC,GAC7D,IAAIC,EAAS79B,KAAKmM,IAAIkB,EAAYswB,GAalC,OAVAE,GACE79B,KAAKqZ,IAAI,EAHG,GAGSrZ,KAAKoM,IAAI,EAAGiB,EAAaswB,EAAgB,IAHlD,GAIZ,EACEC,IACFC,EAAS79B,KAAKoM,IAAIyxB,EAAQD,GAC1BC,GACE79B,KAAKqZ,IAAI,EARC,GAQWrZ,KAAKoM,IAAI,EAAGwxB,EAAgBvwB,EAAa,IARpD,GAUV,GAEGmD,GAAMqtB,EAAQD,EAAgB,EAAmB,EAAhBD,EAC1C,CASO,SAASG,GACdC,EACAnB,EACAS,EACAE,GAGA,OADAX,OAAoBhiC,IAAXgiC,GAAuBA,EAChC,SAQYvvB,EAAY5X,EAAW2R,EAAMy1B,GACrC,QAAmBjiC,IAAfyS,EAA0B,CAC5B,MAAMswB,EAAgBI,EAAY,GAC5BH,EAAgBG,EAAYA,EAAY9oC,OAAS,GACjD+oC,EAAeX,EACjBD,GACEO,EACAN,EACAj2B,EACAm2B,GAEFI,EAGJ,GAAId,EACF,OAAKD,EAGEc,GACLrwB,EACA2wB,EACAJ,GALOptB,GAAMnD,EAAYuwB,EAAeI,GAS5C,MAAMC,EAASj+B,KAAKmM,IAAI6xB,EAAc3wB,GAChC6wB,EAAIl+B,KAAKoQ,MAAM9a,EAAkByoC,EAAaE,EAAQxoC,IAC5D,OAAIsoC,EAAYG,GAAKF,GAAgBE,EAAIH,EAAY9oC,OAAS,EACrD8oC,EAAYG,EAAI,GAElBH,EAAYG,EAC3B,CAGA,CACA,CAWO,SAASC,GACdC,EACAT,EACAC,EACAhB,EACAS,EACAE,GAKA,OAHAX,OAAoBhiC,IAAXgiC,GAAuBA,EAChCgB,OAAkChjC,IAAlBgjC,EAA8BA,EAAgB,EAE9D,SAQYvwB,EAAY5X,EAAW2R,EAAMy1B,GACrC,QAAmBjiC,IAAfyS,EAA0B,CAC5B,MAAM2wB,EAAeX,EACjBD,GACEO,EACAN,EACAj2B,EACAm2B,GAEFI,EAGJ,GAAId,EACF,OAAKD,EAGEc,GACLrwB,EACA2wB,EACAJ,GALOptB,GAAMnD,EAAYuwB,EAAeI,GAS5C,MAAMnyB,EAAY,KACZwyB,EAAer+B,KAAKgS,KACxBhS,KAAKqZ,IAAIskB,EAAgBK,GAAgBh+B,KAAKqZ,IAAI+kB,GAASvyB,GAEvDJ,GAAUhW,GAAa,GAAMoW,GAAa,GAC1CoyB,EAASj+B,KAAKmM,IAAI6xB,EAAc3wB,GAChCixB,EAAkBt+B,KAAKoQ,MAC3BpQ,KAAKqZ,IAAIskB,EAAgBM,GAAUj+B,KAAKqZ,IAAI+kB,GAAS3yB,GAEjD8yB,EAAYv+B,KAAKoM,IAAIiyB,EAAcC,GAEzC,OAAO9tB,GADemtB,EAAgB39B,KAAKC,IAAIm+B,EAAOG,GAC1BX,EAAeI,EACnD,CAGA,CACA,CAUO,SAASQ,GACdb,EACAC,EACAhB,EACAS,EACAE,GAIA,OAFAX,OAAoBhiC,IAAXgiC,GAAuBA,EAEhC,SAQYvvB,EAAY5X,EAAW2R,EAAMy1B,GACrC,QAAmBjiC,IAAfyS,EAA0B,CAC5B,MAAM2wB,EAAeX,EACjBD,GACEO,EACAN,EACAj2B,EACAm2B,GAEFI,EAEJ,OAAKf,GAAWC,EAGTa,GACLrwB,EACA2wB,EACAJ,GALOptB,GAAMnD,EAAYuwB,EAAeI,EAOlD,CAGA,CACA,CCnOO,SAAS7e,GAAQ7R,GACtB,QAAiB1S,IAAb0S,EACF,OAAO,CAGX,CAMO,SAASmG,GAAKnG,GACnB,QAAiB1S,IAAb0S,EACF,OAAOA,CAGX,CAMO,SAASmxB,GAAc/oC,GAC5B,MAAMgpC,EAAS,EAAI1+B,KAAKuR,GAAM7b,EAC9B,OAAA,SAMY4X,EAAUuvB,GAClB,OAAIA,EACKvvB,OAGQ1S,IAAb0S,EACFA,EAAWtN,KAAKoQ,MAAM9C,EAAWoxB,EAAQ,IAAOA,OADlD,CAMN,CACA,CAMO,SAASC,GAAiB9yB,GAC/B,MAAM9L,OAAkBnF,IAAdiR,EAA0B2F,GAAU,GAAK3F,EACnD,OAAA,SAMYyB,EAAUuvB,GAClB,OAAIA,QAAyBjiC,IAAb0S,EACPA,EAGLtN,KAAK8L,IAAIwB,IAAavN,EACjB,EAEFuN,CAEb,CACA,CCxEO,MAMMsxB,GAAoB,IC0SjC,MAAMC,WAAa5hC,EAIjB,WAAA9I,CAAYuK,GACVrF,QAKAjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAEL4C,EAAU5D,OAAO2C,OAAO,CAAA,EAAIiB,GAM5BtK,KAAK0qC,OAAS,CAAC,EAAG,GAMlB1qC,KAAK2qC,YAAc,GAMnB3qC,KAAK4qC,oBAOL5qC,KAAK6qC,YAAcxe,GAAiB/hB,EAAQqR,WAAY,aAMxD3b,KAAK8qC,cAAgB,CAAC,IAAK,KAM3B9qC,KAAK+qC,cAAgB,KAMrB/qC,KAAKgrC,kBAMLhrC,KAAKirC,gBAMLjrC,KAAKkrC,YAAc,KAMnBlrC,KAAKmrC,gBAMLnrC,KAAKorC,cAMLprC,KAAKqrC,mBAAgB7kC,EAEjB8D,EAAQqR,YACVmP,KAEExgB,EAAQ0O,SACV1O,EAAQ0O,OAASqV,GAAmB/jB,EAAQ0O,OAAQhZ,KAAK6qC,cAEvDvgC,EAAQmL,SACVnL,EAAQmL,OAAS+Y,GAAelkB,EAAQmL,OAAQzV,KAAK6qC,cAGvD7qC,KAAKsrC,cAAchhC,EACvB,CAME,aAAAghC,CAAchhC,GACZ,MAAMkK,EAAa9N,OAAO2C,OAAO,CAAA,EAAIiB,GACrC,IAAK,MAAMhD,KAAO4gC,UACT1zB,EAAWlN,GAEpBtH,KAAKgJ,cAAcwL,GAAY,GAE/B,MAAM+2B,EAA2BC,GAA2BlhC,GAM5DtK,KAAKyrC,eAAiBF,EAAyBhC,cAM/CvpC,KAAK0rC,eAAiBH,EAAyB/B,cAM/CxpC,KAAK2rC,YAAcJ,EAAyBK,WAM5C5rC,KAAK6rC,aAAevhC,EAAQq/B,YAM5B3pC,KAAK8rC,SAAWxhC,EAAQyhC,QAMxB/rC,KAAKgsC,SAAWT,EAAyBU,QAEzC,MAAMC,EAAmBC,GAAuB7hC,GAC1C8hC,EAAuBb,EAAyBc,WAChDC,EAAqBC,GAAyBjiC,GAMpDtK,KAAKwsC,aAAe,CAClBxzB,OAAQkzB,EACRjzB,WAAYmzB,EACZlzB,SAAUozB,GAGZtsC,KAAKysC,iBAAiCjmC,IAArB8D,EAAQ4O,SAAyB5O,EAAQ4O,SAAW,GACrElZ,KAAK0sC,uBACgBlmC,IAAnB8D,EAAQ0O,OAAuB1O,EAAQ0O,OAAS,WAEvBxS,IAAvB8D,EAAQ2O,WACVjZ,KAAKs9B,cAAchzB,EAAQ2O,iBACDzS,IAAjB8D,EAAQqiC,MACjB3sC,KAAK4sC,QAAQtiC,EAAQqiC,KAE3B,CAWE,WAAIZ,GACF,OAAO/rC,KAAK8rC,QAChB,CACE,WAAIC,CAAQA,GACV,IAAIc,EAAa7sC,KAAK8rC,SACtB9rC,KAAK8rC,SAAWC,EAChB,MAAM/yB,EAAShZ,KAAK8sC,oBACpB,GAAI9zB,EAAQ,CACV,MAAM+zB,EAAahB,GAAW,CAAC,EAAG,EAAG,EAAG,GACxCc,EAAaA,GAAc,CAAC,EAAG,EAAG,EAAG,GACrC,MAAM5zB,EAAajZ,KAAKi9B,gBAClB+P,EACH/zB,EAAa,GACb8zB,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IACxDE,EACHh0B,EAAa,GACb8zB,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IAC9D/sC,KAAK0sC,kBAAkB,CAAC1zB,EAAO,GAAKg0B,EAASh0B,EAAO,GAAKi0B,GAC/D,CACA,CAUE,kBAAAC,CAAmBC,GACjB,MAAM7iC,EAAUtK,KAAKoJ,gBAerB,YAZ2B5C,IAAvB8D,EAAQ2O,WACV3O,EAAQ2O,WAAajZ,KAAKi9B,gBAE1B3yB,EAAQqiC,KAAO3sC,KAAKotC,UAItB9iC,EAAQ0O,OAAShZ,KAAK8sC,oBAGtBxiC,EAAQ4O,SAAWlZ,KAAKqtC,cAEjB3mC,OAAO2C,OAAO,GAAIiB,EAAS6iC,EACtC,CAmCE,OAAAG,CAAQC,GACFvtC,KAAKwtC,UAAYxtC,KAAKytC,gBACxBztC,KAAK0tC,mBAAmB,GAE1B,MAAMnuB,EAAO,IAAIvd,MAAM0B,UAAU7C,QACjC,IAAK,IAAIU,EAAI,EAAGA,EAAIge,EAAK1e,SAAUU,EAAG,CACpC,IAAI+I,EAAU5G,UAAUnC,GACpB+I,EAAQ0O,SACV1O,EAAU5D,OAAO2C,OAAO,CAAA,EAAIiB,GAC5BA,EAAQ0O,OAASqV,GACf/jB,EAAQ0O,OACRhZ,KAAKszB,kBAGLhpB,EAAQqnB,SACVrnB,EAAU5D,OAAO2C,OAAO,CAAA,EAAIiB,GAC5BA,EAAQqnB,OAAStD,GACf/jB,EAAQqnB,OACR3xB,KAAKszB,kBAGT/T,EAAKhe,GAAK+I,CAChB,CACItK,KAAK2tC,gBAAgB/pC,MAAM5D,KAAMuf,EACrC,CAKE,eAAAouB,CAAgBJ,GACd,IACIr1B,EADA01B,EAAiBlqC,UAAU7C,OAG7B+sC,EAAiB,GACwB,mBAAlClqC,UAAUkqC,EAAiB,KAElC11B,EAAWxU,UAAUkqC,EAAiB,KACpCA,GAGJ,IAAIrsC,EAAI,EACR,KAAOA,EAAIqsC,IAAmB5tC,KAAKwtC,UAAWjsC,EAAG,CAE/C,MAAM4K,EAAQzI,UAAUnC,GACpB4K,EAAM6M,QACRhZ,KAAK0sC,kBAAkBvgC,EAAM6M,aAEZxS,IAAf2F,EAAMwgC,KACR3sC,KAAK4sC,QAAQzgC,EAAMwgC,MACVxgC,EAAM8M,YACfjZ,KAAKs9B,cAAcnxB,EAAM8M,iBAEJzS,IAAnB2F,EAAM+M,UACRlZ,KAAKysC,YAAYtgC,EAAM+M,SAE/B,CACI,GAAI3X,IAAMqsC,EAIR,YAHI11B,GACF21B,GAAkB31B,GAAU,IAKhC,IAAIjL,EAAQkzB,KAAKC,MACbpnB,EAAShZ,KAAK+qC,cAAcvnC,QAC5ByV,EAAajZ,KAAKgrC,kBAClB9xB,EAAWlZ,KAAKirC,gBACpB,MAAM6C,EAAS,GACf,KAAOvsC,EAAIqsC,IAAkBrsC,EAAG,CAC9B,MAAM+I,EAA2C5G,UAAUnC,GAErDwsC,EAAY,CAChB9gC,MAAOA,EACPmxB,UAAU,EACVzM,OAAQrnB,EAAQqnB,OAChB4O,cAA+B/5B,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,IAC9DyN,OAAQ1jC,EAAQ0jC,QAAUjiC,GAC1BmM,SAAUA,GAmBZ,GAhBI5N,EAAQ0O,SACV+0B,EAAUE,aAAej1B,EACzB+0B,EAAUG,aAAe5jC,EAAQ0O,OAAOxV,QACxCwV,EAAS+0B,EAAUG,mBAGA1nC,IAAjB8D,EAAQqiC,MACVoB,EAAUI,iBAAmBl1B,EAC7B80B,EAAUK,iBAAmBpuC,KAAKquC,qBAAqB/jC,EAAQqiC,MAC/D1zB,EAAa80B,EAAUK,kBACd9jC,EAAQ2O,aACjB80B,EAAUI,iBAAmBl1B,EAC7B80B,EAAUK,iBAAmB9jC,EAAQ2O,WACrCA,EAAa80B,EAAUK,uBAGA5nC,IAArB8D,EAAQ4O,SAAwB,CAClC60B,EAAUO,eAAiBp1B,EAC3B,MAAMhM,EACJoQ,GAAOhT,EAAQ4O,SAAWA,EAAWtN,KAAKuR,GAAI,EAAIvR,KAAKuR,IAAMvR,KAAKuR,GACpE4wB,EAAUQ,eAAiBr1B,EAAWhM,EACtCgM,EAAW60B,EAAUQ,cAC7B,CAGUC,GAAgBT,GAClBA,EAAU3P,UAAW,EAGrBnxB,GAAS8gC,EAAUxN,SAErBuN,EAAOnoC,KAAKooC,EAClB,CACI/tC,KAAK2qC,YAAYhlC,KAAKmoC,GACtB9tC,KAAKyuC,QAAQxG,GAAoB,GACjCjoC,KAAK0uC,mBACT,CAOE,YAAAjB,GACE,OAAOztC,KAAK0qC,OAAOzC,IAAsB,CAC7C,CAOE,cAAA0G,GACE,OAAO3uC,KAAK0qC,OAAOzC,IAAwB,CAC/C,CAME,gBAAA2G,GAEE,IAAIjd,EADJ3xB,KAAKyuC,QAAQxG,IAAqBjoC,KAAK0qC,OAAOzC,KAE9C,IAAK,IAAI1mC,EAAI,EAAG4E,EAAKnG,KAAK2qC,YAAY9pC,OAAQU,EAAI4E,IAAM5E,EAAG,CACzD,MAAMusC,EAAS9tC,KAAK2qC,YAAYppC,GAIhC,GAHIusC,EAAO,GAAG51B,UACZ21B,GAAkBC,EAAO,GAAG51B,UAAU,IAEnCyZ,EACH,IAAK,IAAI9U,EAAI,EAAG6P,EAAKohB,EAAOjtC,OAAQgc,EAAI6P,IAAM7P,EAAG,CAC/C,MAAMkxB,EAAYD,EAAOjxB,GACzB,IAAKkxB,EAAU3P,SAAU,CACvBzM,EAASoc,EAAUpc,OACnB,KACZ,CACA,CAEA,CACI3xB,KAAK2qC,YAAY9pC,OAAS,EAC1Bb,KAAKqrC,cAAgB1Z,EACrB3xB,KAAKkrC,YAAc,KACnBlrC,KAAKmrC,gBAAkBnZ,IACvBhyB,KAAKorC,cAAgBpZ,GACzB,CAKE,iBAAA0c,GAKE,QAJiCloC,IAA7BxG,KAAK4qC,sBACPiE,qBAAqB7uC,KAAK4qC,qBAC1B5qC,KAAK4qC,yBAAsBpkC,IAExBxG,KAAKytC,eACR,OAEF,MAAMrN,EAAMD,KAAKC,MACjB,IAAI0O,GAAO,EACX,IAAK,IAAIvtC,EAAIvB,KAAK2qC,YAAY9pC,OAAS,EAAGU,GAAK,IAAKA,EAAG,CACrD,MAAMusC,EAAS9tC,KAAK2qC,YAAYppC,GAChC,IAAIwtC,GAAiB,EACrB,IAAK,IAAIlyB,EAAI,EAAG6P,EAAKohB,EAAOjtC,OAAQgc,EAAI6P,IAAM7P,EAAG,CAC/C,MAAMkxB,EAAYD,EAAOjxB,GACzB,GAAIkxB,EAAU3P,SACZ,SAEF,MAAM4Q,EAAU5O,EAAM2N,EAAU9gC,MAChC,IAAIgiC,EACFlB,EAAUxN,SAAW,EAAIyO,EAAUjB,EAAUxN,SAAW,EACtD0O,GAAY,GACdlB,EAAU3P,UAAW,EACrB6Q,EAAW,GAEXF,GAAiB,EAEnB,MAAMG,EAAWnB,EAAUC,OAAOiB,GAClC,GAAIlB,EAAUE,aAAc,CAC1B,MAAM90B,EAAK40B,EAAUE,aAAa,GAC5B70B,EAAK20B,EAAUE,aAAa,GAC5B50B,EAAK00B,EAAUG,aAAa,GAC5B50B,EAAKy0B,EAAUG,aAAa,GAClCluC,KAAKkrC,YAAc6C,EAAUG,aAC7B,MAAMn4B,EAAIoD,EAAK+1B,GAAY71B,EAAKF,GAC1BnD,EAAIoD,EAAK81B,GAAY51B,EAAKF,GAChCpZ,KAAK+qC,cAAgB,CAACh1B,EAAGC,EACnC,CACQ,GAAI+3B,EAAUI,kBAAoBJ,EAAUK,iBAAkB,CAC5D,MAAMn1B,EACS,IAAbi2B,EACInB,EAAUK,iBACVL,EAAUI,iBACVe,GACGnB,EAAUK,iBAAmBL,EAAUI,kBAChD,GAAIJ,EAAUpc,OAAQ,CACpB,MAAM3e,EAAOhT,KAAKmvC,iBAAiBnvC,KAAKqtC,eAClC+B,EAAwBpvC,KAAKwsC,aAAavzB,WAC9CA,EACA,EACAjG,GACA,GAEFhT,KAAK+qC,cAAgB/qC,KAAKqvC,oBACxBD,EACArB,EAAUpc,OAExB,CACU3xB,KAAKmrC,gBAAkB4C,EAAUK,iBACjCpuC,KAAKgrC,kBAAoB/xB,EACzBjZ,KAAKsvC,mBAAkB,EACjC,CACQ,QAC+B9oC,IAA7BunC,EAAUO,qBACmB9nC,IAA7BunC,EAAUQ,eACV,CACA,MAAMr1B,EACS,IAAbg2B,EACI5xB,GAAOywB,EAAUQ,eAAiB3iC,KAAKuR,GAAI,EAAIvR,KAAKuR,IACpDvR,KAAKuR,GACL4wB,EAAUO,eACVY,GACGnB,EAAUQ,eAAiBR,EAAUO,gBAC9C,GAAIP,EAAUpc,OAAQ,CACpB,MAAM4d,EAAsBvvC,KAAKwsC,aAAatzB,SAC5CA,GACA,GAEFlZ,KAAK+qC,cAAgB/qC,KAAKwvC,sBACxBD,EACAxB,EAAUpc,OAExB,CACU3xB,KAAKorC,cAAgB2C,EAAUQ,eAC/BvuC,KAAKirC,gBAAkB/xB,CACjC,CAGQ,GAFAlZ,KAAKsvC,mBAAkB,GACvBR,GAAO,GACFf,EAAU3P,SACb,KAEV,CACM,GAAI2Q,EAAgB,CAClB/uC,KAAK2qC,YAAYppC,GAAK,KACtBvB,KAAKyuC,QAAQxG,IAAoB,GACjCjoC,KAAKkrC,YAAc,KACnBlrC,KAAKmrC,gBAAkBnZ,IACvBhyB,KAAKorC,cAAgBpZ,IACrB,MAAM9Z,EAAW41B,EAAO,GAAG51B,SACvBA,GACF21B,GAAkB31B,GAAU,EAEtC,CACA,CAEIlY,KAAK2qC,YAAc3qC,KAAK2qC,YAAY8E,OAAOC,SACvCZ,QAAqCtoC,IAA7BxG,KAAK4qC,sBACf5qC,KAAK4qC,oBAAsB+E,sBACzB3vC,KAAK0uC,kBAAkBxnC,KAAKlH,OAGpC,CAOE,qBAAAwvC,CAAsBt2B,EAAUyY,GAC9B,IAAI3Y,EACJ,MAAM42B,EAAgB5vC,KAAK8sC,oBAM3B,YALsBtmC,IAAlBopC,IACF52B,EAAS,CAAC42B,EAAc,GAAKje,EAAO,GAAIie,EAAc,GAAKje,EAAO,IAClEke,GAAiB72B,EAAQE,EAAWlZ,KAAKqtC,eACzCyC,GAAc92B,EAAQ2Y,IAEjB3Y,CACX,CAOE,mBAAAq2B,CAAoBp2B,EAAY0Y,GAC9B,IAAI3Y,EACJ,MAAM42B,EAAgB5vC,KAAK8sC,oBACrBiD,EAAoB/vC,KAAKi9B,gBAC/B,QAAsBz2B,IAAlBopC,QAAqDppC,IAAtBupC,EAAiC,CAOlE/2B,EAAS,CALP2Y,EAAO,GACN1Y,GAAc0Y,EAAO,GAAKie,EAAc,IAAOG,EAEhDpe,EAAO,GACN1Y,GAAc0Y,EAAO,GAAKie,EAAc,IAAOG,EAExD,CACI,OAAO/2B,CACX,CAQE,gBAAAm2B,CAAiBj2B,GACf,MAAMlG,EAAOhT,KAAK8qC,cAClB,GAAI5xB,EAAU,CACZ,MAAM82B,EAAIh9B,EAAK,GACTi9B,EAAIj9B,EAAK,GACf,MAAO,CACLpH,KAAK8L,IAAIs4B,EAAIpkC,KAAKiO,IAAIX,IAAatN,KAAK8L,IAAIu4B,EAAIrkC,KAAKmO,IAAIb,IACzDtN,KAAK8L,IAAIs4B,EAAIpkC,KAAKmO,IAAIb,IAAatN,KAAK8L,IAAIu4B,EAAIrkC,KAAKiO,IAAIX,IAEjE,CACI,OAAOlG,CACX,CASE,eAAAk9B,CAAgBl9B,GACdhT,KAAK8qC,cAAgB9oC,MAAMC,QAAQ+Q,GAAQA,EAAKxP,QAAU,CAAC,IAAK,KAC3DxD,KAAKytC,gBACRztC,KAAK0tC,mBAAmB,EAE9B,CAQE,SAAA90B,GACE,MAAMI,EAAShZ,KAAK8sC,oBACpB,OAAK9zB,EAGEmV,GAAiBnV,EAAQhZ,KAAKszB,iBAF5Bta,CAGb,CAME,iBAAA8zB,GACE,OACE9sC,KAAKiJ,IAAIi/B,GAAaC,OAE5B,CAKE,cAAAgI,GACE,OAAOnwC,KAAKwsC,YAChB,CAKE,sBAAA4D,GACE,OAAOpwC,KAAKiJ,IAAI,sBACpB,CAME,QAAAonC,CAASC,GACP,YAAc9pC,IAAV8pC,GACFA,EAAM,GAAKtwC,KAAK0qC,OAAO,GACvB4F,EAAM,GAAKtwC,KAAK0qC,OAAO,GAChB4F,GAEFtwC,KAAK0qC,OAAOlnC,OACvB,CAYE,eAAA+sC,CAAgBv9B,GAEd,OAAOub,GADQvuB,KAAKwwC,wBAAwBx9B,GAChBhT,KAAKszB,gBACrC,CAOE,uBAAAkd,CAAwBx9B,GACtBA,EAAOA,GAAQhT,KAAKywC,+BACpB,MAAMz3B,EACJhZ,KAAK8sC,oBAEPn5B,GAAOqF,EAAQ,kCACf,MAAMC,EAAqCjZ,KAAKi9B,gBAChDtpB,QAAsBnN,IAAfyS,EAA0B,sCACjC,MAAMC,EAAmClZ,KAAKqtC,cAG9C,OAFA15B,QAAoBnN,IAAb0S,EAAwB,oCAExBH,GAAkBC,EAAQC,EAAYC,EAAUlG,EAC3D,CAOE,gBAAA09B,GACE,OAAO1wC,KAAKyrC,cAChB,CAOE,gBAAAkF,GACE,OAAO3wC,KAAK0rC,cAChB,CAOE,UAAAkF,GACE,OACE5wC,KAAK6wC,qBAAqB7wC,KAAK0rC,eAErC,CAOE,UAAAoF,CAAWnE,GACT3sC,KAAKsrC,cAActrC,KAAKktC,mBAAmB,CAAC6D,QAASpE,IACzD,CAOE,UAAAqE,GACE,OACEhxC,KAAK6wC,qBAAqB7wC,KAAKyrC,eAErC,CAOE,UAAAwF,CAAWtE,GACT3sC,KAAKsrC,cAActrC,KAAKktC,mBAAmB,CAACjB,QAASU,IACzD,CAOE,sBAAAuE,CAAuBC,GACrBnxC,KAAKsrC,cAActrC,KAAKktC,mBAAmB,CAACkE,oBAAqBD,IACrE,CAOE,aAAA7d,GACE,OAAOtzB,KAAK6qC,WAChB,CAQE,aAAA5N,GACE,OAAwCj9B,KAAKiJ,IAAIi/B,GAAaE,WAClE,CAQE,cAAAiJ,GACE,OAAOrxC,KAAK6rC,YAChB,CAUE,sBAAAyF,CAAuB77B,EAAQzC,GAC7B,OAAOhT,KAAKuxC,+BACV/iB,GAAe/Y,EAAQzV,KAAKszB,iBAC5BtgB,EAEN,CASE,8BAAAu+B,CAA+B97B,EAAQzC,GACrCA,EAAOA,GAAQhT,KAAKywC,+BACpB,MAAMrH,EAAc1wB,GAASjD,GAAUzC,EAAK,GACtCq2B,EAAc1wB,GAAUlD,GAAUzC,EAAK,GAC7C,OAAOpH,KAAKoM,IAAIoxB,EAAaC,EACjC,CAQE,6BAAAmI,CAA8BxH,GAC5BA,EAAQA,GAAS,EACjB,MAAMT,EAAgBvpC,KAAKyxC,yBAAyBzxC,KAAKyrC,gBACnDjC,EAAgBxpC,KAAK0rC,eACrB1zB,EAAMpM,KAAKqZ,IAAIskB,EAAgBC,GAAiB59B,KAAKqZ,IAAI+kB,GAC/D,OAAA,SAKYjmC,GAER,OADmBwlC,EAAgB39B,KAAKC,IAAIm+B,EAAOjmC,EAAQiU,EAGnE,CACA,CAQE,WAAAq1B,GACE,OAA8BrtC,KAAKiJ,IAAIi/B,GAAaG,SACxD,CAQE,6BAAAqJ,CAA8B1H,GAC5B,MAAM2H,EAAW/lC,KAAKqZ,IAAI+kB,GAAS,GAC7BT,EAAgBvpC,KAAKyxC,yBAAyBzxC,KAAKyrC,gBACnDjC,EAAgBxpC,KAAK0rC,eACrB1zB,EAAMpM,KAAKqZ,IAAIskB,EAAgBC,GAAiBmI,EACtD,OAAA,SAKY14B,GAER,OADcrN,KAAKqZ,IAAIskB,EAAgBtwB,GAAc04B,EAAW35B,CAGxE,CACA,CAQE,4BAAAy4B,CAA6Bv3B,GAC3B,IAAIlG,EAAOhT,KAAKmvC,iBAAiBj2B,GACjC,MAAM6yB,EAAU/rC,KAAK8rC,SAOrB,OANIC,IACF/4B,EAAO,CACLA,EAAK,GAAK+4B,EAAQ,GAAKA,EAAQ,GAC/B/4B,EAAK,GAAK+4B,EAAQ,GAAKA,EAAQ,KAG5B/4B,CACX,CAKE,QAAApG,GACE,MAAM+O,EAAa3b,KAAKszB,gBAClBra,EAAajZ,KAAKi9B,gBAClB/jB,EAAWlZ,KAAKqtC,cACtB,IAAIr0B,EACFhZ,KAAK8sC,oBAEP,MAAMf,EAAU/rC,KAAK8rC,SACrB,GAAIC,EAAS,CACX,MAAM6F,EAAc5xC,KAAKywC,+BACzBz3B,EAAS64B,GACP74B,EACAhZ,KAAKmvC,mBACL,CAACyC,EAAY,GAAK,EAAI7F,EAAQ,GAAI6F,EAAY,GAAK,EAAI7F,EAAQ,IAC/D9yB,EACAC,EAER,CACI,MAAO,CACLF,OAAQA,EAAOxV,MAAM,GACrBmY,gBAA2BnV,IAAfmV,EAA2BA,EAAa,KACpD1C,WAAYA,EACZ64B,WAAY9xC,KAAKkrC,YACjB6G,eAAgB/xC,KAAKmrC,gBACrB6G,aAAchyC,KAAKorC,cACnBlyB,SAAUA,EACVyzB,KAAM3sC,KAAKotC,UAEjB,CAKE,qBAAA6E,GACE,MAAO,CACLjK,UAAWhoC,KAAK4M,WAChB6I,OAAQzV,KAAKuwC,kBAEnB,CASE,OAAAnD,GACE,IAAIT,EACJ,MAAM1zB,EAAajZ,KAAKi9B,gBAIxB,YAHmBz2B,IAAfyS,IACF0zB,EAAO3sC,KAAK6wC,qBAAqB53B,IAE5B0zB,CACX,CAQE,oBAAAkE,CAAqB53B,GACnB,IACIjB,EAAK4zB,EADLv0B,EAASrX,KAAKgsC,UAAY,EAE9B,GAAIhsC,KAAK6rC,aAAc,CACrB,MAAMqG,EAAUhxC,EAAkBlB,KAAK6rC,aAAc5yB,EAAY,GACjE5B,EAAS66B,EACTl6B,EAAMhY,KAAK6rC,aAAaqG,GAEtBtG,EADEsG,GAAWlyC,KAAK6rC,aAAahrC,OAAS,EAC3B,EAEAmX,EAAMhY,KAAK6rC,aAAaqG,EAAU,EAEvD,MACMl6B,EAAMhY,KAAKyrC,eACXG,EAAa5rC,KAAK2rC,YAEpB,OAAOt0B,EAASzL,KAAKqZ,IAAIjN,EAAMiB,GAAcrN,KAAKqZ,IAAI2mB,EAC1D,CAQE,oBAAAyC,CAAqB1B,GACnB,GAAI3sC,KAAK6rC,cAAchrC,OAAQ,CAC7B,GAAiC,IAA7Bb,KAAK6rC,aAAahrC,OACpB,OAAOb,KAAK6rC,aAAa,GAE3B,MAAMsG,EAAY/1B,GAChBxQ,KAAKoQ,MAAM2wB,GACX,EACA3sC,KAAK6rC,aAAahrC,OAAS,GAEvB+qC,EACJ5rC,KAAK6rC,aAAasG,GAAanyC,KAAK6rC,aAAasG,EAAY,GAC/D,OACEnyC,KAAK6rC,aAAasG,GAClBvmC,KAAKC,IAAI+/B,EAAYxvB,GAAMuwB,EAAOwF,EAAW,EAAG,GAExD,CACI,OACEnyC,KAAKyrC,eAAiB7/B,KAAKC,IAAI7L,KAAK2rC,YAAagB,EAAO3sC,KAAKgsC,SAEnE,CAYE,GAAAoG,CAAIC,EAAkB/nC,GAEpB,IAAIgK,EAOJ,GANAX,GACE3R,MAAMC,QAAQowC,IAEV,mBADuB,EAAwC,sBAEnE,qDAEErwC,MAAMC,QAAQowC,GAAmB,CACnC1+B,IACGnP,GAAQ6tC,GACT,kDAGF/9B,EAAWg+B,GADI9jB,GAAe6jB,EAAkBryC,KAAKszB,iBAEtD,MAAM,GAAmC,WAA/B+e,EAAiBjf,UAAwB,CAClD,MAAM3d,EAAS+Y,GACb6jB,EAAiBx2B,YACjB7b,KAAKszB,iBAEPhf,EAAWg+B,GAAkB78B,GAC7BnB,EAASuN,OAAO7hB,KAAKqtC,cAAez0B,GAAUnD,GACpD,KAAW,CACL,MAAMuY,EAAiBE,KAErB5Z,EADE0Z,EAEAqkB,EACG59B,QACAsY,UAAUiB,EAAgBhuB,KAAKszB,iBAGzB+e,CAEnB,CAEIryC,KAAKuyC,YAAYj+B,EAAUhK,EAC/B,CAOE,wBAAAkoC,CAAyBl+B,GACvB,MAAM4E,EAAWlZ,KAAKqtC,cAChBtrB,EAAWnW,KAAKiO,IAAIX,GACpB8I,EAAWpW,KAAKmO,KAAKb,GACrBu5B,EAASn+B,EAAS2f,qBAClB3c,EAAShD,EAASggB,YACxB,IAAIoe,EAAW37B,IACX47B,EAAW57B,IACX67B,GAAW77B,IACX87B,GAAW97B,IACf,IAAK,IAAIxV,EAAI,EAAG4E,EAAKssC,EAAO5xC,OAAQU,EAAI4E,EAAI5E,GAAK+V,EAAQ,CACvD,MAAMw7B,EAAOL,EAAOlxC,GAAKwgB,EAAW0wB,EAAOlxC,EAAI,GAAKygB,EAC9C+wB,EAAON,EAAOlxC,GAAKygB,EAAWywB,EAAOlxC,EAAI,GAAKwgB,EACpD2wB,EAAU9mC,KAAKmM,IAAI26B,EAASI,GAC5BH,EAAU/mC,KAAKmM,IAAI46B,EAASI,GAC5BH,EAAUhnC,KAAKoM,IAAI46B,EAASE,GAC5BD,EAAUjnC,KAAKoM,IAAI66B,EAASE,EAClC,CACI,MAAO,CAACL,EAASC,EAASC,EAASC,EACvC,CAME,WAAAN,CAAYj+B,EAAUhK,GAEpB,IAAI0I,GADJ1I,EAAUA,GAAW,CAAE,GACJ0I,KACdA,IACHA,EAAOhT,KAAKywC,gCAEd,MAAM1E,OACgBvlC,IAApB8D,EAAQyhC,QAAwBzhC,EAAQyhC,QAAU,CAAC,EAAG,EAAG,EAAG,GACxDmG,OAA8B1rC,IAApB8D,EAAQ4nC,SAAwB5nC,EAAQ4nC,QACxD,IAAI1I,EAEFA,OAD4BhjC,IAA1B8D,EAAQk/B,cACMl/B,EAAQk/B,mBACKhjC,IAApB8D,EAAQymC,QACD/wC,KAAKquC,qBAAqB/jC,EAAQymC,SAElC,EAGlB,MAAMiC,EAAgBhzC,KAAKwyC,yBAAyBl+B,GAGpD,IAAI2E,EAAajZ,KAAKuxC,+BAA+ByB,EAAe,CAClEhgC,EAAK,GAAK+4B,EAAQ,GAAKA,EAAQ,GAC/B/4B,EAAK,GAAK+4B,EAAQ,GAAKA,EAAQ,KAEjC9yB,EAAaia,MAAMja,GACfuwB,EACA59B,KAAKoM,IAAIiB,EAAYuwB,GACzBvwB,EAAajZ,KAAKyxC,yBAAyBx4B,EAAYi5B,EAAU,EAAI,GAGrE,MAAMh5B,EAAWlZ,KAAKqtC,cAChBrrB,EAAWpW,KAAKmO,IAAIb,GACpB6I,EAAWnW,KAAKiO,IAAIX,GACpB+5B,EAAYr6B,GAAUo6B,GAC5BC,EAAU,KAAQlH,EAAQ,GAAKA,EAAQ,IAAM,EAAK9yB,EAClDg6B,EAAU,KAAQlH,EAAQ,GAAKA,EAAQ,IAAM,EAAK9yB,EAClD,MAAMi6B,EAAUD,EAAU,GAAKlxB,EAAWkxB,EAAU,GAAKjxB,EACnDmxB,EAAUF,EAAU,GAAKlxB,EAAWkxB,EAAU,GAAKjxB,EACnDhJ,EAAShZ,KAAKozC,qBAAqB,CAACF,EAASC,GAAUl6B,GACvDf,EAAW5N,EAAQ4N,SAAW5N,EAAQ4N,SAAWlV,OAE9BwD,IAArB8D,EAAQi2B,SACVvgC,KAAK2tC,gBACH,CACE10B,WAAYA,EACZD,OAAQA,EACRunB,SAAUj2B,EAAQi2B,SAClByN,OAAQ1jC,EAAQ0jC,QAElB91B,IAGFlY,KAAKgrC,kBAAoB/xB,EACzBjZ,KAAK+qC,cAAgB/xB,EACrBhZ,KAAKsvC,mBAAkB,GAAO,GAC9BzB,GAAkB31B,GAAU,GAElC,CASE,QAAAm7B,CAASj9B,EAAYpD,EAAMsgC,GACzBtzC,KAAKuzC,iBACHllB,GAAmBjY,EAAYpW,KAAKszB,iBACpCtgB,EACAsgC,EAEN,CAOE,gBAAAC,CAAiBn9B,EAAYpD,EAAMsgC,GACjCtzC,KAAK0sC,kBACHmF,GACEz7B,EACApD,EACAsgC,EACAtzC,KAAKi9B,gBACLj9B,KAAKqtC,eAGb,CAUE,oBAAAmG,CAAqBx6B,EAAQC,EAAYC,EAAUlG,GACjD,IAAI01B,EACJ,MAAMqD,EAAU/rC,KAAK8rC,SACrB,GAAIC,GAAW/yB,EAAQ,CACrB,MAAM44B,EAAc5xC,KAAKywC,8BAA8Bv3B,GACjDu6B,EAAgB5B,GACpB74B,EACAhG,EACA,CAAC4+B,EAAY,GAAK,EAAI7F,EAAQ,GAAI6F,EAAY,GAAK,EAAI7F,EAAQ,IAC/D9yB,EACAC,GAEFwvB,EAAc,CACZ1vB,EAAO,GAAKy6B,EAAc,GAC1Bz6B,EAAO,GAAKy6B,EAAc,GAElC,CACI,OAAO/K,CACX,CAKE,KAAA8E,GACE,QAASxtC,KAAK8sC,0BAAgDtmC,IAAzBxG,KAAKi9B,eAC9C,CAOE,YAAAyW,CAAaC,GACX,MAAM36B,EAASmV,GAAiBnuB,KAAK+qC,cAAe/qC,KAAKszB,iBACzDtzB,KAAK4zC,UAAU,CACb56B,EAAO,GAAK26B,EAAiB,GAC7B36B,EAAO,GAAK26B,EAAiB,IAEnC,CAME,oBAAAE,CAAqBF,GACnB,MAAM36B,EAAShZ,KAAK+qC,cACpB/qC,KAAK0sC,kBAAkB,CACrB1zB,EAAO,GAAK26B,EAAiB,GAC7B36B,EAAO,GAAK26B,EAAiB,IAEnC,CASE,gBAAAG,CAAiB/K,EAAOpX,GACtBA,EAASA,GAAUtD,GAAmBsD,EAAQ3xB,KAAKszB,iBACnDtzB,KAAK+zC,yBAAyBhL,EAAOpX,EACzC,CAQE,wBAAAoiB,CAAyBhL,EAAOpX,GAC9B,MAAM8W,EAAWzoC,KAAKytC,gBAAkBztC,KAAK2uC,iBACvC37B,EAAOhT,KAAKmvC,iBAAiBnvC,KAAKqtC,eAClC2G,EAAgBh0C,KAAKwsC,aAAavzB,WACtCjZ,KAAKgrC,kBAAoBjC,EACzB,EACA/1B,EACAy1B,GAGE9W,IACF3xB,KAAK+qC,cAAgB/qC,KAAKqvC,oBAAoB2E,EAAeriB,IAG/D3xB,KAAKgrC,mBAAqBjC,EAC1B/oC,KAAKsvC,mBACT,CASE,UAAA2E,CAAW/mC,EAAOykB,GAChB3xB,KAAK8zC,iBAAiBloC,KAAKC,IAAI7L,KAAK2rC,aAAcz+B,GAAQykB,EAC9D,CASE,cAAAuiB,CAAehnC,EAAOykB,GAChBA,IACFA,EAAStD,GAAmBsD,EAAQ3xB,KAAKszB,kBAE3CtzB,KAAKm0C,uBAAuBjnC,EAAOykB,EACvC,CAME,sBAAAwiB,CAAuBjnC,EAAOykB,GAC5B,MAAM8W,EAAWzoC,KAAKytC,gBAAkBztC,KAAK2uC,iBACvCyF,EAAcp0C,KAAKwsC,aAAatzB,SACpClZ,KAAKirC,gBAAkB/9B,EACvBu7B,GAEE9W,IACF3xB,KAAK+qC,cAAgB/qC,KAAKwvC,sBAAsB4E,EAAaziB,IAE/D3xB,KAAKirC,iBAAmB/9B,EACxBlN,KAAKsvC,mBACT,CAQE,SAAAsE,CAAU56B,GACRhZ,KAAK0sC,kBACH1zB,EAASqV,GAAmBrV,EAAQhZ,KAAKszB,iBAAmBta,EAElE,CAME,iBAAA0zB,CAAkB1zB,GAChBhZ,KAAK+qC,cAAgB/xB,EACrBhZ,KAAKsvC,mBACT,CAOE,OAAAb,CAAQ4F,EAAMnnC,GAGZ,OAFAlN,KAAK0qC,OAAO2J,IAASnnC,EACrBlN,KAAK4H,UACE5H,KAAK0qC,OAAO2J,EACvB,CAQE,aAAA/W,CAAcrkB,GACZjZ,KAAKgrC,kBAAoB/xB,EACzBjZ,KAAKsvC,mBACT,CAQE,WAAA7C,CAAYvzB,GACVlZ,KAAKirC,gBAAkB/xB,EACvBlZ,KAAKsvC,mBACT,CAOE,OAAA1C,CAAQD,GACN3sC,KAAKs9B,cAAct9B,KAAKquC,qBAAqB1B,GACjD,CAUE,iBAAA2C,CAAkBgF,EAAkBC,GAClC,MAAM9L,EACJzoC,KAAKytC,gBAAkBztC,KAAK2uC,kBAAoB4F,EAG5CH,EAAcp0C,KAAKwsC,aAAatzB,SACpClZ,KAAKirC,gBACLxC,GAEIz1B,EAAOhT,KAAKmvC,iBAAiBiF,GAC7BJ,EAAgBh0C,KAAKwsC,aAAavzB,WACtCjZ,KAAKgrC,kBACL,EACAh4B,EACAy1B,GAEI+L,EAAYx0C,KAAKwsC,aAAaxzB,OAClChZ,KAAK+qC,cACLiJ,EACAhhC,EACAy1B,EACAzoC,KAAKwzC,qBACHxzC,KAAK+qC,cACLiJ,EACAI,EACAphC,IAIAhT,KAAKiJ,IAAIi/B,GAAaG,YAAc+L,GACtCp0C,KAAK4J,IAAIs+B,GAAaG,SAAU+L,GAE9Bp0C,KAAKiJ,IAAIi/B,GAAaE,cAAgB4L,IACxCh0C,KAAK4J,IAAIs+B,GAAaE,WAAY4L,GAClCh0C,KAAK4J,IAAI,OAAQ5J,KAAKotC,WAAW,IAGhCoH,GACAx0C,KAAKiJ,IAAIi/B,GAAaC,SACtBjmC,GAAOlC,KAAKiJ,IAAIi/B,GAAaC,QAASqM,IAEvCx0C,KAAK4J,IAAIs+B,GAAaC,OAAQqM,GAG5Bx0C,KAAKytC,iBAAmB6G,GAC1Bt0C,KAAK4uC,mBAEP5uC,KAAKqrC,mBAAgB7kC,CACzB,CAWE,kBAAAknC,CAAmBnN,EAAUkU,EAAqB9iB,GAChD4O,OAAwB/5B,IAAb+5B,EAAyBA,EAAW,IAC/C,MAAMl/B,EAAYozC,GAAuB,EAEnCL,EAAcp0C,KAAKwsC,aAAatzB,SAASlZ,KAAKirC,iBAC9Cj4B,EAAOhT,KAAKmvC,iBAAiBiF,GAC7BJ,EAAgBh0C,KAAKwsC,aAAavzB,WACtCjZ,KAAKgrC,kBACL3pC,EACA2R,GAEIwhC,EAAYx0C,KAAKwsC,aAAaxzB,OAClChZ,KAAK+qC,cACLiJ,EACAhhC,GACA,EACAhT,KAAKwzC,qBACHxzC,KAAK+qC,cACLiJ,EACAI,EACAphC,IAIJ,GAAiB,IAAbutB,IAAmBvgC,KAAKqrC,cAK1B,OAJArrC,KAAKgrC,kBAAoBgJ,EACzBh0C,KAAKirC,gBAAkBmJ,EACvBp0C,KAAK+qC,cAAgByJ,OACrBx0C,KAAKsvC,oBAIP3d,EAASA,IAAwB,IAAb4O,EAAiBvgC,KAAKqrC,mBAAgB7kC,GAC1DxG,KAAKqrC,mBAAgB7kC,EAGnBxG,KAAKi9B,kBAAoB+W,GACzBh0C,KAAKqtC,gBAAkB+G,GACtBp0C,KAAK8sC,qBACL5qC,GAAOlC,KAAK8sC,oBAAqB0H,KAE9Bx0C,KAAKytC,gBACPztC,KAAK4uC,mBAGP5uC,KAAK2tC,gBAAgB,CACnBz0B,SAAUk7B,EACVp7B,OAAQw7B,EACRv7B,WAAY+6B,EACZzT,SAAUA,EACVyN,OAAQliC,GACR6lB,OAAQA,IAGhB,CAQE,gBAAA+iB,GACE10C,KAAK0tC,mBAAmB,GAExB1tC,KAAKyuC,QAAQxG,GAAsB,EACvC,CAUE,cAAA0M,CAAepU,EAAUkU,EAAqB9iB,GAC5CA,EAASA,GAAUtD,GAAmBsD,EAAQ3xB,KAAKszB,iBACnDtzB,KAAK40C,uBAAuBrU,EAAUkU,EAAqB9iB,EAC/D,CASE,sBAAAijB,CAAuBrU,EAAUkU,EAAqB9iB,GAC/C3xB,KAAK2uC,mBAGV3uC,KAAKyuC,QAAQxG,IAAsB,GACnCjoC,KAAK0tC,mBAAmBnN,EAAUkU,EAAqB9iB,GAC3D,CASE,oBAAAyhB,CAAqBlF,EAAcE,GACjC,MAAMp7B,EAAOhT,KAAKmvC,iBAAiBnvC,KAAKqtC,eACxC,OAAOrtC,KAAKwsC,aAAaxzB,OACvBk1B,EACAE,GAAoBpuC,KAAKi9B,gBACzBjqB,EAEN,CAWE,kBAAA6hC,CAAmBC,EAAYzzC,GAC7B,MAAM0zC,EAAY/0C,KAAKquC,qBAAqByG,GAC5C,OAAO90C,KAAK6wC,qBACV7wC,KAAKyxC,yBAAyBsD,EAAW1zC,GAE/C,CAWE,wBAAAowC,CAAyBrD,EAAkB/sC,GACzCA,EAAYA,GAAa,EACzB,MAAM2R,EAAOhT,KAAKmvC,iBAAiBnvC,KAAKqtC,eAExC,OAAOrtC,KAAKwsC,aAAavzB,WAAWm1B,EAAkB/sC,EAAW2R,EACrE,EAOA,SAAS66B,GAAkB31B,EAAU88B,GACnCtR,YAAW,WACTxrB,EAAS88B,EACV,GAAE,EACL,CAMO,SAAS7I,GAAuB7hC,GACrC,QAAuB9D,IAAnB8D,EAAQmL,OAAsB,CAChC,MAAM+yB,OAC+BhiC,IAAnC8D,EAAQ2qC,wBACJ3qC,EAAQ2qC,uBAEd,OAAO3M,GAAah+B,EAAQmL,OAAQnL,EAAQ4qC,oBAAqB1M,EACrE,CAEE,MAAM7sB,EAAa0Q,GAAiB/hB,EAAQqR,WAAY,aACxD,IAA2B,IAAvBrR,EAAQ4R,YAAuBP,EAAWwI,WAAY,CACxD,MAAM1O,EAASkG,EAAWE,YAAYrY,QAGtC,OAFAiS,EAAO,IAAMsB,IACbtB,EAAO,GAAKsB,IACLuxB,GAAa7yB,GAAQ,GAAO,EACvC,CAEE,OAAO0/B,EACT,CAOO,SAAS3J,GAA2BlhC,GACzC,IAAI8hC,EACA7C,EACAC,EAOJ,IAAIyC,OACkBzlC,IAApB8D,EAAQ2hC,QAAwB3hC,EAAQ2hC,QA5sDnB,EA8sDnB8E,OACkBvqC,IAApB8D,EAAQymC,QAAwBzmC,EAAQymC,QAPnB,GASvB,MAAMnF,OACmBplC,IAAvB8D,EAAQshC,WAA2BthC,EAAQshC,WATnB,EAWpB1vB,OACmB1V,IAAvB8D,EAAQ4R,YAA2B5R,EAAQ4R,WAEvCssB,OACmChiC,IAAvC8D,EAAQ8qC,4BACJ9qC,EAAQ8qC,2BAGRjM,OACuB3iC,IAA3B8D,EAAQ6+B,gBAA+B7+B,EAAQ6+B,eAE3CxtB,EAAa0Q,GAAiB/hB,EAAQqR,WAAY,aAClD05B,EAAa15B,EAAWE,YAC9B,IAAIq5B,EAAsB5qC,EAAQ4qC,oBAC9Bz/B,EAASnL,EAAQmL,OAMrB,GALKyG,GAAezG,IAAUkG,EAAWwI,aACvC+wB,GAAsB,EACtBz/B,EAAS4/B,QAGiB7uC,IAAxB8D,EAAQq/B,YAA2B,CACrC,MAAMA,EAAcr/B,EAAQq/B,YAC5BJ,EAAgBI,EAAYsC,GAC5BzC,OAC2BhjC,IAAzBmjC,EAAYoH,GACRpH,EAAYoH,GACZpH,EAAYA,EAAY9oC,OAAS,GAGrCurC,EADE9hC,EAAQ8mC,oBACa1H,GACrBC,EACAnB,GACC0M,GAAuBz/B,EACxB0zB,GAGqBiB,GACrBb,EACAC,EACAhB,GACC0M,GAAuBz/B,EACxB0zB,EAGR,KAAS,CAEL,MAKMmM,GALQD,EAGVzpC,KAAKoM,IAAIU,GAAS28B,GAAa18B,GAAU08B,IADxC,IAAM3yB,GAAgBzB,QAAWtF,EAAWqI,oBAIxCwmB,GAAoB5+B,KAAKC,IA/DV,EAzsDH,GA0wDf0pC,EACJD,EACA1pC,KAAKC,IAnEiB,EAmEM2pC,IAG9BjM,EAAgBj/B,EAAQi/B,mBACF/iC,IAAlB+iC,EACF0C,EAAU,EAEV1C,EAAgB+L,EAAuB1pC,KAAKC,IAAI+/B,EAAYK,GAI9DzC,EAAgBl/B,EAAQk/B,mBACFhjC,IAAlBgjC,IAGEA,OAFoBhjC,IAApB8D,EAAQymC,aACoBvqC,IAA1B8D,EAAQi/B,cACMA,EAAgB39B,KAAKC,IAAI+/B,EAAYmF,GAErCuE,EAAuB1pC,KAAKC,IAAI+/B,EAAYmF,GAG9CwE,GAKpBxE,EACE9E,EACArgC,KAAKoQ,MACHpQ,KAAKqZ,IAAIskB,EAAgBC,GAAiB59B,KAAKqZ,IAAI2mB,IAEvDpC,EAAgBD,EAAgB39B,KAAKC,IAAI+/B,EAAYmF,EAAU9E,GAG7DG,EADE9hC,EAAQ8mC,oBACarH,GACrB6B,EACArC,EACAC,EACAhB,GACC0M,GAAuBz/B,EACxB0zB,GAGqBiB,GACrBb,EACAC,EACAhB,GACC0M,GAAuBz/B,EACxB0zB,EAGR,CACE,MAAO,CACLkD,WAAYD,EACZ7C,cAAeA,EACfC,cAAeA,EACfyC,QAASA,EACTL,WAAYA,EAEhB,CAMO,SAASW,GAAyBjiC,GAGvC,QAD6B9D,IAA3B8D,EAAQmrC,gBAA+BnrC,EAAQmrC,eAC7B,CAClB,MAAMC,EAAoBprC,EAAQorC,kBAClC,YAA0BlvC,IAAtBkvC,IAAyD,IAAtBA,EAC9BnL,MAEiB,IAAtBmL,EACKC,GAEwB,iBAAtBD,EACFrL,GAAcqL,GAEhBC,EACX,CACE,OAAO5qB,EACT,CAOO,SAASyjB,GAAgBT,GAC9B,QAAIA,EAAUE,cAAgBF,EAAUG,eACjC0H,GAAiB7H,EAAUE,aAAcF,EAAUG,iBAItDH,EAAUI,mBAAqBJ,EAAUK,kBAGzCL,EAAUO,iBAAmBP,EAAUQ,eAI7C,CAUA,SAASsD,GAAkBz7B,EAAYpD,EAAMsgC,EAAUr6B,EAAYC,GAEjE,MAAM6I,EAAWnW,KAAKiO,KAAKX,GAC3B,IAAI8I,EAAWpW,KAAKmO,KAAKb,GACrB45B,EAAO18B,EAAW,GAAK2L,EAAW3L,EAAW,GAAK4L,EAClD+wB,EAAO38B,EAAW,GAAK2L,EAAW3L,EAAW,GAAK4L,EACtD8wB,IAAS9/B,EAAK,GAAK,EAAIsgC,EAAS,IAAMr6B,EACtC85B,IAASO,EAAS,GAAKtgC,EAAK,GAAK,GAAKiG,EAGtC+I,GAAYA,EAIZ,MAAO,CAHS8wB,EAAO/wB,EAAWgxB,EAAO/wB,EACzB+wB,EAAOhxB,EAAW+wB,EAAO9wB,EAG3C,CCxlEO,MAAM6zB,GAAe,YAQfC,GAAmB,gBAQnBC,GAAqB,kBAQrBC,GAAoB,iBAQpBC,GAAgB,aAShBC,GAAkB,eAMzBC,GAAY,IAAIC,OACpB,CACE,qDACA,4CACA,8DACA,gDACA,8EACA,gEACA,sCACAt2B,KAAK,IACP,KAGIu2B,GAAsB,CAC1B,QACA,UACA,SACA,OACA,aACA,UASWC,GAAoB,SAAUC,GACzC,MAAMtsB,EAAQssB,EAAStsB,MAAMksB,IAC7B,IAAKlsB,EACH,OAAO,KAET,MAAMna,EAAuC,CAC3C0mC,WAAY,SACZxjC,KAAM,QACNlD,MAAO,SACP2mC,OAAQ,SACRC,QAAS,UAEX,IAAK,IAAIn1C,EAAI,EAAG4E,EAAKkwC,GAAoBx1C,OAAQU,EAAI4E,IAAM5E,EAAG,CAC5D,MAAMwC,EAAQkmB,EAAM1oB,EAAI,QACViF,IAAVzC,IACF+L,EAAMumC,GAAoB90C,IAAMwC,EAEtC,CAEE,OADA+L,EAAM6mC,SAAW7mC,EAAM8mC,OAAOz2B,MAAM,QAC7BrQ,CACT,ECxEA,MAAM+mC,WAAgBhuC,EAIpB,WAAA9I,CAAYuK,GACVrF,QAEA,MAAMkF,EAAUG,EAAQH,SACpBA,GAAYG,EAAQlJ,QAAW+I,EAAQ2F,MAAMgnC,gBAC/C3sC,EAAQ2F,MAAMgnC,cAAgB,QAOhC92C,KAAKmK,QAAUA,GAAoB,KAMnCnK,KAAK+2C,QAAU,KAMf/2C,KAAKoiC,KAAO,KAMZpiC,KAAK89B,aAAe,GAEhBxzB,EAAQ0sC,SACVh3C,KAAKg3C,OAAS1sC,EAAQ0sC,QAGpB1sC,EAAQlJ,QACVpB,KAAKi3C,UAAU3sC,EAAQlJ,OAE7B,CAME,eAAAjB,GACEH,KAAKmK,SAASkB,SACdpG,MAAM9E,iBACV,CAOE,MAAA+2C,GACE,OAAOl3C,KAAKoiC,IAChB,CAUE,MAAA+U,CAAOhmB,GACDnxB,KAAKoiC,MACPpiC,KAAKmK,SAASkB,SAEhB,IAAK,IAAI9J,EAAI,EAAG4E,EAAKnG,KAAK89B,aAAaj9B,OAAQU,EAAI4E,IAAM5E,EACvD8F,EAAcrH,KAAK89B,aAAav8B,IAIlC,GAFAvB,KAAK89B,aAAaj9B,OAAS,EAC3Bb,KAAKoiC,KAAOjR,EACRA,EAAK,CACP,MAAM/vB,EAASpB,KAAK+2C,SAAW5lB,EAAIimB,+BAC/Bp3C,KAAKmK,SACP/I,EAAOoQ,YAAYxR,KAAKmK,SAEtBnK,KAAKg3C,SAAWh0C,GAClBhD,KAAK89B,aAAan4B,KAChBmB,EAAOqqB,EAAKuT,GAAyB1kC,KAAKg3C,OAAQh3C,OAGtDmxB,EAAI6lB,QACV,CACA,CAOE,MAAAA,CAAOK,GAAU,CAWjB,SAAAJ,CAAU71C,GACRpB,KAAK+2C,QACe,iBAAX31C,EAAsBgO,SAASkoC,eAAel2C,GAAUA,CACrE,EC7GA,MAAMm2C,WAAoBV,GAIxB,WAAA92C,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhCrF,MAAM,CACJkF,QAASiF,SAASC,cAAc,OAChC2nC,OAAQ1sC,EAAQ0sC,OAChB51C,OAAQkJ,EAAQlJ,SAOlBpB,KAAKw3C,WAAapoC,SAASC,cAAc,MAMzCrP,KAAKy3C,gBACmBjxC,IAAtB8D,EAAQotC,WAA0BptC,EAAQotC,UAM5C13C,KAAK23C,eAAiB33C,KAAKy3C,WAM3Bz3C,KAAK43C,0BAA+CpxC,IAAxB8D,EAAQutC,YAMpC73C,KAAK83C,kBACqBtxC,IAAxB8D,EAAQutC,aAA4BvtC,EAAQutC,YAEzC73C,KAAK83C,eACR93C,KAAKy3C,YAAa,GAOpBz3C,KAAK+3C,cAAgBztC,EAAQ0tC,aAE7B,MAAMC,OACkBzxC,IAAtB8D,EAAQ2tC,UAA0B3tC,EAAQ2tC,UAAY,iBAElDC,OACiB1xC,IAArB8D,EAAQ4tC,SAAyB5tC,EAAQ4tC,SAAW,eAEhDC,OACwB3xC,IAA5B8D,EAAQ6tC,gBACJ7tC,EAAQ6tC,gBACRF,EAAY,UAEZG,OACsB5xC,IAA1B8D,EAAQ8tC,cAA8B9tC,EAAQ8tC,cAAgB,IAE1DC,OAC0B7xC,IAA9B8D,EAAQ+tC,kBACJ/tC,EAAQ+tC,kBACRJ,EAAY,YAEW,iBAAlBG,GAKTp4C,KAAKs4C,eAAiBlpC,SAASC,cAAc,QAC7CrP,KAAKs4C,eAAeC,YAAcH,EAClCp4C,KAAKs4C,eAAeL,UAAYI,GAEhCr4C,KAAKs4C,eAAiBF,EAGxB,MAAMI,OAA0BhyC,IAAlB8D,EAAQkuC,MAAsBluC,EAAQkuC,MAAQ,IAEvC,iBAAVA,GAKTx4C,KAAKy4C,OAASrpC,SAASC,cAAc,QACrCrP,KAAKy4C,OAAOF,YAAcC,EAC1Bx4C,KAAKy4C,OAAOR,UAAYE,GAExBn4C,KAAKy4C,OAASD,EAGhB,MAAME,EACJ14C,KAAK83C,eAAiB93C,KAAKy3C,WAAaz3C,KAAKs4C,eAAiBt4C,KAAKy4C,OAMrEz4C,KAAK24C,cAAgBvpC,SAASC,cAAc,UAC5CrP,KAAK24C,cAAcC,aAAa,OAAQ,UACxC54C,KAAK24C,cAAcC,aAAa,gBAAiBlwC,QAAQ1I,KAAKy3C,aAC9Dz3C,KAAK24C,cAAcE,MAAQX,EAC3Bl4C,KAAK24C,cAAcnnC,YAAYknC,GAE/B14C,KAAK24C,cAAcrzC,iBACjBzF,EACAG,KAAK84C,aAAa5xC,KAAKlH,OACvB,GAGF,MAAM+4C,EACJd,EACA,IACAlC,GACA,IACAE,IACCj2C,KAAKy3C,YAAcz3C,KAAK83C,aAAe,IAAM5B,GAAkB,KAC/Dl2C,KAAK83C,aAAe,GAAK,qBACtB3tC,EAAUnK,KAAKmK,QACrBA,EAAQ8tC,UAAYc,EACpB5uC,EAAQqH,YAAYxR,KAAK24C,eACzBxuC,EAAQqH,YAAYxR,KAAKw3C,YAOzBx3C,KAAKg5C,sBAAwB,GAM7Bh5C,KAAKi5C,kBAAmB,CAC5B,CAQE,0BAAAC,CAA2BxY,GACzB,MAAMyY,EAASn5C,KAAKk3C,SAASkC,eACvBC,EAAsB,IAAIC,IAC9BH,EAAOI,SAASC,GAAUA,EAAMC,gBAAgB/Y,MAQlD,QAN2Bl6B,IAAvBxG,KAAK+3C,gBACP/1C,MAAMC,QAAQjC,KAAK+3C,eACf/3C,KAAK+3C,cAAcjtC,SAASG,GAASouC,EAAoB94B,IAAItV,KAC7DouC,EAAoB94B,IAAIvgB,KAAK+3C,iBAG9B/3C,KAAK43C,qBAAsB,CAC9B,MAAMC,GAAesB,EAAOO,MACzBF,IAA8D,IAApDA,EAAMG,aAAaC,+BAEhC55C,KAAK65C,eAAehC,EAC1B,CACI,OAAO71C,MAAM83C,KAAKT,EACtB,CAME,oBAAMU,CAAerZ,GACnB,IAAKA,EAKH,YAJI1gC,KAAKi5C,mBACPj5C,KAAKmK,QAAQ2F,MAAMkqC,QAAU,OAC7Bh6C,KAAKi5C,kBAAmB,IAK5B,MAAMjB,QAAqB/zC,QAAQg2C,IACjCj6C,KAAKk5C,2BAA2BxY,GAAYvP,KAAK+oB,GAC/Cr2C,GAAU,IAAMq2C,OAIdC,EAAUnC,EAAan3C,OAAS,EAMtC,GALIb,KAAKi5C,kBAAoBkB,IAC3Bn6C,KAAKmK,QAAQ2F,MAAMkqC,QAAUG,EAAU,GAAK,OAC5Cn6C,KAAKi5C,iBAAmBkB,IAGtBj4C,EAAO81C,EAAch4C,KAAKg5C,uBAA9B,CAIAnoC,GAAe7Q,KAAKw3C,YAGpB,IAAK,IAAIj2C,EAAI,EAAG4E,EAAK6xC,EAAan3C,OAAQU,EAAI4E,IAAM5E,EAAG,CACrD,MAAM4I,EAAUiF,SAASC,cAAc,MACvClF,EAAQiwC,UAAYpC,EAAaz2C,GACjCvB,KAAKw3C,WAAWhmC,YAAYrH,EAClC,CAEInK,KAAKg5C,sBAAwBhB,CAXjC,CAYA,CAME,YAAAc,CAAajzC,GACXA,EAAMhB,iBACN7E,KAAKq6C,gBACLr6C,KAAK23C,eAAiB33C,KAAKy3C,UAC/B,CAKE,aAAA4C,GACEr6C,KAAKmK,QAAQmwC,UAAUC,OAAOrE,IAC1Bl2C,KAAKy3C,WACPlnC,GAAYvQ,KAAKs4C,eAAgBt4C,KAAKy4C,QAEtCloC,GAAYvQ,KAAKy4C,OAAQz4C,KAAKs4C,gBAEhCt4C,KAAKy3C,YAAcz3C,KAAKy3C,WACxBz3C,KAAK24C,cAAcC,aAAa,gBAAiBlwC,QAAQ1I,KAAKy3C,YAClE,CAOE,cAAA+C,GACE,OAAOx6C,KAAK83C,YAChB,CAOE,cAAA+B,CAAehC,GACT73C,KAAK83C,eAAiBD,IAG1B73C,KAAK83C,aAAeD,EACpB73C,KAAKmK,QAAQmwC,UAAUC,OAAO,oBAC1Bv6C,KAAK23C,gBACP33C,KAAKq6C,gBAEX,CASE,YAAAI,CAAa/C,GACX13C,KAAK23C,eAAiBD,EACjB13C,KAAK83C,cAAgB93C,KAAKy3C,aAAeC,GAG9C13C,KAAKq6C,eACT,CAQE,YAAAK,GACE,OAAO16C,KAAKy3C,UAChB,CAOE,MAAAT,CAAOK,GACLr3C,KAAK+5C,eAAe1C,EAAS3W,WACjC,ECrTA,MAAMia,WAAe9D,GAInB,WAAA92C,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhCrF,MAAM,CACJkF,QAASiF,SAASC,cAAc,OAChC2nC,OAAQ1sC,EAAQ0sC,OAChB51C,OAAQkJ,EAAQlJ,SAGlB,MAAM62C,OACkBzxC,IAAtB8D,EAAQ2tC,UAA0B3tC,EAAQ2tC,UAAY,YAElDO,OAA0BhyC,IAAlB8D,EAAQkuC,MAAsBluC,EAAQkuC,MAAQ,IAEtDoC,OACyBp0C,IAA7B8D,EAAQswC,iBACJtwC,EAAQswC,iBACR,aAMN56C,KAAKy4C,OAAS,KAEO,iBAAVD,GACTx4C,KAAKy4C,OAASrpC,SAASC,cAAc,QACrCrP,KAAKy4C,OAAOR,UAAY2C,EACxB56C,KAAKy4C,OAAOF,YAAcC,IAE1Bx4C,KAAKy4C,OAASD,EACdx4C,KAAKy4C,OAAO6B,UAAU/5B,IAAIq6B,IAG5B,MAAM1C,EAAW5tC,EAAQ4tC,SAAW5tC,EAAQ4tC,SAAW,iBAEjDnU,EAAS30B,SAASC,cAAc,UACtC00B,EAAOkU,UAAYA,EAAY,SAC/BlU,EAAO6U,aAAa,OAAQ,UAC5B7U,EAAO8U,MAAQX,EACfnU,EAAOvyB,YAAYxR,KAAKy4C,QAExB1U,EAAOz+B,iBACLzF,EACAG,KAAK84C,aAAa5xC,KAAKlH,OACvB,GAGF,MAAM+4C,EACJd,EAAY,IAAMlC,GAAqB,IAAME,GACzC9rC,EAAUnK,KAAKmK,QACrBA,EAAQ8tC,UAAYc,EACpB5uC,EAAQqH,YAAYuyB,GAKpB/jC,KAAK66C,gBAAkBvwC,EAAQwwC,WAAaxwC,EAAQwwC,gBAAat0C,EAMjExG,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,IAMrEvgC,KAAKg7C,eAAiCx0C,IAArB8D,EAAQ2wC,UAAyB3wC,EAAQ2wC,SAM1Dj7C,KAAKk7C,eAAY10C,EAEbxG,KAAKg7C,WACPh7C,KAAKmK,QAAQmwC,UAAU/5B,IAAIs1B,GAEjC,CAME,YAAAiD,CAAajzC,GACXA,EAAMhB,sBACuB2B,IAAzBxG,KAAK66C,gBACP76C,KAAK66C,kBAEL76C,KAAKm7C,aAEX,CAKE,WAAAA,GACE,MACMC,EADMp7C,KAAKk3C,SACAmE,UACjB,IAAKD,EAGH,OAEF,MAAMliC,EAAWkiC,EAAK/N,mBACL7mC,IAAb0S,IACElZ,KAAK+6C,UAAY,GAAK7hC,GAAY,EAAItN,KAAKuR,KAAQ,EACrDi+B,EAAK9N,QAAQ,CACXp0B,SAAU,EACVqnB,SAAUvgC,KAAK+6C,UACf/M,OAAQliC,KAGVsvC,EAAK3O,YAAY,GAGzB,CAOE,MAAAuK,CAAOK,GACL,MAAM3W,EAAa2W,EAAS3W,WAC5B,IAAKA,EACH,OAEF,MAAMxnB,EAAWwnB,EAAWsH,UAAU9uB,SACtC,GAAIA,GAAYlZ,KAAKk7C,UAAW,CAC9B,MAAMnuB,EAAY,UAAY7T,EAAW,OACzC,GAAIlZ,KAAKg7C,UAAW,CAClB,MAAMM,EAAWt7C,KAAKmK,QAAQmwC,UAAUgB,SAASzF,IAC5CyF,GAAyB,IAAbpiC,EAENoiC,GAAyB,IAAbpiC,GACrBlZ,KAAKmK,QAAQmwC,UAAUjvC,OAAOwqC,IAF9B71C,KAAKmK,QAAQmwC,UAAU/5B,IAAIs1B,GAIrC,CACM71C,KAAKy4C,OAAO3oC,MAAMid,UAAYA,CACpC,CACI/sB,KAAKk7C,UAAYhiC,CACrB,ECpJA,MAAMqiC,WAAa1E,GAIjB,WAAA92C,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhCrF,MAAM,CACJkF,QAASiF,SAASC,cAAc,OAChCjO,OAAQkJ,EAAQlJ,SAGlB,MAAM62C,OACkBzxC,IAAtB8D,EAAQ2tC,UAA0B3tC,EAAQ2tC,UAAY,UAElD/qC,OAA0B1G,IAAlB8D,EAAQ4C,MAAsB5C,EAAQ4C,MAAQ,EAEtDsuC,OACwBh1C,IAA5B8D,EAAQkxC,gBACJlxC,EAAQkxC,gBACRvD,EAAY,MAEZwD,OACyBj1C,IAA7B8D,EAAQmxC,iBACJnxC,EAAQmxC,iBACRxD,EAAY,OAEZyD,OACoBl1C,IAAxB8D,EAAQoxC,YAA4BpxC,EAAQoxC,YAAc,IACtDC,OACqBn1C,IAAzB8D,EAAQqxC,aAA6BrxC,EAAQqxC,aAAe,IAExDC,OACuBp1C,IAA3B8D,EAAQsxC,eAA+BtxC,EAAQsxC,eAAiB,UAC5DC,OACwBr1C,IAA5B8D,EAAQuxC,gBACJvxC,EAAQuxC,gBACR,WAEAC,EAAY1sC,SAASC,cAAc,UACzCysC,EAAU7D,UAAYuD,EACtBM,EAAUlD,aAAa,OAAQ,UAC/BkD,EAAUjD,MAAQ+C,EAClBE,EAAUtqC,YACe,iBAAhBkqC,EACHtsC,SAAS2sC,eAAeL,GACxBA,GAGNI,EAAUx2C,iBACRzF,EACAG,KAAK84C,aAAa5xC,KAAKlH,KAAMkN,IAC7B,GAGF,MAAM8uC,EAAa5sC,SAASC,cAAc,UAC1C2sC,EAAW/D,UAAYwD,EACvBO,EAAWpD,aAAa,OAAQ,UAChCoD,EAAWnD,MAAQgD,EACnBG,EAAWxqC,YACe,iBAAjBmqC,EACHvsC,SAAS2sC,eAAeJ,GACxBA,GAGNK,EAAW12C,iBACTzF,EACAG,KAAK84C,aAAa5xC,KAAKlH,MAAOkN,IAC9B,GAGF,MAAM6rC,EACJd,EAAY,IAAMlC,GAAqB,IAAME,GACzC9rC,EAAUnK,KAAKmK,QACrBA,EAAQ8tC,UAAYc,EACpB5uC,EAAQqH,YAAYsqC,GACpB3xC,EAAQqH,YAAYwqC,GAMpBh8C,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,GACzE,CAOE,YAAAuY,CAAa5rC,EAAOrH,GAClBA,EAAMhB,iBACN7E,KAAKi8C,aAAa/uC,EACtB,CAME,YAAA+uC,CAAa/uC,GACX,MACMkuC,EADMp7C,KAAKk3C,SACAmE,UACjB,IAAKD,EAGH,OAEF,MAAMc,EAAcd,EAAKhO,UACzB,QAAoB5mC,IAAhB01C,EAA2B,CAC7B,MAAMC,EAAUf,EAAKvG,mBAAmBqH,EAAchvC,GAClDlN,KAAK+6C,UAAY,GACfK,EAAK3N,gBACP2N,EAAKxM,mBAEPwM,EAAK9N,QAAQ,CACXX,KAAMwP,EACN5b,SAAUvgC,KAAK+6C,UACf/M,OAAQliC,MAGVsvC,EAAKxO,QAAQuP,EAErB,CACA,ECxHO,SAASC,GAAS9xC,GACvBA,EAAUA,GAAoB,CAAE,EAGhC,MAAM+xC,EAAW,IAAIjyC,QAEgB5D,IAAjB8D,EAAQqiC,MAAqBriC,EAAQqiC,OAEvD0P,EAAS12C,KAAK,IAAI41C,GAAKjxC,EAAQgyC,oBAGQ91C,IAAnB8D,EAAQuX,QAAuBvX,EAAQuX,SAE3Dw6B,EAAS12C,KAAK,IAAIg1C,GAAOrwC,EAAQiyC,gBASnC,YAL0B/1C,IAAxB8D,EAAQ4vC,aAA4B5vC,EAAQ4vC,cAE5CmC,EAAS12C,KAAK,IAAI4xC,GAAYjtC,EAAQkyC,qBAGjCH,CACT,CCpDe,IAAAI,GACL,SCgCV,MAAMC,WAAoB7zC,EAIxB,WAAA9I,CAAYuK,GACVrF,QAKAjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAED4C,GAAWA,EAAQlE,cACrBpG,KAAKoG,YAAckE,EAAQlE,aAO7BpG,KAAKoiC,KAAO,KAEZpiC,KAAK28C,WAAU,EACnB,CAQE,SAAAC,GACE,OAA+B58C,KAAKiJ,IAAIwzC,GAC5C,CAOE,MAAAvF,GACE,OAAOl3C,KAAKoiC,IAChB,CAQE,WAAAh8B,CAAYy2C,GACV,OAAO,CACX,CAQE,SAAAF,CAAUG,GACR98C,KAAK4J,IAAI6yC,GAA4BK,EACzC,CAQE,MAAA3F,CAAOhmB,GACLnxB,KAAKoiC,KAAOjR,CAChB,EAQO,SAAS4rB,GAAI3B,EAAMluC,EAAOqzB,GAC/B,MAAMqP,EAAgBwL,EAAKtO,oBAC3B,GAAI8C,EAAe,CACjB,MAAM52B,EAAS,CAAC42B,EAAc,GAAK1iC,EAAM,GAAI0iC,EAAc,GAAK1iC,EAAM,IACtEkuC,EAAKzN,gBAAgB,CACnBpN,cAAuB/5B,IAAb+5B,EAAyBA,EAAW,IAC9CyN,OAAQhiC,GACRgN,OAAQoiC,EAAKhI,qBAAqBp6B,IAExC,CACA,CAQO,SAASgkC,GAAY5B,EAAMluC,EAAOykB,EAAQ4O,GAC/C,MAAM2b,EAAcd,EAAKhO,UAEzB,QAAoB5mC,IAAhB01C,EACF,OAGF,MAAMC,EAAUf,EAAKvG,mBAAmBqH,EAAchvC,GAChD8mC,EAAgBoH,EAAK/M,qBAAqB8N,GAE5Cf,EAAK3N,gBACP2N,EAAKxM,mBAEPwM,EAAK9N,QAAQ,CACXr0B,WAAY+6B,EACZriB,OAAQA,EACR4O,cAAuB/5B,IAAb+5B,EAAyBA,EAAW,IAC9CyN,OAAQliC,IAEZ,CCtJA,MAAMmxC,WAAwBP,GAI5B,WAAA38C,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAMhCtK,KAAKk9C,OAAS5yC,EAAQ4C,MAAQ5C,EAAQ4C,MAAQ,EAM9ClN,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,GACzE,CASE,WAAAn6B,CAAYy2C,GACV,IAAIM,GAAY,EAChB,GAAIN,EAAgBn4C,MAAQ08B,GAAoBG,SAAU,CACxD,MAAM6b,EACJP,EACD,cACK1rB,EAAM0rB,EAAgB1rB,IACtBQ,EAASkrB,EAAgBzmC,WACzBlJ,EAAQkwC,EAAaC,UAAYr9C,KAAKk9C,OAASl9C,KAAKk9C,OAE1DF,GADa7rB,EAAIkqB,UACCnuC,EAAOykB,EAAQ3xB,KAAK+6C,WACtCqC,EAAav4C,iBACbs4C,GAAY,CAClB,CACI,OAAQA,CACZ,EC1CO,SAASlD,GAAI1M,GAClB,MAAM+P,EAAa55C,UAKnB,OAAO,SAAUmC,GACf,IAAI03C,GAAO,EACX,IAAK,IAAIh8C,EAAI,EAAG4E,EAAKm3C,EAAWz8C,OAAQU,EAAI4E,IAC1Co3C,EAAOA,GAAQD,EAAW/7C,GAAGsE,GACxB03C,KAF2Ch8C,GAMlD,OAAOg8C,CACR,CACH,CAUO,MAAMC,GAAa,SAAUX,GAClC,MAAMjc,EAAgBic,EAAgBjc,cACtC,OACEA,EAAc6c,UACZ7c,EAAc8c,SAAW9c,EAAc+c,WACxC/c,EAAcyc,QAEnB,EAUaO,GAAmB,SAAUf,GACxC,MAAMjc,EAAgBic,EAAgBjc,cACtC,OACEA,EAAc6c,UACZ7c,EAAc8c,SAAW9c,EAAc+c,UACzC/c,EAAcyc,QAElB,EAUaQ,GAAQ,SAAUh4C,GAC7B,MAAMi4C,EAAgBj4C,EAAMsrB,IAAI4sB,mBAC1BC,EAAWF,EAAczZ,cACzB4Z,EAAgBp4C,EAAMsrB,IAAIgT,mBAAmB8Z,cAEnD,OAAOD,aAAoBE,WACvBF,EAASG,KAAK7C,SAAS2C,GACvBH,EAAcxC,SAAS2C,EAC7B,EAQaG,GAAoB,SAAUv4C,GACzC,MAAMi4C,EAAgBj4C,EAAMsrB,IAAI4sB,mBAC1BC,EAAWF,EAAczZ,cAI/B,QAFE2Z,aAAoBE,WAAaF,EAASG,KAAOL,GAE1BO,aAAa,aAAcR,GAAMh4C,EAC5D,EASay4C,GAASx7C,EAsBTy7C,GAAoB,SAAU1B,GACzC,MAAMjc,EAAgBic,EAAgBjc,cACtC,OACEA,aAAyBoD,cACD,GAAxBpD,EAAcmD,UACZn2B,IAAUC,IAAO+yB,EAAc+c,QAErC,EASaa,GAAQz7C,EAqBR07C,GAAc,SAAU5B,GACnC,OAAOA,EAAgBn4C,MAAQ08B,GAAoBC,WACrD,EAqBaqd,GAAiB,SAAU7B,GACtC,MAAMjc,EACJic,EACD,cACD,OACGjc,EAAc6c,UACb7c,EAAc8c,SAAW9c,EAAc+c,WACxC/c,EAAcyc,QAEnB,EA4BasB,GAAsB,SAAU9B,GAC3C,MAAMjc,EAAgBic,EAAgBjc,cACtC,OAAO/yB,GAAM+yB,EAAc8c,QAAU9c,EAAc+c,OACrD,EAUaiB,GAAe,SAAU/B,GACpC,MAAMjc,EAAgBic,EAAgBjc,cACtC,OACGA,EAAc6c,UACb7c,EAAc8c,SAAW9c,EAAc+c,UACzC/c,EAAcyc,QAElB,EAWawB,GAAoB,SAAUhC,GACzC,MAAMjc,EAAgBic,EAAgBjc,cAChCke,EAAkCle,EAAoB,OAAEke,QAC9D,MACc,UAAZA,GACY,WAAZA,GACY,aAAZA,IAICle,EAAcx/B,OAAO29C,iBAE1B,EASaC,GAAY,SAAUnC,GACjC,MAAMtZ,EAAesZ,EAAgBjc,cAErC,OACE2C,aAAwBS,cAA4C,SAA5BT,EAAa0b,WAEzD,EAuCaC,GAAgB,SAAUrC,GACrC,MAAMtZ,EAAesZ,EAAgBjc,cACrC,OACE2C,aAAwBS,cACxBT,EAAa4b,WACW,IAAxB5b,EAAaQ,MAEjB,EClSA,MAAMqb,WAA2B1C,GAI/B,WAAA38C,CAAYuK,GAGVrF,MAFAqF,EAAUA,GAAoB,CAAE,GAM5BA,EAAQ+0C,kBACVr/C,KAAKq/C,gBAAkB/0C,EAAQ+0C,iBAG7B/0C,EAAQg1C,kBACVt/C,KAAKs/C,gBAAkBh1C,EAAQg1C,iBAG7Bh1C,EAAQi1C,kBACVv/C,KAAKu/C,gBAAkBj1C,EAAQi1C,iBAG7Bj1C,EAAQk1C,gBACVx/C,KAAKw/C,cAAgBl1C,EAAQk1C,eAG3Bl1C,EAAQm1C,WACVz/C,KAAKy/C,SAAWn1C,EAAQm1C,UAO1Bz/C,KAAK0/C,wBAAyB,EAM9B1/C,KAAK2/C,eAAiB,EAC1B,CAQE,eAAAC,GACE,OAAO5/C,KAAK2/C,eAAe9+C,MAC/B,CAQE,eAAAw+C,CAAgBxC,GACd,OAAO,CACX,CAOE,eAAAyC,CAAgBzC,GAAiB,CAWjC,WAAAz2C,CAAYy2C,GACV,IAAKA,EAAgBjc,cACnB,OAAO,EAGT,IAAIuc,GAAY,EAEhB,GADAn9C,KAAK6/C,uBAAuBhD,GACxB78C,KAAK0/C,wBACP,GAAI7C,EAAgBn4C,MAAQ08B,GAAoBI,YAC9CxhC,KAAKs/C,gBAAgBzC,GAErBA,EAAgBjc,cAAc/7B,sBACzB,GAAIg4C,EAAgBn4C,MAAQ08B,GAAoBO,UAAW,CAChE,MAAMme,EAAY9/C,KAAKw/C,cAAc3C,GACrC78C,KAAK0/C,uBACHI,GAAa9/C,KAAK2/C,eAAe9+C,OAAS,CACpD,OAEM,GAAIg8C,EAAgBn4C,MAAQ08B,GAAoBM,YAAa,CAC3D,MAAMqe,EAAU//C,KAAKq/C,gBAAgBxC,GACrC78C,KAAK0/C,uBAAyBK,EAC9B5C,EAAYn9C,KAAKy/C,SAASM,EAC3B,MAAUlD,EAAgBn4C,MAAQ08B,GAAoBK,aACrDzhC,KAAKu/C,gBAAgB1C,GAGzB,OAAQM,CACZ,CAOE,eAAAoC,CAAgB1C,GAAiB,CAQjC,aAAA2C,CAAc3C,GACZ,OAAO,CACX,CAQE,QAAA4C,CAASM,GACP,OAAOA,CACX,CAME,sBAAAF,CAAuBhD,GACjBA,EAAgB/b,iBAClB9gC,KAAK2/C,eAAiB9C,EAAgB/b,eAE5C,EAOO,SAASkf,GAASlJ,GACvB,MAAMj2C,EAASi2C,EAAcj2C,OAC7B,IAAI2jC,EAAU,EACVC,EAAU,EACd,IAAK,IAAIljC,EAAI,EAAGA,EAAIV,EAAQU,IAC1BijC,GAAWsS,EAAcv1C,GAAGijC,QAC5BC,GAAWqS,EAAcv1C,GAAGkjC,QAE9B,MAAO,CAACD,QAASA,EAAU3jC,EAAQ4jC,QAASA,EAAU5jC,EACxD,CC1KA,MAAMo/C,WAAgBb,GAIpB,WAAAr/C,CAAYuK,GACVrF,MAAM,CACJw6C,SAAU18C,IAGZuH,EAAUA,GAAoB,CAAE,EAMhCtK,KAAKkgD,SAAW51C,EAAQ61C,QAKxBngD,KAAKogD,aAAe,KAMpBpgD,KAAKqgD,mBAMLrgD,KAAKsgD,UAAW,EAEhB,MAAMC,EAAYj2C,EAAQi2C,UACtBj2C,EAAQi2C,UACRtG,GAAIyE,GAAgBQ,IAMxBl/C,KAAKwgD,WAAal2C,EAAQm2C,YACtBxG,GAAImE,GAAmBmC,GACvBA,EAMJvgD,KAAK0gD,YAAa,CACtB,CAOE,eAAApB,CAAgBzC,GACd,MAAM1rB,EAAM0rB,EAAgB1rB,IACvBnxB,KAAKsgD,WACRtgD,KAAKsgD,UAAW,EAChBnvB,EAAIkqB,UAAU3G,oBAEhB,MAAMiL,EAAiB3/C,KAAK2/C,eACtBK,EAAW7uB,EAAI+P,cAAcyf,GAAqBhB,IACxD,GAAIA,EAAe9+C,QAAUb,KAAKqgD,oBAIhC,GAHIrgD,KAAKkgD,UACPlgD,KAAKkgD,SAAShgB,OAAO8f,EAAS,GAAIA,EAAS,IAEzChgD,KAAKogD,aAAc,CACrB,MAAMlzC,EAAQ,CACZlN,KAAKogD,aAAa,GAAKJ,EAAS,GAChCA,EAAS,GAAKhgD,KAAKogD,aAAa,IAG5BhF,EADMyB,EAAgB1rB,IACXkqB,UACjBuF,GAAgB1zC,EAAOkuC,EAAKne,iBAC5B4S,GAAiB3iC,EAAOkuC,EAAK/N,eAC7B+N,EAAKvH,qBAAqB3mC,EAClC,OACelN,KAAKkgD,UAGdlgD,KAAKkgD,SAASx+C,QAEhB1B,KAAKogD,aAAeJ,EACpBhgD,KAAKqgD,mBAAqBV,EAAe9+C,OACzCg8C,EAAgBjc,cAAc/7B,gBAClC,CAQE,aAAA26C,CAAc3C,GACZ,MAAM1rB,EAAM0rB,EAAgB1rB,IACtBiqB,EAAOjqB,EAAIkqB,UACjB,GAAmC,IAA/Br7C,KAAK2/C,eAAe9+C,OAAc,CACpC,IAAKb,KAAK0gD,YAAc1gD,KAAKkgD,UAAYlgD,KAAKkgD,SAASv+C,MAAO,CAC5D,MAAMid,EAAW5e,KAAKkgD,SAASliC,cACzB8D,EAAQ9hB,KAAKkgD,SAAS1f,WACtBxnB,EAASoiC,EAAKtO,oBACd+T,EAAW1vB,EAAI2vB,+BAA+B9nC,GAC9CnD,EAAOsb,EAAI4vB,+BAA+B,CAC9CF,EAAS,GAAKjiC,EAAWhT,KAAKiO,IAAIiI,GAClC++B,EAAS,GAAKjiC,EAAWhT,KAAKmO,IAAI+H,KAEpCs5B,EAAKzN,gBAAgB,CACnB30B,OAAQoiC,EAAKhI,qBAAqBv9B,GAClC0qB,SAAU,IACVyN,OAAQliC,IAElB,CAKM,OAJI9L,KAAKsgD,WACPtgD,KAAKsgD,UAAW,EAChBlF,EAAKzG,mBAEA,CACb,CAOI,OANI30C,KAAKkgD,UAGPlgD,KAAKkgD,SAASx+C,QAEhB1B,KAAKogD,aAAe,MACb,CACX,CAQE,eAAAf,CAAgBxC,GACd,GAAI78C,KAAK2/C,eAAe9+C,OAAS,GAAKb,KAAKwgD,WAAW3D,GAAkB,CACtE,MACMzB,EADMyB,EAAgB1rB,IACXkqB,UAYjB,OAXAr7C,KAAKogD,aAAe,KAEhBhF,EAAK3N,gBACP2N,EAAKxM,mBAEH5uC,KAAKkgD,UACPlgD,KAAKkgD,SAASx+C,QAIhB1B,KAAK0gD,WAAa1gD,KAAK2/C,eAAe9+C,OAAS,GACxC,CACb,CACI,OAAO,CACX,EC/JA,MAAMmgD,WAAmB5B,GAIvB,WAAAr/C,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhCrF,MAAM,CACJw6C,SAAU18C,IAOZ/C,KAAKwgD,WAAal2C,EAAQi2C,UAAYj2C,EAAQi2C,UAAY3C,GAM1D59C,KAAKihD,gBAAaz6C,EAMlBxG,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,GACzE,CAOE,eAAA+e,CAAgBzC,GACd,IAAKmC,GAAUnC,GACb,OAGF,MAAM1rB,EAAM0rB,EAAgB1rB,IACtBiqB,EAAOjqB,EAAIkqB,UACjB,GAAID,EAAKjL,iBAAiBj3B,WAAa6R,GACrC,OAEF,MAAM/X,EAAOme,EAAIhe,UACXkE,EAASwlC,EAAgB5b,MACzBqJ,EAAQ1+B,KAAK4S,MAAMxL,EAAK,GAAK,EAAIqE,EAAO,GAAIA,EAAO,GAAKrE,EAAK,GAAK,GACxE,QAAwBxM,IAApBxG,KAAKihD,WAA0B,CACjC,MAAM/zC,EAAQo9B,EAAQtqC,KAAKihD,WAC3B7F,EAAKjH,wBAAwBjnC,EACnC,CACIlN,KAAKihD,WAAa3W,CACtB,CAQE,aAAAkV,CAAc3C,GACZ,IAAKmC,GAAUnC,GACb,OAAO,EAMT,OAHYA,EAAgB1rB,IACXkqB,UACZ1G,eAAe30C,KAAK+6C,YAClB,CACX,CAQE,eAAAsE,CAAgBxC,GACd,IAAKmC,GAAUnC,GACb,OAAO,EAGT,GACE0B,GAAkB1B,IAClB78C,KAAKwgD,WAAW3D,GAChB,CAIA,OAHYA,EAAgB1rB,IACxBkqB,UAAU3G,mBACd10C,KAAKihD,gBAAaz6C,GACX,CACb,CACI,OAAO,CACX,ECpHA,MAAM06C,WAAkBphD,EAItB,WAAAC,CAAYk4C,GACVhzC,QAMAjF,KAAKmhD,UAAY,KAMjBnhD,KAAK8iC,SAAW1zB,SAASC,cAAc,OACvCrP,KAAK8iC,SAAShzB,MAAMwjC,SAAW,WAC/BtzC,KAAK8iC,SAAShzB,MAAMgnC,cAAgB,OACpC92C,KAAK8iC,SAASmV,UAAY,UAAYA,EAMtCj4C,KAAKoiC,KAAO,KAMZpiC,KAAKohD,YAAc,KAMnBphD,KAAKqhD,UAAY,IACrB,CAME,eAAAlhD,GACEH,KAAKm3C,OAAO,KAChB,CAKE,OAAAmK,GACE,MAAMC,EAAavhD,KAAKohD,YAClBI,EAAWxhD,KAAKqhD,UAChBI,EAAK,KACL3xC,EAAQ9P,KAAK8iC,SAAShzB,MAC5BA,EAAM4xC,KAAO91C,KAAKmM,IAAIwpC,EAAW,GAAIC,EAAS,IAAMC,EACpD3xC,EAAM6xC,IAAM/1C,KAAKmM,IAAIwpC,EAAW,GAAIC,EAAS,IAAMC,EACnD3xC,EAAMhB,MAAQlD,KAAK8L,IAAI8pC,EAAS,GAAKD,EAAW,IAAME,EACtD3xC,EAAMf,OAASnD,KAAK8L,IAAI8pC,EAAS,GAAKD,EAAW,IAAME,CAC3D,CAKE,MAAAtK,CAAOhmB,GACL,GAAInxB,KAAKoiC,KAAM,CACbpiC,KAAKoiC,KAAKwf,sBAAsBrwC,YAAYvR,KAAK8iC,UACjD,MAAMhzB,EAAQ9P,KAAK8iC,SAAShzB,MAC5BA,EAAM4xC,KAAO,UACb5xC,EAAM6xC,IAAM,UACZ7xC,EAAMhB,MAAQ,UACdgB,EAAMf,OAAS,SACrB,CACI/O,KAAKoiC,KAAOjR,EACRnxB,KAAKoiC,MACPpiC,KAAKoiC,KAAKwf,sBAAsBpwC,YAAYxR,KAAK8iC,SAEvD,CAME,SAAA+e,CAAUN,EAAYC,GACpBxhD,KAAKohD,YAAcG,EACnBvhD,KAAKqhD,UAAYG,EACjBxhD,KAAK8hD,yBACL9hD,KAAKshD,SACT,CAKE,sBAAAQ,GACE,IAAK9hD,KAAKoiC,KACR,OAGF,MAAMmf,EAAavhD,KAAKohD,YAClBI,EAAWxhD,KAAKqhD,UAOhB7rC,EANS,CACb+rC,EACA,CAACA,EAAW,GAAIC,EAAS,IACzBA,EACA,CAACA,EAAS,GAAID,EAAW,KAEApwB,IACzBnxB,KAAKoiC,KAAK2e,+BACV/gD,KAAKoiC,MAGP5sB,EAAY,GAAKA,EAAY,GAAGhS,QAC3BxD,KAAKmhD,UAGRnhD,KAAKmhD,UAAU1sB,eAAe,CAACjf,IAF/BxV,KAAKmhD,UAAY,IAAIvmB,GAAQ,CAACplB,GAIpC,CAKE,WAAAZ,GACE,OAAO5U,KAAKmhD,SAChB,ECnGA,MAAMY,GAMM,WANNA,GAaK,UAbLA,GAoBI,SApBJA,GA2BO,YAQN,MAAMC,WAAqBj8C,EAMhC,WAAAhG,CAAY2E,EAAM0R,EAAYymC,GAC5B53C,MAAMP,GAQN1E,KAAKoW,WAAaA,EAOlBpW,KAAK68C,gBAAkBA,CAC3B,EAyBA,MAAMoF,WAAgB7C,GAIpB,WAAAr/C,CAAYuK,GACVrF,QAKAjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAEL4C,EAAUA,GAAW,CAAE,EAMvBtK,KAAKkiD,KAAO,IAAIhB,GAAU52C,EAAQ2tC,WAAa,cAM/Cj4C,KAAKmiD,SAAW73C,EAAQ83C,SAAW,GAE/B93C,EAAQ+3C,WACVriD,KAAKqiD,SAAW/3C,EAAQ+3C,UAO1BriD,KAAKohD,YAAc,KAMnBphD,KAAKwgD,WAAal2C,EAAQi2C,WAAahC,GAMvCv+C,KAAKsiD,iBACHh4C,EAAQi4C,iBAAmBviD,KAAKwiD,sBACtC,CAWE,sBAAAA,CAAuB3F,EAAiB0E,EAAYC,GAClD,MAAM1yC,EAAQ0yC,EAAS,GAAKD,EAAW,GACjCxyC,EAASyyC,EAAS,GAAKD,EAAW,GACxC,OAAOzyC,EAAQA,EAAQC,EAASA,GAAU/O,KAAKmiD,QACnD,CAOE,WAAAvtC,GACE,OAAO5U,KAAKkiD,KAAKttC,aACrB,CAOE,eAAA0qC,CAAgBzC,GACT78C,KAAKohD,cAIVphD,KAAKkiD,KAAKL,UAAU7hD,KAAKohD,YAAavE,EAAgB5b,OAEtDjhC,KAAK4F,cACH,IAAIo8C,GACFD,GACAlF,EAAgBzmC,WAChBymC,IAGR,CAQE,aAAA2C,CAAc3C,GACZ,IAAK78C,KAAKohD,YACR,OAAO,EAGT,MAAMqB,EAAcziD,KAAKsiD,iBACvBzF,EACA78C,KAAKohD,YACLvE,EAAgB5b,OAgBlB,OAdIwhB,GACFziD,KAAKqiD,SAASxF,GAEhB78C,KAAK4F,cACH,IAAIo8C,GACFS,EAAcV,GAA0BA,GACxClF,EAAgBzmC,WAChBymC,IAIJ78C,KAAKkiD,KAAK/K,OAAO,MACjBn3C,KAAKohD,YAAc,MAEZ,CACX,CAQE,eAAA/B,CAAgBxC,GACd,QAAI78C,KAAKwgD,WAAW3D,KAClB78C,KAAKohD,YAAcvE,EAAgB5b,MACnCjhC,KAAKkiD,KAAK/K,OAAO0F,EAAgB1rB,KACjCnxB,KAAKkiD,KAAKL,UAAU7hD,KAAKohD,YAAaphD,KAAKohD,aAC3CphD,KAAK4F,cACH,IAAIo8C,GACFD,GACAlF,EAAgBzmC,WAChBymC,KAGG,EAGb,CAME,QAAAwF,CAASx8C,GAAO,CAShB,SAAA82C,CAAUG,GACHA,IACH98C,KAAKkiD,KAAK/K,OAAO,MACbn3C,KAAKohD,cACPphD,KAAK4F,cACH,IAAIo8C,GAAaD,GAA4B/hD,KAAKohD,YAAa,OAEjEphD,KAAKohD,YAAc,OAIvBn8C,MAAM03C,UAAUG,EACpB,CAME,MAAA3F,CAAOhmB,GACUnxB,KAAKk3C,WAGlBl3C,KAAKkiD,KAAK/K,OAAO,MAEbn3C,KAAKohD,cACPphD,KAAK4F,cACH,IAAIo8C,GAAaD,GAA4B/hD,KAAKohD,YAAa,OAEjEphD,KAAKohD,YAAc,OAIvBn8C,MAAMkyC,OAAOhmB,EACjB,ECrSA,MAAMuxB,WAAiBT,GAIrB,WAAAliD,CAAYuK,GAKVrF,MAAM,CACJs7C,WALFj2C,EAAUA,GAAoB,CAAE,GAENi2C,UAAYj2C,EAAQi2C,UAAY3B,GAIxD3G,UAAW3tC,EAAQ2tC,WAAa,cAChCmK,QAAS93C,EAAQ83C,UAOnBpiD,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,IAMrEvgC,KAAK2iD,UAAuBn8C,IAAhB8D,EAAQs4C,KAAoBt4C,EAAQs4C,GACpD,CAOE,QAAAP,CAASx8C,GACP,MACMu1C,EADMp7C,KAAKk3C,SAC8CmE,UAC/D,IAAI/mC,EAAWtU,KAAK4U,cAEpB,GAAI5U,KAAK2iD,KAAM,CACb,MAAM3P,EAAgBoI,EAAK5I,yBAAyBl+B,GAC9C2E,EAAamiC,EAAK7J,+BAA+ByB,GACjDt1B,EAAS09B,EAAKne,gBAAkBhkB,EACtC3E,EAAWA,EAASG,QACpBH,EAAS2N,MAAMvE,EAASA,EAC9B,CAEI09B,EAAK7I,YAAYj+B,EAAU,CACzBisB,SAAUvgC,KAAK+6C,UACf/M,OAAQliC,IAEd,ECzEe,IAAA+2C,GACP,YADOA,GAET,UAFSA,GAGN,aAHMA,GAIP,YCsBR,MAAMC,WAAoBpG,GAIxB,WAAA38C,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAW,CAAE,EAOvBtK,KAAK+iD,kBAAoB,SAAUlG,GACjC,OACE6B,GAAe7B,IAAoBgC,GAAkBhC,EAExD,EAMD78C,KAAKwgD,gBACmBh6C,IAAtB8D,EAAQi2C,UACJj2C,EAAQi2C,UACRvgD,KAAK+iD,kBAMX/iD,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,IAMrEvgC,KAAKgjD,iBACoBx8C,IAAvB8D,EAAQ24C,WAA2B34C,EAAQ24C,WAAa,GAC9D,CAUE,WAAA78C,CAAYy2C,GACV,IAAIM,GAAY,EAChB,GAAIN,EAAgBn4C,MAAQ7E,EAAmB,CAC7C,MAAMqjD,EACJrG,EACD,cACKv1C,EAAM47C,EAAS57C,IACrB,GACEtH,KAAKwgD,WAAW3D,KACfv1C,GAAOu7C,IACNv7C,GAAOu7C,IACPv7C,GAAOu7C,IACPv7C,GAAOu7C,IACT,CACA,MACMzH,EADMyB,EAAgB1rB,IACXkqB,UACX8H,EAAgB/H,EAAKne,gBAAkBj9B,KAAKgjD,YAClD,IAAIvoC,EAAS,EACXC,EAAS,EACPpT,GAAOu7C,GACTnoC,GAAUyoC,EACD77C,GAAOu7C,GAChBpoC,GAAU0oC,EACD77C,GAAOu7C,GAChBpoC,EAAS0oC,EAETzoC,EAASyoC,EAEX,MAAMj2C,EAAQ,CAACuN,EAAQC,GACvBm1B,GAAiB3iC,EAAOkuC,EAAK/N,eAC7B0P,GAAI3B,EAAMluC,EAAOlN,KAAK+6C,WACtBmI,EAASr+C,iBACTs4C,GAAY,CACpB,CACA,CACI,OAAQA,CACZ,ECzFA,MAAMiG,WAAqB1G,GAIzB,WAAA38C,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAMhCtK,KAAKwgD,WAAal2C,EAAQi2C,UACtBj2C,EAAQi2C,UACR,SAAU1D,GACR,OACG8B,GAAoB9B,IACrBgC,GAAkBhC,EAErB,EAML78C,KAAKk9C,OAAS5yC,EAAQ4C,MAAQ5C,EAAQ4C,MAAQ,EAM9ClN,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,GACzE,CAUE,WAAAn6B,CAAYy2C,GACV,IAAIM,GAAY,EAChB,GACEN,EAAgBn4C,MAAQ7E,GACxBg9C,EAAgBn4C,MAAQ7E,EACxB,CACA,MAAMqjD,EACJrG,EACD,cACKv1C,EAAM47C,EAAS57C,IACrB,GAAItH,KAAKwgD,WAAW3D,KAA6B,MAARv1C,GAAuB,MAARA,GAAc,CACpE,MAAM6pB,EAAM0rB,EAAgB1rB,IACtBjkB,EAAgB,MAAR5F,EAActH,KAAKk9C,QAAUl9C,KAAKk9C,OAEhDF,GADa7rB,EAAIkqB,UACCnuC,OAAO1G,EAAWxG,KAAK+6C,WACzCmI,EAASr+C,iBACTs4C,GAAY,CACpB,CACA,CACI,OAAQA,CACZ,EC3DA,MAAMkG,WAAuB3G,GAI3B,WAAA38C,CAAYuK,GAGVrF,MAFAqF,EAAUA,GAAoB,CAAE,GAUhCtK,KAAKsjD,YAAc,EAMnBtjD,KAAKujD,WAAa,EAMlBvjD,KAAK63B,eAAiCrxB,IAArB8D,EAAQyrB,SAAyBzrB,EAAQyrB,SAAW,EAMrE/1B,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,IAMrEvgC,KAAKwjD,cAA+Bh9C,IAApB8D,EAAQm5C,QAAwBn5C,EAAQm5C,QAAU,GAMlEzjD,KAAK0jD,gBACmBl9C,IAAtB8D,EAAQq5C,WAA0Br5C,EAAQq5C,UAM5C3jD,KAAK4jD,0BAC6Bp9C,IAAhC8D,EAAQ8mC,qBACJ9mC,EAAQ8mC,oBAGd,MAAMmP,EAAYj2C,EAAQi2C,UAAYj2C,EAAQi2C,UAAYjC,GAM1Dt+C,KAAKwgD,WAAal2C,EAAQm2C,YACtBxG,GAAImE,GAAmBmC,GACvBA,EAMJvgD,KAAK6jD,YAAc,KAMnB7jD,KAAK8jD,gBAAat9C,EAMlBxG,KAAK+jD,WAML/jD,KAAKgkD,WAAQx9C,EAQbxG,KAAKikD,kBAAoB,IAMzBjkD,KAAKkkD,mBAOLlkD,KAAKmkD,cAAgB,GACzB,CAKE,eAAAC,GACEpkD,KAAKkkD,wBAAqB19C,EAC1B,MAAM2qB,EAAMnxB,KAAKk3C,SACjB,IAAK/lB,EACH,OAEWA,EAAIkqB,UACZ1G,oBACHnuC,EACAxG,KAAKujD,WAAcvjD,KAAKujD,WAAa,EAAI,GAAI,EAAM,EACnDvjD,KAAK6jD,YAAc1yB,EAAIgQ,uBAAuBnhC,KAAK6jD,aAAe,KAExE,CASE,WAAAz9C,CAAYy2C,GACV,IAAK78C,KAAKwgD,WAAW3D,GACnB,OAAO,EAGT,GADaA,EAAgBn4C,OAChB7E,EACX,OAAO,EAGT,MAAMsxB,EAAM0rB,EAAgB1rB,IACtBkzB,EACJxH,EACD,cASD,IAAI3vC,EAQJ,GAhBAm3C,EAAWx/C,iBAEP7E,KAAK0jD,aACP1jD,KAAK6jD,YAAchH,EAAgB5b,OAMjC4b,EAAgBn4C,MAAQ7E,IAC1BqN,EAAQm3C,EAAW3pC,OACf2pC,EAAWC,YAAcC,WAAWC,iBACtCt3C,GAAS,KAIC,IAAVA,EACF,OAAO,EAETlN,KAAKujD,WAAar2C,EAElB,MAAMkzB,EAAMD,KAAKC,WAEO55B,IAApBxG,KAAK8jD,aACP9jD,KAAK8jD,WAAa1jB,KAGfpgC,KAAKgkD,OAAS5jB,EAAMpgC,KAAK8jD,WAAa9jD,KAAKikD,qBAC9CjkD,KAAKgkD,MAAQp4C,KAAK8L,IAAIxK,GAAS,EAAI,WAAa,SAGlD,MAAMkuC,EAAOjqB,EAAIkqB,UACjB,GACiB,aAAfr7C,KAAKgkD,QACH5I,EAAKhL,2BAA4BpwC,KAAK4jD,qBAmBxC,OAjBI5jD,KAAKkkD,mBACPzgB,aAAazjC,KAAKkkD,qBAEd9I,EAAK3N,gBACP2N,EAAKxM,mBAEPwM,EAAK1G,oBAEP10C,KAAKkkD,mBAAqBxgB,WACxB1jC,KAAKokD,gBAAgBl9C,KAAKlH,MAC1BA,KAAKwjD,UAEPpI,EAAKnH,YACF/mC,EAAQlN,KAAKmkD,cACdnkD,KAAK6jD,YAAc1yB,EAAIgQ,uBAAuBnhC,KAAK6jD,aAAe,MAEpE7jD,KAAK8jD,WAAa1jB,GACX,EAGTpgC,KAAKsjD,aAAep2C,EAEpB,MAAMu3C,EAAW74C,KAAKoM,IAAIhY,KAAKwjD,UAAYpjB,EAAMpgC,KAAK8jD,YAAa,GAQnE,OANArgB,aAAazjC,KAAK+jD,YAClB/jD,KAAK+jD,WAAargB,WAChB1jC,KAAK0kD,iBAAiBx9C,KAAKlH,KAAMmxB,GACjCszB,IAGK,CACX,CAME,gBAAAC,CAAiBvzB,GACf,MAAMiqB,EAAOjqB,EAAIkqB,UACbD,EAAK3N,gBACP2N,EAAKxM,mBAEP,IAAI1hC,GACDkP,GACCpc,KAAKsjD,aACJtjD,KAAK63B,UAAY73B,KAAKmkD,cACvBnkD,KAAK63B,UAAY73B,KAAKmkD,eACpBnkD,KAAKmkD,eACP/I,EAAKhL,0BAA4BpwC,KAAK4jD,wBAExC12C,EAAQA,EAASA,EAAQ,EAAI,GAAM,EAAI,GAEzC8vC,GACE5B,EACAluC,EACAlN,KAAK6jD,YAAc1yB,EAAIgQ,uBAAuBnhC,KAAK6jD,aAAe,KAClE7jD,KAAK+6C,WAGP/6C,KAAKgkD,WAAQx9C,EACbxG,KAAKsjD,YAAc,EACnBtjD,KAAK6jD,YAAc,KACnB7jD,KAAK8jD,gBAAat9C,EAClBxG,KAAK+jD,gBAAav9C,CACtB,CAQE,cAAAm+C,CAAehB,GACb3jD,KAAK0jD,WAAaC,EACbA,IACH3jD,KAAK6jD,YAAc,KAEzB,ECrRA,MAAMe,WAAoBxF,GAIxB,WAAAr/C,CAAYuK,GAGV,MAAMu6C,EAFNv6C,EAAUA,GAAoB,CAAE,EAM3Bu6C,EAAepF,WAClBoF,EAAepF,SAAW18C,GAG5BkC,MAAM4/C,GAMN7kD,KAAK8kD,QAAU,KAMf9kD,KAAKihD,gBAAaz6C,EAMlBxG,KAAK+kD,WAAY,EAMjB/kD,KAAKglD,eAAiB,EAMtBhlD,KAAKilD,gBAAmCz+C,IAAtB8D,EAAQ46C,UAA0B56C,EAAQ46C,UAAY,GAMxEllD,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,GACzE,CAOE,eAAA+e,CAAgBzC,GACd,IAAIsI,EAAgB,EAEpB,MAAMC,EAASplD,KAAK2/C,eAAe,GAC7B0F,EAASrlD,KAAK2/C,eAAe,GAG7B79B,EAAQlW,KAAK4S,MACjB6mC,EAAO5gB,QAAU2gB,EAAO3gB,QACxB4gB,EAAO7gB,QAAU4gB,EAAO5gB,SAG1B,QAAwBh+B,IAApBxG,KAAKihD,WAA0B,CACjC,MAAM/zC,EAAQ4U,EAAQ9hB,KAAKihD,WAC3BjhD,KAAKglD,gBAAkB93C,GAClBlN,KAAK+kD,WAAan5C,KAAK8L,IAAI1X,KAAKglD,gBAAkBhlD,KAAKilD,aAC1DjlD,KAAK+kD,WAAY,GAEnBI,EAAgBj4C,CACtB,CACIlN,KAAKihD,WAAan/B,EAElB,MAAMqP,EAAM0rB,EAAgB1rB,IACtBiqB,EAAOjqB,EAAIkqB,UACbD,EAAKjL,iBAAiBj3B,WAAa6R,KAOvC/qB,KAAK8kD,QAAU3zB,EAAI4vB,+BACjB5vB,EAAI+P,cAAcyf,GAAqB3gD,KAAK2/C,kBAI1C3/C,KAAK+kD,YACP5zB,EAAI6lB,SACJoE,EAAKjH,uBAAuBgR,EAAenlD,KAAK8kD,UAEtD,CAQE,aAAAtF,CAAc3C,GACZ,GAAI78C,KAAK2/C,eAAe9+C,OAAS,EAAG,CAIlC,OAHYg8C,EAAgB1rB,IACXkqB,UACZ1G,eAAe30C,KAAK+6C,YAClB,CACb,CACI,OAAO,CACX,CAQE,eAAAsE,CAAgBxC,GACd,GAAI78C,KAAK2/C,eAAe9+C,QAAU,EAAG,CACnC,MAAMswB,EAAM0rB,EAAgB1rB,IAQ5B,OAPAnxB,KAAK8kD,QAAU,KACf9kD,KAAKihD,gBAAaz6C,EAClBxG,KAAK+kD,WAAY,EACjB/kD,KAAKglD,eAAiB,EACjBhlD,KAAK0/C,wBACRvuB,EAAIkqB,UAAU3G,oBAET,CACb,CACI,OAAO,CACX,EC3IA,MAAM4Q,WAAkBlG,GAItB,WAAAr/C,CAAYuK,GAGV,MAAMu6C,EAFNv6C,EAAUA,GAAoB,CAAE,EAM3Bu6C,EAAepF,WAClBoF,EAAepF,SAAW18C,GAG5BkC,MAAM4/C,GAMN7kD,KAAK8kD,QAAU,KAMf9kD,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,IAMrEvgC,KAAKulD,mBAAgB/+C,EAMrBxG,KAAKwlD,gBAAkB,CAC3B,CAOE,eAAAlG,CAAgBzC,GACd,IAAI4I,EAAa,EAEjB,MAAML,EAASplD,KAAK2/C,eAAe,GAC7B0F,EAASrlD,KAAK2/C,eAAe,GAC7B1pC,EAAKmvC,EAAO5gB,QAAU6gB,EAAO7gB,QAC7BtuB,EAAKkvC,EAAO3gB,QAAU4gB,EAAO5gB,QAG7B7lB,EAAWhT,KAAK6S,KAAKxI,EAAKA,EAAKC,EAAKA,QAEf1P,IAAvBxG,KAAKulD,gBACPE,EAAazlD,KAAKulD,cAAgB3mC,GAEpC5e,KAAKulD,cAAgB3mC,EAErB,MAAMuS,EAAM0rB,EAAgB1rB,IACtBiqB,EAAOjqB,EAAIkqB,UAEC,GAAdoK,IACFzlD,KAAKwlD,gBAAkBC,GAIzBzlD,KAAK8kD,QAAU3zB,EAAI4vB,+BACjB5vB,EAAI+P,cAAcyf,GAAqB3gD,KAAK2/C,kBAI9CxuB,EAAI6lB,SACJoE,EAAKrH,yBAAyB0R,EAAYzlD,KAAK8kD,QACnD,CAQE,aAAAtF,CAAc3C,GACZ,GAAI78C,KAAK2/C,eAAe9+C,OAAS,EAAG,CAClC,MACMu6C,EADMyB,EAAgB1rB,IACXkqB,UACXh6C,EAAYrB,KAAKwlD,gBAAkB,EAAI,GAAM,EAEnD,OADApK,EAAKzG,eAAe30C,KAAK+6C,UAAW15C,IAC7B,CACb,CACI,OAAO,CACX,CAQE,eAAAg+C,CAAgBxC,GACd,GAAI78C,KAAK2/C,eAAe9+C,QAAU,EAAG,CACnC,MAAMswB,EAAM0rB,EAAgB1rB,IAO5B,OANAnxB,KAAK8kD,QAAU,KACf9kD,KAAKulD,mBAAgB/+C,EACrBxG,KAAKwlD,gBAAkB,EAClBxlD,KAAK0/C,wBACRvuB,EAAIkqB,UAAU3G,oBAET,CACb,CACI,OAAO,CACX,ECxEO,SAAS0H,GAAS9xC,GACvBA,EAAUA,GAAoB,CAAE,EAGhC,MAAMo7C,EAAe,IAAIt7C,EAEnB+1C,EAAU,IAAI3gB,IAAQ,KAAQ,IAAM,WAGTh5B,IAA/B8D,EAAQq7C,oBACJr7C,EAAQq7C,qBAGZD,EAAa//C,KAAK,IAAIq7C,UAIMx6C,IAA5B8D,EAAQs7C,iBAAgCt7C,EAAQs7C,kBAEhDF,EAAa//C,KACX,IAAIs3C,GAAgB,CAClB/vC,MAAO5C,EAAQu7C,UACftlB,SAAUj2B,EAAQw7C,sBAKYt/C,IAApB8D,EAAQy7C,SAAwBz7C,EAAQy7C,UAEtDL,EAAa//C,KACX,IAAIs6C,GAAQ,CACVQ,YAAan2C,EAAQm2C,YACrBN,QAASA,WAMW35C,IAAxB8D,EAAQ07C,aAA4B17C,EAAQ07C,cAE5CN,EAAa//C,KAAK,IAAIi/C,UAGgBp+C,IAAtB8D,EAAQ27C,WAA0B37C,EAAQ27C,YAE1DP,EAAa//C,KACX,IAAI2/C,GAAU,CACZ/kB,SAAUj2B,EAAQw7C,sBAKct/C,IAArB8D,EAAQ47C,UAAyB57C,EAAQ47C,YAExDR,EAAa//C,KAAK,IAAIm9C,IACtB4C,EAAa//C,KACX,IAAIy9C,GAAa,CACfl2C,MAAO5C,EAAQu7C,UACftlB,SAAUj2B,EAAQw7C,uBAMKt/C,IAA3B8D,EAAQ67C,gBAA+B77C,EAAQ67C,iBAE/CT,EAAa//C,KACX,IAAI09C,GAAe,CACjB5C,YAAan2C,EAAQm2C,YACrBlgB,SAAUj2B,EAAQw7C,gBAexB,YAT4Bt/C,IAA1B8D,EAAQ87C,eAA8B97C,EAAQ87C,gBAE9CV,EAAa//C,KACX,IAAI+8C,GAAS,CACXniB,SAAUj2B,EAAQw7C,gBAKjBJ,CACT,CC5Ie,IAAAW,GACJ,UADIA,GAEJ,UAFIA,GAGL,SAHKA,GAIJ,SAJIA,GAKG,gBALHA,GAMG,gBANHA,GAOH,UAPGA,GAQH,UARGA,GASL,SATKA,GAUR,MC6CP,MAAMC,WAAkBz9C,EAItB,WAAA9I,CAAYuK,GACVrF,QAKAjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAKumD,YAAcj8C,EAAQk8C,WAK3B,MAAMhyC,EAAa9N,OAAO2C,OAAO,CAAA,EAAIiB,GACH,iBAAvBA,EAAQkK,oBACVA,EAAWA,WAClB9N,OAAO2C,OAAOmL,EAAYlK,EAAQkK,aAGpCA,EAAW6xC,SACW7/C,IAApB8D,EAAQm8C,QAAwBn8C,EAAQm8C,QAAU,EACpD9yC,GAC+C,iBAAtCa,EAAW6xC,IAClB,kCAGF7xC,EAAW6xC,SACW7/C,IAApB8D,EAAQ6vC,SAAwB7vC,EAAQ6vC,QAC1C3lC,EAAW6xC,IAAyB/7C,EAAQo8C,OAC5ClyC,EAAW6xC,SACiB7/C,IAA1B8D,EAAQi/B,cAA8Bj/B,EAAQi/B,cAAgBxyB,IAChEvC,EAAW6xC,SACiB7/C,IAA1B8D,EAAQk/B,cAA8Bl/B,EAAQk/B,cAAgB,EAChEh1B,EAAW6xC,SACW7/C,IAApB8D,EAAQ2hC,QAAwB3hC,EAAQ2hC,SAAWl1B,IACrDvC,EAAW6xC,SACW7/C,IAApB8D,EAAQymC,QAAwBzmC,EAAQymC,QAAUh6B,IAMpD/W,KAAK2mD,gBACsBngD,IAAzBgO,EAAWyjC,UAA0BzjC,EAAWyjC,UAAY,kBACvDzjC,EAAWyjC,UAElBj4C,KAAKgJ,cAAcwL,GAMnBxU,KAAK4mD,OAAS,IAClB,CAME,aAAAC,GACE,OAAO7mD,KAAKumD,WAChB,CAKE,YAAAO,GACE,OAAO9mD,KAAK2mD,UAChB,CASE,aAAAI,CAAcC,GAEZ,MAAM76C,EACJnM,KAAK4mD,QACa,CAChBpN,MAAOx5C,KACPgnD,aAAqBxgD,IAAZwgD,GAA+BA,GAEtCN,EAAS1mD,KAAKinD,YAWpB,OAVA96C,EAAMs6C,QAAUrqC,GAAMxQ,KAAK+R,MAA0B,IAApB3d,KAAKknD,cAAsB,IAAK,EAAG,GACpE/6C,EAAMguC,QAAUn6C,KAAKmnD,aACrBh7C,EAAMsJ,OAASzV,KAAK6b,YACpB1P,EAAMu6C,YAAoBlgD,IAAXkgD,GAAyBv6C,EAAM66C,QAAqBN,EAAX3vC,IACxD5K,EAAMo9B,cAAgBvpC,KAAK0wC,mBAC3BvkC,EAAMq9B,cAAgB59B,KAAKoM,IAAIhY,KAAK2wC,mBAAoB,GACxDxkC,EAAM8/B,QAAUjsC,KAAKgxC,aACrB7kC,EAAM4kC,QAAU/wC,KAAK4wC,aACrB5wC,KAAK4mD,OAASz6C,EAEPA,CACX,CAQE,cAAAi7C,CAAe/8C,GACb,OAAOjC,GACX,CAQE,mBAAAi/C,CAAoBC,GAClB,OAAOl/C,GACX,CASE,SAAAyT,GACE,OACE7b,KAAKiJ,IAAIo9C,GAEf,CASE,gBAAA3V,GACE,OAA8B1wC,KAAKiJ,IAAIo9C,GAC3C,CASE,gBAAA1V,GACE,OAA8B3wC,KAAKiJ,IAAIo9C,GAC3C,CASE,UAAArV,GACE,OAA8BhxC,KAAKiJ,IAAIo9C,GAC3C,CASE,UAAAzV,GACE,OAA8B5wC,KAAKiJ,IAAIo9C,GAC3C,CAQE,UAAAa,GACE,OAA8BlnD,KAAKiJ,IAAIo9C,GAC3C,CAME,cAAAkB,GACE,OAAOn/C,GACX,CASE,UAAA++C,GACE,OAA+BnnD,KAAKiJ,IAAIo9C,GAC5C,CASE,SAAAY,GACE,OAAwCjnD,KAAKiJ,IAAIo9C,GACrD,CAME,aAAAmB,CAAchB,GACZxmD,KAAKumD,YAAcC,EACnBxmD,KAAK4H,SACT,CASE,SAAA4c,CAAU/O,GACRzV,KAAK4J,IAAIy8C,GAAsB5wC,EACnC,CAQE,gBAAAgyC,CAAiBle,GACfvpC,KAAK4J,IAAIy8C,GAA8B9c,EAC3C,CAQE,gBAAAme,CAAiBle,GACfxpC,KAAK4J,IAAIy8C,GAA8B7c,EAC3C,CAUE,UAAAsH,CAAWC,GACT/wC,KAAK4J,IAAIy8C,GAAwBtV,EACrC,CAUE,UAAAE,CAAWhF,GACTjsC,KAAK4J,IAAIy8C,GAAwBpa,EACrC,CAQE,UAAA0b,CAAWlB,GACT9yC,GAA0B,iBAAZ8yC,EAAsB,kCACpCzmD,KAAK4J,IAAIy8C,GAAuBI,EACpC,CAQE,UAAAmB,CAAWzN,GACTn6C,KAAK4J,IAAIy8C,GAAuBlM,EACpC,CASE,SAAA0N,CAAUC,GACR9nD,KAAK4J,IAAIy8C,GAAuByB,EACpC,CAME,eAAA3nD,GACMH,KAAK4mD,SACP5mD,KAAK4mD,OAAOpN,MAAQ,KACpBx5C,KAAK4mD,OAAS,MAEhB3hD,MAAM9E,iBACV,ECzXO,MAAM4nD,WAAmBhiD,EAK9B,WAAAhG,CAAY2E,EAAM80C,GAChBv0C,MAAMP,GAON1E,KAAKw5C,MAAQA,CACjB,EAqCA,MAAMvvC,GACI,SAWV,MAAM+9C,WAAmB1B,GAIvB,WAAAvmD,CAAYuK,GACVA,EAAUA,GAAW,CAAE,EACvB,MAAM29C,EAAsCvhD,OAAO2C,OAAO,CAAE,EAAEiB,UACvD29C,EAAY9O,OAEnB,IAAIA,EAAS7uC,EAAQ6uC,OAErBl0C,MAAMgjD,GAKNjoD,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAKkoD,oBAAsB,GAM3BloD,KAAKmoD,cAAgB,CAAE,EAEvBnoD,KAAK0J,kBAAkBO,GAAiBjK,KAAKooD,sBAEzCjP,EACEn3C,MAAMC,QAAQk3C,GAChBA,EAAS,IAAI/uC,EAAW+uC,EAAO31C,QAAS,CAACgH,QAAQ,IAEjDmJ,GACkD,mBAAvB,EAAiB,SAC1C,sDAIJwlC,EAAS,IAAI/uC,OAAW5D,EAAW,CAACgE,QAAQ,IAG9CxK,KAAKqoD,UAAUlP,EACnB,CAKE,kBAAAmP,GACEtoD,KAAK4H,SACT,CAKE,oBAAAwgD,GACEpoD,KAAKkoD,oBAAoBp9C,QAAQzD,GACjCrH,KAAKkoD,oBAAoBrnD,OAAS,EAElC,MAAMs4C,EAASn5C,KAAKuoD,YACpBvoD,KAAKkoD,oBAAoBviD,KACvBmB,EAAOqyC,EAAQx5C,EAAyBK,KAAKwoD,iBAAkBxoD,MAC/D8G,EACEqyC,EACAx5C,EACAK,KAAKyoD,oBACLzoD,OAIJ,IAAK,MAAM+M,KAAM/M,KAAKmoD,cACpBnoD,KAAKmoD,cAAcp7C,GAAIjC,QAAQzD,GAEjChD,EAAMrE,KAAKmoD,eAEX,MAAMO,EAAcvP,EAAOnuC,WAC3B,IAAK,IAAIzJ,EAAI,EAAG4E,EAAKuiD,EAAY7nD,OAAQU,EAAI4E,EAAI5E,IAAK,CACpD,MAAMi4C,EAAQkP,EAAYnnD,GAC1BvB,KAAK2oD,wBAAwBnP,GAC7Bx5C,KAAK4F,cAAc,IAAImiD,GAAW,WAAYvO,GACpD,CACIx5C,KAAK4H,SACT,CAKE,uBAAA+gD,CAAwBnP,GACtB,MAAM1b,EAAe,CACnBh3B,EACE0yC,EACA55C,EACAI,KAAKsoD,mBACLtoD,MAEF8G,EAAO0yC,EAAO35C,EAAkBG,KAAKsoD,mBAAoBtoD,OAGvDw5C,aAAiBwO,IACnBlqB,EAAan4B,KACXmB,EAAO0yC,EAAO,WAAYx5C,KAAK4oD,qBAAsB5oD,MACrD8G,EAAO0yC,EAAO,cAAex5C,KAAK6oD,wBAAyB7oD,OAI/DA,KAAKmoD,cAAc5/C,EAAOixC,IAAU1b,CACxC,CAKE,oBAAA8qB,CAAqB/iD,GACnB7F,KAAK4F,cAAc,IAAImiD,GAAW,WAAYliD,EAAM2zC,OACxD,CAKE,uBAAAqP,CAAwBhjD,GACtB7F,KAAK4F,cAAc,IAAImiD,GAAW,cAAeliD,EAAM2zC,OAC3D,CAME,gBAAAgP,CAAiBM,GACf,MAAMtP,EAAQsP,EAAgB3+C,QAC9BnK,KAAK2oD,wBAAwBnP,GAC7Bx5C,KAAK4F,cAAc,IAAImiD,GAAW,WAAYvO,IAC9Cx5C,KAAK4H,SACT,CAME,mBAAA6gD,CAAoBK,GAClB,MAAMtP,EAAQsP,EAAgB3+C,QACxB7C,EAAMiB,EAAOixC,GACnBx5C,KAAKmoD,cAAc7gD,GAAKwD,QAAQzD,UACzBrH,KAAKmoD,cAAc7gD,GAC1BtH,KAAK4F,cAAc,IAAImiD,GAAW,cAAevO,IACjDx5C,KAAK4H,SACT,CAUE,SAAA2gD,GACE,OACEvoD,KAAKiJ,IAAIgB,GAEf,CAUE,SAAAo+C,CAAUlP,GACR,MAAM4P,EAAa/oD,KAAKuoD,YACxB,GAAIQ,EAAY,CACd,MAAMC,EAAgBD,EAAW/9C,WACjC,IAAK,IAAIzJ,EAAI,EAAG4E,EAAK6iD,EAAcnoD,OAAQU,EAAI4E,IAAM5E,EACnDvB,KAAK4F,cAAc,IAAImiD,GAAW,cAAeiB,EAAcznD,IAEvE,CAEIvB,KAAK4J,IAAIK,GAAiBkvC,EAC9B,CAOE,cAAAiO,CAAe/8C,GAKb,OAJAA,OAAkB7D,IAAV6D,EAAsBA,EAAQ,GACtCrK,KAAKuoD,YAAYz9C,SAAQ,SAAU0uC,GACjCA,EAAM4N,eAAe/8C,EAC3B,IACWA,CACX,CAYE,mBAAAg9C,CAAoBxxC,GAClB,MAAMyxC,OAAkB9gD,IAATqP,EAAqBA,EAAO,GACrCozC,EAAM3B,EAAOzmD,OAEnBb,KAAKuoD,YAAYz9C,SAAQ,SAAU0uC,GACjCA,EAAM6N,oBAAoBC,EAChC,IAEI,MAAM4B,EAAgBlpD,KAAK+mD,gBAC3B,IAAIoC,EAAgBD,EAAcxC,OAC7B7wC,QAAiCrP,IAAzB0iD,EAAcxC,SACzByC,EAAgB,GAElB,IAAK,IAAI5nD,EAAI0nD,EAAK9iD,EAAKmhD,EAAOzmD,OAAQU,EAAI4E,EAAI5E,IAAK,CACjD,MAAM6nD,EAAa9B,EAAO/lD,GAC1B6nD,EAAW3C,SAAWyC,EAAczC,QACpC2C,EAAWjP,QAAUiP,EAAWjP,SAAW+O,EAAc/O,QACzDiP,EAAW7f,cAAgB39B,KAAKmM,IAC9BqxC,EAAW7f,cACX2f,EAAc3f,eAEhB6f,EAAW5f,cAAgB59B,KAAKoM,IAC9BoxC,EAAW5f,cACX0f,EAAc1f,eAEhB4f,EAAWnd,QAAUrgC,KAAKoM,IAAIoxC,EAAWnd,QAASid,EAAcjd,SAChEmd,EAAWrY,QAAUnlC,KAAKmM,IAAIqxC,EAAWrY,QAASmY,EAAcnY,cACnCvqC,IAAzB0iD,EAAczzC,cACUjP,IAAtB4iD,EAAW3zC,OACb2zC,EAAW3zC,OAAS2E,GAClBgvC,EAAW3zC,OACXyzC,EAAczzC,QAGhB2zC,EAAW3zC,OAASyzC,EAAczzC,aAGZjP,IAAtB4iD,EAAW1C,SACb0C,EAAW1C,OAASyC,EAE5B,CAEI,OAAO7B,CACX,CAME,cAAAC,GACE,MAAO,OACX,EC5Ve,IAAA8B,GAMF,YANEA,GAaD,aAbCA,GAsBD,aAtBCA,GA+BA,cA/BAA,GAwCG,iBCoDlB,MAAMC,WAAchD,GAIlB,WAAAvmD,CAAYuK,GACV,MAAM29C,EAAcvhD,OAAO2C,OAAO,CAAA,EAAIiB,UAC/B29C,EAAYl+C,OAEnB9E,MAAMgjD,GAKNjoD,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAKupD,kBAAoB,KAMzBvpD,KAAKwpD,cAAgB,KAMrBxpD,KAAKypD,iBAAmB,KAMxBzpD,KAAK0pD,UAAY,KAMjB1pD,KAAK2pD,cAAe,EAMpB3pD,KAAK4pD,UAAW,EAGZt/C,EAAQ0sC,SACVh3C,KAAKg3C,OAAS1sC,EAAQ0sC,QAGpB1sC,EAAQ6mB,KACVnxB,KAAKm3C,OAAO7sC,EAAQ6mB,KAGtBnxB,KAAK0J,kBACH28C,GACArmD,KAAK6pD,6BAGP,MAAM9/C,EAASO,EAAQP,OACQO,EAAc,OACzC,KACJtK,KAAK8pD,UAAU//C,EACnB,CAOE,cAAAq9C,CAAe/8C,GAGb,OAFAA,EAAQA,GAAgB,IAClB1E,KAAK3F,MACJqK,CACX,CAOE,mBAAAg9C,CAAoBC,GAGlB,OAFAA,EAASA,GAAkB,IACpB3hD,KAAK3F,KAAK+mD,iBACVO,CACX,CAQE,SAAA3N,GACE,OAAkC35C,KAAKiJ,IAAIo9C,KAA0B,IACzE,CAKE,eAAA0D,GACE,OAAO/pD,KAAK25C,WAChB,CAME,cAAA4N,GACE,MAAMx9C,EAAS/J,KAAK25C,YACpB,OAAQ5vC,EAAuBA,EAAO6C,WAArB,WACrB,CAKE,mBAAAo9C,GACEhqD,KAAK4H,UACD5H,KAAK2pD,cAAgD,UAAhC3pD,KAAK25C,YAAY/sC,aAG1C5M,KAAK2pD,cAAe,EACpB3pD,KAAK4F,cAAc,eACvB,CAKE,2BAAAikD,GACM7pD,KAAKypD,mBACPpiD,EAAcrH,KAAKypD,kBACnBzpD,KAAKypD,iBAAmB,MAE1BzpD,KAAK2pD,cAAe,EACpB,MAAM5/C,EAAS/J,KAAK25C,YAChB5vC,IACF/J,KAAKypD,iBAAmB3iD,EACtBiD,EACAlK,EACAG,KAAKgqD,oBACLhqD,MAEwB,UAAtB+J,EAAO6C,aACT5M,KAAK2pD,cAAe,EACpBjmB,YAAW,KACT1jC,KAAK4F,cAAc,cAAc,GAChC,IAEL5F,KAAKiqD,iBAEPjqD,KAAK4H,SACT,CAOE,WAAAsiD,CAAYjpB,GACV,OAAKjhC,KAAK0pD,UAGH1pD,KAAK0pD,UAAUQ,YAAYjpB,GAFzBh9B,QAAQE,QAAQ,GAG7B,CAME,OAAAkP,CAAQ4tB,GACN,OAAKjhC,KAAK0pD,WAAc1pD,KAAK4pD,SAGtB5pD,KAAK0pD,UAAUr2C,QAAQ4tB,GAFrB,IAGb,CAWE,SAAAkpB,CAAU/O,GACR,IAAI1a,EACJ,MAAMvP,EAAMnxB,KAAKoqD,iBAejB,IAAIhB,EACJ,IAfKhO,GAAQjqB,IACXiqB,EAAOjqB,EAAIkqB,WAGX3a,EADE0a,aAAgB3Q,GACL,CACXzC,UAAWoT,EAAKxuC,WAChB6I,OAAQ2lC,EAAK7K,mBAGF6K,GAEV1a,EAAW2pB,kBAAoBl5B,IAClCuP,EAAW2pB,iBAAmBl5B,EAAIm5B,gBAAgBjD,uBAGhD3mB,EAAW2pB,kBAIb,GAHAjB,EAAa1oB,EAAW2pB,iBAAiBE,MACtCnB,GAAeA,EAAW5P,QAAUx5C,QAElCopD,EACH,OAAO,OAGTA,EAAappD,KAAK+mD,gBAGpB,MAAMyD,EAAcxqD,KAAK6b,YAEzB,OACE4uC,GAAOrB,EAAY1oB,EAAWsH,cAC5BwiB,GAAelwC,GAAWkwC,EAAa9pB,EAAWjrB,QAE1D,CASE,eAAAgkC,CAAgB2B,GACd,IAAKp7C,KAAKmqD,UAAU/O,GAClB,MAAO,GAET,MAAM3B,EAAkBz5C,KAAK25C,aAAaF,kBAC1C,IAAKA,EACH,MAAO,GAIT,IAAIzB,EAAeyB,EADjB2B,aAAgB3Q,GAAO2Q,EAAKnJ,wBAA0BmJ,GAKxD,OAHKp5C,MAAMC,QAAQ+1C,KACjBA,EAAe,CAACA,IAEXA,CACX,CAUE,MAAAhB,CAAOtW,EAAYt/B,GACjB,MAAMspD,EAAgB1qD,KAAK2qD,cAE3B,OAAID,EAAcE,aAAalqB,IAC7B1gC,KAAK4pD,UAAW,EACTc,EAAcG,YAAYnqB,EAAYt/B,IAExC,IACX,CAKE,QAAA0pD,GACE9qD,KAAK4pD,UAAW,CACpB,CAGE,YAAAmB,GAEF,CAME,eAAAC,CAAgBtqB,EAAY0oB,GAAY,CAMxC,cAAA6B,CAAevqB,GACb,MAAMgqB,EAAgB1qD,KAAK2qD,cACtBD,GAGLA,EAAcO,eAAevqB,EACjC,CAME,cAAAwqB,CAAe/5B,GACRA,GACHnxB,KAAK8qD,WAEP9qD,KAAK4J,IAAIy8C,GAAmBl1B,EAChC,CAME,cAAAi5B,GACE,OAAOpqD,KAAKiJ,IAAIo9C,GACpB,CAaE,MAAAlP,CAAOhmB,GACDnxB,KAAKupD,oBACPliD,EAAcrH,KAAKupD,mBACnBvpD,KAAKupD,kBAAoB,MAEtBp4B,GACHnxB,KAAK4H,UAEH5H,KAAKwpD,gBACPniD,EAAcrH,KAAKwpD,eACnBxpD,KAAKwpD,cAAgB,MAEnBr4B,IACFnxB,KAAKupD,kBAAoBziD,EACvBqqB,EACAk4B,GACArpD,KAAKmrD,kBACLnrD,MAEFA,KAAKwpD,cAAgB1iD,EAAO9G,KAAMH,EAAkBsxB,EAAI6lB,OAAQ7lB,GAChEnxB,KAAK4H,UAEX,CAME,iBAAAujD,CAAkBC,GAChB,MAAMf,EACgD,EACjD3pB,WAAW2pB,iBACVjB,EAAappD,KAAK+mD,eAAc,GACtCpzC,IACG02C,EAAiB3Q,MACf2R,GAAoBA,EAAgB7R,QAAU4P,EAAW5P,QAE5D,yGAEF6Q,EAAiB1kD,KAAKyjD,EAC1B,CAQE,SAAAU,CAAU//C,GACR/J,KAAK4J,IAAIy8C,GAAsBt8C,EACnC,CAME,WAAA4gD,GAIE,OAHK3qD,KAAK0pD,YACR1pD,KAAK0pD,UAAY1pD,KAAKsrD,kBAEjBtrD,KAAK0pD,SAChB,CAKE,WAAA6B,GACE,QAASvrD,KAAK0pD,SAClB,CAOE,cAAA4B,GACE,OAAO,IACX,CAKE,aAAArB,GACMjqD,KAAK0pD,YACP1pD,KAAK0pD,UAAUxpD,iBACRF,KAAK0pD,UAElB,CAME,eAAAvpD,GACEH,KAAKiqD,gBACLjqD,KAAK8pD,UAAU,MACf7kD,MAAM9E,iBACV,EAUO,SAASsqD,GAAOrB,EAAYphB,GACjC,IAAKohB,EAAWjP,QACd,OAAO,EAET,MAAMlhC,EAAa+uB,EAAU/uB,WAC7B,GACEA,EAAamwC,EAAW5f,eACxBvwB,GAAcmwC,EAAW7f,cAEzB,OAAO,EAET,MAAMoD,EAAO3E,EAAU2E,KACvB,OAAOA,EAAOyc,EAAWnd,SAAWU,GAAQyc,EAAWrY,OACzD,CCniBe,SAASya,GAAYrqD,EAAK4b,EAAG2kC,EAAO,EAAGxnB,EAAQ/4B,EAAIN,OAAS,EAAG4B,EAAUgpD,IAEpF,KAAOvxB,EAAQwnB,GAAM,CACjB,GAAIxnB,EAAQwnB,EAAO,IAAK,CACpB,MAAMpgD,EAAI44B,EAAQwnB,EAAO,EACnB1kC,EAAID,EAAI2kC,EAAO,EACf5X,EAAIl+B,KAAKqZ,IAAI3jB,GACboqD,EAAI,GAAM9/C,KAAKka,IAAI,EAAIgkB,EAAI,GAC3B6hB,EAAK,GAAM//C,KAAK6S,KAAKqrB,EAAI4hB,GAAKpqD,EAAIoqD,GAAKpqD,IAAM0b,EAAI1b,EAAI,EAAI,GAAM,EAAG,GAGxEkqD,GAAYrqD,EAAK4b,EAFDnR,KAAKoM,IAAI0pC,EAAM91C,KAAKoQ,MAAMe,EAAIC,EAAI0uC,EAAIpqD,EAAIqqD,IACzC//C,KAAKmM,IAAImiB,EAAOtuB,KAAKoQ,MAAMe,GAAKzb,EAAI0b,GAAK0uC,EAAIpqD,EAAIqqD,IAC3BlpD,EACnD,CAEQ,MAAMkJ,EAAIxK,EAAI4b,GACd,IAAIxb,EAAImgD,EAEJ7kC,EAAIqd,EAKR,IAHA0xB,GAAKzqD,EAAKugD,EAAM3kC,GACZta,EAAQtB,EAAI+4B,GAAQvuB,GAAK,GAAGigD,GAAKzqD,EAAKugD,EAAMxnB,GAEzC34B,EAAIsb,GAAG,CAIV,IAHA+uC,GAAKzqD,EAAKI,EAAGsb,GACbtb,IACAsb,IACOpa,EAAQtB,EAAII,GAAIoK,GAAK,GAAGpK,IAC/B,KAAOkB,EAAQtB,EAAI0b,GAAIlR,GAAK,GAAGkR,GAC3C,CAEsC,IAA1Bpa,EAAQtB,EAAIugD,GAAO/1C,GAAUigD,GAAKzqD,EAAKugD,EAAM7kC,IAE7CA,IACA+uC,GAAKzqD,EAAK0b,EAAGqd,IAGbrd,GAAKE,IAAG2kC,EAAO7kC,EAAI,GACnBE,GAAKF,IAAGqd,EAAQrd,EAAI,EAChC,CACA,CAQA,SAAS+uC,GAAKzqD,EAAKI,EAAGsb,GAClB,MAAMjb,EAAMT,EAAII,GAChBJ,EAAII,GAAKJ,EAAI0b,GACb1b,EAAI0b,GAAKjb,CACb,CAQA,SAAS6pD,GAAe1qD,EAAGC,GACvB,OAAOD,EAAIC,GAAI,EAAKD,EAAIC,EAAI,EAAI,CACpC,CCvEe,IAAA6qD,GAAA,MACX,WAAA9rD,CAAY+rD,EAAa,GAErB9rD,KAAK+rD,YAAcngD,KAAKoM,IAAI,EAAG8zC,GAC/B9rD,KAAKgsD,YAAcpgD,KAAKoM,IAAI,EAAGpM,KAAKgS,KAAwB,GAAnB5d,KAAK+rD,cAC9C/rD,KAAKqE,OACb,CAEI,GAAA41C,GACI,OAAOj6C,KAAKisD,KAAKjsD,KAAK8B,KAAM,GACpC,CAEI,MAAAoqD,CAAOC,GACH,IAAIr7C,EAAO9Q,KAAK8B,KAChB,MAAM2nC,EAAS,GAEf,IAAKnvB,GAAW6xC,EAAMr7C,GAAO,OAAO24B,EAEpC,MAAM2iB,EAASpsD,KAAKosD,OACdC,EAAgB,GAEtB,KAAOv7C,GAAM,CACT,IAAK,IAAIvP,EAAI,EAAGA,EAAIuP,EAAKG,SAASpQ,OAAQU,IAAK,CAC3C,MAAM+qD,EAAQx7C,EAAKG,SAAS1P,GACtBgrD,EAAYz7C,EAAK07C,KAAOJ,EAAOE,GAASA,EAE1ChyC,GAAW6xC,EAAMI,KACbz7C,EAAK07C,KAAM/iB,EAAO9jC,KAAK2mD,GAClBhR,GAAS6Q,EAAMI,GAAYvsD,KAAKisD,KAAKK,EAAO7iB,GAChD4iB,EAAc1mD,KAAK2mD,GAE5C,CACYx7C,EAAOu7C,EAAcxhD,KACjC,CAEQ,OAAO4+B,CACf,CAEI,QAAAgjB,CAASN,GACL,IAAIr7C,EAAO9Q,KAAK8B,KAEhB,IAAKwY,GAAW6xC,EAAMr7C,GAAO,OAAO,EAEpC,MAAMu7C,EAAgB,GACtB,KAAOv7C,GAAM,CACT,IAAK,IAAIvP,EAAI,EAAGA,EAAIuP,EAAKG,SAASpQ,OAAQU,IAAK,CAC3C,MAAM+qD,EAAQx7C,EAAKG,SAAS1P,GACtBgrD,EAAYz7C,EAAK07C,KAAOxsD,KAAKosD,OAAOE,GAASA,EAEnD,GAAIhyC,GAAW6xC,EAAMI,GAAY,CAC7B,GAAIz7C,EAAK07C,MAAQlR,GAAS6Q,EAAMI,GAAY,OAAO,EACnDF,EAAc1mD,KAAK2mD,EACvC,CACA,CACYx7C,EAAOu7C,EAAcxhD,KACjC,CAEQ,OAAO,CACf,CAEI,IAAAgC,CAAK/K,GACD,IAAMA,IAAQA,EAAKjB,OAAS,OAAOb,KAEnC,GAAI8B,EAAKjB,OAASb,KAAKgsD,YAAa,CAChC,IAAK,IAAIzqD,EAAI,EAAGA,EAAIO,EAAKjB,OAAQU,IAC7BvB,KAAK0sD,OAAO5qD,EAAKP,IAErB,OAAOvB,IACnB,CAGQ,IAAI8Q,EAAO9Q,KAAK2sD,OAAO7qD,EAAK0B,QAAS,EAAG1B,EAAKjB,OAAS,EAAG,GAEzD,GAAKb,KAAK8B,KAAKmP,SAASpQ,OAIjB,GAAIb,KAAK8B,KAAKiN,SAAW+B,EAAK/B,OAEjC/O,KAAK4sD,WAAW5sD,KAAK8B,KAAMgP,OAExB,CACH,GAAI9Q,KAAK8B,KAAKiN,OAAS+B,EAAK/B,OAAQ,CAEhC,MAAM89C,EAAU7sD,KAAK8B,KACrB9B,KAAK8B,KAAOgP,EACZA,EAAO+7C,CACvB,CAGY7sD,KAAK8sD,QAAQh8C,EAAM9Q,KAAK8B,KAAKiN,OAAS+B,EAAK/B,OAAS,GAAG,EACnE,MAhBY/O,KAAK8B,KAAOgP,EAkBhB,OAAO9Q,IACf,CAEI,MAAA0sD,CAAOzhD,GAEH,OADIA,GAAMjL,KAAK8sD,QAAQ7hD,EAAMjL,KAAK8B,KAAKiN,OAAS,GACzC/O,IACf,CAEI,KAAAqE,GAEI,OADArE,KAAK8B,KAAOirD,GAAW,IAChB/sD,IACf,CAEI,MAAAqL,CAAOJ,EAAM+hD,GACT,IAAK/hD,EAAM,OAAOjL,KAElB,IAAI8Q,EAAO9Q,KAAK8B,KAChB,MAAMqqD,EAAOnsD,KAAKosD,OAAOnhD,GACnBgiD,EAAO,GACPC,EAAU,GAChB,IAAI3rD,EAAGmP,EAAQy8C,EAGf,KAAOr8C,GAAQm8C,EAAKpsD,QAAQ,CASxB,GAPKiQ,IACDA,EAAOm8C,EAAKpiD,MACZ6F,EAASu8C,EAAKA,EAAKpsD,OAAS,GAC5BU,EAAI2rD,EAAQriD,MACZsiD,GAAU,GAGVr8C,EAAK07C,KAAM,CACX,MAAM5pD,EAAQwqD,GAASniD,EAAM6F,EAAKG,SAAU+7C,GAE5C,IAAc,IAAVpqD,EAKA,OAHAkO,EAAKG,SAASpK,OAAOjE,EAAO,GAC5BqqD,EAAKtnD,KAAKmL,GACV9Q,KAAKqtD,UAAUJ,GACRjtD,IAE3B,CAEiBmtD,GAAYr8C,EAAK07C,OAAQlR,GAASxqC,EAAMq7C,GAOlCz7C,GACPnP,IACAuP,EAAOJ,EAAOO,SAAS1P,GACvB4rD,GAAU,GAEPr8C,EAAO,MAXVm8C,EAAKtnD,KAAKmL,GACVo8C,EAAQvnD,KAAKpE,GACbA,EAAI,EACJmP,EAASI,EACTA,EAAOA,EAAKG,SAAS,GAQrC,CAEQ,OAAOjR,IACf,CAEI,MAAAosD,CAAOnhD,GAAQ,OAAOA,CAAK,CAE3B,WAAAqiD,CAAYvsD,EAAGC,GAAK,OAAOD,EAAE2V,KAAO1V,EAAE0V,IAAK,CAC3C,WAAA62C,CAAYxsD,EAAGC,GAAK,OAAOD,EAAE4V,KAAO3V,EAAE2V,IAAK,CAE3C,MAAA62C,GAAW,OAAOxtD,KAAK8B,IAAK,CAE5B,QAAA2rD,CAAS3rD,GAEL,OADA9B,KAAK8B,KAAOA,EACL9B,IACf,CAEI,IAAAisD,CAAKn7C,EAAM24B,GACP,MAAM4iB,EAAgB,GACtB,KAAOv7C,GACCA,EAAK07C,KAAM/iB,EAAO9jC,QAAQmL,EAAKG,UAC9Bo7C,EAAc1mD,QAAQmL,EAAKG,UAEhCH,EAAOu7C,EAAcxhD,MAEzB,OAAO4+B,CACf,CAEI,MAAAkjB,CAAOe,EAAOhM,EAAMxnB,EAAOnrB,GAEvB,MAAM4+C,EAAIzzB,EAAQwnB,EAAO,EACzB,IACI5wC,EADA88C,EAAI5tD,KAAK+rD,YAGb,GAAI4B,GAAKC,EAIL,OAFA98C,EAAOi8C,GAAWW,EAAMlqD,MAAMk+C,EAAMxnB,EAAQ,IAC5C2zB,GAAS/8C,EAAM9Q,KAAKosD,QACbt7C,EAGN/B,IAEDA,EAASnD,KAAKgS,KAAKhS,KAAKqZ,IAAI0oC,GAAK/hD,KAAKqZ,IAAI2oC,IAG1CA,EAAIhiD,KAAKgS,KAAK+vC,EAAI/hD,KAAKC,IAAI+hD,EAAG7+C,EAAS,KAG3C+B,EAAOi8C,GAAW,IAClBj8C,EAAK07C,MAAO,EACZ17C,EAAK/B,OAASA,EAId,MAAM++C,EAAKliD,KAAKgS,KAAK+vC,EAAIC,GACnBG,EAAKD,EAAKliD,KAAKgS,KAAKhS,KAAK6S,KAAKmvC,IAEpCI,GAAYN,EAAOhM,EAAMxnB,EAAO6zB,EAAI/tD,KAAKstD,aAEzC,IAAK,IAAI/rD,EAAImgD,EAAMngD,GAAK24B,EAAO34B,GAAKwsD,EAAI,CAEpC,MAAME,EAASriD,KAAKmM,IAAIxW,EAAIwsD,EAAK,EAAG7zB,GAEpC8zB,GAAYN,EAAOnsD,EAAG0sD,EAAQH,EAAI9tD,KAAKutD,aAEvC,IAAK,IAAI1wC,EAAItb,EAAGsb,GAAKoxC,EAAQpxC,GAAKixC,EAAI,CAElC,MAAMI,EAAStiD,KAAKmM,IAAI8E,EAAIixC,EAAK,EAAGG,GAGpCn9C,EAAKG,SAAStL,KAAK3F,KAAK2sD,OAAOe,EAAO7wC,EAAGqxC,EAAQn/C,EAAS,GAC1E,CACA,CAIQ,OAFA8+C,GAAS/8C,EAAM9Q,KAAKosD,QAEbt7C,CACf,CAEI,cAAAq9C,CAAehC,EAAMr7C,EAAMwO,EAAO2tC,GAC9B,KACIA,EAAKtnD,KAAKmL,IAENA,EAAK07C,MAAQS,EAAKpsD,OAAS,IAAMye,GAH5B,CAKT,IAEI8uC,EAFAhM,EAAUrrC,IACVs3C,EAAiBt3C,IAGrB,IAAK,IAAIxV,EAAI,EAAGA,EAAIuP,EAAKG,SAASpQ,OAAQU,IAAK,CAC3C,MAAM+qD,EAAQx7C,EAAKG,SAAS1P,GACtBkX,EAAO61C,GAAShC,GAChBiC,GAgNAxtD,EAhN2BorD,EAgNxBnrD,EAhN8BsrD,GAiN3C1gD,KAAKoM,IAAIhX,EAAE4V,KAAM7V,EAAE6V,MAAQhL,KAAKmM,IAAI/W,EAAE0V,KAAM3V,EAAE2V,QAC9C9K,KAAKoM,IAAIhX,EAAE6V,KAAM9V,EAAE8V,MAAQjL,KAAKmM,IAAI/W,EAAE2V,KAAM5V,EAAE4V,OAlNM8B,GAG5C81C,EAAcF,GACdA,EAAiBE,EACjBnM,EAAU3pC,EAAO2pC,EAAU3pC,EAAO2pC,EAClCgM,EAAa9B,GAENiC,IAAgBF,GAEnB51C,EAAO2pC,IACPA,EAAU3pC,EACV21C,EAAa9B,EAGrC,CAEYx7C,EAAOs9C,GAAct9C,EAAKG,SAAS,EAC/C,CA8LA,IAAsBlQ,EAAGC,EA5LjB,OAAO8P,CACf,CAEI,OAAAg8C,CAAQ7hD,EAAMqU,EAAOkvC,GACjB,MAAMrC,EAAOqC,EAASvjD,EAAOjL,KAAKosD,OAAOnhD,GACnCwjD,EAAa,GAGb39C,EAAO9Q,KAAKmuD,eAAehC,EAAMnsD,KAAK8B,KAAMwd,EAAOmvC,GAOzD,IAJA39C,EAAKG,SAAStL,KAAKsF,GACnBpJ,GAAOiP,EAAMq7C,GAGN7sC,GAAS,GACRmvC,EAAWnvC,GAAOrO,SAASpQ,OAASb,KAAK+rD,aACzC/rD,KAAK0uD,OAAOD,EAAYnvC,GACxBA,IAKRtf,KAAK2uD,oBAAoBxC,EAAMsC,EAAYnvC,EACnD,CAGI,MAAAovC,CAAOD,EAAYnvC,GACf,MAAMxO,EAAO29C,EAAWnvC,GAClBsuC,EAAI98C,EAAKG,SAASpQ,OAClBmc,EAAIhd,KAAKgsD,YAEfhsD,KAAK4uD,iBAAiB99C,EAAMkM,EAAG4wC,GAE/B,MAAMiB,EAAa7uD,KAAK8uD,kBAAkBh+C,EAAMkM,EAAG4wC,GAE7Cp9C,EAAUu8C,GAAWj8C,EAAKG,SAASpK,OAAOgoD,EAAY/9C,EAAKG,SAASpQ,OAASguD,IACnFr+C,EAAQzB,OAAS+B,EAAK/B,OACtByB,EAAQg8C,KAAO17C,EAAK07C,KAEpBqB,GAAS/8C,EAAM9Q,KAAKosD,QACpByB,GAASr9C,EAASxQ,KAAKosD,QAEnB9sC,EAAOmvC,EAAWnvC,EAAQ,GAAGrO,SAAStL,KAAK6K,GAC1CxQ,KAAK4sD,WAAW97C,EAAMN,EACnC,CAEI,UAAAo8C,CAAW97C,EAAMN,GAEbxQ,KAAK8B,KAAOirD,GAAW,CAACj8C,EAAMN,IAC9BxQ,KAAK8B,KAAKiN,OAAS+B,EAAK/B,OAAS,EACjC/O,KAAK8B,KAAK0qD,MAAO,EACjBqB,GAAS7tD,KAAK8B,KAAM9B,KAAKosD,OACjC,CAEI,iBAAA0C,CAAkBh+C,EAAMkM,EAAG4wC,GACvB,IAAIhrD,EACAmsD,EAAah4C,IACbqrC,EAAUrrC,IAEd,IAAK,IAAIxV,EAAIyb,EAAGzb,GAAKqsD,EAAI5wC,EAAGzb,IAAK,CAC7B,MAAMytD,EAAQC,GAASn+C,EAAM,EAAGvP,EAAGvB,KAAKosD,QAClC8C,EAAQD,GAASn+C,EAAMvP,EAAGqsD,EAAG5tD,KAAKosD,QAElC+C,EAAUC,GAAiBJ,EAAOE,GAClCz2C,EAAO61C,GAASU,GAASV,GAASY,GAGpCC,EAAUJ,GACVA,EAAaI,EACbvsD,EAAQrB,EAER6gD,EAAU3pC,EAAO2pC,EAAU3pC,EAAO2pC,GAE3B+M,IAAYJ,GAEft2C,EAAO2pC,IACPA,EAAU3pC,EACV7V,EAAQrB,EAG5B,CAEQ,OAAOqB,GAASgrD,EAAI5wC,CAC5B,CAGI,gBAAA4xC,CAAiB99C,EAAMkM,EAAG4wC,GACtB,MAAMN,EAAcx8C,EAAK07C,KAAOxsD,KAAKstD,YAAc+B,GAC7C9B,EAAcz8C,EAAK07C,KAAOxsD,KAAKutD,YAAc+B,GACnCtvD,KAAKuvD,eAAez+C,EAAMkM,EAAG4wC,EAAGN,GAChCttD,KAAKuvD,eAAez+C,EAAMkM,EAAG4wC,EAAGL,IAIzBz8C,EAAKG,SAAS4nB,KAAKy0B,EAClD,CAGI,cAAAiC,CAAez+C,EAAMkM,EAAG4wC,EAAGnrD,GACvBqO,EAAKG,SAAS4nB,KAAKp2B,GAEnB,MAAM2pD,EAASpsD,KAAKosD,OACdoD,EAAWP,GAASn+C,EAAM,EAAGkM,EAAGovC,GAChCqD,EAAYR,GAASn+C,EAAM88C,EAAI5wC,EAAG4wC,EAAGxB,GAC3C,IAAIsD,EAASC,GAAWH,GAAYG,GAAWF,GAE/C,IAAK,IAAIluD,EAAIyb,EAAGzb,EAAIqsD,EAAI5wC,EAAGzb,IAAK,CAC5B,MAAM+qD,EAAQx7C,EAAKG,SAAS1P,GAC5BM,GAAO2tD,EAAU1+C,EAAK07C,KAAOJ,EAAOE,GAASA,GAC7CoD,GAAUC,GAAWH,EACjC,CAEQ,IAAK,IAAIjuD,EAAIqsD,EAAI5wC,EAAI,EAAGzb,GAAKyb,EAAGzb,IAAK,CACjC,MAAM+qD,EAAQx7C,EAAKG,SAAS1P,GAC5BM,GAAO4tD,EAAW3+C,EAAK07C,KAAOJ,EAAOE,GAASA,GAC9CoD,GAAUC,GAAWF,EACjC,CAEQ,OAAOC,CACf,CAEI,mBAAAf,CAAoBxC,EAAMc,EAAM3tC,GAE5B,IAAK,IAAI/d,EAAI+d,EAAO/d,GAAK,EAAGA,IACxBM,GAAOorD,EAAK1rD,GAAI4qD,EAE5B,CAEI,SAAAkB,CAAUJ,GAEN,IAAK,IAAyB2C,EAArBruD,EAAI0rD,EAAKpsD,OAAS,EAAaU,GAAK,EAAGA,IACZ,IAA5B0rD,EAAK1rD,GAAG0P,SAASpQ,OACbU,EAAI,GACJquD,EAAW3C,EAAK1rD,EAAI,GAAG0P,SACvB2+C,EAAS/oD,OAAO+oD,EAAShpD,QAAQqmD,EAAK1rD,IAAK,IAExCvB,KAAKqE,QAETwpD,GAASZ,EAAK1rD,GAAIvB,KAAKosD,OAE1C,GAGA,SAASgB,GAASniD,EAAMyiD,EAAOV,GAC3B,IAAKA,EAAU,OAAOU,EAAM9mD,QAAQqE,GAEpC,IAAK,IAAI1J,EAAI,EAAGA,EAAImsD,EAAM7sD,OAAQU,IAC9B,GAAIyrD,EAAS/hD,EAAMyiD,EAAMnsD,IAAK,OAAOA,EAEzC,OAAS,CACb,CAGA,SAASssD,GAAS/8C,EAAMs7C,GACpB6C,GAASn+C,EAAM,EAAGA,EAAKG,SAASpQ,OAAQurD,EAAQt7C,EACpD,CAGA,SAASm+C,GAASn+C,EAAMiM,EAAG8yC,EAAGzD,EAAQ0D,GAC7BA,IAAUA,EAAW/C,GAAW,OACrC+C,EAASp5C,KAAOK,IAChB+4C,EAASn5C,KAAOI,IAChB+4C,EAASl5C,MAAQG,IACjB+4C,EAASj5C,MAAQE,IAEjB,IAAK,IAAIxV,EAAIwb,EAAGxb,EAAIsuD,EAAGtuD,IAAK,CACxB,MAAM+qD,EAAQx7C,EAAKG,SAAS1P,GAC5BM,GAAOiuD,EAAUh/C,EAAK07C,KAAOJ,EAAOE,GAASA,EACrD,CAEI,OAAOwD,CACX,CAEA,SAASjuD,GAAOd,EAAGC,GAKf,OAJAD,EAAE2V,KAAO9K,KAAKmM,IAAIhX,EAAE2V,KAAM1V,EAAE0V,MAC5B3V,EAAE4V,KAAO/K,KAAKmM,IAAIhX,EAAE4V,KAAM3V,EAAE2V,MAC5B5V,EAAE6V,KAAOhL,KAAKoM,IAAIjX,EAAE6V,KAAM5V,EAAE4V,MAC5B7V,EAAE8V,KAAOjL,KAAKoM,IAAIjX,EAAE8V,KAAM7V,EAAE6V,MACrB9V,CACX,CAEA,SAASsuD,GAAgBtuD,EAAGC,GAAK,OAAOD,EAAE2V,KAAO1V,EAAE0V,IAAK,CACxD,SAAS44C,GAAgBvuD,EAAGC,GAAK,OAAOD,EAAE4V,KAAO3V,EAAE2V,IAAK,CAExD,SAAS23C,GAASvtD,GAAO,OAAQA,EAAE6V,KAAO7V,EAAE2V,OAAS3V,EAAE8V,KAAO9V,EAAE4V,KAAM,CACtE,SAASg5C,GAAW5uD,GAAK,OAAQA,EAAE6V,KAAO7V,EAAE2V,MAAS3V,EAAE8V,KAAO9V,EAAE4V,KAAM,CAOtE,SAASy4C,GAAiBruD,EAAGC,GACzB,MAAM0V,EAAO9K,KAAKoM,IAAIjX,EAAE2V,KAAM1V,EAAE0V,MAC1BC,EAAO/K,KAAKoM,IAAIjX,EAAE4V,KAAM3V,EAAE2V,MAC1BC,EAAOhL,KAAKmM,IAAIhX,EAAE6V,KAAM5V,EAAE4V,MAC1BC,EAAOjL,KAAKmM,IAAIhX,EAAE8V,KAAM7V,EAAE6V,MAEhC,OAAOjL,KAAKoM,IAAI,EAAGpB,EAAOF,GACnB9K,KAAKoM,IAAI,EAAGnB,EAAOF,EAC9B,CAEA,SAAS2kC,GAASv6C,EAAGC,GACjB,OAAOD,EAAE2V,MAAQ1V,EAAE0V,MACZ3V,EAAE4V,MAAQ3V,EAAE2V,MACZ3V,EAAE4V,MAAQ7V,EAAE6V,MACZ5V,EAAE6V,MAAQ9V,EAAE8V,IACvB,CAEA,SAASyD,GAAWvZ,EAAGC,GACnB,OAAOA,EAAE0V,MAAQ3V,EAAE6V,MACZ5V,EAAE2V,MAAQ5V,EAAE8V,MACZ7V,EAAE4V,MAAQ7V,EAAE2V,MACZ1V,EAAE6V,MAAQ9V,EAAE4V,IACvB,CAEA,SAASo2C,GAAW97C,GAChB,MAAO,CACHA,WACAlC,OAAQ,EACRy9C,MAAM,EACN91C,KAAMK,IACNJ,KAAMI,IACNH,MAAOG,IACPF,MAAOE,IAEf,CAKA,SAASi3C,GAAY7sD,EAAKugD,EAAMxnB,EAAO54B,EAAGmB,GACtC,MAAMu0B,EAAQ,CAAC0qB,EAAMxnB,GAErB,KAAOlD,EAAMn2B,QAAQ,CAIjB,IAHAq5B,EAAQlD,EAAMnsB,QACd62C,EAAO1qB,EAAMnsB,QAEOvJ,EAAG,SAEvB,MAAMd,EAAMkhD,EAAO91C,KAAKgS,MAAMsc,EAAQwnB,GAAQpgD,EAAI,GAAKA,EACvDkqD,GAAYrqD,EAAKX,EAAKkhD,EAAMxnB,EAAOz3B,GAEnCu0B,EAAMrxB,KAAK+7C,EAAMlhD,EAAKA,EAAK05B,EACnC,CACA,CC3eO,MAAM61B,GAAW,CAAC/9B,IAAKA,IAAKA,IAAK,GAExC,IAAIg+B,GAcJ,MAAMC,GACJ,iFACIC,GACJ,kFACIC,GACJ,qFACIC,GAAW,2CAOjB,SAASC,GAAiB3E,EAAG4E,GAC3B,OAAO5E,EAAE6E,SAAS,KACd19B,OAAO64B,EAAEx6B,UAAU,EAAGw6B,EAAE7qD,OAAS,IAAMyvD,EACvCz9B,OAAO64B,EACb,CAKA,SAAS8E,GAAkBC,GACzB,MAAM,IAAIpoD,MAAM,oBAAsBooD,EAAQ,aAChD,CAMA,SAASC,GAAUD,GAEjB,GAAIA,EAAMjjD,cAAcqnB,WAAW,OAAQ,CACzC,MAAM87B,EACJF,EAAMxmC,MAAMimC,KACZO,EAAMxmC,MAAMgmC,KACZQ,EAAMxmC,MAAMkmC,IACd,GAAIQ,EAAK,CACP,MAAMC,EAAQD,EAAI,GACZE,EAAa,IAAM,IACzB,MAAO,CACLz0C,GAAOi0C,GAAiBM,EAAI,GAAIE,GAAc,GAAO,EAAG,EAAG,KAC3Dz0C,GAAOi0C,GAAiBM,EAAI,GAAIE,GAAc,GAAO,EAAG,EAAG,KAC3Dz0C,GAAOi0C,GAAiBM,EAAI,GAAIE,GAAc,GAAO,EAAG,EAAG,UACjDrqD,IAAVoqD,EAAsBx0C,GAAMi0C,GAAiBO,EAAO,KAAM,EAAG,GAAK,EAE1E,CACIJ,GAAkBC,EACtB,CAEE,GAAIA,EAAM57B,WAAW,KAAM,CACzB,GAAIu7B,GAASziD,KAAK8iD,GAAQ,CACxB,MAAMK,EAAML,EAAMv/B,UAAU,GACtB6/B,EAAOD,EAAIjwD,QAAU,EAAI,EAAI,EAC7BmwD,EAAe,CAAC,EAAG,EAAG,EAAG,KAC/B,IAAK,IAAIzvD,EAAI,EAAG4E,EAAK2qD,EAAIjwD,OAAQU,EAAI4E,EAAI5E,GAAKwvD,EAAM,CAClD,IAAIE,EAAiBjhD,SAAS8gD,EAAI5/B,UAAU3vB,EAAGA,EAAIwvD,GAAO,IAC7C,IAATA,IACFE,GAAkBA,GAAkB,GAEtCD,EAAazvD,EAAIwvD,GAAQE,CACjC,CAEM,OADAD,EAAa,GAAKA,EAAa,GAAK,IAC7BA,CACb,CACIR,GAAkBC,EACtB,CAGE,MAAM/gD,GA9EDsgD,KACHA,GAAoBnhD,GAAsB,EAAG,OAAGrI,EAAW,CACzD8L,oBAAoB,EACpB4+C,gBAAgB,KAGblB,IAyEPtgD,EAAQwvB,UAAY,UACpB,IAAIiyB,EAAwBzhD,EAAQwvB,UACpCxvB,EAAQwvB,UAAYuxB,EAChB/gD,EAAQwvB,YAAciyB,IACxBzhD,EAAQwvB,UAAY,UACpBiyB,EAAwBzhD,EAAQwvB,UAChCxvB,EAAQwvB,UAAYuxB,EAChB/gD,EAAQwvB,YAAciyB,GACxBX,GAAkBC,IAGtB,MAAMW,EAAc1hD,EAAQwvB,UAC5B,GAAIkyB,EAAYv8B,WAAW,MAAQu8B,EAAYv8B,WAAW,QACxD,OAAO67B,GAAUU,GAEnB1hD,EAAQC,UAAU,EAAG,EAAG,EAAG,GAC3BD,EAAQyvB,SAAS,EAAG,EAAG,EAAG,GAC1B,MAAMkyB,EAAiBrvD,MAAM83C,KAAKpqC,EAAQ8C,aAAa,EAAG,EAAG,EAAG,GAAG1Q,MAEnE,OADAuvD,EAAe,GAAK7zC,GAAQ6zC,EAAe,GAAK,IAAK,GAC9CA,CACT,CAQO,SAASC,GAASb,GACvB,MAAqB,iBAAVA,EACFA,EAEF1/B,GAAS0/B,EAClB,CAKA,MAQMzqC,GAAQ,CAAE,EAKhB,IAAIurC,GAAY,EAQT,SAASC,GAAUf,GACxB,GAAqB,IAAjBA,EAAM5vD,OACR,OAAO4vD,EAET,MAAM/qC,EAAS+qC,EAAMjtD,QAErB,OADAkiB,EAAO,GAAK,EACLA,CACT,CASA,SAASgK,GAAG+hC,GACV,OAAOA,EAAI,SAAmC,QAAvB7lD,KAAKC,IAAI4lD,EAAG,EAAI,KAAiB,OAAa,OAAJA,CACnE,CAMA,SAAS3hC,GAAG2hC,GACV,OAAOA,EAAI,SAAY7lD,KAAKC,IAAI4lD,EAAG,GAAqB,IAAM,KAArBA,EAAI,EAAI,GACnD,CAMA,SAAShiC,GAAGgiC,GACV,OAAOA,EAAI,UAAY7lD,KAAKC,KAAK4lD,EAAI,QAAU,QAAS,KAAOA,EAAI,MACrE,CAMA,SAASjoC,GAAGioC,GACV,OAAOA,EAAI,SAAY7lD,KAAKC,IAAI4lD,EAAG,EAAI,GAAKA,GAAK,IAAM,KAAO,EAAI,EACpE,CAMO,SAASC,GAAWjB,GACzB,MAAM9zC,EAAI8S,GAAGghC,EAAM,IACbkB,EAAIliC,GAAGghC,EAAM,IACbzvD,EAAIyuB,GAAGghC,EAAM,IACbz6C,EAAIwT,GAAO,WAAJ7M,EAAsB,WAAJg1C,EAAsB,UAAJ3wD,GAC3Cwa,EAAI,KAAOgO,GAAO,WAAJ7M,EAAsB,WAAJg1C,EAAsB,WAAJ3wD,GAAmBgV,GACrE47C,EAAI,KAAO57C,EAAIwT,GAAO,WAAJ7M,EAAsB,WAAJg1C,EAAsB,WAAJ3wD,IACtDivC,EAAIrkC,KAAK4S,MAAMozC,EAAGp2C,IAAM,IAAM5P,KAAKuR,IACzC,MAAO,CACL,IAAMnH,EAAI,GACVpK,KAAK6S,KAAKjD,EAAIA,EAAIo2C,EAAIA,GACtB3hB,EAAI,EAAIA,EAAI,IAAMA,EAClBwgB,EAAM,GAEV,CAMO,SAASoB,GAAWpB,GACzB,MAAMj1C,GAAKi1C,EAAM,GAAK,IAAM,IACtBloC,EAAIkoC,EAAM,GACVxgB,EAAKwgB,EAAM,GAAK7kD,KAAKuR,GAAM,IAC3BnH,EAAI8Z,GAAGtU,GACPzF,EAAI+Z,GAAGtU,EAAK+M,EAAI,IAAO3c,KAAKiO,IAAIo2B,IAChCnG,EAAIha,GAAGtU,EAAK+M,EAAI,IAAO3c,KAAKmO,IAAIk2B,IAChCtzB,EAAI+S,GAAO,YAAJ3Z,EAAsB,YAAJC,EAAsB,WAAJ8zB,GAC3C6nB,EAAIjiC,IAAO,WAAJ3Z,EAAuB,YAAJC,EAAsB,WAAJ8zB,GAC5C9oC,EAAI0uB,GAAO,WAAJ3Z,EAAsB,UAAJC,EAAqB,YAAJ8zB,GAChD,MAAO,CACL1tB,GAAOO,EAAI,GAAO,EAAG,EAAG,KACxBP,GAAOu1C,EAAI,GAAO,EAAG,EAAG,KACxBv1C,GAAOpb,EAAI,GAAO,EAAG,EAAG,KACxByvD,EAAM,GAEV,CAMO,SAASz/B,GAAW06B,GACzB,GAAU,SAANA,EACF,OAAOqE,GAET,GAAI/pC,GAAM9c,eAAewiD,GACvB,OAAO1lC,GAAM0lC,GAEf,GAAI6F,IAtHiB,KAsHY,CAC/B,IAAIhwD,EAAI,EACR,IAAK,MAAM+F,KAAO0e,GACL,EAANzkB,aACIykB,GAAM1e,KACXiqD,GAGV,CAEE,MAAMd,EAAQC,GAAUhF,GACH,IAAjB+E,EAAM5vD,QACR2vD,GAAkB9E,GAEpB,IAAK,MAAMnjC,KAAKkoC,EACVv9B,MAAM3K,IACRioC,GAAkB9E,GAKtB,OAFA1lC,GAAM0lC,GAAK+E,IACTc,GACKd,CACT,CASO,SAASqB,GAAQrB,GACtB,OAAIzuD,MAAMC,QAAQwuD,GACTA,EAEFz/B,GAAWy/B,EACpB,CAMO,SAAS1/B,GAAS0/B,GACvB,IAAI9zC,EAAI8zC,EAAM,GACV9zC,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAIg1C,EAAIlB,EAAM,GACVkB,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAI3wD,EAAIyvD,EAAM,GACVzvD,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAGlB,MAAO,QAAU2b,EAAI,IAAMg1C,EAAI,IAAM3wD,EAAI,UADlBwF,IAAbiqD,EAAM,GAAmB,EAAI7kD,KAAK+R,MAAiB,IAAX8yC,EAAM,IAAa,KAClB,GACrD,CChSO,SAASsB,GAAQ/+C,GACtB,OAAOA,EAAK,GAAK,GAAKA,EAAK,GAAK,CAClC,CASO,SAASiP,GAAMjP,EAAM+1B,EAAOlzB,GAMjC,YALarP,IAATqP,IACFA,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAM7C,EAAK,GAAK+1B,EAAQ,GAAO,EACpClzB,EAAK,GAAM7C,EAAK,GAAK+1B,EAAQ,GAAO,EAC7BlzB,CACT,CAWO,SAASm8C,GAAOh/C,EAAM6C,GAC3B,OAAI7T,MAAMC,QAAQ+Q,GACTA,QAEIxM,IAATqP,EACFA,EAAO,CAAC7C,EAAMA,IAEd6C,EAAK,GAAK7C,EACV6C,EAAK,GAAK7C,GAEL6C,EACT,CCiEA,IAAIo8C,GAAW,EACR,MACMC,GAAc,GAAKD,KACnBE,GAAa,GAAKF,KAClBG,GAAa,GAAKH,KAClBI,GAAY,GAAKJ,KACjBK,GAAkB,GAAKL,KACvBM,GAAW,GAAKN,KAChBO,GAAU5mD,KAAKC,IAAI,EADHomD,GACkB,EAEzCQ,GAAY,CAChBP,CAACA,IAAc,UACfC,CAACA,IAAa,SACdC,CAACA,IAAa,SACdC,CAACA,IAAY,QACbC,CAACA,IAAkB,WACnBC,CAACA,IAAW,QAGRG,GAAahsD,OAAOC,KAAK8rD,IAAWthC,IAAI0B,QAAQgG,KAAKn4B,GAepD,SAASiyD,GAASjuD,GACvB,MAAMkuD,EAAQ,GACd,IAAK,MAAMC,KAAaH,GAClBI,GAAapuD,EAAMmuD,IACrBD,EAAMjtD,KAAK8sD,GAAUI,IAGzB,OAAqB,IAAjBD,EAAM/xD,OACD,UAEL+xD,EAAM/xD,OAAS,EACV+xD,EAAM9yC,KAAK,QAEb8yC,EAAMpvD,MAAM,GAAG,GAAIsc,KAAK,MAAQ,QAAU8yC,EAAMA,EAAM/xD,OAAS,EACxE,CAOO,SAASiyD,GAAaC,EAAOC,GAClC,OAAQD,EAAQC,KAAcA,CAChC,CAgBO,SAASC,GAAOvuD,EAAMwuD,GAC3B,OAAOxuD,IAASwuD,CAClB,CAMO,MAAMC,GAKX,WAAApzD,CAAY2E,EAAMX,GAChB,IA9DJ,SAAoBW,GAClB,OAAOA,KAAQ+tD,EACjB,CA4DSW,CAAW1uD,GACd,MAAM,IAAI2D,MACR,sDAAsDsqD,GAASjuD,MAGnE1E,KAAK0E,KAAOA,EACZ1E,KAAK+D,MAAQA,CACjB,EAGO,MAAMsvD,GAMX,WAAAtzD,CAAY2E,EAAM4uD,KAAa/zC,GAC7Bvf,KAAK0E,KAAOA,EACZ1E,KAAKszD,SAAWA,EAChBtzD,KAAKuf,KAAOA,CAChB,EAmBO,SAASg0C,KACd,MAAO,CACLC,UAAW,IAAIla,IACf9kC,WAAY,IAAI8kC,IAChBma,WAAW,EACXC,cAAc,EACdC,UAAU,EAEd,CAYO,SAASC,GAAMC,EAASC,EAAcpkD,GAC3C,cAAemkD,GACb,IAAK,UACH,GAAIZ,GAAOa,EAAc1B,IACvB,OAAO,IAAIe,GAAkBf,GAAYyB,EAAU,OAAS,SAE9D,IAAKf,GAAagB,EAAc5B,IAC9B,MAAM,IAAI7pD,MACR,+BAA+BsqD,GAASmB,MAG5C,OAAO,IAAIX,GAAkBjB,GAAa2B,GAE5C,IAAK,SACH,GAAIZ,GAAOa,EAAcvB,IACvB,OAAO,IAAIY,GAAkBZ,GAAUP,GAAO6B,IAEhD,GAAIZ,GAAOa,EAAc5B,IACvB,OAAO,IAAIiB,GAAkBjB,KAAe2B,GAE9C,GAAIZ,GAAOa,EAAc1B,IACvB,OAAO,IAAIe,GAAkBf,GAAYyB,EAAQ9iC,YAEnD,IAAK+hC,GAAagB,EAAc3B,IAC9B,MAAM,IAAI9pD,MAAM,8BAA8BsqD,GAASmB,MAEzD,OAAO,IAAIX,GAAkBhB,GAAY0B,GAE3C,IAAK,SACH,GAAIZ,GAAOa,EAAczB,IACvB,OAAO,IAAIc,GAAkBd,GAAW0B,GAAgBF,IAE1D,GAAIZ,GAAOa,EAAc5B,IACvB,OAAO,IAAIiB,GAAkBjB,KAAe2B,GAE9C,IAAKf,GAAagB,EAAc1B,IAC9B,MAAM,IAAI/pD,MAAM,8BAA8BsqD,GAASmB,MAEzD,OAAO,IAAIX,GAAkBf,GAAYyB,GAO7C,IAAK7xD,MAAMC,QAAQ4xD,GACjB,MAAM,IAAIxrD,MAAM,oDAGlB,GAAuB,IAAnBwrD,EAAQhzD,OACV,MAAM,IAAIwH,MAAM,oBAGlB,GAA0B,iBAAfwrD,EAAQ,GACjB,OAyqBJ,SAA6BA,EAASG,EAAYtkD,GAChD,MAAM4jD,EAAWO,EAAQ,GAEnBI,EAASC,GAAQZ,GACvB,IAAKW,EACH,MAAM,IAAI5rD,MAAM,qBAAqBirD,KAEvC,OAAOW,EAAOJ,EAASG,EAAYtkD,EACrC,CAjrBWykD,CAAoBN,EAASC,EAAcpkD,GAGpD,IAAK,MAAMzE,KAAQ4oD,EACjB,GAAoB,iBAAT5oD,EACT,MAAM,IAAI5C,MAAM,gCAIpB,GAAI4qD,GAAOa,EAAcvB,IAAW,CAClC,GAAuB,IAAnBsB,EAAQhzD,OACV,MAAM,IAAIwH,MACR,mDAAmDwrD,EAAQhzD,UAG/D,OAAO,IAAIsyD,GAAkBZ,GAAUsB,EAC3C,CAEE,GAAIZ,GAAOa,EAAczB,IAAY,CACnC,GAAuB,IAAnBwB,EAAQhzD,OACV,OAAO,IAAIsyD,GAAkBd,GAAW,IAAIwB,EAAS,IAEvD,GAAuB,IAAnBA,EAAQhzD,OACV,OAAO,IAAIsyD,GAAkBd,GAAWwB,GAE1C,MAAM,IAAIxrD,MACR,uDAAuDwrD,EAAQhzD,SAErE,CAEE,IAAKiyD,GAAagB,EAAcxB,IAC9B,MAAM,IAAIjqD,MACR,yCAAyCsqD,GAASmB,MAItD,OAAO,IAAIX,GAAkBb,GAAiBuB,EAChD,CAKO,MAAMO,GAAM,CACjBC,IAAK,MACLC,IAAK,MACLC,OAAQ,SACRC,aAAc,gBACdC,WAAY,cACZC,IAAK,MACLC,IAAK,MACLC,IAAK,IACLC,WAAY,aACZtZ,KAAM,OACNuZ,KAAM,OACNC,MAAO,KACPC,SAAU,KACVC,YAAa,IACbC,qBAAsB,KACtBC,SAAU,IACVC,kBAAmB,KACnBC,SAAU,IACVC,OAAQ,IACRC,IAAK,IACLC,SAAU,IACVC,MAAO,QACPC,IAAK,IACLC,IAAK,IACLC,IAAK,MACLC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,IAAK,MACLC,IAAK,MACLC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,YAAa,cACbC,SAAU,WACVC,KAAM,OACNC,GAAI,KACJ5jC,OAAQ,SACRnqB,OAAQ,SACR1G,MAAO,QACP00D,MAAO,QACPC,GAAI,KACJC,KAAM,OACNC,QAAS,UACTC,SAAU,YACVC,IAAK,OAYD7C,GAAU,CACd,CAACE,GAAIC,KAAM2C,GAA2BC,GAAa,EAAGlgD,KAAWmgD,IACjE,CAAC9C,GAAIE,KAAM0C,GAA2BC,GAAa,EAAG,IA0MxD,SAAqBpD,EAASG,EAAYtkD,GACxC,MAAM0F,EAAOy+C,EAAQ,GACrB,GAAoB,iBAATz+C,EACT,MAAM,IAAI/M,MAAM,gDAIlB,OAFAqH,EAAQ8jD,UAAUjzC,IAAInL,GAEf,CAAC,IAAI+9C,GAAkBf,GAAYh9C,GAC5C,IAjNE,CAACg/C,GAAI2C,KAAMC,GAA2BC,GAAa,EAAGlgD,KAAWmgD,IACjE,CAAC9C,GAAIuC,IAAKK,IAqNZ,SAAuBnD,EAASG,EAAYtkD,GAC1CA,EAAQ+jD,WAAY,CACtB,GAvNsD0D,IACpD,CAAC/C,GAAIG,QAASyC,GACZC,GAAa,EAAGlgD,KAChBqgD,GAAehF,KAEjB,CAACgC,GAAII,cAAewC,IAuNtB,SAA0BnD,EAASG,EAAYtkD,GAC7CA,EAAQgkD,cAAe,CACzB,GAzNmEyD,IACjE,CAAC/C,GAAIK,YAAauC,GAA2BG,IAC7C,CAAC/C,GAAIS,YAAamC,GAA2BK,GAAcF,IAC3D,CAAC/C,GAAI7Y,MAAOyb,GAA2BK,GAAcF,IACrD,CAAC/C,GAAIU,MAAOkC,GAA2BK,GAAcF,IACrD,CAAC/C,GAAIM,KAAMsC,GACTC,GAAa,EAAGlgD,KAChBqgD,GAAelF,KAEjB,CAACkC,GAAIO,KAAMqC,GACTC,GAAa,EAAGlgD,KAChBqgD,GAAelF,KAEjB,CAACkC,GAAIQ,KAAMoC,GACTC,GAAa,EAAG,GAChBG,GAAelF,KAEjB,CAACkC,GAAIW,OAAQiC,GACXC,GAAa,EAAG,GAChBG,GAAe5E,KAEjB,CAAC4B,GAAIY,UAAWgC,GACdC,GAAa,EAAG,GAChBG,GAAe5E,KAEjB,CAAC4B,GAAIa,aAAc+B,GACjBC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIc,sBAAuB8B,GAC1BC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIe,UAAW6B,GACdC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIgB,mBAAoB4B,GACvBC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIiB,UAAW2B,GACdC,GAAa,EAAGlgD,KAChBugD,IAEF,CAAClD,GAAImC,UAAWS,GACdC,GAAa,EAAGlgD,KAChBugD,IAEF,CAAClD,GAAIkB,QAAS0B,GACZC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAImB,KAAMyB,GACTC,GAAa,EAAGlgD,KAChBqgD,GAAejF,KAEjB,CAACiC,GAAIoB,UAAWwB,GACdC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIqB,OAAQuB,GACXC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIsB,KAAMsB,GACTC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIuB,KAAMqB,GACTC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIwB,KAAMoB,GACTC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIyB,OAAQmB,GACXC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAI0B,MAAOkB,GACVC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAI2B,OAAQiB,GACXC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAI4B,KAAMgB,GACTC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAI6B,KAAMe,GACTC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAI8B,MAAOc,GACVC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAI+B,MAAOa,GACVC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIgC,OAAQY,GACXC,GAAa,EAAGlgD,KAChBwgD,IA8NJ,SAAuB1D,EAASG,EAAYtkD,GAC1C,MAAM8nD,EAAY3D,EAAQhzD,OAAS,EAE7B42D,EAAYrF,GAAaD,GAAaD,GAEtCzsC,EAAQmuC,GAAMC,EAAQ,GAAI4D,EAAW/nD,GAErCgoD,EAAW9D,GAAMC,EAAQA,EAAQhzD,OAAS,GAAImzD,EAAYtkD,GAE1D6P,EAAO,IAAIvd,MAAMw1D,EAAY,GACnC,IAAK,IAAIj2D,EAAI,EAAGA,EAAIi2D,EAAY,EAAGj2D,GAAK,EAAG,CACzC,IACE,MAAM0oB,EAAQ2pC,GAAMC,EAAQtyD,EAAI,GAAIkkB,EAAM/gB,KAAMgL,GAChD6P,EAAKhe,GAAK0oB,CACX,CAAC,MAAOjmB,GACP,MAAM,IAAIqE,MACR,4BAA4B9G,EAAI,0BAA0ByC,EAAIw4B,UAEtE,CACI,IACE,MAAM9W,EAASkuC,GAAMC,EAAQtyD,EAAI,GAAIm2D,EAAShzD,KAAMgL,GACpD6P,EAAKhe,EAAI,GAAKmkB,CACf,CAAC,MAAO1hB,GACP,MAAM,IAAIqE,MACR,4BAA4B9G,EAAI,0BAA0ByC,EAAIw4B,UAEtE,CACA,CAEE,MAAO,CAAC/W,KAAUlG,EAAMm4C,EAC1B,IAzPE,CAACtD,GAAIiC,SAAUW,GACbC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIkC,aAAcU,GACjBC,GAAa,EAAGlgD,KAChBwgD,IAwPJ,SAA6B1D,EAASG,EAAYtkD,GAChD,MAAMioD,EAAoB9D,EAAQ,GAIlC,IAAI+D,EACJ,OAAQD,EAAkB,IACxB,IAAK,SACHC,EAAO,EACP,MACF,IAAK,cACH,MAAM52D,EAAI22D,EAAkB,GAC5B,GAAiB,iBAAN32D,GAAkBA,GAAK,EAChC,MAAM,IAAIqH,MAEN,6DAASwvD,KAAKC,UAAU92D,cAG9B42D,EAAO52D,EACP,MACF,QACE,MAAM,IAAIqH,MACR,+BAA+BwvD,KAAKC,UAAUH,MAIpD,MAAMI,EAAgB,IAAI5E,GAAkBhB,GAAYyF,GAExD,IAAInyC,EACJ,IACEA,EAAQmuC,GAAMC,EAAQ,GAAI1B,GAAYziD,EACvC,CAAC,MAAO1L,GACP,MAAM,IAAIqE,MACR,yDAAyDrE,EAAIw4B,UAEnE,CAEE,MAAMjd,EAAO,IAAIvd,MAAM6xD,EAAQhzD,OAAS,GACxC,IAAK,IAAIU,EAAI,EAAGA,EAAIge,EAAK1e,OAAQU,GAAK,EAAG,CACvC,IACE,MAAMy2D,EAAOpE,GAAMC,EAAQtyD,EAAI,GAAI4wD,GAAYziD,GAC/C6P,EAAKhe,GAAKy2D,CACX,CAAC,MAAOh0D,GACP,MAAM,IAAIqE,MACR,4BAA4B9G,EAAI,iCAAiCyC,EAAIw4B,UAE7E,CACI,IACE,MAAM9W,EAASkuC,GAAMC,EAAQtyD,EAAI,GAAIyyD,EAAYtkD,GACjD6P,EAAKhe,EAAI,GAAKmkB,CACf,CAAC,MAAO1hB,GACP,MAAM,IAAIqE,MACR,4BAA4B9G,EAAI,iCAAiCyC,EAAIw4B,UAE7E,CACA,CAEE,MAAO,CAACu7B,EAAetyC,KAAUlG,EACnC,IA/SE,CAAC60C,GAAIoC,MAAOQ,GACVC,GAAa,EAAGlgD,MAuLpB,SAAoB88C,EAASG,EAAYtkD,GACvC,MAAMuoD,EAAYpE,EAAQ,GACpBqE,EAAWrE,EAAQhzD,OAAS,EAClC,GAAIq3D,EAAW,GAAM,EACnB,MAAM,IAAI7vD,MACR,2CAA2C4vD,UAAkBC,YAGnE,IAoHA,SAAsBrE,EAASG,EAAYtkD,GACzC,MAAMgoD,EAAW9D,GAAMC,EAAQA,EAAQhzD,OAAS,GAAImzD,EAAYtkD,GAE1D6P,EAAO,IAAIvd,MAAM6xD,EAAQhzD,OAAS,GACxC,IAAK,IAAIU,EAAI,EAAGA,EAAIge,EAAK1e,OAAS,EAAGU,GAAK,EAAG,CAC3C,IACE,MAAMg/C,EAAYqT,GAAMC,EAAQtyD,EAAI,GAAI2wD,GAAaxiD,GACrD6P,EAAKhe,GAAKg/C,CACX,CAAC,MAAOv8C,GACP,MAAM,IAAIqE,MACR,4BAA4B9G,yBAAyByC,EAAIw4B,UAEjE,CACI,IACE,MAAM9W,EAASkuC,GAAMC,EAAQtyD,EAAI,GAAIm2D,EAAShzD,KAAMgL,GACpD6P,EAAKhe,EAAI,GAAKmkB,CACf,CAAC,MAAO1hB,GACP,MAAM,IAAIqE,MACR,4BAA4B9G,EAAI,yBAAyByC,EAAIw4B,UAErE,CACA,CAGE,OADAjd,EAAKA,EAAK1e,OAAS,GAAK62D,EACjBn4C,CACT,IAxUE,CAAC60C,GAAIqC,IAAKO,GAA2BC,GAAa,EAAG,IA6UvD,SAAoBpD,EAASG,EAAYtkD,GACvC,IASIyoD,EATA93D,EAAWwzD,EAAQ,GACvB,IAAK7xD,MAAMC,QAAQ5B,GACjB,MAAM,IAAIgI,MACR,8DAOJ,GAA2B,iBAAhBhI,EAAS,GAAiB,CACnC,GAAoB,YAAhBA,EAAS,GACX,MAAM,IAAIgI,MACR,oHAGJ,IAAKrG,MAAMC,QAAQ5B,EAAS,IAC1B,MAAM,IAAIgI,MACR,sFAGJhI,EAAWA,EAAS,GACpB83D,EAAa/F,EACjB,MACI+F,EAAahG,GAGf,MAAM5yC,EAAO,IAAIvd,MAAM3B,EAASQ,QAChC,IAAK,IAAIU,EAAI,EAAGA,EAAIge,EAAK1e,OAAQU,IAC/B,IACE,MAAM62D,EAAMxE,GAAMvzD,EAASkB,GAAI42D,EAAYzoD,GAC3C6P,EAAKhe,GAAK62D,CACX,CAAC,MAAOp0D,GACP,MAAM,IAAIqE,MACR,iCAAiC9G,0BAA0ByC,EAAIw4B,UAEvE,CAIE,MAAO,CADQo3B,GAAMC,EAAQ,GAAIsE,EAAYzoD,MAC1B6P,EACrB,IAtXE,CAAC60C,GAAIvhC,QAASmkC,GACZC,GAAa,EAAGlgD,KAChBqgD,GAAe5E,KAEjB,CAAC4B,GAAI1rD,QAASsuD,GACZC,GAAa,EAAGlgD,KAChBqgD,GAAe5E,KAEjB,CAAC4B,GAAIpyD,OAAQg1D,GACXC,GAAa,EAAGlgD,KAChBqgD,GAAejF,KAEjB,CAACiC,GAAIsC,OAAQM,GACXC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIwC,MAAOI,GACVC,GAAa,EAAG,GAChBG,GAAejF,KAEjB,CAACiC,GAAIyC,SAAUG,GACbC,GAAa,EAAG,IAsWpB,SAAyBpD,EAASG,EAAYtkD,GAC5C,IAAI9M,EACJ,IACEA,EAAQgxD,GAAMC,EAAQ,GAAI1B,GAAYziD,EACvC,CAAC,MAAO1L,GACP,MAAM,IAAIqE,MACR,yDAAyDrE,EAAIw4B,UAEnE,CACE,MAAM67B,EAASxE,EAAQ,GACvB,IAAK7xD,MAAMC,QAAQo2D,GACjB,MAAM,IAAIhwD,MAAM,mDAElB,MAAMiwD,EAAe,IAAIt2D,MAAMq2D,EAAOx3D,QACtC,IAAK,IAAIU,EAAI,EAAGA,EAAI+2D,EAAaz3D,OAAQU,IAAK,CAC5C,IAAIkvD,EACJ,IACEA,EAAQmD,GAAMyE,EAAO92D,GAAI8wD,GAAW3iD,EACrC,CAAC,MAAO1L,GACP,MAAM,IAAIqE,MACR,kCAAkC9G,4BAA4ByC,EAAIw4B,UAE1E,CACI,KAAMi0B,aAAiB0C,IACrB,MAAM,IAAI9qD,MACR,8BAA8B9G,6BAGlC+2D,EAAa/2D,GAAKkvD,CACtB,CACE,MAAO,CAAC7tD,KAAU01D,EACpB,IAlYE,CAAClE,GAAI0C,UAAWE,GACdC,GAAa,EAAG,GAChBG,GAAelF,GAAcC,GAAaC,GAAaC,MAc3D,SAAS6E,GAAYrD,EAASG,EAAYtkD,GACxC,MAAM8nD,EAAY3D,EAAQhzD,OAAS,EAC7B0e,EAAO,IAAIvd,MAAMw1D,GACvB,IAAK,IAAIj2D,EAAI,EAAGA,EAAIi2D,IAAaj2D,EAAG,CAClC,MAAM+F,EAAMusD,EAAQtyD,EAAI,GACxB,cAAe+F,GACb,IAAK,SACHiY,EAAKhe,GAAK,IAAI4xD,GAAkBhB,GAAY7qD,GAC5C,MAEF,IAAK,SACHiY,EAAKhe,GAAK,IAAI4xD,GAAkBf,GAAY9qD,GAC5C,MAEF,QACE,MAAM,IAAIe,MACR,yEAAyEf,KAIrE,IAAN/F,GACFmO,EAAQ8E,WAAW+L,IAAI7X,OAAOpB,GAEpC,CACE,OAAOiY,CACT,CAgCA,SAAS83C,GAAaxD,EAASG,EAAYtkD,GACzCA,EAAQikD,UAAW,CACrB,CAKA,SAASwD,GAAWtD,EAASG,EAAYtkD,GACvC,MAAMuoD,EAAYpE,EAAQ,GAC1B,GAAuB,IAAnBA,EAAQhzD,OACV,MAAM,IAAIwH,MAAM,6BAA6B4vD,eAE/C,MAAO,EACT,CAOA,SAAShB,GAAasB,EAASC,GAC7B,OAAO,SAAU3E,EAASG,EAAYtkD,GACpC,MAAMuoD,EAAYpE,EAAQ,GACpBqE,EAAWrE,EAAQhzD,OAAS,EAClC,GAAI03D,IAAYC,GACd,GAAIN,IAAaK,EAAS,CAExB,MAAM,IAAIlwD,MACR,YAAYkwD,aAFa,IAAZA,EAAgB,GAAK,WAEWN,UAAkBC,IAEzE,OACW,GAAIA,EAAWK,GAAWL,EAAWM,EAAS,CAKnD,MAAM,IAAInwD,MACR,YAJAmwD,IAAYzhD,IACR,GAAGwhD,YACH,GAAGA,QAAcC,qBAEcP,UAAkBC,IAE7D,CACG,CACH,CAKA,SAASZ,GAAqBzD,EAASG,EAAYtkD,GACjD,MAAMwoD,EAAWrE,EAAQhzD,OAAS,EAI5B0e,EAAO,IAAIvd,MAAMk2D,GACvB,IAAK,IAAI32D,EAAI,EAAGA,EAAI22D,IAAY32D,EAAG,CACjC,MAAMk3D,EAAa7E,GAAMC,EAAQtyD,EAAI,GAAIyyD,EAAYtkD,GACrD6P,EAAKhe,GAAKk3D,CACd,CACE,OAAOl5C,CACT,CAMA,SAAS63C,GAAesB,GACtB,OAAO,SAAU7E,EAASG,EAAYtkD,GACpC,MAAMwoD,EAAWrE,EAAQhzD,OAAS,EAI5B0e,EAAO,IAAIvd,MAAMk2D,GACvB,IAAK,IAAI32D,EAAI,EAAGA,EAAI22D,IAAY32D,EAAG,CACjC,MAAMk3D,EAAa7E,GAAMC,EAAQtyD,EAAI,GAAIm3D,EAAShpD,GAClD6P,EAAKhe,GAAKk3D,CAChB,CACI,OAAOl5C,CACR,CACH,CAkBA,SAASg4C,GAAY1D,EAASG,EAAYtkD,GACxC,MAAMuoD,EAAYpE,EAAQ,GACpBqE,EAAWrE,EAAQhzD,OAAS,EAClC,GAAIq3D,EAAW,GAAM,EACnB,MAAM,IAAI7vD,MACR,sDAAsD4vD,UAAkBC,YAG9E,CA0NA,SAASlB,MAA8B2B,GACrC,OAAO,SAAU9E,EAASG,EAAYtkD,GACpC,MAAM4jD,EAAWO,EAAQ,GAKzB,IAAIt0C,EACJ,IAAK,IAAIhe,EAAI,EAAGA,EAAIo3D,EAAW93D,OAAQU,IAAK,CAC1C,MAAMq3D,EAASD,EAAWp3D,GAAGsyD,EAASG,EAAYtkD,GAClD,GAAInO,GAAKo3D,EAAW93D,OAAS,EAAG,CAC9B,IAAK+3D,EACH,MAAM,IAAIvwD,MACR,8DAGJkX,EAAOq5C,CACf,CACA,CACI,OAAO,IAAIvF,GAAeW,EAAYV,KAAa/zC,EACpD,CACH,CAuBO,SAASs5C,GAAoBvkD,GAClC,IAAKA,EACH,MAAO,GAET,MAAM5P,EAAO4P,EAAS8e,UACtB,OAAQ1uB,GACN,IAAK,QACL,IAAK,aACL,IAAK,UACH,OAAOA,EACT,IAAK,aACL,IAAK,kBACL,IAAK,eACH,OAAsDA,EAAKwsB,UAAU,GACvE,IAAK,SACH,MAAO,UACT,IAAK,qBACH,OAAO2nC,GAC0D,EAE7DC,gBAAgB,IAEtB,QACE,MAAO,GAEb,CChgCO,SAASC,KACd,MAAO,CACLvF,UAAW,CAAE,EACbh/C,WAAY,CAAE,EACdyE,WAAY+Y,IACZyhC,UAAW,KACXC,aAAc,GAElB,CA4CO,SAASsF,GAAgBnF,EAASnvD,EAAMgL,GAE7C,OAAOupD,GADYrF,GAAMC,EAASnvD,EAAMgL,GAE1C,CAOA,SAASupD,GAAkBR,EAAY/oD,GACrC,GAAI+oD,aAAsBtF,GAAmB,CAE3C,GAAIsF,EAAW/zD,OAAS2tD,IAAyC,iBAArBoG,EAAW10D,MAAoB,CACzE,MAAMm1D,EAAaloC,GAAWynC,EAAW10D,OACzC,OAAO,WACL,OAAOm1D,CACR,CACP,CACI,OAAO,WACL,OAAOT,EAAW10D,KACnB,CACL,CACE,MAAMuvD,EAAWmF,EAAWnF,SAC5B,OAAQA,GACN,KAAKc,GAAIvhC,OACT,KAAKuhC,GAAI1rD,OACT,KAAK0rD,GAAImC,SACP,OAmFN,SAAoCkC,GAClC,MAAM/zD,EAAO+zD,EAAWnF,SAClBzyD,EAAS43D,EAAWl5C,KAAK1e,OAEzB0e,EAAO,IAAIvd,MAAMnB,GACvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5Bge,EAAKhe,GAAK03D,GAAkBR,EAAWl5C,KAAKhe,IAE9C,OAAQmD,GACN,KAAK0vD,GAAImC,SACP,OAAQ7mD,IACN,IAAK,IAAInO,EAAI,EAAGA,EAAIV,IAAUU,EAAG,CAC/B,MAAMwC,EAAQwb,EAAKhe,GAAGmO,GACtB,GAAI,MAAO3L,EACT,OAAOA,CAEnB,CACQ,MAAM,IAAIsE,MAAM,4CAA4C,EAGhE,KAAK+rD,GAAIvhC,OACT,KAAKuhC,GAAI1rD,OACP,OAAQgH,IACN,IAAK,IAAInO,EAAI,EAAGA,EAAIV,IAAUU,EAAG,CAC/B,MAAMwC,EAAQwb,EAAKhe,GAAGmO,GACtB,UAAW3L,IAAUW,EACnB,OAAOX,CAEnB,CACQ,MAAM,IAAIsE,MAAM,sCAAsC3D,IAAO,EAGjE,QACE,MAAM,IAAI2D,MAAM,kCAAkC3D,KAGxD,CAvHay0D,CAA2BV,GAEpC,KAAKrE,GAAIC,IACT,KAAKD,GAAIE,IACT,KAAKF,GAAI2C,IACP,OAyHN,SAAmC0B,GACjC,MAAMW,EAAmDX,EAAWl5C,KAAK,GACnEnK,EAA8BgkD,EAAoB,MACxD,OAAQX,EAAWnF,UACjB,KAAKc,GAAIC,IACP,OAAQ3kD,IACN,MAAM6P,EAAOk5C,EAAWl5C,KACxB,IAAIxb,EAAQ2L,EAAQ8E,WAAWY,GAC/B,IAAK,IAAI7T,EAAI,EAAG4E,EAAKoZ,EAAK1e,OAAQU,EAAI4E,IAAM5E,EAAG,CAG7CwC,EAAQA,EAFgDwb,EAAKhe,GACA,MAEvE,CACQ,OAAOwC,CAAK,EAGhB,KAAKqwD,GAAIE,IACP,OAAQ5kD,GAAYA,EAAQ8jD,UAAUp+C,GAExC,KAAKg/C,GAAI2C,IACP,OAAQrnD,IACN,MAAM6P,EAAOk5C,EAAWl5C,KACxB,KAAMnK,KAAQ1F,EAAQ8E,YACpB,OAAO,EAET,IAAIzQ,EAAQ2L,EAAQ8E,WAAWY,GAC/B,IAAK,IAAI7T,EAAI,EAAG4E,EAAKoZ,EAAK1e,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MACM+F,EADkDiY,EAAKhe,GACA,MAC7D,IAAKwC,IAAU2C,OAAO2yD,OAAOt1D,EAAOuD,GAClC,OAAO,EAETvD,EAAQA,EAAMuD,EACxB,CACQ,OAAO,CAAI,EAGf,QACE,MAAM,IAAIe,MAAM,iCAAiCowD,EAAWnF,YAGlE,CAlKagG,CAA0Bb,GAEnC,KAAKrE,GAAIuC,GACP,OAAQjnD,GAAYA,EAAQ+jD,UAE9B,KAAKW,GAAII,aACP,OAAQ9kD,GAAYA,EAAQgkD,aAE9B,KAAKU,GAAIG,OAAQ,CACf,MAAMh1C,EAAOk5C,EAAWl5C,KAAK4R,KAAKlB,GAAMgpC,GAAkBhpC,KAC1D,OAAQvgB,GACN,GAAG6pD,UAAUh6C,EAAK4R,KAAKinC,GAAQA,EAAI1oD,GAASqhB,aACpD,CACI,KAAKqjC,GAAIS,WACP,OAAQnlD,GAAYA,EAAQuJ,WAE9B,KAAKm7C,GAAIM,IACT,KAAKN,GAAIO,IACT,KAAKP,GAAIiC,QACT,KAAKjC,GAAIqC,GACT,KAAKrC,GAAIQ,IACP,OAsLN,SAAkC6D,GAChC,MAAMe,EAAKf,EAAWnF,SAChBzyD,EAAS43D,EAAWl5C,KAAK1e,OAEzB0e,EAAO,IAAIvd,MAAMnB,GACvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5Bge,EAAKhe,GAAK03D,GAAkBR,EAAWl5C,KAAKhe,IAE9C,OAAQi4D,GACN,KAAKpF,GAAIM,IACP,OAAQhlD,IACN,IAAK,IAAInO,EAAI,EAAGA,EAAIV,IAAUU,EAC5B,GAAIge,EAAKhe,GAAGmO,GACV,OAAO,EAGX,OAAO,CAAK,EAGhB,KAAK0kD,GAAIO,IACP,OAAQjlD,IACN,IAAK,IAAInO,EAAI,EAAGA,EAAIV,IAAUU,EAC5B,IAAKge,EAAKhe,GAAGmO,GACX,OAAO,EAGX,OAAO,CAAI,EAGf,KAAK0kD,GAAIiC,QACP,OAAQ3mD,IACN,MAAM3L,EAAQwb,EAAK,GAAG7P,GAChBqI,EAAMwH,EAAK,GAAG7P,GACdsI,EAAMuH,EAAK,GAAG7P,GACpB,OAAO3L,GAASgU,GAAOhU,GAASiU,CAAG,EAGvC,KAAKo8C,GAAIqC,GACP,OAAQ/mD,IACN,MAAM3L,EAAQwb,EAAK,GAAG7P,GACtB,IAAK,IAAInO,EAAI,EAAGA,EAAIV,IAAUU,EAC5B,GAAIwC,IAAUwb,EAAKhe,GAAGmO,GACpB,OAAO,EAGX,OAAO,CAAK,EAGhB,KAAK0kD,GAAIQ,IACP,OAAQllD,IAAa6P,EAAK,GAAG7P,GAE/B,QACE,MAAM,IAAIrH,MAAM,gCAAgCmxD,KAGtD,CA7OaC,CAAyBhB,GAElC,KAAKrE,GAAIW,MACT,KAAKX,GAAIY,SACT,KAAKZ,GAAIe,SACT,KAAKf,GAAIgB,kBACT,KAAKhB,GAAIa,YACT,KAAKb,GAAIc,qBACP,OA4IN,SAAqCuD,GACnC,MAAMe,EAAKf,EAAWnF,SAChB5R,EAAOuX,GAAkBR,EAAWl5C,KAAK,IACzC2a,EAAQ++B,GAAkBR,EAAWl5C,KAAK,IAChD,OAAQi6C,GACN,KAAKpF,GAAIW,MACP,OAAQrlD,GAAYgyC,EAAKhyC,KAAawqB,EAAMxqB,GAE9C,KAAK0kD,GAAIY,SACP,OAAQtlD,GAAYgyC,EAAKhyC,KAAawqB,EAAMxqB,GAE9C,KAAK0kD,GAAIe,SACP,OAAQzlD,GAAYgyC,EAAKhyC,GAAWwqB,EAAMxqB,GAE5C,KAAK0kD,GAAIgB,kBACP,OAAQ1lD,GAAYgyC,EAAKhyC,IAAYwqB,EAAMxqB,GAE7C,KAAK0kD,GAAIa,YACP,OAAQvlD,GAAYgyC,EAAKhyC,GAAWwqB,EAAMxqB,GAE5C,KAAK0kD,GAAIc,qBACP,OAAQxlD,GAAYgyC,EAAKhyC,IAAYwqB,EAAMxqB,GAE7C,QACE,MAAM,IAAIrH,MAAM,mCAAmCmxD,KAGzD,CAvKaE,CAA4BjB,GAErC,KAAKrE,GAAIiB,SACT,KAAKjB,GAAIkB,OACT,KAAKlB,GAAImB,IACT,KAAKnB,GAAIoB,SACT,KAAKpB,GAAIqB,MACT,KAAKrB,GAAIsB,IACT,KAAKtB,GAAIuB,IACT,KAAKvB,GAAIwB,IACT,KAAKxB,GAAIyB,MACT,KAAKzB,GAAI0B,KACT,KAAK1B,GAAI2B,MACT,KAAK3B,GAAI4B,IACT,KAAK5B,GAAI6B,IACT,KAAK7B,GAAI8B,KACT,KAAK9B,GAAI+B,KACP,OA2NN,SAAkCsC,GAChC,MAAMe,EAAKf,EAAWnF,SAChBzyD,EAAS43D,EAAWl5C,KAAK1e,OAEzB0e,EAAO,IAAIvd,MAAMnB,GACvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5Bge,EAAKhe,GAAK03D,GAAkBR,EAAWl5C,KAAKhe,IAE9C,OAAQi4D,GACN,KAAKpF,GAAIiB,SACP,OAAQ3lD,IACN,IAAI3L,EAAQ,EACZ,IAAK,IAAIxC,EAAI,EAAGA,EAAIV,IAAUU,EAC5BwC,GAASwb,EAAKhe,GAAGmO,GAEnB,OAAO3L,CAAK,EAGhB,KAAKqwD,GAAIkB,OACP,OAAQ5lD,GAAY6P,EAAK,GAAG7P,GAAW6P,EAAK,GAAG7P,GAEjD,KAAK0kD,GAAImB,IACP,OAAQ7lD,IACN,IAAI3L,EAAQ,EACZ,IAAK,IAAIxC,EAAI,EAAGA,EAAIV,IAAUU,EAC5BwC,GAASwb,EAAKhe,GAAGmO,GAEnB,OAAO3L,CAAK,EAGhB,KAAKqwD,GAAIoB,SACP,OAAQ9lD,GAAY6P,EAAK,GAAG7P,GAAW6P,EAAK,GAAG7P,GAEjD,KAAK0kD,GAAIqB,MACP,OAAQ/lD,IACN,MAAM3L,EAAQwb,EAAK,GAAG7P,GAChBqI,EAAMwH,EAAK,GAAG7P,GACpB,GAAI3L,EAAQgU,EACV,OAAOA,EAET,MAAMC,EAAMuH,EAAK,GAAG7P,GACpB,OAAI3L,EAAQiU,EACHA,EAEFjU,CAAK,EAGhB,KAAKqwD,GAAIsB,IACP,OAAQhmD,GAAY6P,EAAK,GAAG7P,GAAW6P,EAAK,GAAG7P,GAEjD,KAAK0kD,GAAIuB,IACP,OAAQjmD,GAAY9D,KAAKC,IAAI0T,EAAK,GAAG7P,GAAU6P,EAAK,GAAG7P,IAEzD,KAAK0kD,GAAIwB,IACP,OAAQlmD,GAAY9D,KAAK8L,IAAI6H,EAAK,GAAG7P,IAEvC,KAAK0kD,GAAIyB,MACP,OAAQnmD,GAAY9D,KAAKoQ,MAAMuD,EAAK,GAAG7P,IAEzC,KAAK0kD,GAAI0B,KACP,OAAQpmD,GAAY9D,KAAKgS,KAAK2B,EAAK,GAAG7P,IAExC,KAAK0kD,GAAI2B,MACP,OAAQrmD,GAAY9D,KAAK+R,MAAM4B,EAAK,GAAG7P,IAEzC,KAAK0kD,GAAI4B,IACP,OAAQtmD,GAAY9D,KAAKmO,IAAIwF,EAAK,GAAG7P,IAEvC,KAAK0kD,GAAI6B,IACP,OAAQvmD,GAAY9D,KAAKiO,IAAI0F,EAAK,GAAG7P,IAEvC,KAAK0kD,GAAI8B,KACP,OAAe,IAAXr1D,EACM6O,GAAY9D,KAAK4S,MAAMe,EAAK,GAAG7P,GAAU6P,EAAK,GAAG7P,IAEnDA,GAAY9D,KAAKia,KAAKtG,EAAK,GAAG7P,IAExC,KAAK0kD,GAAI+B,KACP,OAAQzmD,GAAY9D,KAAK6S,KAAKc,EAAK,GAAG7P,IAExC,QACE,MAAM,IAAIrH,MAAM,gCAAgCmxD,KAGtD,CA/SaG,CAAyBlB,GAElC,KAAKrE,GAAIoC,KACP,OAmTN,SAA+BiC,GAC7B,MAAM53D,EAAS43D,EAAWl5C,KAAK1e,OACzB0e,EAAO,IAAIvd,MAAMnB,GACvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5Bge,EAAKhe,GAAK03D,GAAkBR,EAAWl5C,KAAKhe,IAE9C,OAAQmO,IACN,IAAK,IAAInO,EAAI,EAAGA,EAAIV,EAAS,EAAGU,GAAK,EAAG,CAEtC,GADkBge,EAAKhe,GAAGmO,GAExB,OAAO6P,EAAKhe,EAAI,GAAGmO,EAE3B,CACI,OAAO6P,EAAK1e,EAAS,GAAG6O,EAAQ,CAEpC,CAlUakqD,CAAsBnB,GAE/B,KAAKrE,GAAIgC,MACP,OAsUN,SAAgCqC,GAC9B,MAAM53D,EAAS43D,EAAWl5C,KAAK1e,OACzB0e,EAAO,IAAIvd,MAAMnB,GACvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5Bge,EAAKhe,GAAK03D,GAAkBR,EAAWl5C,KAAKhe,IAE9C,OAAQmO,IACN,MAAM3L,EAAQwb,EAAK,GAAG7P,GACtB,IAAK,IAAInO,EAAI,EAAGA,EAAIV,EAAS,EAAGU,GAAK,EACnC,GAAIwC,IAAUwb,EAAKhe,GAAGmO,GACpB,OAAO6P,EAAKhe,EAAI,GAAGmO,GAGvB,OAAO6P,EAAK1e,EAAS,GAAG6O,EAAQ,CAEpC,CArVamqD,CAAuBpB,GAEhC,KAAKrE,GAAIkC,YACP,OAyVN,SAAsCmC,GACpC,MAAM53D,EAAS43D,EAAWl5C,KAAK1e,OACzB0e,EAAO,IAAIvd,MAAMnB,GACvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5Bge,EAAKhe,GAAK03D,GAAkBR,EAAWl5C,KAAKhe,IAE9C,OAAQmO,IACN,MAAMkoD,EAAOr4C,EAAK,GAAG7P,GACf3L,EAAQwb,EAAK,GAAG7P,GAEtB,IAAIoqD,EACAC,EACJ,IAAK,IAAIx4D,EAAI,EAAGA,EAAIV,EAAQU,GAAK,EAAG,CAClC,MAAMkkB,EAAQlG,EAAKhe,GAAGmO,GACtB,IAAIgW,EAASnG,EAAKhe,EAAI,GAAGmO,GACzB,MAAMsqD,EAAUh4D,MAAMC,QAAQyjB,GAI9B,GAHIs0C,IACFt0C,EAAS8rC,GAAU9rC,IAEjBD,GAAS1hB,EACX,OAAU,IAANxC,EACKmkB,EAELs0C,EACKC,GACLrC,EACA7zD,EACA+1D,EACAC,EACAt0C,EACAC,GAGGw0C,GACLtC,EACA7zD,EACA+1D,EACAC,EACAt0C,EACAC,GAGJo0C,EAAgBr0C,EAChBs0C,EAAiBr0C,CACvB,CACI,OAAOq0C,CAAc,CAEzB,CAxYaI,CAA6B1B,GAEtC,KAAKrE,GAAI0C,SACP,OA4YN,SAAkC2B,GAChC,MAAMe,EAAKf,EAAWnF,SAChBzyD,EAAS43D,EAAWl5C,KAAK1e,OAEzB0e,EAAO,IAAIvd,MAAMnB,GACvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5Bge,EAAKhe,GAAK03D,GAAkBR,EAAWl5C,KAAKhe,IAE9C,GAAQi4D,IACDpF,GAAI0C,SACP,OAAQpnD,IACN,MAAM3L,EAAQwb,EAAK,GAAG7P,GACtB,OAAI+oD,EAAWl5C,KAAK,GAAG7a,OAAS2tD,GACvBthC,GAAShtB,GAEXA,EAAMgtB,UAAU,EAIzB,MAAM,IAAI1oB,MAAM,gCAAgCmxD,IAGtD,CAlaaY,CAAyB3B,GAElC,QACE,MAAM,IAAIpwD,MAAM,wBAAwBirD,KAU9C,CAgaA,SAAS4G,GAAkBtC,EAAM7zD,EAAOs2D,EAAQC,EAASC,EAAQC,GAC/D,MAAMttD,EAAQqtD,EAASF,EACvB,GAAc,IAAVntD,EACF,OAAOotD,EAET,MAAMx5C,EAAQ/c,EAAQs2D,EAKtB,OAAOC,GAHI,IAAT1C,EACI92C,EAAQ5T,GACPtB,KAAKC,IAAI+rD,EAAM92C,GAAS,IAAMlV,KAAKC,IAAI+rD,EAAM1qD,GAAS,KAClCstD,EAAUF,EACvC,CAWA,SAASL,GAAiBrC,EAAM7zD,EAAOs2D,EAAQI,EAAOF,EAAQG,GAE5D,GAAc,IADAH,EAASF,EAErB,OAAOI,EAET,MAAME,EAAQjJ,GAAW+I,GACnBG,EAAQlJ,GAAWgJ,GACzB,IAAIG,EAAWD,EAAM,GAAKD,EAAM,GAC5BE,EAAW,IACbA,GAAY,IACHA,SACTA,GAAY,KASd,OAAOhJ,GANM,CACXqI,GAAkBtC,EAAM7zD,EAAOs2D,EAAQM,EAAM,GAAIJ,EAAQK,EAAM,IAC/DV,GAAkBtC,EAAM7zD,EAAOs2D,EAAQM,EAAM,GAAIJ,EAAQK,EAAM,IAC/DD,EAAM,GAAKT,GAAkBtC,EAAM7zD,EAAOs2D,EAAQ,EAAGE,EAAQM,GAC7DX,GAAkBtC,EAAM7zD,EAAOs2D,EAAQI,EAAM,GAAIF,EAAQG,EAAM,KAGnE,CC7nBA,MAAMI,GACJ,WAAA/6D,GAKEC,KAAK+6D,OAAS,CAAE,EAMhB/6D,KAAKg7D,cAAgB,CAAE,EAMvBh7D,KAAKi7D,WAAa,EAMlBj7D,KAAKk7D,cAAgB,IACzB,CAKE,KAAA72D,GACErE,KAAK+6D,OAAS,CAAE,EAChB/6D,KAAKg7D,cAAgB,CAAE,EACvBh7D,KAAKi7D,WAAa,CACtB,CAKE,cAAAE,GACE,OAAOn7D,KAAKi7D,WAAaj7D,KAAKk7D,aAClC,CAKE,MAAAE,GACE,GAAIp7D,KAAKm7D,iBAAkB,CACzB,IAAI55D,EAAI,EACR,IAAK,MAAM+F,KAAOtH,KAAK+6D,OAAQ,CAC7B,MAAMM,EAAYr7D,KAAK+6D,OAAOzzD,GACnB,EAAN/F,KAAmB85D,EAAU50D,uBACzBzG,KAAK+6D,OAAOzzD,UACZtH,KAAKg7D,cAAc1zD,KACxBtH,KAAKi7D,WAEjB,CACA,CACA,CAQE,GAAAhyD,CAAI80B,EAAKU,EAAagyB,GACpB,MAAMnpD,EAAMg0D,GAAYv9B,EAAKU,EAAagyB,GAC1C,OAAOnpD,KAAOtH,KAAK+6D,OAAS/6D,KAAK+6D,OAAOzzD,GAAO,IACnD,CAQE,UAAAi0D,CAAWx9B,EAAKU,EAAagyB,GAC3B,MAAMnpD,EAAMg0D,GAAYv9B,EAAKU,EAAagyB,GAC1C,OAAOnpD,KAAOtH,KAAKg7D,cAAgBh7D,KAAKg7D,cAAc1zD,GAAO,IACjE,CASE,GAAAsC,CAAIm0B,EAAKU,EAAagyB,EAAO4K,EAAWG,GACtC,MAAMl0D,EAAMg0D,GAAYv9B,EAAKU,EAAagyB,GACpCvwB,EAAS54B,KAAOtH,KAAK+6D,OAC3B/6D,KAAK+6D,OAAOzzD,GAAO+zD,EACfG,IACEH,EAAUI,kBAAoBh/B,IAChC4+B,EAAUxuD,OAERwuD,EAAUI,kBAAoBh/B,GAChC4+B,EAAUK,QAAQnoD,MAAK,KACrBvT,KAAKg7D,cAAc1zD,GAAOkI,KAA2BmsD,cACnDN,EAAUt+B,SAAS,GACnB,SACD,IAGH/8B,KAAKg7D,cAAc1zD,GAAOkI,KAA2BmsD,cACnDN,EAAUt+B,SAAS,GACnB,WAIDmD,KACDlgC,KAAKi7D,UAEb,CASE,OAAAW,CAAQC,GACN77D,KAAKk7D,cAAgBW,EACrB77D,KAAKo7D,QACT,EASO,SAASE,GAAYv9B,EAAKU,EAAagyB,GAE5C,OAAOhyB,EAAc,IAAMV,EAAM,KADb0yB,EAAQqB,GAAQrB,GAAS,OAE/C,CASO,MAAMqL,GAAS,IAAIhB,GC/I1B,IAAIiB,GAAqB,KAEzB,MAAMC,WAAkBx0D,EAQtB,WAAAzH,CAAYsS,EAAO0rB,EAAKU,EAAaw9B,EAAYxL,GAC/CxrD,QAMAjF,KAAKk8D,mBAAqB,KAM1Bl8D,KAAK88B,OAASzqB,EAMdrS,KAAK2+B,aAAeF,EAMpBz+B,KAAKs+B,QAAU,CAAE,EAMjBt+B,KAAKm8D,OAAS1L,EAMdzwD,KAAKo8D,iBAA6B51D,IAAfy1D,EAA2Bx/B,GAAkBw/B,EAMhEj8D,KAAK+S,MACHV,GAASA,EAAMvD,OAASuD,EAAMtD,OAAS,CAACsD,EAAMvD,MAAOuD,EAAMtD,QAAU,KAMvE/O,KAAK4+B,KAAOb,EAKZ/9B,KAAKq8D,SAMLr8D,KAAKs8D,OAAS,IAClB,CAKE,gBAAAC,GACEv8D,KAAK88B,OAAS,IAAIzuB,MACQ,OAAtBrO,KAAK2+B,eACP3+B,KAAK88B,OAAO2B,YAAcz+B,KAAK2+B,aAErC,CAME,UAAA69B,GACE,QAAsBh2D,IAAlBxG,KAAKq8D,UAA0Br8D,KAAKo8D,cAAgB3/B,GAAmB,CACpEs/B,KACHA,GAAqBltD,GAAsB,EAAG,OAAGrI,EAAW,CAC1D8L,oBAAoB,KAGxBypD,GAAmBxpD,UAAUvS,KAAK88B,OAAQ,EAAG,GAC7C,IACEi/B,GAAmBvpD,aAAa,EAAG,EAAG,EAAG,GACzCxS,KAAKq8D,UAAW,CACxB,CAAQ,MACAN,GAAqB,KACrB/7D,KAAKq8D,UAAW,CACxB,CACA,CACI,OAAyB,IAAlBr8D,KAAKq8D,QAChB,CAKE,oBAAAI,GACEz8D,KAAK4F,cAAc/F,EACvB,CAKE,iBAAAm/B,GACEh/B,KAAKo8D,YAAc3/B,GACnBz8B,KAAKy8D,sBACT,CAKE,gBAAAp9B,GACEr/B,KAAKo8D,YAAc3/B,GACnBz8B,KAAK+S,MAAQ,CAAC/S,KAAK88B,OAAOhuB,MAAO9O,KAAK88B,OAAO/tB,QAC7C/O,KAAKy8D,sBACT,CAME,QAAA1/B,CAASJ,GAKP,OAJK38B,KAAK88B,QACR98B,KAAKu8D,mBAEPv8D,KAAK08D,cAAc//B,GACZ38B,KAAKs+B,QAAQ3B,GAAc38B,KAAKs+B,QAAQ3B,GAAc38B,KAAK88B,MACtE,CAME,aAAAE,CAAcL,GAEZ,OADA38B,KAAK08D,cAAc//B,GACZ38B,KAAKs+B,QAAQ3B,GAAcA,EAAa,CACnD,CAKE,aAAA8+B,GACE,OAAOz7D,KAAKo8D,WAChB,CAKE,oBAAAO,GAIE,GAHK38D,KAAK88B,QACR98B,KAAKu8D,oBAEFv8D,KAAKk8D,mBACR,GAAIl8D,KAAKw8D,aAAc,CACrB,MAAM1tD,EAAQ9O,KAAK+S,MAAM,GACnBhE,EAAS/O,KAAK+S,MAAM,GACpBrD,EAAUb,GAAsBC,EAAOC,GAC7CW,EAAQyvB,SAAS,EAAG,EAAGrwB,EAAOC,GAC9B/O,KAAKk8D,mBAAqBxsD,EAAQR,MAC1C,MACQlP,KAAKk8D,mBAAqBl8D,KAAK88B,OAGnC,OAAO98B,KAAKk8D,kBAChB,CAME,OAAA/oD,GACE,OAAOnT,KAAK+S,KAChB,CAKE,MAAA6pD,GACE,OAAO58D,KAAK4+B,IAChB,CAKE,IAAA/xB,GACE,GAAI7M,KAAKo8D,cAAgB3/B,GAAzB,CAGKz8B,KAAK88B,QACR98B,KAAKu8D,mBAGPv8D,KAAKo8D,YAAc3/B,GACnB,SACoBj2B,IAAdxG,KAAK4+B,OAC0B5+B,KAAW,OAAE+9B,IAAM/9B,KAAK4+B,KAEjE,CAAM,MACA5+B,KAAKg/B,mBACX,CACQh/B,KAAK88B,kBAAkBK,kBACzBgB,GAAen+B,KAAK88B,OAAQ98B,KAAK4+B,MAC9BrrB,MAAMlB,IACLrS,KAAK88B,OAASzqB,EACdrS,KAAKq/B,kBAAkB,IAExB7rB,MAAMxT,KAAKg/B,kBAAkB93B,KAAKlH,MAnB3C,CAqBA,CAME,aAAA08D,CAAc//B,GACZ,IACG38B,KAAKm8D,QACNn8D,KAAKs+B,QAAQ3B,IACb38B,KAAKo8D,cAAgB3/B,GAErB,OAGF,MAAMpqB,EAAQrS,KAAK88B,OACbmC,EAAMpwB,GACVjD,KAAKgS,KAAKvL,EAAMvD,MAAQ6tB,GACxB/wB,KAAKgS,KAAKvL,EAAMtD,OAAS4tB,IAErBztB,EAAS+vB,EAAI/vB,OAEnB+vB,EAAIhd,MAAM0a,EAAYA,GACtBsC,EAAI1sB,UAAUF,EAAO,EAAG,GAExB4sB,EAAI49B,yBAA2B,WAC/B59B,EAAIC,UAAYoyB,GAAStxD,KAAKm8D,QAC9Bl9B,EAAIE,SAAS,EAAG,EAAGjwB,EAAOJ,MAAQ6tB,EAAYztB,EAAOH,OAAS4tB,GAE9DsC,EAAI49B,yBAA2B,iBAC/B59B,EAAI1sB,UAAUF,EAAO,EAAG,GAExBrS,KAAKs+B,QAAQ3B,GAAcztB,CAC/B,CAKE,KAAAwsD,GAsBE,OArBK17D,KAAKs8D,SACRt8D,KAAKs8D,OAAS,IAAIr4D,SAASE,IACzB,GACEnE,KAAKo8D,cAAgB3/B,IACrBz8B,KAAKo8D,cAAgB3/B,GAErBt4B,QACK,CACL,MAAM24D,EAAW,KAEb98D,KAAKo8D,cAAgB3/B,IACrBz8B,KAAKo8D,cAAgB3/B,KAErBz8B,KAAKsG,oBAAoBzG,EAAkBi9D,GAC3C34D,IACd,EAEUnE,KAAKsF,iBAAiBzF,EAAkBi9D,EAClD,MAGW98D,KAAKs8D,MAChB,EAYO,SAASrzD,GAAIoJ,EAAO0qD,EAAUt+B,EAAaw9B,EAAYxL,EAAO+K,GACnE,IAAIH,OACW70D,IAAbu2D,OACIv2D,EACAw2D,GAAe/zD,IAAI8zD,EAAUt+B,EAAagyB,GAkBhD,OAjBK4K,IACHA,EAAY,IAAIW,GACd3pD,EACAA,GAAS,QAASA,EAAQA,EAAM0rB,UAAOv3B,EAAYu2D,EACnDt+B,EACAw9B,EACAxL,GAEFuM,GAAepzD,IAAImzD,EAAUt+B,EAAagyB,EAAO4K,EAAWG,IAG5DA,GACAH,IACC2B,GAAezB,WAAWwB,EAAUt+B,EAAagyB,IAElDuM,GAAepzD,IAAImzD,EAAUt+B,EAAagyB,EAAO4K,EAAWG,GAEvDH,CACT,CCxSO,SAAS4B,GAAYxM,GAC1B,OAAKA,EAGDzuD,MAAMC,QAAQwuD,GACT1/B,GAAS0/B,GAEG,iBAAVA,GAAsB,QAASA,EAW5C,SAAyB+K,GACvB,IAAKA,EAAQnkD,SAAWmkD,EAAQxoD,KAC9B,OAAOkqD,GAAU3B,WAAWC,EAAQz9B,IAAK,YAAay9B,EAAQ/K,OAGhE,MAAMsM,EAAWvB,EAAQz9B,IAAM,IAAMy9B,EAAQnkD,OAEvC8lD,EAAgBD,GAAU3B,WAC9BwB,OACAv2D,EACAg1D,EAAQ/K,OAEV,GAAI0M,EACF,OAAOA,EAGT,MAAM9B,EAAY6B,GAAUj0D,IAAIuyD,EAAQz9B,IAAK,YAAa,MAC1D,GAAIs9B,EAAUI,kBAAoBh/B,GAChC,OAAO,KAET,MAAM2gC,EAAuBvuD,GAC3B2sD,EAAQxoD,KAAK,GACbwoD,EAAQxoD,KAAK,IAqBf,OAnBAoqD,EAAqB7qD,UACnB8oD,EAAUt+B,SAAS,GACnBy+B,EAAQnkD,OAAO,GACfmkD,EAAQnkD,OAAO,GACfmkD,EAAQxoD,KAAK,GACbwoD,EAAQxoD,KAAK,GACb,EACA,EACAwoD,EAAQxoD,KAAK,GACbwoD,EAAQxoD,KAAK,IAEfqqD,GACED,EAAqBluD,OACrB6tD,OACAv2D,EACAi2B,GACA++B,EAAQ/K,OACR,GAEKyM,GAAU3B,WAAWwB,OAAUv2D,EAAWg1D,EAAQ/K,MAC3D,CAtDW6M,CAAgB7M,GAElBA,EARE,IASX,CC4CO,MAAM8M,GAAc,kBAMdC,GAAmB,OAMnBC,GAAiB,QAMjBC,GAAkB,GAYlBC,GAAkB,QAMlBC,GAAoB,GAMpBC,GAAqB,OAMrBC,GAAmB,SAMnBC,GAAsB,SAMtBC,GAAiB,CAAC,EAAG,EAAG,EAAG,GAW3BC,GAAe,IAAIp1D,EAKhC,IAKIq1D,GALAC,GAAiB,KAUd,MAAMC,GAAc,CAAE,EAMhBC,GAAe,WAC1B,MACMrrD,EAAO,QACPsrD,EAAiB,CAAC,YAAa,SAC/Bv2D,EAAMu2D,EAAez9D,OACrB09D,EAAO,2BACb,IAAIC,EAAUC,EAQd,SAASC,EAAYC,EAAWC,EAAYC,GAC1C,IAAIC,GAAY,EAChB,IAAK,IAAIv9D,EAAI,EAAGA,EAAIwG,IAAOxG,EAAG,CAC5B,MAAMw9D,EAAgBT,EAAe/8D,GAKrC,GAJAk9D,EAAiBO,GACfL,EAAY,IAAMC,EAAa,IAAM5rD,EAAO+rD,EAC5CR,GAEEM,GAAcE,EAAe,CAC/B,MAAMjwD,EAAQkwD,GACZL,EACE,IACAC,EACA,IACA5rD,EACA6rD,EACA,IACAE,EACFR,GAIFO,EAAYA,GAAahwD,GAAS2vD,CAC1C,CACA,CACI,QAAIK,CAIR,CAEE,SAASG,IACP,IAAIC,GAAO,EACX,MAAMC,EAAQlB,GAAa90D,UAC3B,IAAK,IAAI5H,EAAI,EAAG4E,EAAKg5D,EAAMt+D,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM69D,EAAOD,EAAM59D,GACnB,GAAI08D,GAAah1D,IAAIm2D,GAjDT,IAiD0B,CACpC,MAAOtvD,EAAO2mC,EAAQG,GAAUwoB,EAAKj/C,MAAM,MACvCu+C,EAAY5uD,EAAO2mC,EAAQG,IAC7BvyC,EAAM+5D,IAEND,GAAiB,KACjBD,QAAc13D,EACdy3D,GAAar0D,IAAIw1D,EAxDT,OA0DRnB,GAAar0D,IAAIw1D,EAAMnB,GAAah1D,IAAIm2D,GAAQ,GAAG,GACnDF,GAAO,EAEjB,CACA,CACQA,IACFG,cAAcb,GACdA,OAAWh4D,EAEjB,CAEE,OAAO,SAAU+vC,GACf,MAAM6oB,EAAO9oB,GAAkBC,GAC/B,IAAK6oB,EACH,OAEF,MAAMzoB,EAAWyoB,EAAKzoB,SACtB,IAAK,IAAIp1C,EAAI,EAAG4E,EAAKwwC,EAAS91C,OAAQU,EAAI4E,IAAM5E,EAAG,CACjD,MAAMq1C,EAASD,EAASp1C,GAClB+F,EAAM83D,EAAKtvD,MAAQ,KAAOsvD,EAAK3oB,OAAS,KAAOG,OACvBpwC,IAA1By3D,GAAah1D,IAAI3B,KACnB22D,GAAar0D,IAAItC,EA/EP,KA+EqB,GAC1Bo3D,EAAYU,EAAKtvD,MAAOsvD,EAAK3oB,OAAQG,KACxCqnB,GAAar0D,IAAItC,EAAK,GAAG,QACRd,IAAbg4D,IACFA,EAAWc,YAAYL,EAAO,MAI1C,CACG,CACF,CA1F2B,GAgGfM,GAAoB,WAI/B,IAAIC,EACJ,OAAO,SAAUjpB,GACf,IAAIxnC,EAASqvD,GAAY7nB,GACzB,GAAc/vC,MAAVuI,EAAqB,CACvB,GAAIf,GAAyB,CAC3B,MAAMoxD,EAAO9oB,GAAkBC,GACzBkpB,EAAUC,GAAYnpB,EAAU,MAItCxnC,GAHmBmkB,MAAML,OAAOusC,EAAK5oB,aACjC,IACA3jB,OAAOusC,EAAK5oB,cAGbipB,EAAQE,wBAA0BF,EAAQG,yBACrD,MACaJ,IACHA,EAAiBpwD,SAASC,cAAc,OACxCmwD,EAAeplB,UAAY,IAC3BolB,EAAe1vD,MAAM+vD,UAAY,IACjCL,EAAe1vD,MAAMgwD,UAAY,OACjCN,EAAe1vD,MAAMf,OAAS,OAC9BywD,EAAe1vD,MAAMi8B,QAAU,IAC/ByzB,EAAe1vD,MAAMiwD,OAAS,OAC9BP,EAAe1vD,MAAMwjC,SAAW,WAChCksB,EAAe1vD,MAAMkqC,QAAU,QAC/BwlB,EAAe1vD,MAAM4xC,KAAO,YAE9B8d,EAAe1vD,MAAMsvD,KAAO7oB,EAC5BnnC,SAAS4wD,KAAKxuD,YAAYguD,GAC1BzwD,EAASywD,EAAepvD,aACxBhB,SAAS4wD,KAAKzuD,YAAYiuD,GAE5BpB,GAAY7nB,GAAYxnC,CAC9B,CACI,OAAOA,CACR,CACF,CAvCgC,GA8CjC,SAAS2wD,GAAYN,EAAMb,GAQzB,OAPKJ,KACHA,GAAiBtvD,GAAsB,EAAG,IAExCuwD,GAAQlB,KACVC,GAAeiB,KAAOA,EACtBlB,GAAcC,GAAeiB,MAExBjB,GAAeuB,YAAYnB,EACpC,CAOO,SAASS,GAAiBI,EAAMb,GACrC,OAAOmB,GAAYN,EAAMb,GAAMzvD,KACjC,CASO,SAASmxD,GAAyBb,EAAMb,EAAMv4C,GACnD,GAAIu4C,KAAQv4C,EACV,OAAOA,EAAMu4C,GAEf,MAAMzvD,EAAQyvD,EACXp+C,MAAM,MACN+/C,QAAO,CAAC50D,EAAM60D,IAASv0D,KAAKoM,IAAI1M,EAAM0zD,GAAiBI,EAAMe,KAAQ,GAExE,OADAn6C,EAAMu4C,GAAQzvD,EACPA,CACT,CAOO,SAASsxD,GAAkBC,EAAWC,GAC3C,MAAMC,EAAS,GACTC,EAAU,GACVC,EAAa,GACnB,IAAI3xD,EAAQ,EACR4xD,EAAY,EACZ3xD,EAAS,EACTynC,EAAa,EACjB,IAAK,IAAIj1C,EAAI,EAAG4E,EAAKm6D,EAAOz/D,OAAQU,GAAK4E,EAAI5E,GAAK,EAAG,CACnD,MAAMg9D,EAAO+B,EAAO/+D,GACpB,GAAa,OAATg9D,GAAiBh9D,IAAM4E,EAAI,CAC7B2I,EAAQlD,KAAKoM,IAAIlJ,EAAO4xD,GACxBD,EAAW96D,KAAK+6D,GAChBA,EAAY,EACZ3xD,GAAUynC,EACVA,EAAa,EACb,QACN,CACI,MAAM4oB,EAAOkB,EAAO/+D,EAAI,IAAM8+D,EAAUjB,KAClCuB,EAAe3B,GAAiBI,EAAMb,GAC5CgC,EAAO56D,KAAKg7D,GACZD,GAAaC,EACb,MAAMC,EAAgBrB,GAAkBH,GACxCoB,EAAQ76D,KAAKi7D,GACbpqB,EAAa5qC,KAAKoM,IAAIw+B,EAAYoqB,EACtC,CACE,MAAO,CAAC9xD,QAAOC,SAAQwxD,SAAQC,UAASC,aAC1C,CA6BO,SAASI,GACdnxD,EACAqd,EACA05B,EACAqa,EACAC,EACAC,EACAhxB,EACAC,EACAl6B,EACAC,EACAiM,GAEAvS,EAAQuxD,OAEQ,IAAZxa,SAC0BjgD,IAAxBkJ,EAAQwxD,YACVxxD,EAAQwxD,YAAexxD,GAAaA,EAAQwxD,aAAeza,EAE3D/2C,EAAQwxD,aAAeza,GAGvB15B,GACFrd,EAAQqd,UAAUnpB,MAAM8L,EAASqd,GAGd,EAAeo0C,qBAElCzxD,EAAQygB,UAAUpa,EAAGC,GACrBtG,EAAQuS,MAAMA,EAAM,GAAIA,EAAM,IA2ClC,SAAkCu2B,EAAO9oC,GACvC,MAAMyxD,EAAsB3oB,EAAM2oB,oBAClC,IAAK,IAAI5/D,EAAI,EAAG4E,EAAKg7D,EAAoBtgE,OAAQU,EAAI4E,EAAI5E,GAAK,EACxDS,MAAMC,QAAQk/D,EAAoB5/D,EAAI,IACxCmO,EAAQyxD,EAAoB5/D,IAAIqC,MAC9B8L,EACAyxD,EAAoB5/D,EAAI,IAG1BmO,EAAQyxD,EAAoB5/D,IAAM4/D,EAAoB5/D,EAAI,EAGhE,CAtDI6/D,CAAwB,EAAsC1xD,IACrDuS,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpCvS,EAAQygB,UAAUpa,EAAGC,GACrBtG,EAAQuS,MAAMA,EAAM,GAAIA,EAAM,IAC9BvS,EAAQ6C,UACZ,EAGMwuD,EACAC,EACAhxB,EACAC,EACA,EACA,EACAD,EACAC,IAIFvgC,EAAQ6C,UACZ,EAGMwuD,EACAC,EACAhxB,EACAC,EACAl6B,EACAC,EACAg6B,EAAI/tB,EAAM,GACVguB,EAAIhuB,EAAM,IAIdvS,EAAQ2xD,SACV,CCndA,MAAMC,GAIJ,WAAAvhE,CAAYuK,GAKVtK,KAAKuhE,SAAWj3D,EAAQm8C,QAMxBzmD,KAAKwhE,gBAAkBl3D,EAAQm3D,eAM/BzhE,KAAKk7C,UAAY5wC,EAAQ4O,SAMzBlZ,KAAK0hE,OAASp3D,EAAQ2X,MAMtBjiB,KAAK2hE,YAAc3P,GAAO1nD,EAAQ2X,OAMlCjiB,KAAK4hE,cAAgBt3D,EAAQu3D,aAM7B7hE,KAAK8hE,eAAiBx3D,EAAQy3D,aAClC,CAOE,KAAAttD,GACE,MAAMwN,EAAQjiB,KAAKgiE,WACnB,OAAO,IAAIV,GAAW,CACpB7a,QAASzmD,KAAKknD,aACdjlC,MAAOjgB,MAAMC,QAAQggB,GAASA,EAAMze,QAAUye,EAC9C/I,SAAUlZ,KAAKqtC,cACfo0B,eAAgBzhE,KAAKiiE,oBACrBJ,aAAc7hE,KAAKkiE,kBAAkB1+D,QACrCu+D,cAAe/hE,KAAKmiE,oBAE1B,CAOE,UAAAjb,GACE,OAAOlnD,KAAKuhE,QAChB,CAOE,iBAAAU,GACE,OAAOjiE,KAAKwhE,eAChB,CAOE,WAAAn0B,GACE,OAAOrtC,KAAKk7C,SAChB,CAOE,QAAA8mB,GACE,OAAOhiE,KAAK0hE,MAChB,CAME,aAAAU,GACE,OAAOpiE,KAAK2hE,WAChB,CAOE,eAAAO,GACE,OAAOliE,KAAK4hE,aAChB,CAOE,gBAAAO,GACE,OAAOniE,KAAK8hE,cAChB,CAQE,SAAAO,GACE,OAAOj6D,GACX,CAQE,QAAA20B,CAASJ,GACP,OAAOv0B,GACX,CAME,oBAAAu0D,GACE,OAAOv0D,GACX,CAOE,aAAA40B,CAAcL,GACZ,OAAO,CACX,CAME,aAAA8+B,GACE,OAAOrzD,GACX,CAME,YAAAk6D,GACE,OAAOl6D,GACX,CAOE,SAAAm6D,GACE,OAAOn6D,GACX,CAOE,OAAA+K,GACE,OAAO/K,GACX,CAQE,eAAAo6D,CAAgBX,GACd7hE,KAAK4hE,cAAgBC,CACzB,CAQE,UAAAla,CAAWlB,GACTzmD,KAAKuhE,SAAW9a,CACpB,CAQE,iBAAAgc,CAAkBhB,GAChBzhE,KAAKwhE,gBAAkBC,CAC3B,CAQE,WAAAh1B,CAAYvzB,GACVlZ,KAAKk7C,UAAYhiC,CACrB,CAQE,QAAAwpD,CAASzgD,GACPjiB,KAAK0hE,OAASz/C,EACdjiB,KAAK2hE,YAAc3P,GAAO/vC,EAC9B,CAME,iBAAA0gD,CAAkBp9D,GAChB6C,GACJ,CAME,IAAAyE,GACEzE,GACJ,CAME,mBAAAw6D,CAAoBr9D,GAClB6C,GACJ,CAKE,KAAAszD,GACE,OAAOz3D,QAAQE,SACnB,ECpPA,MAAM0+D,WAAqBvB,GAIzB,WAAAvhE,CAAYuK,GACVrF,MAAM,CACJwhD,QAAS,EACTgb,oBAC6Bj7D,IAA3B8D,EAAQm3D,gBAA+Bn3D,EAAQm3D,eACjDvoD,cAA+B1S,IAArB8D,EAAQ4O,SAAyB5O,EAAQ4O,SAAW,EAC9D+I,WAAyBzb,IAAlB8D,EAAQ2X,MAAsB3X,EAAQ2X,MAAQ,EACrD4/C,kBAC2Br7D,IAAzB8D,EAAQu3D,aAA6Bv3D,EAAQu3D,aAAe,CAAC,EAAG,GAClEE,cAAez3D,EAAQy3D,gBAOzB/hE,KAAK8iE,oBAAsB,KAM3B9iE,KAAK+iE,WAAyBv8D,IAAjB8D,EAAQ04D,KAAqB14D,EAAQ04D,KAAO,KAMzDhjE,KAAKijE,QAAU,CAAC,EAAG,GAMnBjjE,KAAK+/B,QAAUz1B,EAAQ44D,OAMvBljE,KAAKme,OAAS7T,EAAQ6T,OAMtBne,KAAKmjE,SAAW74D,EAAQ84D,QAMxBpjE,KAAKggC,YAA2Bx5B,IAAlB8D,EAAQwX,MAAsBxX,EAAQwX,MAAQ,EAM5D9hB,KAAKqjE,aAA6B78D,IAAnB8D,EAAQg5D,OAAuBh5D,EAAQg5D,OAAS,KAM/DtjE,KAAK+S,MAML/S,KAAKujE,eAKLvjE,KAAKo8D,YACHp8D,KAAK+iE,OAAS/iE,KAAK+iE,MAAMS,UACrB/mC,GACAA,GACFz8B,KAAKo8D,cAAgB3/B,IACvBz8B,KAAK07D,QAAQnoD,MAAK,IAAOvT,KAAKo8D,YAAc3/B,KAE9Cz8B,KAAKg3C,QACT,CAQE,KAAAviC,GACE,MAAMwN,EAAQjiB,KAAKgiE,WACblyD,EAAQ,IAAI+yD,GAAa,CAC7BG,KAAMhjE,KAAKyjE,UAAYzjE,KAAKyjE,UAAUhvD,aAAUjO,EAChD08D,OAAQljE,KAAK0jE,YACbvlD,OAAQne,KAAK0gB,YACb0iD,QAASpjE,KAAK2jE,aACd7hD,MAAO9hB,KAAKwgC,WACZ8iC,OAAQtjE,KAAK4jE,YAAc5jE,KAAK4jE,YAAYnvD,aAAUjO,EACtD0S,SAAUlZ,KAAKqtC,cACfo0B,eAAgBzhE,KAAKiiE,oBACrBhgD,MAAOjgB,MAAMC,QAAQggB,GAASA,EAAMze,QAAUye,EAC9C4/C,aAAc7hE,KAAKkiE,kBAAkB1+D,QACrCu+D,cAAe/hE,KAAKmiE,qBAGtB,OADAryD,EAAM63C,WAAW3nD,KAAKknD,cACfp3C,CACX,CASE,SAAAuyD,GACE,MAAMrvD,EAAOhT,KAAK+S,MACZ8uD,EAAe7hE,KAAKkiE,kBACpBjgD,EAAQjiB,KAAKoiE,gBAGnB,MAAO,CACLpvD,EAAK,GAAK,EAAI6uD,EAAa,GAAK5/C,EAAM,GACtCjP,EAAK,GAAK,EAAI6uD,EAAa,GAAK5/C,EAAM,GAE5C,CAOE,QAAAue,GACE,OAAOxgC,KAAKggC,MAChB,CAOE,OAAAyjC,GACE,OAAOzjE,KAAK+iE,KAChB,CAOE,OAAAc,CAAQb,GACNhjE,KAAK+iE,MAAQC,EACbhjE,KAAKg3C,QACT,CAME,oBAAA2lB,GAME,OALK38D,KAAK8iE,sBACR9iE,KAAK8iE,oBAAsB9iE,KAAK8jE,0BAC9B9jE,KAAKujE,iBAGFvjE,KAAK8iE,mBAChB,CASE,QAAA/lC,CAASJ,GACP,MAAMonC,EAAU/jE,KAAK+iE,OAAOr2D,SACtBqwD,EACJ,GAAGpgC,KAAc38B,KAAKggC,UAAUhgC,KAAKme,UAAUne,KAAKmjE,YAAYnjE,KAAK+/B,WAAWgkC,IAChFr9D,OAAOoC,OAAO9I,KAAKujE,gBAAgBzjD,KAAK,KAC1C,IAAIzN,EACF2qD,GAAe/zD,IAAI8zD,EAAU,KAAM,OAAOhgC,SAAS,GAErD,IAAK1qB,EAAO,CACV,MAAM2xD,EAAgBhkE,KAAKujE,eACrBvwD,EAAOpH,KAAKgS,KAAKomD,EAAchxD,KAAO2pB,GACtCjtB,EAAUb,GAAsBmE,EAAMA,GAC5ChT,KAAKikE,MAAMD,EAAet0D,EAASitB,GAEnCtqB,EAAQ3C,EAAQR,OAChB8tD,GAAepzD,IACbmzD,EACA,KACA,KACA,IAAIf,GAAU3pD,OAAO7L,EAAW,KAAMi2B,GAAmB,MAEjE,CACI,OAAOpqB,CACX,CAQE,aAAA2qB,CAAcL,GACZ,OAAOA,CACX,CAME,YAAA2lC,GACE,OAAOtiE,KAAK+S,KAChB,CAME,aAAA0oD,GACE,OAAOz7D,KAAKo8D,WAChB,CAQE,SAAAmG,GACE,OAAOviE,KAAKijE,OAChB,CAOE,SAAAS,GACE,OAAO1jE,KAAK+/B,OAChB,CAOE,SAAArf,GACE,OAAO1gB,KAAKme,MAChB,CAOE,UAAAwlD,GACE,OAAO3jE,KAAKmjE,QAChB,CAQE,OAAAhwD,GACE,OAAOnT,KAAK+S,KAChB,CAOE,SAAA6wD,GACE,OAAO5jE,KAAKqjE,OAChB,CAOE,SAAAa,CAAUZ,GACRtjE,KAAKqjE,QAAUC,EACftjE,KAAKg3C,QACT,CAME,iBAAA2rB,CAAkBp9D,GAAU,CAM5B,IAAAsH,GAAO,CAMP,mBAAA+1D,CAAoBr9D,GAAU,CAU9B,sBAAA4+D,CAAuBC,EAAUC,EAAaC,GAC5C,GACkB,IAAhBD,GACArkE,KAAK+/B,UAAYhpB,KACH,UAAbqtD,GAAqC,UAAbA,EAEzB,OAAOC,EAwBT,IAAIE,EAAKvkE,KAAKme,OACVqmD,OAAuBh+D,IAAlBxG,KAAKmjE,SAAyBoB,EAAKvkE,KAAKmjE,SACjD,GAAIoB,EAAKC,EAAI,CACX,MAAM5iE,EAAM2iE,EACZA,EAAKC,EACLA,EAAK5iE,CACX,CACI,MAAMshE,OACc18D,IAAlBxG,KAAKmjE,SAAyBnjE,KAAK+/B,QAAyB,EAAf//B,KAAK+/B,QAC9C6wB,EAAS,EAAIhlD,KAAKuR,GAAM+lD,EACxBniE,EAAIyjE,EAAK54D,KAAKmO,IAAI62C,GAElBjwC,EAAI4jD,EADA34D,KAAK6S,KAAK+lD,EAAKA,EAAKzjE,EAAIA,GAE5BkvB,EAAIrkB,KAAK6S,KAAK1d,EAAIA,EAAI4f,EAAIA,GAC1B8jD,EAAax0C,EAAIlvB,EACvB,GAAiB,UAAbqjE,GAAwBK,GAAcH,EACxC,OAAOG,EAAaJ,EAetB,MAAMtnD,EAAIsnD,EAAc,EAAII,EACtBjpD,EAAK6oD,EAAc,GAAM1jD,EAAIsP,GAE7By0C,EADO94D,KAAK6S,MAAM8lD,EAAKxnD,IAAMwnD,EAAKxnD,GAAKvB,EAAIA,GACzB+oD,EACxB,QAAsB/9D,IAAlBxG,KAAKmjE,UAAuC,UAAbiB,EACjC,OAAkB,EAAXM,EAIT,MAAMC,EAAKJ,EAAK34D,KAAKmO,IAAI62C,GAEnBgU,EAAKJ,EADA54D,KAAK6S,KAAK8lD,EAAKA,EAAKI,EAAKA,GAG9BE,EADKj5D,KAAK6S,KAAKkmD,EAAKA,EAAKC,EAAKA,GACPD,EAC7B,GAAIE,GAAmBP,EAAY,CACjC,MAAMQ,EAAeD,EAAkBR,EAAe,EAAIG,EAAKD,EAC/D,OAAO,EAAI34D,KAAKoM,IAAI0sD,EAAUI,EACpC,CACI,OAAkB,EAAXJ,CACX,CAME,mBAAAK,GACE,IAKIC,EALAC,EAAUxH,GACV2G,EAAWzG,GACX2G,EAAa,EACbY,EAAW,KACXC,EAAiB,EAEjBd,EAAc,EAEdrkE,KAAKqjE,UACP2B,EAAc/H,GAAYj9D,KAAKqjE,QAAQ+B,YAAcvH,IACrDwG,EAAcrkE,KAAKqjE,QAAQ3qD,YFjUD,EEkU1BwsD,EAAWllE,KAAKqjE,QAAQgC,cACxBF,EAAiBnlE,KAAKqjE,QAAQiC,qBAAuB,EACrDlB,EAAWpkE,KAAKqjE,QAAQkC,eAAiB5H,GACzCsH,EAAUjlE,KAAKqjE,QAAQmC,cAAgB/H,GACvC6G,EAAatkE,KAAKqjE,QAAQoC,iBAAmB7H,IAG/C,MAAMr9C,EAAMvgB,KAAKmkE,uBAAuBC,EAAUC,EAAaC,GACzDoB,EAAY95D,KAAKoM,IAAIhY,KAAKme,OAAQne,KAAKmjE,UAAY,GAGzD,MAAO,CACL6B,YAAaA,EACbX,YAAaA,EACbrxD,KALWpH,KAAKgS,KAAK,EAAI8nD,EAAYnlD,GAMrC0kD,QAASA,EACTC,SAAUA,EACVC,eAAgBA,EAChBf,SAAUA,EACVE,WAAYA,EAElB,CAKE,MAAAttB,GACEh3C,KAAKujE,eAAiBvjE,KAAK+kE,sBAC3B,MAAM/xD,EAAOhT,KAAKujE,eAAevwD,KACjChT,KAAK8iE,oBAAsB,KAC3B9iE,KAAK+S,MAAQ,CAACC,EAAMA,EACxB,CAQE,KAAAixD,CAAMD,EAAet0D,EAASitB,GAO5B,GANAjtB,EAAQuS,MAAM0a,EAAYA,GAE1BjtB,EAAQygB,UAAU6zC,EAAchxD,KAAO,EAAGgxD,EAAchxD,KAAO,GAE/DhT,KAAK2lE,YAAYj2D,GAEb1P,KAAK+iE,MAAO,CACd,IAAItS,EAAQzwD,KAAK+iE,MAAMqC,WACT,OAAV3U,IACFA,EAAQ+M,IAEV9tD,EAAQwvB,UAAY+9B,GAAYxM,GAChC/gD,EAAQszD,MACd,CACQgB,EAAcgB,cAChBt1D,EAAQs1D,YAAchB,EAAcgB,YACpCt1D,EAAQgxD,UAAYsD,EAAcK,YAC9BL,EAAckB,WAChBx1D,EAAQk2D,YAAY5B,EAAckB,UAClCx1D,EAAQy1D,eAAiBnB,EAAcmB,gBAEzCz1D,EAAQu1D,QAAUjB,EAAciB,QAChCv1D,EAAQ00D,SAAWJ,EAAcI,SACjC10D,EAAQ40D,WAAaN,EAAcM,WACnC50D,EAAQ4zD,SAEd,CAOE,yBAAAQ,CAA0BE,GACxB,IAAIt0D,EACJ,GAAI1P,KAAK+iE,MAAO,CACd,IAAItS,EAAQzwD,KAAK+iE,MAAMqC,WAGnB3e,EAAU,EACO,iBAAVgK,IACTA,EAAQqB,GAAQrB,IAEJ,OAAVA,EACFhK,EAAU,EACDzkD,MAAMC,QAAQwuD,KACvBhK,EAA2B,IAAjBgK,EAAM5vD,OAAe4vD,EAAM,GAAK,GAE5B,IAAZhK,IAGF/2C,EAAUb,GAAsBm1D,EAAchxD,KAAMgxD,EAAchxD,MAClEhT,KAAK6lE,wBAAwB7B,EAAet0D,GAEpD,CACI,OAAOA,EAAUA,EAAQR,OAASlP,KAAK+8B,SAAS,EACpD,CAME,WAAA4oC,CAAYj2D,GACV,IAAIwzD,EAASljE,KAAK+/B,QAClB,MAAM5hB,EAASne,KAAKme,OACpB,GAAI+kD,IAAWnsD,IACbrH,EAAQo2D,IAAI,EAAG,EAAG3nD,EAAQ,EAAG,EAAIvS,KAAKuR,QACjC,CACL,MAAMimD,OAA4B58D,IAAlBxG,KAAKmjE,SAAyBhlD,EAASne,KAAKmjE,cACtC38D,IAAlBxG,KAAKmjE,WACPD,GAAU,GAEZ,MAAM7mC,EAAar8B,KAAKggC,OAASp0B,KAAKuR,GAAK,EACrC4zC,EAAQ,EAAInlD,KAAKuR,GAAM+lD,EAC7B,IAAK,IAAI3hE,EAAI,EAAGA,EAAI2hE,EAAQ3hE,IAAK,CAC/B,MAAMwkE,EAAS1pC,EAAa96B,EAAIwvD,EAC1BiV,EAAUzkE,EAAI,GAAM,EAAI4c,EAASilD,EACvC1zD,EAAQu2D,OAAOD,EAAUp6D,KAAKiO,IAAIksD,GAASC,EAAUp6D,KAAKmO,IAAIgsD,GACtE,CACMr2D,EAAQw2D,WACd,CACA,CAOE,uBAAAL,CAAwB7B,EAAet0D,GAErCA,EAAQygB,UAAU6zC,EAAchxD,KAAO,EAAGgxD,EAAchxD,KAAO,GAE/DhT,KAAK2lE,YAAYj2D,GAEjBA,EAAQwvB,UAAYs+B,GACpB9tD,EAAQszD,OACJgB,EAAcgB,cAChBt1D,EAAQs1D,YAAchB,EAAcgB,YACpCt1D,EAAQgxD,UAAYsD,EAAcK,YAC9BL,EAAckB,WAChBx1D,EAAQk2D,YAAY5B,EAAckB,UAClCx1D,EAAQy1D,eAAiBnB,EAAcmB,gBAEzCz1D,EAAQ00D,SAAWJ,EAAcI,SACjC10D,EAAQ40D,WAAaN,EAAcM,WACnC50D,EAAQ4zD,SAEd,CAKE,KAAA5H,GACE,OAAO17D,KAAK+iE,MAAQ/iE,KAAK+iE,MAAMrH,QAAUz3D,QAAQE,SACrD,EChmBA,MAAMgiE,WAAoBtD,GAIxB,WAAA9iE,CAAYuK,GAGVrF,MAAM,CACJi+D,OAAQnsD,IACRisD,MAJF14D,EAAUA,GAAoB,CAAC6T,OAAQ,IAIvB6kD,KACd7kD,OAAQ7T,EAAQ6T,OAChBmlD,OAAQh5D,EAAQg5D,OAChBrhD,WAAyBzb,IAAlB8D,EAAQ2X,MAAsB3X,EAAQ2X,MAAQ,EACrD/I,cAA+B1S,IAArB8D,EAAQ4O,SAAyB5O,EAAQ4O,SAAW,EAC9DuoD,oBAC6Bj7D,IAA3B8D,EAAQm3D,gBAA+Bn3D,EAAQm3D,eACjDI,kBAC2Br7D,IAAzB8D,EAAQu3D,aAA6Bv3D,EAAQu3D,aAAe,CAAC,EAAG,GAClEE,cAAez3D,EAAQy3D,eAE7B,CAQE,KAAAttD,GACE,MAAMwN,EAAQjiB,KAAKgiE,WACblyD,EAAQ,IAAIq2D,GAAY,CAC5BnD,KAAMhjE,KAAKyjE,UAAYzjE,KAAKyjE,UAAUhvD,aAAUjO,EAChD88D,OAAQtjE,KAAK4jE,YAAc5jE,KAAK4jE,YAAYnvD,aAAUjO,EACtD2X,OAAQne,KAAK0gB,YACbuB,MAAOjgB,MAAMC,QAAQggB,GAASA,EAAMze,QAAUye,EAC9C/I,SAAUlZ,KAAKqtC,cACfo0B,eAAgBzhE,KAAKiiE,oBACrBJ,aAAc7hE,KAAKkiE,kBAAkB1+D,QACrCu+D,cAAe/hE,KAAKmiE,qBAGtB,OADAryD,EAAM63C,WAAW3nD,KAAKknD,cACfp3C,CACX,CAQE,SAAAs2D,CAAUjoD,GACRne,KAAKme,OAASA,EACdne,KAAKg3C,QACT,ECxDA,MAAMqvB,GAIJ,WAAAtmE,CAAYuK,GACVA,EAAUA,GAAW,CAAE,EAMvBtK,KAAKsmE,cAAgB,KAMrBtmE,KAAKm8D,OAAS,UACQ31D,IAAlB8D,EAAQmmD,OACVzwD,KAAKumE,SAASj8D,EAAQmmD,MAE5B,CAOE,KAAAh8C,GACE,MAAMg8C,EAAQzwD,KAAKolE,WACnB,OAAO,IAAIiB,GAAK,CACd5V,MAAOzuD,MAAMC,QAAQwuD,GAASA,EAAMjtD,QAAUitD,QAASjqD,GAE7D,CAOE,QAAA4+D,GACE,OAAOplE,KAAKm8D,MAChB,CAQE,QAAAoK,CAAS9V,GACP,GAAc,OAAVA,GAAmC,iBAAVA,GAAsB,QAASA,EAAO,CACjE,MAAM+V,EAAenJ,GACnB,KACA5M,EAAM1yB,IACN,iBACAv3B,EACAiqD,EAAMp5C,OAAS,KAAOo5C,EAAMA,MAAQA,EAAMA,MAAQ,OAChDA,EAAMp5C,QAAUo5C,EAAMz9C,OAE1BwzD,EAAa9K,QAAQnoD,MAAK,KACxBvT,KAAKsmE,cAAgB,IAAI,IAEvBE,EAAa/K,kBAAoBh/B,IACnC+pC,EAAa35D,OAEX25D,EAAa/K,kBAAoBh/B,KACnCz8B,KAAKsmE,cAAgBE,EAE7B,CACIxmE,KAAKm8D,OAAS1L,CAClB,CAKE,MAAA/jD,GACE,MAAMs2D,EAAOhjE,KAAKolE,WAClB,OAAKpC,EAGEA,aAAgByD,eAAiBzD,aAAgB0D,eACpDn+D,EAAOy6D,GACS,iBAATA,GAAqB,QAASA,EACnCA,EAAKjlC,IAAM,IAAMilC,EAAK3rD,OACtBy6C,GAAQkR,GAAMjyC,WANX,EAOb,CAKE,OAAAyyC,GACE,QAASxjE,KAAKsmE,aAClB,CAKE,KAAA5K,GACE,OAAO17D,KAAKsmE,cAAgBtmE,KAAKsmE,cAAc5K,QAAUz3D,QAAQE,SACrE,EC5DA,SAASwiE,GAAe73D,EAAOC,EAAQ63D,EAAaC,GAClD,YAAoBrgE,IAAhBogE,QAA8CpgE,IAAjBqgE,EACxB,CAACD,EAAc93D,EAAO+3D,EAAe93D,QAE1BvI,IAAhBogE,EACKA,EAAc93D,OAEFtI,IAAjBqgE,EACKA,EAAe93D,EAEjB,CACT,CAOA,MAAM+3D,WAAaxF,GAIjB,WAAAvhE,CAAYuK,GAMV,MAAMm8C,OAA8BjgD,KALpC8D,EAAUA,GAAW,CAAE,GAKCm8C,QAAwBn8C,EAAQm8C,QAAU,EAK5DvtC,OAAgC1S,IAArB8D,EAAQ4O,SAAyB5O,EAAQ4O,SAAW,EAK/D+I,OAA0Bzb,IAAlB8D,EAAQ2X,MAAsB3X,EAAQ2X,MAAQ,EAKtDw/C,OACuBj7D,IAA3B8D,EAAQm3D,gBAA+Bn3D,EAAQm3D,eAEjDx8D,MAAM,CACJwhD,QAASA,EACTvtC,SAAUA,EACV+I,MAAOA,EACP4/C,kBAC2Br7D,IAAzB8D,EAAQu3D,aAA6Bv3D,EAAQu3D,aAAe,CAAC,EAAG,GAClEJ,eAAgBA,EAChBM,cAAez3D,EAAQy3D,gBAOzB/hE,KAAK8kD,aAA6Bt+C,IAAnB8D,EAAQqnB,OAAuBrnB,EAAQqnB,OAAS,CAAC,GAAK,IAMrE3xB,KAAK+mE,kBAAoB,KAMzB/mE,KAAKgnE,mBACsBxgE,IAAzB8D,EAAQ28D,aAA6B38D,EAAQ28D,aAAe,WAM9DjnE,KAAKknE,mBACsB1gE,IAAzB8D,EAAQ68D,aAA6B78D,EAAQ68D,aAAe,WAM9DnnE,KAAKonE,mBACsB5gE,IAAzB8D,EAAQ+8D,aAA6B/8D,EAAQ+8D,aAAe,WAM9DrnE,KAAK2+B,kBACqBn4B,IAAxB8D,EAAQm0B,YAA4Bn0B,EAAQm0B,YAAc,KAE5D,MAAMpsB,OAAwB7L,IAAhB8D,EAAQozB,IAAoBpzB,EAAQozB,IAAM,KAExD,IAuBIu+B,EAvBAc,EAAWzyD,EAAQyzB,IAwFvB,GAtFApqB,UACiBnN,IAAbu2D,GAA0B1qD,GAC5B,8DAGgB7L,IAAbu2D,GAA8C,IAApBA,EAASl8D,SAAiBwR,IACvD0qD,EAA2C,EAAQh/B,KAAOx1B,EAAO8J,IAEnEsB,QACenN,IAAbu2D,GAA0BA,EAASl8D,OAAS,EAC5C,6DAGF8S,WAEuBnN,IAAlB8D,EAAQwE,YAA0CtI,IAAnB8D,EAAQyE,cACtBvI,IAAlB8D,EAAQ2X,OAEV,qEAIkBzb,IAAhB8D,EAAQyzB,IACVk+B,EAAax/B,QACMj2B,IAAV6L,IAGL4pD,EAFA,aAAc5pD,EACZA,EAAM+rB,SACK/rB,EAAM0rB,IAAMtB,GAAoBA,GAEhCA,GAGFA,IAQjBz8B,KAAKm8D,YAA2B31D,IAAlB8D,EAAQmmD,MAAsBqB,GAAQxnD,EAAQmmD,OAAS,KAMrEzwD,KAAKsnE,WAAajK,GAChBhrD,EACN,EACMrS,KAAK2+B,aACLs9B,EACAj8D,KAAKm8D,QAOPn8D,KAAKunE,aAA6B/gE,IAAnB8D,EAAQ+M,OAAuB/M,EAAQ+M,OAAS,CAAC,EAAG,GAKnErX,KAAKwnE,mBACsBhhE,IAAzB8D,EAAQm9D,aAA6Bn9D,EAAQm9D,aAAe,WAM9DznE,KAAKijE,QAAU,KAMfjjE,KAAK+S,WAAyBvM,IAAjB8D,EAAQ0I,KAAqB1I,EAAQ0I,KAAO,KAKzDhT,KAAK0nE,qBAKiBlhE,IAAlB8D,EAAQwE,YAA0CtI,IAAnB8D,EAAQyE,OAAsB,CAC/D,IAAID,EAAOC,EACX,GAAIzE,EAAQ0I,MACTlE,EAAOC,GAAUzE,EAAQ0I,SACrB,CACL,MAAMX,EAAQrS,KAAK+8B,SAAS,GAC5B,GAAI1qB,EAAMvD,OAASuD,EAAMtD,OACvBD,EAAQuD,EAAMvD,MACdC,EAASsD,EAAMtD,YACV,GAAIsD,aAAiB8qB,iBAAkB,CAC5Cn9B,KAAK0nE,gBAAkBp9D,EACvB,MAAMq9D,EAAS,KAEb,GADA3nE,KAAK4iE,oBAAoB+E,IACpB3nE,KAAK0nE,gBACR,OAEF,MAAME,EAAY5nE,KAAKsnE,WAAWn0D,UAClCnT,KAAK0iE,SACHiE,GACEiB,EAAU,GACVA,EAAU,GACVt9D,EAAQwE,MACRxE,EAAQyE,QAEX,EAGH,YADA/O,KAAK2iE,kBAAkBgF,EAEjC,CACA,MACoBnhE,IAAVsI,GACF9O,KAAK0iE,SACHiE,GAAe73D,EAAOC,EAAQzE,EAAQwE,MAAOxE,EAAQyE,QAG/D,CACA,CAQE,KAAA0F,GACE,IAAIwN,EAAOnT,EAAOC,EAQlB,OAPI/O,KAAK0nE,iBACP54D,EAAQ9O,KAAK0nE,gBAAgB54D,MAC7BC,EAAS/O,KAAK0nE,gBAAgB34D,SAE9BkT,EAAQjiB,KAAKgiE,WACb//C,EAAQjgB,MAAMC,QAAQggB,GAASA,EAAMze,QAAUye,GAE1C,IAAI6kD,GAAK,CACdn1C,OAAQ3xB,KAAK8kD,QAAQthD,QACrByjE,aAAcjnE,KAAKgnE,cACnBG,aAAcnnE,KAAKknE,cACnBG,aAAcrnE,KAAKonE,cACnB3W,MACEzwD,KAAKm8D,QAAUn8D,KAAKm8D,OAAO34D,MACvBxD,KAAKm8D,OAAO34D,QACZxD,KAAKm8D,aAAU31D,EACrBi4B,YAAaz+B,KAAK2+B,aAClBtnB,OAAQrX,KAAKunE,QAAQ/jE,QACrBikE,aAAcznE,KAAKwnE,cACnB/gB,QAASzmD,KAAKknD,aACdua,eAAgBzhE,KAAKiiE,oBACrB/oD,SAAUlZ,KAAKqtC,cACfprB,QACAnT,QACAC,SACAiE,KAAqB,OAAfhT,KAAK+S,MAAiB/S,KAAK+S,MAAMvP,aAAUgD,EACjDu3B,IAAK/9B,KAAK48D,SACViF,aAAc7hE,KAAKkiE,kBAAkB1+D,QACrCu+D,cAAe/hE,KAAKmiE,oBAE1B,CASE,SAAAE,GACE,IAAI1wC,EAAS3xB,KAAK+mE,kBAClB,IAAKp1C,EAAQ,CACXA,EAAS3xB,KAAK8kD,QACd,MAAM9xC,EAAOhT,KAAKmT,UAClB,GACwB,YAAtBnT,KAAKknE,eACiB,YAAtBlnE,KAAKonE,cACL,CACA,IAAKp0D,EACH,OAAO,KAET2e,EAAS3xB,KAAK8kD,QAAQthD,QACI,YAAtBxD,KAAKknE,gBACPv1C,EAAO,IAAM3e,EAAK,IAEM,YAAtBhT,KAAKonE,gBACPz1C,EAAO,IAAM3e,EAAK,GAE5B,CAEM,GAA0B,YAAtBhT,KAAKgnE,cAA6B,CACpC,IAAKh0D,EACH,OAAO,KAEL2e,IAAW3xB,KAAK8kD,UAClBnzB,EAAS3xB,KAAK8kD,QAAQthD,SAGA,aAAtBxD,KAAKgnE,eACiB,gBAAtBhnE,KAAKgnE,gBAELr1C,EAAO,IAAMA,EAAO,GAAK3e,EAAK,IAGR,eAAtBhT,KAAKgnE,eACiB,gBAAtBhnE,KAAKgnE,gBAELr1C,EAAO,IAAMA,EAAO,GAAK3e,EAAK,GAExC,CACMhT,KAAK+mE,kBAAoBp1C,CAC/B,CACI,MAAMkwC,EAAe7hE,KAAKkiE,kBACpBjgD,EAAQjiB,KAAKoiE,gBAGnB,MAAO,CACLzwC,EAAO,GAAKkwC,EAAa,GAAK5/C,EAAM,GACpC0P,EAAO,GAAKkwC,EAAa,GAAK5/C,EAAM,GAE1C,CASE,SAAA4lD,CAAUl2C,GACR3xB,KAAK8kD,QAAUnzB,EACf3xB,KAAK+mE,kBAAoB,IAC7B,CAOE,QAAA3B,GACE,OAAOplE,KAAKm8D,MAChB,CAUE,QAAAp/B,CAASJ,GACP,OAAO38B,KAAKsnE,WAAWvqC,SAASJ,EACpC,CASE,aAAAK,CAAcL,GACZ,OAAO38B,KAAKsnE,WAAWtqC,cAAcL,EACzC,CAME,YAAA2lC,GACE,OAAOtiE,KAAKsnE,WAAWn0D,SAC3B,CAME,aAAAsoD,GACE,OAAOz7D,KAAKsnE,WAAW7L,eAC3B,CAME,oBAAAkB,GACE,OAAO38D,KAAKsnE,WAAW3K,sBAC3B,CAQE,SAAA4F,GACE,GAAIviE,KAAKijE,QACP,OAAOjjE,KAAKijE,QAEd,IAAI5rD,EAASrX,KAAKunE,QAElB,GAA0B,YAAtBvnE,KAAKwnE,cAA6B,CACpC,MAAMx0D,EAAOhT,KAAKmT,UACZ20D,EAAgB9nE,KAAKsnE,WAAWn0D,UACtC,IAAKH,IAAS80D,EACZ,OAAO,KAETzwD,EAASA,EAAO7T,QAEQ,aAAtBxD,KAAKwnE,eACiB,gBAAtBxnE,KAAKwnE,gBAELnwD,EAAO,GAAKywD,EAAc,GAAK90D,EAAK,GAAKqE,EAAO,IAG1B,eAAtBrX,KAAKwnE,eACiB,gBAAtBxnE,KAAKwnE,gBAELnwD,EAAO,GAAKywD,EAAc,GAAK90D,EAAK,GAAKqE,EAAO,GAExD,CAEI,OADArX,KAAKijE,QAAU5rD,EACRrX,KAAKijE,OAChB,CAOE,MAAArG,GACE,OAAO58D,KAAKsnE,WAAW1K,QAC3B,CAQE,OAAAzpD,GACE,OAAQnT,KAAK+S,MAAoC/S,KAAK+S,MAAjC/S,KAAKsnE,WAAWn0D,SACzC,CAOE,QAAAuF,GACE,MAAMuJ,EAAQjiB,KAAKoiE,gBACnB,OAAIpiE,KAAK+S,MACA/S,KAAK+S,MAAM,GAAKkP,EAAM,GAE3BjiB,KAAKsnE,WAAW7L,iBAAmBh/B,GAC9Bz8B,KAAKsnE,WAAWn0D,UAAU,GAAK8O,EAAM,QAD9C,CAIJ,CAOE,SAAAtJ,GACE,MAAMsJ,EAAQjiB,KAAKoiE,gBACnB,OAAIpiE,KAAK+S,MACA/S,KAAK+S,MAAM,GAAKkP,EAAM,GAE3BjiB,KAAKsnE,WAAW7L,iBAAmBh/B,GAC9Bz8B,KAAKsnE,WAAWn0D,UAAU,GAAK8O,EAAM,QAD9C,CAIJ,CASE,QAAAygD,CAASzgD,UACAjiB,KAAK0nE,gBACZziE,MAAMy9D,SAASzgD,EACnB,CAME,iBAAA0gD,CAAkBp9D,GAChBvF,KAAKsnE,WAAWhiE,iBAAiBzF,EAAkB0F,EACvD,CAUE,IAAAsH,GACE7M,KAAKsnE,WAAWz6D,MACpB,CAME,mBAAA+1D,CAAoBr9D,GAClBvF,KAAKsnE,WAAWhhE,oBAAoBzG,EAAkB0F,EAC1D,CAKE,KAAAm2D,GACE,OAAO17D,KAAKsnE,WAAW5L,OAC3B,ECljBA,MAAMqM,GAIJ,WAAAhoE,CAAYuK,GACVA,EAAUA,GAAW,CAAE,EAMvBtK,KAAKm8D,YAA2B31D,IAAlB8D,EAAQmmD,MAAsBnmD,EAAQmmD,MAAQ,KAM5DzwD,KAAKgoE,SAAW19D,EAAQ26D,QAMxBjlE,KAAKioE,eAAiCzhE,IAArB8D,EAAQ46D,SAAyB56D,EAAQ46D,SAAW,KAMrEllE,KAAKkoE,gBAAkB59D,EAAQ66D,eAM/BnlE,KAAKmoE,UAAY79D,EAAQ85D,SAMzBpkE,KAAKooE,YAAc99D,EAAQg6D,WAM3BtkE,KAAKqoE,OAAS/9D,EAAQwE,KAC1B,CAOE,KAAA2F,GACE,MAAMg8C,EAAQzwD,KAAKolE,WACnB,OAAO,IAAI2C,GAAO,CAChBtX,MAAOzuD,MAAMC,QAAQwuD,GAASA,EAAMjtD,QAAUitD,QAASjqD,EACvDy+D,QAASjlE,KAAKwlE,aACdN,SAAUllE,KAAKqlE,cAAgBrlE,KAAKqlE,cAAc7hE,aAAUgD,EAC5D2+D,eAAgBnlE,KAAKslE,oBACrBlB,SAAUpkE,KAAKulE,cACfjB,WAAYtkE,KAAKylE,gBACjB32D,MAAO9O,KAAK0Y,YAElB,CAOE,QAAA0sD,GACE,OAAOplE,KAAKm8D,MAChB,CAOE,UAAAqJ,GACE,OAAOxlE,KAAKgoE,QAChB,CAOE,WAAA3C,GACE,OAAOrlE,KAAKioE,SAChB,CAOE,iBAAA3C,GACE,OAAOtlE,KAAKkoE,eAChB,CAOE,WAAA3C,GACE,OAAOvlE,KAAKmoE,SAChB,CAOE,aAAA1C,GACE,OAAOzlE,KAAKooE,WAChB,CAOE,QAAA1vD,GACE,OAAO1Y,KAAKqoE,MAChB,CAQE,QAAA9B,CAAS9V,GACPzwD,KAAKm8D,OAAS1L,CAClB,CAQE,UAAA6X,CAAWrD,GACTjlE,KAAKgoE,SAAW/C,CACpB,CAQE,WAAAW,CAAYV,GACVllE,KAAKioE,UAAY/C,CACrB,CAQE,iBAAAqD,CAAkBpD,GAChBnlE,KAAKkoE,gBAAkB/C,CAC3B,CAQE,WAAAqD,CAAYpE,GACVpkE,KAAKmoE,UAAY/D,CACrB,CAQE,aAAAqE,CAAcnE,GACZtkE,KAAKooE,YAAc9D,CACvB,CAQE,QAAAoE,CAAS55D,GACP9O,KAAKqoE,OAASv5D,CAClB,EC/DA,MAAM65D,GAIJ,WAAA5oE,CAAYuK,GACVA,EAAUA,GAAW,CAAE,EAMvBtK,KAAKmhD,UAAY,KAMjBnhD,KAAK4oE,kBAAoBC,QAEAriE,IAArB8D,EAAQgK,UACVtU,KAAKuU,YAAYjK,EAAQgK,UAO3BtU,KAAK+iE,WAAyBv8D,IAAjB8D,EAAQ04D,KAAqB14D,EAAQ04D,KAAO,KAMzDhjE,KAAK88B,YAA2Bt2B,IAAlB8D,EAAQ+H,MAAsB/H,EAAQ+H,MAAQ,KAM5DrS,KAAK0pD,eAAiCljD,IAArB8D,EAAQw+D,SAAyBx+D,EAAQw+D,SAAW,KAMrE9oE,KAAK+oE,2BAC8BviE,IAAjC8D,EAAQ0+D,qBACJ1+D,EAAQ0+D,qBACR,KAMNhpE,KAAKqjE,aAA6B78D,IAAnB8D,EAAQg5D,OAAuBh5D,EAAQg5D,OAAS,KAM/DtjE,KAAKipE,WAAyBziE,IAAjB8D,EAAQi0D,KAAqBj0D,EAAQi0D,KAAO,KAMzDv+D,KAAKkpE,QAAU5+D,EAAQo8C,MAC3B,CAOE,KAAAjyC,GACE,IAAIH,EAAWtU,KAAK4U,cAMpB,OALIN,GAAgC,iBAAbA,IACrBA,EAAgE,EAE9DG,SAEG,IAAIk0D,GAAM,CACfr0D,SAAUA,QAAY9N,EACtBw8D,KAAMhjE,KAAKyjE,UAAYzjE,KAAKyjE,UAAUhvD,aAAUjO,EAChD6L,MAAOrS,KAAK+8B,WAAa/8B,KAAK+8B,WAAWtoB,aAAUjO,EACnDsiE,SAAU9oE,KAAK2qD,oBAAiBnkD,EAChC88D,OAAQtjE,KAAK4jE,YAAc5jE,KAAK4jE,YAAYnvD,aAAUjO,EACtD+3D,KAAMv+D,KAAKmpE,UAAYnpE,KAAKmpE,UAAU10D,aAAUjO,EAChDkgD,OAAQ1mD,KAAKinD,aAEnB,CAQE,WAAA0D,GACE,OAAO3qD,KAAK0pD,SAChB,CAQE,WAAA0f,CAAYN,GACV9oE,KAAK0pD,UAAYof,CACrB,CAQE,uBAAAO,CAAwBP,GACtB9oE,KAAK+oE,sBAAwBD,CACjC,CAQE,uBAAAQ,GACE,OAAOtpE,KAAK+oE,qBAChB,CASE,WAAAn0D,GACE,OAAO5U,KAAKmhD,SAChB,CAQE,mBAAAooB,GACE,OAAOvpE,KAAK4oE,iBAChB,CAOE,OAAAnF,GACE,OAAOzjE,KAAK+iE,KAChB,CAOE,OAAAc,CAAQb,GACNhjE,KAAK+iE,MAAQC,CACjB,CAOE,QAAAjmC,GACE,OAAO/8B,KAAK88B,MAChB,CAOE,QAAAO,CAAShrB,GACPrS,KAAK88B,OAASzqB,CAClB,CAOE,SAAAuxD,GACE,OAAO5jE,KAAKqjE,OAChB,CAOE,SAAAa,CAAUZ,GACRtjE,KAAKqjE,QAAUC,CACnB,CAOE,OAAA6F,GACE,OAAOnpE,KAAKipE,KAChB,CAOE,OAAAO,CAAQjL,GACNv+D,KAAKipE,MAAQ1K,CACjB,CAOE,SAAAtX,GACE,OAAOjnD,KAAKkpE,OAChB,CAUE,WAAA30D,CAAYD,GACc,mBAAbA,EACTtU,KAAK4oE,kBAAoBt0D,EACI,iBAAbA,EAChBtU,KAAK4oE,kBAAoB,SAAUa,GACjC,OACEA,EAAQxgE,IAAIqL,EAEf,EACSA,OAEY9N,IAAb8N,IACTtU,KAAK4oE,kBAAoB,WACvB,QACD,GAJD5oE,KAAK4oE,kBAAoBC,GAM3B7oE,KAAKmhD,UAAY7sC,CACrB,CAQE,SAAAuzC,CAAUnB,GACR1mD,KAAKkpE,QAAUxiB,CACnB,EAWO,SAASgjB,GAAWlhE,GACzB,IAAImhE,EAEJ,GAAmB,mBAARnhE,EACTmhE,EAAgBnhE,MACX,CAIL,IAAI6M,EACJ,GAAIrT,MAAMC,QAAQuG,GAChB6M,EAAS7M,MACJ,CACLmL,GACgD,mBAArB,EAAe,UACxC,8CAGF0B,EAAS,CAD2B,EAE1C,CACIs0D,EAAgB,WACd,OAAOt0D,CACR,CACL,CACE,OAAOs0D,CACT,CAKA,IAAIC,GAAgB,KAOb,SAASC,GAAmBJ,EAASxwD,GAM1C,IAAK2wD,GAAe,CAClB,MAAM5G,EAAO,IAAIqD,GAAK,CACpB5V,MAAO,0BAEH6S,EAAS,IAAIyE,GAAO,CACxBtX,MAAO,UACP3hD,MAAO,OAET86D,GAAgB,CACd,IAAIjB,GAAM,CACRt2D,MAAO,IAAI8zD,GAAY,CACrBnD,KAAMA,EACNM,OAAQA,EACRnlD,OAAQ,IAEV6kD,KAAMA,EACNM,OAAQA,IAGhB,CACE,OAAOsG,EACT,CAMO,SAASE,KAEd,MAAMz0D,EAAS,CAAE,EACX00D,EAAQ,CAAC,IAAK,IAAK,IAAK,GACxBC,EAAO,CAAC,EAAG,IAAK,IAAK,GAmD3B,OAjDA30D,EAAgB,QAAI,CAClB,IAAIszD,GAAM,CACR3F,KAAM,IAAIqD,GAAK,CACb5V,MAAO,CAAC,IAAK,IAAK,IAAK,SAI7Bp7C,EAAqB,aAAIA,EAAgB,QAEzCA,EAAmB,WAAI,CACrB,IAAIszD,GAAM,CACRrF,OAAQ,IAAIyE,GAAO,CACjBtX,MAAOsZ,EACPj7D,MAAOA,MAGX,IAAI65D,GAAM,CACRrF,OAAQ,IAAIyE,GAAO,CACjBtX,MAAOuZ,EACPl7D,MApBQ,OAwBduG,EAAwB,gBAAIA,EAAmB,WAE/CA,EAAe,OAAIA,EAAgB,QAAEkkD,OAAOlkD,EAAmB,YAE/DA,EAAc,MAAI,CAChB,IAAIszD,GAAM,CACRt2D,MAAO,IAAI8zD,GAAY,CACrBhoD,OAAQrP,EACRk0D,KAAM,IAAIqD,GAAK,CACb5V,MAAOuZ,IAET1G,OAAQ,IAAIyE,GAAO,CACjBtX,MAAOsZ,EACPj7D,MAAOA,QAGX43C,OAAQ3vC,OAGZ1B,EAAmB,WAAIA,EAAc,MAErCA,EAA2B,mBAAIA,EAAgB,QAAEkkD,OAC/ClkD,EAAmB,WACnBA,EAAc,OAGTA,CACT,CAOA,SAASwzD,GAAwBY,GAC/B,OAAOA,EAAQ70D,aACjB,CCvfA,MAAMq1D,GAIJ,WAAAlqE,CAAYuK,GACVA,EAAUA,GAAW,CAAE,EAMvBtK,KAAKkqE,MAAQ5/D,EAAQ80D,KAMrBp/D,KAAKk7C,UAAY5wC,EAAQ4O,SAMzBlZ,KAAKwhE,gBAAkBl3D,EAAQm3D,eAM/BzhE,KAAKmqE,aAAe7/D,EAAQ8/D,YAM5BpqE,KAAK0hE,OAASp3D,EAAQ2X,MAMtBjiB,KAAK2hE,YAAc3P,QAAyBxrD,IAAlB8D,EAAQ2X,MAAsB3X,EAAQ2X,MAAQ,GAMxEjiB,KAAKipE,MAAQ3+D,EAAQi0D,KAMrBv+D,KAAKqqE,WAAa//D,EAAQggE,UAM1BtqE,KAAKuqE,SAAWjgE,EAAQkgE,QAMxBxqE,KAAKyqE,QAAUngE,EAAQogE,OAMvB1qE,KAAK2qE,cAAgBrgE,EAAQsgE,aAM7B5qE,KAAK+iE,WACcv8D,IAAjB8D,EAAQ04D,KACJ14D,EAAQ04D,KACR,IAAIqD,GAAK,CAAC5V,MAjIO,SAuIvBzwD,KAAK6qE,eACkBrkE,IAArB8D,EAAQwgE,SAAyBxgE,EAAQwgE,SAAWl/D,KAAKuR,GAAK,EAMhEnd,KAAK+qE,gBACmBvkE,IAAtB8D,EAAQ0gE,UAA0B1gE,EAAQ0gE,UAAY,QAMxDhrE,KAAKirE,YAAc3gE,EAAQ4gE,SAM3BlrE,KAAKqjE,aAA6B78D,IAAnB8D,EAAQg5D,OAAuBh5D,EAAQg5D,OAAS,KAM/DtjE,KAAKmrE,cAA+B3kE,IAApB8D,EAAQ0iC,QAAwB1iC,EAAQ0iC,QAAU,EAMlEhtC,KAAKorE,cAA+B5kE,IAApB8D,EAAQ2iC,QAAwB3iC,EAAQ2iC,QAAU,EAMlEjtC,KAAKqrE,gBAAkB/gE,EAAQghE,eAC3BhhE,EAAQghE,eACR,KAMJtrE,KAAKurE,kBAAoBjhE,EAAQkhE,iBAC7BlhE,EAAQkhE,iBACR,KAMJxrE,KAAK8rC,cAA+BtlC,IAApB8D,EAAQyhC,QAAwB,KAAOzhC,EAAQyhC,QAM/D/rC,KAAK8hE,eAAiBx3D,EAAQy3D,aAClC,CAOE,KAAAttD,GACE,MAAMwN,EAAQjiB,KAAKgiE,WACnB,OAAO,IAAIiI,GAAK,CACd7K,KAAMp/D,KAAKyrE,UACXT,UAAWhrE,KAAK0rE,eAChBhB,OAAQ1qE,KAAK2rE,YACbb,SAAU9qE,KAAK4rE,cACfV,SAAUlrE,KAAK6rE,cACf3yD,SAAUlZ,KAAKqtC,cACfo0B,eAAgBzhE,KAAKiiE,oBACrBmI,YAAapqE,KAAK8rE,iBAClB7pD,MAAOjgB,MAAMC,QAAQggB,GAASA,EAAMze,QAAUye,EAC9Cs8C,KAAMv+D,KAAKmpE,UACXmB,UAAWtqE,KAAK+rE,eAChBvB,QAASxqE,KAAKgsE,aACdpB,aAAc5qE,KAAKisE,kBACnBjJ,KAAMhjE,KAAKyjE,UAAYzjE,KAAKyjE,UAAUhvD,aAAUjO,EAChD88D,OAAQtjE,KAAK4jE,YAAc5jE,KAAK4jE,YAAYnvD,aAAUjO,EACtDwmC,QAAShtC,KAAKksE,aACdj/B,QAASjtC,KAAKmsE,aACdb,eAAgBtrE,KAAKosE,oBACjBpsE,KAAKosE,oBAAoB33D,aACzBjO,EACJglE,iBAAkBxrE,KAAKqsE,sBACnBrsE,KAAKqsE,sBAAsB53D,aAC3BjO,EACJulC,QAAS/rC,KAAKssE,mBAAgB9lE,EAC9Bu7D,cAAe/hE,KAAKmiE,oBAE1B,CAOE,WAAA0J,GACE,OAAO7rE,KAAKirE,SAChB,CAOE,OAAAQ,GACE,OAAOzrE,KAAKkqE,KAChB,CAOE,WAAA0B,GACE,OAAO5rE,KAAK6qE,SAChB,CAOE,YAAAa,GACE,OAAO1rE,KAAK+qE,UAChB,CAOE,SAAAY,GACE,OAAO3rE,KAAKyqE,OAChB,CAOE,UAAAyB,GACE,OAAOlsE,KAAKmrE,QAChB,CAOE,UAAAgB,GACE,OAAOnsE,KAAKorE,QAChB,CAOE,OAAA3H,GACE,OAAOzjE,KAAK+iE,KAChB,CAOE,iBAAAd,GACE,OAAOjiE,KAAKwhE,eAChB,CAOE,cAAAsK,GACE,OAAO9rE,KAAKmqE,YAChB,CAOE,WAAA98B,GACE,OAAOrtC,KAAKk7C,SAChB,CAOE,QAAA8mB,GACE,OAAOhiE,KAAK0hE,MAChB,CAME,aAAAU,GACE,OAAOpiE,KAAK2hE,WAChB,CAOE,SAAAiC,GACE,OAAO5jE,KAAKqjE,OAChB,CAOE,OAAA8F,GACE,OAAOnpE,KAAKipE,KAChB,CAOE,YAAA8C,GACE,OAAO/rE,KAAKqqE,UAChB,CAOE,UAAA2B,GACE,OAAOhsE,KAAKuqE,QAChB,CAOE,eAAA0B,GACE,OAAOjsE,KAAK2qE,aAChB,CAOE,iBAAAyB,GACE,OAAOpsE,KAAKqrE,eAChB,CAOE,mBAAAgB,GACE,OAAOrsE,KAAKurE,iBAChB,CAOE,UAAAe,GACE,OAAOtsE,KAAK8rC,QAChB,CAOE,gBAAAq2B,GACE,OAAOniE,KAAK8hE,cAChB,CAQE,WAAAyK,CAAYrB,GACVlrE,KAAKirE,UAAYC,CACrB,CAQE,OAAAsB,CAAQpN,GACNp/D,KAAKkqE,MAAQ9K,CACjB,CAQE,WAAAqN,CAAY3B,GACV9qE,KAAK6qE,UAAYC,CACrB,CAQE,UAAA4B,CAAW1/B,GACThtC,KAAKmrE,SAAWn+B,CACpB,CAQE,UAAA2/B,CAAW1/B,GACTjtC,KAAKorE,SAAWn+B,CACpB,CAQE,YAAA2/B,CAAa5B,GACXhrE,KAAK+qE,WAAaC,CACtB,CAOE,SAAA6B,CAAUnC,GACR1qE,KAAKyqE,QAAUC,CACnB,CAQE,iBAAAjI,CAAkBhB,GAChBzhE,KAAKwhE,gBAAkBC,CAC3B,CAQE,cAAAqL,CAAe1C,GACbpqE,KAAKmqE,aAAeC,CACxB,CAQE,OAAAvG,CAAQb,GACNhjE,KAAK+iE,MAAQC,CACjB,CAQE,WAAAv2B,CAAYvzB,GACVlZ,KAAKk7C,UAAYhiC,CACrB,CAQE,QAAAwpD,CAASzgD,GACPjiB,KAAK0hE,OAASz/C,EACdjiB,KAAK2hE,YAAc3P,QAAiBxrD,IAAVyb,EAAsBA,EAAQ,EAC5D,CAQE,SAAAiiD,CAAUZ,GACRtjE,KAAKqjE,QAAUC,CACnB,CAQE,OAAAkG,CAAQjL,GACNv+D,KAAKipE,MAAQ1K,CACjB,CAQE,YAAAwO,CAAazC,GACXtqE,KAAKqqE,WAAaC,CACtB,CAQE,UAAA0C,CAAWxC,GACTxqE,KAAKuqE,SAAWC,CACpB,CAQE,eAAAyC,CAAgBrC,GACd5qE,KAAK2qE,cAAgBC,CACzB,CAQE,iBAAAsC,CAAkBlK,GAChBhjE,KAAKqrE,gBAAkBrI,CAC3B,CAQE,mBAAAmK,CAAoB7J,GAClBtjE,KAAKurE,kBAAoBjI,CAC7B,CAQE,UAAA8J,CAAWrhC,GACT/rC,KAAK8rC,SAAWC,CACpB,EChlBA,SAASuS,GAAO5uC,GACd,OAAO,CACT,CAUO,SAAS29D,GAAqBC,GACnC,MAAMC,EAAiBha,KACjBia,EAAYC,GAAaH,EAAOC,GAChCG,Eb1CC,CACLla,UAAW,CAAE,EACbh/C,WAAY,CAAE,EACdyE,WAAY+Y,IACZyhC,UAAW,KACXC,aAAc,IasChB,OAAO,SAAU+V,EAASxwD,GAGxB,GAFAy0D,EAAkBl5D,WAAai1D,EAAQngE,wBACvCokE,EAAkBz0D,WAAaA,EAC3Bs0D,EAAe9Z,UAAW,CAC5B,MAAM1mD,EAAK08D,EAAQ10D,QAEjB24D,EAAkBja,eADTjtD,IAAPuG,EAC4BA,EAEA,IAEtC,CAMI,OALIwgE,EAAe7Z,eACjBga,EAAkBha,aAAemF,GAC/B4Q,EAAQ70D,gBAGL44D,EAAUE,EAClB,CACH,CAUO,SAASC,GAA0BC,GACxC,MAAML,EAAiBha,KACjB1yD,EAAS+sE,EAAW/sE,OAKpBgtE,EAAa,IAAI7rE,MAAMnB,GAC7B,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5BssE,EAAWtsE,GAAKusE,GAAWF,EAAWrsE,GAAIgsE,GAE5C,MAAMG,EblFC,CACLla,UAAW,CAAE,EACbh/C,WAAY,CAAE,EACdyE,WAAY+Y,IACZyhC,UAAW,KACXC,aAAc,IakFVr+C,EAAS,IAAIrT,MAAMnB,GAEzB,OAAO,SAAU4oE,EAASxwD,GAGxB,GAFAy0D,EAAkBl5D,WAAai1D,EAAQngE,wBACvCokE,EAAkBz0D,WAAaA,EAC3Bs0D,EAAe9Z,UAAW,CAC5B,MAAM1mD,EAAK08D,EAAQ10D,QAEjB24D,EAAkBja,eADTjtD,IAAPuG,EAC4BA,EAEA,IAEtC,CACI,IAAIghE,EAAe,EACnB,IAAK,IAAIxsE,EAAI,EAAGA,EAAIV,IAAUU,EAAG,CAC/B,MAAMuO,EAAQ+9D,EAAWtsE,GAAGmsE,GACxB59D,IACFuF,EAAO04D,GAAgBj+D,EACvBi+D,GAAgB,EAExB,CAEI,OADA14D,EAAOxU,OAASktE,EACT14D,CACR,CACH,CAiBO,SAASo4D,GAAaH,EAAO59D,GAClC,MAAM7O,EAASysE,EAAMzsE,OAKfmtE,EAAgB,IAAIhsE,MAAMnB,GAEhC,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAAG,CAC/B,MAAM0sE,EAAOX,EAAM/rE,GACbkuC,EACJ,WAAYw+B,EACRjV,GAAgBiV,EAAKx+B,OAAQyiB,GAAaxiD,GAC1C4uC,GAKN,IAAIjpC,EACJ,GAAIrT,MAAMC,QAAQgsE,EAAKn+D,OAAQ,CAC7B,MAAMo+D,EAAcD,EAAKn+D,MAAMjP,OAC/BwU,EAAS,IAAIrT,MAAMksE,GACnB,IAAK,IAAIrxD,EAAI,EAAGA,EAAIqxD,IAAerxD,EACjCxH,EAAOwH,GAAKixD,GAAWG,EAAKn+D,MAAM+M,GAAInN,EAE9C,MACM2F,EAAS,CAACy4D,GAAWG,EAAKn+D,MAAOJ,IAGnCs+D,EAAczsE,GAAK,CAACkuC,SAAQp6B,SAChC,CAEE,OAAO,SAAU3F,GAIf,MAAM2F,EAAS,GAEf,IAAI84D,GAAc,EAClB,IAAK,IAAI5sE,EAAI,EAAGA,EAAIV,IAAUU,EAAG,CAE/B,IAAK6sE,EADmBJ,EAAczsE,GAAGkuC,QACpB//B,MAGjB49D,EAAM/rE,GAAG8sE,OAAQF,GAArB,CAGAA,GAAc,EACd,IAAK,MAAMG,KAAkBN,EAAczsE,GAAG8T,OAAQ,CACpD,MAAMvF,EAAQw+D,EAAe5+D,GACxBI,GAGLuF,EAAO1P,KAAKmK,EACpB,CARA,CASA,CAEI,OAAOuF,CACR,CACH,CAYO,SAASy4D,GAAWS,EAAW7+D,GACpC,MAAM8+D,EAAeC,GAAUF,EAAW,GAAI7+D,GACxCg/D,EAAiBC,GAAYJ,EAAW,GAAI7+D,GAC5Ck/D,EAyNR,SAAmBL,EAAW7+D,GAC5B,MAAMm/D,EAAS,QAMTC,EAAgBC,GAAgBR,EAAWM,EAAS,QAASn/D,GACnE,IAAKo/D,EACH,OAAO,KAGT,MAAMN,EAAeC,GAAUF,EAAWM,EAAQn/D,GAE5Cs/D,EAAyBP,GAC7BF,EACAM,EAAS,cACTn/D,GAGIg/D,EAAiBC,GAAYJ,EAAWM,EAAQn/D,GAEhDu/D,EAA2BN,GAC/BJ,EACAM,EAAS,cACTn/D,GAGIw/D,EAAeH,GAAgBR,EAAWM,EAAS,OAAQn/D,GAE3Dy/D,EAAmBC,GACvBb,EACAM,EAAS,YACTn/D,GAGI2/D,EAAkBD,GACtBb,EACAM,EAAS,WACTn/D,GAGI4/D,EAAkBF,GACtBb,EACAM,EAAS,WACTn/D,GAGI6/D,EAAmBC,GACvBjB,EACAM,EAAS,WACTn/D,GAGI+/D,EAAoBV,GACxBR,EACAM,EAAS,YACTn/D,GAGIggE,EAAiBN,GAAgBb,EAAWM,EAAS,SAAUn/D,GAE/DigE,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASn/D,GAE/DmgE,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTn/D,GAGIogE,EAAmBV,GACvBb,EACAM,EAAS,WACTn/D,GAGIqgE,EAAgBhB,GAAgBR,EAAWM,EAAS,QAASn/D,GAE7DsgE,EAAkBjB,GACtBR,EACAM,EAAS,UACTn/D,GAGIugE,EAAmBlB,GACvBR,EACAM,EAAS,WACTn/D,GAGIwgE,EAAsBV,GAC1BjB,EACAM,EAAS,eACTn/D,GAGIygE,EAAkBC,GACtB7B,EACAM,EAAS,UACTn/D,GAIIqyD,EAAgBsO,GACpB9B,EACAM,EAAS,kBAGLtQ,EAAO,IAAI0L,GAAK,CAAClI,kBAEvB,OAAO,SAAUryD,GAuCf,GAtCA6uD,EAAKiL,QAAQsF,EAAcp/D,IAEvB8+D,GACFjQ,EAAKsF,QAAQ2K,EAAa9+D,IAGxBs/D,GACFzQ,EAAK2O,kBAAkB8B,EAAuBt/D,IAG5Cg/D,GACFnQ,EAAK2F,UAAUwK,EAAeh/D,IAG5Bu/D,GACF1Q,EAAK4O,oBAAoB8B,EAAyBv/D,IAGhDw/D,GACF3Q,EAAKiO,QAAQ0C,EAAax/D,IAGxBy/D,GACF5Q,EAAKkO,YAAY0C,EAAiBz/D,IAGhC2/D,GACF9Q,EAAKmO,WAAW2C,EAAgB3/D,IAG9B4/D,GACF/Q,EAAKoO,WAAW2C,EAAgB5/D,IAG9B6/D,GACFhR,EAAKgO,YAAYgD,EAAiB7/D,IAGhC+/D,EAAmB,CACrB,MAAMzE,EAAYyE,EAAkB//D,GACpC,GAAkB,UAAds7D,GAAuC,SAAdA,EAC3B,MAAM,IAAI3iE,MAAM,6CAElBk2D,EAAKqO,aAAa5B,EACxB,CAkBI,GAhBI0E,GACFnR,EAAKsO,UAAU6C,EAAehgE,IAG5BigE,GACFpR,EAAKmE,SAASiN,EAAcjgE,IAG1BmgE,GACFtR,EAAKkE,kBAAkBoN,EAAuBngE,IAG5CogE,GACFvR,EAAK9xB,YAAYqjC,EAAiBpgE,IAGhCqgE,EAAe,CACjB,MAAMzF,EAAYyF,EAAcrgE,GAChC,GACgB,SAAd46D,GACc,WAAdA,GACc,UAAdA,GACc,QAAdA,GACc,UAAdA,EAEA,MAAM,IAAIjiE,MACR,8DAGJk2D,EAAKwO,aAAazC,EACxB,CAEI,GAAI0F,EAAiB,CACnB,MAAMxF,EAAUwF,EAAgBtgE,GAChC,GAAgB,SAAZ86D,GAAkC,UAAZA,GAAmC,WAAZA,EAC/C,MAAM,IAAIniE,MAAM,oDAElBk2D,EAAKyO,WAAWxC,EACtB,CAEI,GAAIyF,EAAkB,CACpB,MAAMrF,EAAeqF,EAAiBvgE,GACtC,GACmB,WAAjBk7D,GACiB,QAAjBA,GACiB,WAAjBA,GACiB,eAAjBA,GACiB,YAAjBA,EAEA,MAAM,IAAIviE,MACR,0EAGJk2D,EAAK0O,gBAAgBrC,EAC3B,CAUI,OARIuF,GACF5R,EAAK6O,WAAW+C,EAAgBzgE,IAG9BwgE,GACF3R,EAAKuO,eAAeoD,EAAoBxgE,IAGnC6uD,CACR,CACH,CAxbuB+R,CAAU/B,EAAW7+D,GACpC6gE,EAkcR,SAAoBhC,EAAW7+D,GAC7B,GAAI,aAAc6+D,EAChB,OAmBJ,SAAmBA,EAAW7+D,GAC5B,MAAMm/D,EAAS,QAGT2B,EAAU3B,EAAS,MACnB9wC,EAAM0yC,GAAclC,EAAUiC,GAAUA,GAGxCE,EAAiBC,GACrBpC,EACAM,EAAS,SACTn/D,GAGIigE,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASn/D,GAE/DkhE,EAAkBxB,GACtBb,EACAM,EAAS,UACTn/D,GAGImhE,EAAuBF,GAC3BpC,EACAM,EAAS,eACTn/D,GAGIogE,EAAmBV,GACvBb,EACAM,EAAS,WACTn/D,GAGImgE,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTn/D,GAIIu3D,EAAe6J,GAAmBvC,EAAWM,EAAS,iBACtD1H,EAAe4J,GACnBxC,EACAM,EAAS,kBAELxH,EAAe0J,GACnBxC,EACAM,EAAS,kBAELpe,EAqfR,SAA2B8d,EAAWhqE,GACpC,MAAMsvD,EAAU0a,EAAUhqE,GAC1B,QAAgBiC,IAAZqtD,EACF,OAEF,OAAOmd,GAAiBnd,EAAStvD,EACnC,CA3fgB0sE,CAAkB1C,EAAWM,EAAS,SAC9CpwC,EA6ZR,SAAwB8vC,EAAWhqE,GACjC,MAAMsvD,EAAU0a,EAAUhqE,GAC1B,QAAgBiC,IAAZqtD,EACF,OAEF,GAAuB,iBAAZA,EACT,MAAM,IAAIxrD,MAAM,yBAAyB9D,KAE3C,OAAOsvD,CACT,CAtasBqd,CAAe3C,EAAWM,EAAS,gBACjDx3D,EAmdR,SAA6Bk3D,EAAWhqE,GACtC,MAAMsvD,EAAU0a,EAAUhqE,GAC1B,QAAgBiC,IAAZqtD,EACF,OAEF,OAAOsd,GAAmBtd,EAAStvD,EACrC,CAzdiB6sE,CAAoB7C,EAAWM,EAAS,UACjDpH,EAAeqJ,GAAmBvC,EAAWM,EAAS,iBACtD//D,EAAQuiE,GAAe9C,EAAWM,EAAS,SAC3C9/D,EAASsiE,GAAe9C,EAAWM,EAAS,UAC5C77D,EA8XR,SAAsBu7D,EAAWhqE,GAC/B,MAAMsvD,EAAU0a,EAAUhqE,GAC1B,QAAgBiC,IAAZqtD,EACF,OAEF,GAAuB,iBAAZA,EACT,OAAO7B,GAAO6B,GAEhB,IAAK7xD,MAAMC,QAAQ4xD,GACjB,MAAM,IAAIxrD,MAAM,uCAAuC9D,KAEzD,GACqB,IAAnBsvD,EAAQhzD,QACc,iBAAfgzD,EAAQ,IACO,iBAAfA,EAAQ,GAEf,MAAM,IAAIxrD,MAAM,uCAAuC9D,KAEzD,OAAOsvD,CACT,CAjZeyd,CAAa/C,EAAWM,EAAS,QACxC9M,EAAgBsO,GACpB9B,EACAM,EAAS,kBAGL0C,EAAO,IAAIzK,GAAK,CACpB/oC,MACAkpC,eACAE,eACAE,eACA5W,QACAhyB,cACApnB,SACAowD,eACA14D,SACAD,QACAkE,OACA+uD,kBAGF,OAAO,SAAUryD,GAwBf,OAvBIkhE,GACFW,EAAK5pB,WAAWipB,EAAgBlhE,IAG9BmhE,GACFU,EAAK/O,gBAAgBqO,EAAqBnhE,IAGxCogE,GACFyB,EAAK9kC,YAAYqjC,EAAiBpgE,IAGhCmgE,GACF0B,EAAK9O,kBAAkBoN,EAAuBngE,IAG5CigE,GACF4B,EAAK7O,SAASiN,EAAcjgE,IAG1BghE,GACFa,EAAK1J,UAAU6I,EAAehhE,IAEzB6hE,CACR,CACH,CA1HWC,CAAUjD,EAAW7+D,GAG9B,GAAI,iBAAkB6+D,EACpB,OA6HJ,SAAoBA,EAAW7+D,GAC7B,MAAMm/D,EAAS,SAGT4C,EAAa5C,EAAS,SACtB6C,EAAa7C,EAAS,SACtB3L,EAASyO,GAAcpD,EAAUkD,GAAaA,GAC9CtzD,EAASwzD,GAAcpD,EAAUmD,GAAaA,GAG9ClD,EAAeC,GAAUF,EAAWM,EAAQn/D,GAC5Cg/D,EAAiBC,GAAYJ,EAAWM,EAAQn/D,GAChDigE,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASn/D,GAC/DmhE,EAAuBF,GAC3BpC,EACAM,EAAS,eACTn/D,GAEIogE,EAAmBV,GACvBb,EACAM,EAAS,WACTn/D,GAEImgE,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTn/D,GAII0zD,EAAUiO,GAAe9C,EAAWM,EAAS,WAC7C/sD,EAAQuvD,GAAe9C,EAAWM,EAAS,SAC3C9M,EAAgBsO,GACpB9B,EACAM,EAAS,kBAGL+C,EAAQ,IAAI/O,GAAa,CAC7BK,SACA/kD,SACAilD,UACAthD,QACAigD,kBAGF,OAAO,SAAUryD,GAoBf,OAnBI8+D,GACFoD,EAAM/N,QAAQ2K,EAAa9+D,IAEzBg/D,GACFkD,EAAM1N,UAAUwK,EAAeh/D,IAE7BmhE,GACFe,EAAMpP,gBAAgBqO,EAAqBnhE,IAEzCogE,GACF8B,EAAMnlC,YAAYqjC,EAAiBpgE,IAEjCmgE,GACF+B,EAAMnP,kBAAkBoN,EAAuBngE,IAE7CigE,GACFiC,EAAMlP,SAASiN,EAAcjgE,IAGxBkiE,CACR,CACH,CAhMWC,CAAWtD,EAAW7+D,GAG/B,GAAI,kBAAmB6+D,EACrB,OAmMJ,SAAqBA,EAAW7+D,GAC9B,MAAMm/D,EAAS,UAGTL,EAAeC,GAAUF,EAAWM,EAAQn/D,GAC5Cg/D,EAAiBC,GAAYJ,EAAWM,EAAQn/D,GAChDoiE,EAAiB1C,GAAgBb,EAAWM,EAAS,SAAUn/D,GAC/DigE,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASn/D,GAC/DmhE,EAAuBF,GAC3BpC,EACAM,EAAS,eACTn/D,GAEIogE,EAAmBV,GACvBb,EACAM,EAAS,WACTn/D,GAEImgE,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTn/D,GAIIqyD,EAAgBsO,GACpB9B,EACAM,EAAS,kBAGLpuD,EAAS,IAAIsxD,GAAO,CACxB5zD,OAAQ,EACR4jD,kBAGF,OAAO,SAAUryD,GAuBf,OAtBIoiE,GACFrxD,EAAO2lD,UAAU0L,EAAepiE,IAE9B8+D,GACF/tD,EAAOojD,QAAQ2K,EAAa9+D,IAE1Bg/D,GACFjuD,EAAOyjD,UAAUwK,EAAeh/D,IAE9BmhE,GACFpwD,EAAO+hD,gBAAgBqO,EAAqBnhE,IAE1CogE,GACFrvD,EAAOgsB,YAAYqjC,EAAiBpgE,IAElCmgE,GACFpvD,EAAOgiD,kBAAkBoN,EAAuBngE,IAE9CigE,GACFlvD,EAAOiiD,SAASiN,EAAcjgE,IAGzB+Q,CACR,CACH,CA/PWuxD,CAAYzD,EAAW7+D,GAGhC,OAAO,IACT,CAhdwBuiE,CAAW1D,EAAW7+D,GACtCwiE,EAAiB9C,GAAgBb,EAAW,UAAW7+D,GAE7D,KACG8+D,GACAE,GACAE,GACA2B,GACA/rE,EAAQ+pE,IAIT,MAAM,IAAIlmE,MACR,mEACEwvD,KAAKC,UAAUyW,IAIrB,MAAMz+D,EAAQ,IAAI64D,GAClB,OAAO,SAAUj5D,GACf,IAAIyiE,GAAQ,EACZ,GAAI3D,EAAc,CAChB,MAAMxL,EAAOwL,EAAa9+D,GACtBszD,IACFmP,GAAQ,GAEVriE,EAAM+zD,QAAQb,EACpB,CACI,GAAI0L,EAAgB,CAClB,MAAMpL,EAASoL,EAAeh/D,GAC1B4zD,IACF6O,GAAQ,GAEVriE,EAAMo0D,UAAUZ,EACtB,CACI,GAAIsL,EAAc,CAChB,MAAMrQ,EAAOqQ,EAAal/D,GACtB6uD,IACF4T,GAAQ,GAEVriE,EAAM05D,QAAQjL,EACpB,CACI,GAAIgS,EAAe,CACjB,MAAMl+D,EAAQk+D,EAAc7gE,GACxB2C,IACF8/D,GAAQ,GAEVriE,EAAMutB,SAAShrB,EACrB,CAII,OAHI6/D,GACFpiE,EAAM+3C,UAAUqqB,EAAexiE,IAE7ByiE,EACK,KAEFriE,CACR,CACH,CAYA,SAAS2+D,GAAUF,EAAWM,EAAQn/D,GACpC,IAAI0iE,EACJ,GAAIvD,EAAS,qBAAsBN,EACjC6D,EAqqBJ,SAA0B7D,EAAWM,EAAQn/D,GAC3C,MAAM2iE,EAAetD,GACnBR,EACAM,EAAS,cACTn/D,GAEI4iE,EAAkBC,GACtBhE,EACAM,EAAS,iBACTn/D,GAEI8iE,EAAuBD,GAC3BhE,EACAM,EAAS,eACTn/D,GAEI+iE,EAAiBC,GACrBnE,EACAM,EAAS,QACTn/D,GAEF,OAAO,SAAUA,GACf,MAAO,CACLquB,IAAKs0C,EAAa3iE,GAClB2H,OAAQi7D,GAAmBA,EAAgB5iE,GAC3CsD,KAAMw/D,GAAwBA,EAAqB9iE,GACnD+gD,MAAOgiB,GAAkBA,EAAe/iE,GAE3C,CACH,CAlsBoBijE,CAAiBpE,EAAWM,EAAS,QAASn/D,OACzD,CACL,GAAyC,SAArC6+D,EAAUM,EAAS,cAErB,OAAQn/D,GAAY,KAGtB0iE,EAAgBM,GACdnE,EACAM,EAAS,aACTn/D,EAEN,CACE,IAAK0iE,EACH,OAAO,KAGT,MAAMpP,EAAO,IAAIqD,GACjB,OAAO,SAAU32D,GACf,MAAM+gD,EAAQ2hB,EAAc1iE,GAC5B,OAAI+gD,IAAUV,GACL,MAETiT,EAAKuD,SAAS9V,GACPuS,EACR,CACH,CAYA,SAAS2L,GAAYJ,EAAWM,EAAQn/D,GACtC,MAAMkjE,EAAgBxD,GACpBb,EACAM,EAAS,eACTn/D,GAGI0iE,EAAgBM,GACpBnE,EACAM,EAAS,eACTn/D,GAGF,IAAKkjE,IAAkBR,EACrB,OAAO,KAGT,MAAMS,EAAkB9D,GACtBR,EACAM,EAAS,kBACTn/D,GAGIojE,EAAmB/D,GACvBR,EACAM,EAAS,mBACTn/D,GAGIqjE,EAAmB3C,GACvB7B,EACAM,EAAS,mBACTn/D,GAGIsjE,EAAyB5D,GAC7Bb,EACAM,EAAS,0BACTn/D,GAGIujE,EAAqB7D,GACzBb,EACAM,EAAS,qBACTn/D,GAGI4zD,EAAS,IAAIyE,GACnB,OAAO,SAAUr4D,GACf,GAAI0iE,EAAe,CACjB,MAAM3hB,EAAQ2hB,EAAc1iE,GAC5B,GAAI+gD,IAAUV,GACZ,OAAO,KAETuT,EAAOiD,SAAS9V,EACtB,CAMI,GAJImiB,GACFtP,EAAOoF,SAASkK,EAAcljE,IAG5BmjE,EAAiB,CACnB,MAAM5N,EAAU4N,EAAgBnjE,GAChC,GAAgB,SAAZu1D,GAAkC,UAAZA,GAAmC,WAAZA,EAC/C,MAAM,IAAI58D,MAAM,4CAElBi7D,EAAOgF,WAAWrD,EACxB,CAEI,GAAI6N,EAAkB,CACpB,MAAM1O,EAAW0O,EAAiBpjE,GAClC,GACe,UAAb00D,GACa,UAAbA,GACa,UAAbA,EAEA,MAAM,IAAI/7D,MAAM,6CAElBi7D,EAAOkF,YAAYpE,EACzB,CAcI,OAZI2O,GACFzP,EAAOsC,YAAYmN,EAAiBrjE,IAGlCsjE,GACF1P,EAAOiF,kBAAkByK,EAAuBtjE,IAG9CujE,GACF3P,EAAOmF,cAAcwK,EAAmBvjE,IAGnC4zD,CACR,CACH,CAsgBA,SAAS8L,GAAgBb,EAAWn5D,EAAM1F,GACxC,KAAM0F,KAAQm5D,GACZ,OAEF,MAAMf,EAAYxU,GAAgBuV,EAAUn5D,GAAO+8C,GAAYziD,GAC/D,OAAO,SAAUA,GACf,OAAOiiE,GAAcnE,EAAU99D,GAAU0F,EAC1C,CACH,CAQA,SAAS25D,GAAgBR,EAAWn5D,EAAM1F,GACxC,KAAM0F,KAAQm5D,GACZ,OAAO,KAET,MAAMf,EAAYxU,GAAgBuV,EAAUn5D,GAAOg9C,GAAY1iD,GAC/D,OAAO,SAAUA,GACf,OAAO+gE,GAAcjD,EAAU99D,GAAU0F,EAC1C,CACH,CAuCA,SAASo6D,GAAiBjB,EAAWn5D,EAAM1F,GACzC,KAAM0F,KAAQm5D,GACZ,OAAO,KAET,MAAMf,EAAYxU,GAAgBuV,EAAUn5D,GAAO88C,GAAaxiD,GAChE,OAAO,SAAUA,GACf,MAAM3L,EAAQypE,EAAU99D,GACxB,GAAqB,kBAAV3L,EACT,MAAM,IAAIsE,MAAM,0BAA0B+M,KAE5C,OAAOrR,CACR,CACH,CAQA,SAAS2uE,GAAmBnE,EAAWn5D,EAAM1F,GAC3C,KAAM0F,KAAQm5D,GACZ,OAAO,KAET,MAAMf,EAAYxU,GAAgBuV,EAAUn5D,GAAOi9C,GAAW3iD,GAC9D,OAAO,SAAUA,GACf,OAAOshE,GAAiBxD,EAAU99D,GAAU0F,EAC7C,CACH,CAQA,SAASg7D,GAAqB7B,EAAWn5D,EAAM1F,GAC7C,KAAM0F,KAAQm5D,GACZ,OAAO,KAET,MAAMf,EAAYxU,GAAgBuV,EAAUn5D,GAAOk9C,GAAiB5iD,GACpE,OAAO,SAAUA,GACf,OAAOyhE,GAAmB3D,EAAU99D,GAAU0F,EAC/C,CACH,CAQA,SAASu7D,GAAoBpC,EAAWn5D,EAAM1F,GAC5C,KAAM0F,KAAQm5D,GACZ,OAAO,KAET,MAAMf,EAAYxU,GAAgBuV,EAAUn5D,GAAOk9C,GAAiB5iD,GACpE,OAAO,SAAUA,GACf,MAAMrF,EAAQ8mE,GAAmB3D,EAAU99D,GAAU0F,GACrD,GAAqB,IAAjB/K,EAAMxJ,OACR,MAAM,IAAIwH,MAAM,4BAA4B+M,KAE9C,OAAO/K,CACR,CACH,CAQA,SAASkoE,GAAchE,EAAWn5D,EAAM1F,GACtC,KAAM0F,KAAQm5D,GACZ,OAAO,KAET,MAAMf,EAAYxU,GAAgBuV,EAAUn5D,GAAOk9C,GAAiB5iD,GACpE,OAAO,SAAUA,GACf,OAAOwjE,GAAY1F,EAAU99D,GAAU0F,EACxC,CACH,CAQA,SAASw6D,GAAkBrB,EAAWn5D,EAAM1F,GAC1C,KAAM0F,KAAQm5D,GACZ,OAAO,KAET,MAAMf,EAAYxU,GAChBuV,EAAUn5D,GACVk9C,GAAkBH,GAClBziD,GAEF,OAAO,SAAUA,GACf,OA+NJ,SAAyB3L,EAAOQ,GAC9B,GAAqB,iBAAVR,EACT,OAAOA,EAET,OAAOmvE,GAAYnvE,EAAOQ,EAC5B,CApOW4uE,CAAgB3F,EAAU99D,GAAU0F,EAC5C,CACH,CAOA,SAASi8D,GAAe9C,EAAWhqE,GACjC,MAAMR,EAAQwqE,EAAUhqE,GACxB,QAAciC,IAAVzC,EAAJ,CAGA,GAAqB,iBAAVA,EACT,MAAM,IAAIsE,MAAM,yBAAyB9D,KAE3C,OAAOR,CAJT,CAKA,CAiDA,SAAS+sE,GAAmBvC,EAAWhqE,GACrC,MAAMsvD,EAAU0a,EAAUhqE,GAC1B,QAAgBiC,IAAZqtD,EAAJ,CAGA,GACc,gBAAZA,GACY,iBAAZA,GACY,aAAZA,GACY,cAAZA,EAEA,MAAM,IAAIxrD,MACR,kEAAkE9D,KAGtE,OAAOsvD,CAXT,CAYA,CAOA,SAASkd,GAAwBxC,EAAWhqE,GAC1C,MAAMsvD,EAAU0a,EAAUhqE,GAC1B,QAAgBiC,IAAZqtD,EAAJ,CAGA,GAAgB,WAAZA,GAAoC,aAAZA,EAC1B,MAAM,IAAIxrD,MAAM,mCAAmC9D,KAErD,OAAOsvD,CAJT,CAKA,CAoBA,SAASwc,GAAsB9B,EAAWhqE,GACxC,MAAMsvD,EAAU0a,EAAUhqE,GAC1B,QAAgBiC,IAAZqtD,EAAJ,CAGA,GAAuB,iBAAZA,EACT,MAAM,IAAIxrD,MAAM,yBAAyB9D,KAE3C,GAAgB,cAAZsvD,GAAuC,aAAZA,GAAsC,SAAZA,EACvD,MAAM,IAAIxrD,MAAM,6CAA6C9D,KAE/D,OAAOsvD,CAPT,CAQA,CAoBA,SAASsd,GAAmBptE,EAAOQ,GACjC,IAAKvC,MAAMC,QAAQ8B,GACjB,MAAM,IAAIsE,MAAM,yBAAyB9D,KAE3C,MAAM1D,EAASkD,EAAMlD,OACrB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5B,GAAwB,iBAAbwC,EAAMxC,GACf,MAAM,IAAI8G,MAAM,oCAAoC9D,KAGxD,OAAOR,CACT,CAOA,SAAS0sE,GAAc1sE,EAAOQ,GAC5B,GAAqB,iBAAVR,EACT,MAAM,IAAIsE,MAAM,yBAAyB9D,KAE3C,OAAOR,CACT,CAOA,SAAS4tE,GAAc5tE,EAAOQ,GAC5B,GAAqB,iBAAVR,EACT,MAAM,IAAIsE,MAAM,yBAAyB9D,KAE3C,OAAOR,CACT,CAOA,SAASitE,GAAiBjtE,EAAOQ,GAC/B,GAAqB,iBAAVR,EACT,OAAOA,EAET,MAAMsG,EAAQ8mE,GAAmBptE,EAAOQ,GAClC1D,EAASwJ,EAAMxJ,OACrB,GAAIA,EAAS,GAAKA,EAAS,EACzB,MAAM,IAAIwH,MAAM,2CAA2C9D,KAE7D,OAAO8F,CACT,CAOA,SAAS6oE,GAAYnvE,EAAOQ,GAC1B,MAAMyO,EAAOm+D,GAAmBptE,EAAOQ,GACvC,GAAoB,IAAhByO,EAAKnS,OACP,MAAM,IAAIwH,MAAM,wCAAwC9D,KAE1D,OAAOyO,CACT,CC/uCA,MAAM/I,GACU,cAgBhB,MAAMmpE,WAAwB9pB,GAI5B,WAAAvpD,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhC,MAAM29C,EAAcvhD,OAAO2C,OAAO,CAAA,EAAIiB,UAE/B29C,EAAYn4C,aACZm4C,EAAYorB,oBACZprB,EAAYqrB,4BACZrrB,EAAYsrB,uBACnBtuE,MAAMgjD,GAMNjoD,KAAKwzE,WAAalpE,EAAQmpE,UAAY/qE,OAAO4B,EAAQmpE,gBAAajtE,EAMlExG,KAAK0zE,mBACsBltE,IAAzB8D,EAAQ+oE,aAA6B/oE,EAAQ+oE,aAAe,IAO9DrzE,KAAKkU,OAAS,KAOdlU,KAAKmU,oBAAiB3N,EAEtBxG,KAAK8U,SAASxK,EAAQwF,OAMtB9P,KAAK2zE,2BAC8BntE,IAAjC8D,EAAQgpE,sBACJhpE,EAAQgpE,qBAOdtzE,KAAK4zE,6BACgCptE,IAAnC8D,EAAQipE,wBACJjpE,EAAQipE,sBAElB,CAME,YAAAxoB,GACE,OAAO/qD,KAAKwzE,UAChB,CAiBE,WAAAtpB,CAAYjpB,GACV,OAAOh8B,MAAMilD,YAAYjpB,EAC7B,CAKE,eAAA4yC,GACE,OAAO7zE,KAAK0zE,aAChB,CAKE,cAAAI,GACE,OACE9zE,KAAKiJ,IAAIgB,GAEf,CAQE,QAAA4K,GACE,OAAO7U,KAAKkU,MAChB,CAOE,gBAAAc,GACE,OAAOhV,KAAKmU,cAChB,CAME,uBAAA4/D,GACE,OAAO/zE,KAAK2zE,qBAChB,CAME,yBAAAK,GACE,OAAOh0E,KAAK4zE,uBAChB,CAQE,eAAA5oB,CAAgBtqB,EAAY0oB,GAC1B,MAAM6qB,EAAiBj0E,KAAK+qD,eACxBkpB,KAAkBvzC,EAAW+yC,YAAc,IAC7C/yC,EAAW+yC,UAAUQ,GAAkB,IAAIC,GAAM,IAEnDl0E,KAAK2qD,cAAcK,gBAAgBtqB,EAAY0oB,EACnD,CAME,cAAA+qB,CAAeC,GACbp0E,KAAK4J,IAAIK,GAAuBmqE,EACpC,CAuBE,QAAAt/D,CAAShF,GACP9P,KAAKkU,YAAmB1N,IAAVsJ,EAAsB+5D,GAAqB/5D,EACzD,MAAMukE,EAuBV,SAAqBvkE,GACnB,QAActJ,IAAVsJ,EACF,OAAO+5D,GAET,IAAK/5D,EACH,OAAO,KAET,GAAqB,mBAAVA,EACT,OAAOA,EAET,GAAIA,aAAiB64D,GACnB,OAAO74D,EAET,IAAK9N,MAAMC,QAAQ6N,GACjB,OAAO69D,GAA0B,CAAC79D,IAEpC,GAAqB,IAAjBA,EAAMjP,OACR,MAAO,GAGT,MAAMA,EAASiP,EAAMjP,OACfq2B,EAAQpnB,EAAM,GAEpB,GAAIonB,aAAiByxC,GAAO,CAI1B,MAAMtzD,EAAS,IAAIrT,MAAMnB,GACzB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAAG,CAC/B,MAAMC,EAAYsO,EAAMvO,GACxB,KAAMC,aAAqBmnE,IACzB,MAAM,IAAItgE,MAAM,sCAElBgN,EAAO9T,GAAKC,CAClB,CACI,OAAO6T,CACX,CAEE,GAAI,UAAW6hB,EAAO,CAIpB,MAAMo2C,EAAQ,IAAItrE,MAAMnB,GACxB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAAG,CAC/B,MAAMC,EAAYsO,EAAMvO,GACxB,KAAM,UAAWC,GACf,MAAM,IAAI6G,MAAM,kDAElBilE,EAAM/rE,GAAKC,CACjB,CACI,OAAO6rE,GAAqBC,EAChC,CAEE,MAAMM,EACR,EACE,OAAOD,GAA0BC,EACnC,CA/EsB0G,CAAYxkE,GAC9B9P,KAAKmU,eACO,OAAVrE,OAAiBtJ,EAAY+tE,GAAgBF,GAC/Cr0E,KAAK4H,SACT,CAME,YAAA4sE,CAAaf,GACXzzE,KAAKwzE,WAAaC,EAAY/qE,OAAO+qE,QAAajtE,EAClDxG,KAAK4H,SACT,EC5RA,MAAM6sE,WAAoB1uE,EAQxB,WAAAhG,CAAY2E,EAAMgwE,EAAuBh0C,EAAYhxB,GACnDzK,MAAMP,GAQN1E,KAAK00E,sBAAwBA,EAO7B10E,KAAK0gC,WAAaA,EASlB1gC,KAAK0P,QAAUA,CACnB,ECfA,MAAMilE,WAAoB70E,EAIxB,WAAAC,CAAYoxB,GACVlsB,QAMAjF,KAAKoiC,KAAOjR,CAChB,CAOE,mBAAAyjD,CAAoBlwE,EAAMg8B,GACxBt4B,GACJ,CAME,mBAAAysE,CAAoBn0C,GAClB,MAAMsH,EAAYtH,EAAWsH,UACvB8sC,EAA6Bp0C,EAAWo0C,2BACxCC,EAA6Br0C,EAAWq0C,2BAE9CphD,GACEmhD,EACAp0C,EAAW1tB,KAAK,GAAK,EACrB0tB,EAAW1tB,KAAK,GAAK,EACrB,EAAIg1B,EAAU/uB,YACZ,EAAG+uB,EAAU/uB,YACd+uB,EAAU9uB,UACV8uB,EAAUhvB,OAAO,IACjBgvB,EAAUhvB,OAAO,IAGpB2X,GAAYokD,EAA4BD,EAC5C,CAiBE,0BAAAE,CACE5+D,EACAsqB,EACAu0C,EACAC,EACAh9D,EACAnR,EACAouE,EACAC,GAEA,IAAI3rC,EACJ,MAAMzB,EAAYtH,EAAWsH,UAS7B,SAASgtC,EAA2BhuB,EAASyiB,EAASjwB,EAAOllC,GAC3D,OAAO4D,EAASzU,KAAKsD,EAAS0iE,EAASziB,EAAUxN,EAAQ,KAAMllC,EACrE,CAEI,MAAMqH,EAAaqsB,EAAUrsB,WAEvB05D,EAAuB35D,GAAMtF,EAAW5S,QAASmY,GACjD25D,EAAU,CAAC,CAAC,EAAG,IACrB,GAAI35D,EAAWG,YAAco5D,EAAc,CACzC,MACMn5D,EAAarD,GADMiD,EAAWE,aAEpCy5D,EAAQ3vE,KAAK,EAAEoW,EAAY,GAAI,CAACA,EAAY,GAClD,CAEI,MAAMw5D,EAAc70C,EAAW2pB,iBACzBmrB,EAAYD,EAAY10E,OAExB40E,EAA6C,GAC7CC,EAAW,GACjB,IAAK,IAAIn0E,EAAI,EAAGA,EAAI+zE,EAAQz0E,OAAQU,IAClC,IAAK,IAAIsb,EAAI24D,EAAY,EAAG34D,GAAK,IAAKA,EAAG,CACvC,MAAMusC,EAAamsB,EAAY14D,GACzB28B,EAAQ4P,EAAW5P,MACzB,GACEA,EAAM+R,eACNd,GAAOrB,EAAYphB,IACnBmtC,EAAY1xE,KAAK2xE,EAAU57B,GAC3B,CACA,MAAMkR,EAAgBlR,EAAMmR,cACtB5gD,EAASyvC,EAAMG,YACrB,GAAI+Q,GAAiB3gD,EAAQ,CAC3B,MAAMyL,EAAczL,EAAO4rE,WACvBN,EACAj/D,EACE8B,EAAW88D,EAA2B9tE,KAC1C,KACAkiD,EAAWpC,SAEb0uB,EAAS,GAAKlgE,EAAY,GAAK8/D,EAAQ/zE,GAAG,GAC1Cm0E,EAAS,GAAKlgE,EAAY,GAAK8/D,EAAQ/zE,GAAG,GAC1CkoC,EAASihB,EAAcsqB,2BACrBU,EACAh1C,EACAu0C,EACA/8D,EACAu9D,EAEd,CACU,GAAIhsC,EACF,OAAOA,CAEnB,CACA,CAEI,GAAuB,IAAnBgsC,EAAQ50E,OACV,OAEF,MAAM+0E,EAAQ,EAAIH,EAAQ50E,OAM1B,OALA40E,EAAQ3qE,SAAQ,CAACkS,EAAGzb,IAAOyb,EAAE64D,YAAct0E,EAAIq0E,IAC/CH,EAAQ58C,MAAK,CAAC93B,EAAGC,IAAMD,EAAE80E,WAAa70E,EAAE60E,aACxCJ,EAAQ/7B,MAAM18B,GACJysB,EAASzsB,EAAE9E,SAAS8E,EAAEysD,QAASzsD,EAAEw8B,MAAOx8B,EAAE1I,YAE7Cm1B,CACX,CAeE,sBAAAqsC,CACE1/D,EACAsqB,EACAu0C,EACAC,EACAC,EACApuE,GAaA,YAAsBP,IAXHxG,KAAKg1E,2BACtB5+D,EACAsqB,EACAu0C,EACAC,EACApyE,EACA9C,KACAm1E,EACApuE,EAIN,CAKE,MAAAmwC,GACE,OAAOl3C,KAAKoiC,IAChB,CAOE,WAAAyoB,CAAYnqB,GACVt4B,GACJ,CAME,uBAAA2tE,CAAwBr1C,GAClBs8B,GAAe7B,kBACjBz6B,EAAWs1C,oBAAoBrwE,KAAKswE,GAE1C,EAOA,SAASA,GAAgB9kD,EAAKuP,GAC5Bs8B,GAAe5B,QACjB,CC7NA,MAAM8a,WAA6BvB,GAIjC,WAAA50E,CAAYoxB,GACVlsB,MAAMksB,GAMNnxB,KAAKm2E,uBAAyBrvE,EAC5Bm3D,GACAr+D,EACAuxB,EAAIilD,WACJjlD,GAOFnxB,KAAK8iC,SAAW1zB,SAASC,cAAc,OACvC,MAAMS,EAAQ9P,KAAK8iC,SAAShzB,MAC5BA,EAAMwjC,SAAW,WACjBxjC,EAAMhB,MAAQ,OACdgB,EAAMf,OAAS,OACfe,EAAM42C,OAAS,IAEf1mD,KAAK8iC,SAASmV,UAAYlC,GAAqB,aAE/C,MAAMsgC,EAAYllD,EAAIwR,cACtB0zC,EAAU/kE,aAAatR,KAAK8iC,SAAUuzC,EAAUC,YAAc,MAM9Dt2E,KAAKu2E,UAAY,GAMjBv2E,KAAKi5C,kBAAmB,CAC5B,CAOE,mBAAA27B,CAAoBlwE,EAAMg8B,GACxB,MAAMvP,EAAMnxB,KAAKk3C,SACjB,GAAI/lB,EAAI1qB,YAAY/B,GAAO,CACzB,MAAMmB,EAAQ,IAAI4uE,GAAY/vE,OAAM8B,EAAWk6B,GAC/CvP,EAAIvrB,cAAcC,EACxB,CACA,CAKE,eAAA1F,GACEkH,EAAcrH,KAAKm2E,wBACnBn2E,KAAK8iC,SAASz3B,SACdpG,MAAM9E,iBACV,CAOE,WAAA0qD,CAAYnqB,GACV,IAAKA,EAKH,YAJI1gC,KAAKi5C,mBACPj5C,KAAK8iC,SAAShzB,MAAMkqC,QAAU,OAC9Bh6C,KAAKi5C,kBAAmB,IAK5Bj5C,KAAK60E,oBAAoBn0C,GACzB1gC,KAAK40E,oBAAoBvrB,GAA4B3oB,GAErD,MAAM2pB,EAAmB3pB,EAAW2pB,iBAAiBxxB,MACnD,CAAC93B,EAAGC,IAAMD,EAAE2lD,OAAS1lD,EAAE0lD,SAEP2D,EAAiB3Q,MAChC0P,GACCA,EAAW5P,iBAAiB45B,IAC5BhqB,EAAW5P,MAAMuR,mBAInBrqB,EAAW+yC,UAAY,CAAE,GAE3B,MAAMzrC,EAAYtH,EAAWsH,UAE7BhoC,KAAKu2E,UAAU11E,OAAS,EAExB,MAAM21E,EAAsB,GAC5B,IAAIC,EAAkB,KACtB,IAAK,IAAIl1E,EAAI,EAAG4E,EAAKkkD,EAAiBxpD,OAAQU,EAAI4E,IAAM5E,EAAG,CACzD,MAAM6nD,EAAaiB,EAAiB9oD,GACpCm/B,EAAWg2C,WAAan1E,EAExB,MAAMi4C,EAAQ4P,EAAW5P,MACnBm9B,EAAcn9B,EAAM+N,iBAC1B,IACGkD,GAAOrB,EAAYphB,IACJ,SAAf2uC,GAAyC,aAAfA,EAC3B,CACAn9B,EAAMsR,WACN,QACR,CAEM,MAAM3gD,EAAUqvC,EAAMxC,OAAOtW,EAAY+1C,GACpCtsE,IAGDA,IAAYssE,IACdz2E,KAAKu2E,UAAU5wE,KAAKwE,GACpBssE,EAAkBtsE,GAGpBqsE,EAAoB7wE,KAAKyjD,GAC/B,CAEIppD,KAAKyzE,UAAU/yC,EAAY81C,GAE3BxlE,GAAgBhR,KAAK8iC,SAAU9iC,KAAKu2E,WAEpCv2E,KAAK40E,oBAAoBvrB,GAA6B3oB,GAEjD1gC,KAAKi5C,mBACRj5C,KAAK8iC,SAAShzB,MAAMkqC,QAAU,GAC9Bh6C,KAAKi5C,kBAAmB,GAG1Bj5C,KAAK+1E,wBAAwBr1C,EACjC,CAME,SAAA+yC,CAAU/yC,EAAY60C,GACpB,GAAK70C,EAAW+yC,UAAhB,CAGA,IAAK,IAAIlyE,EAAIg0E,EAAY10E,OAAS,EAAGU,GAAK,IAAKA,EAAG,CAChD,MAAM6nD,EAAamsB,EAAYh0E,GACzBi4C,EAAQ4P,EAAW5P,MACrBA,EAAMuR,gBACRvR,EAAMwR,gBAAgBtqB,EAAY0oB,EAE1C,CACImsB,EAAYzqE,SAASs+C,GACnBA,EAAW5P,MAAMyR,eAAevqB,IATtC,CAWA,ECnBA,SAASk2C,GAAuBp9B,GAC1BA,aAAiB8P,GACnB9P,EAAM0R,eAAe,MAGnB1R,aAAiBwO,IACnBxO,EAAM+O,YAAYz9C,QAAQ8rE,GAE9B,CAMA,SAASC,GAAoBr9B,EAAOroB,GAClC,GAAIqoB,aAAiB8P,GACnB9P,EAAM0R,eAAe/5B,QAGvB,GAAIqoB,aAAiBwO,GAAY,CAC/B,MAAM7O,EAASK,EAAM+O,YAAYv9C,WACjC,IAAK,IAAIzJ,EAAI,EAAG4E,EAAKgzC,EAAOt4C,OAAQU,EAAI4E,IAAM5E,EAC5Cs1E,GAAoB19B,EAAO53C,GAAI4vB,EAErC,CACA,QAsDA,cAAkBtoB,EAIhB,WAAA9I,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAW,CAAE,EAKvBtK,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAEL,MAAMovE,EA2+CV,SAA+BxsE,GAI7B,IAAIysE,EAAsB,UACUvwE,IAAhC8D,EAAQysE,sBACVA,EACyC,iBAAhCzsE,EAAQysE,oBACX3nE,SAASkoC,eAAehtC,EAAQysE,qBAChCzsE,EAAQysE,qBAMhB,MAAMjuE,EAAS,CAAE,EAEXkuE,EACJ1sE,EAAQ6uC,QACiD,mBAA/B7uC,EAAc,OAAW,UACpBA,EAAc,OACzC,IAAI09C,GAAW,CACb7O,OAEI7uC,EACD,SAUX,IAAI+xC,EAcAqJ,EAeAuxB,EArCJnuE,EAAO67B,IAA0BqyC,EAEjCluE,EAAO67B,IAAsBr6B,EAAQlJ,OAErC0H,EAAO67B,IACLr6B,EAAQ8wC,gBAAgB3Q,GAAOngC,EAAQ8wC,KAAO,IAAI3Q,QAI3BjkC,IAArB8D,EAAQ+xC,WACNr6C,MAAMC,QAAQqI,EAAQ+xC,UACxBA,EAAW,IAAIjyC,EAAWE,EAAQ+xC,SAAS74C,UAE3CmQ,GAC4D,mBAAhCrJ,EAAgB,SAAU,SACpD,+DAEF+xC,EAAW/xC,EAAQ+xC,gBAMM71C,IAAzB8D,EAAQo7C,eACN1jD,MAAMC,QAAQqI,EAAQo7C,cACxBA,EAAe,IAAIt7C,EAAWE,EAAQo7C,aAAaliD,UAEnDmQ,GAEI,mBADwBrJ,EAAoB,aAAU,SAExD,mEAEFo7C,EAAep7C,EAAQo7C,oBAMFl/C,IAArB8D,EAAQ2sE,SACNj1E,MAAMC,QAAQqI,EAAQ2sE,UACxBA,EAAW,IAAI7sE,EAAWE,EAAQ2sE,SAASzzE,UAE3CmQ,GAC4D,mBAAhCrJ,EAAgB,SAAU,SACpD,+DAEF2sE,EAAW3sE,EAAQ2sE,UAGrBA,EAAW,IAAI7sE,EAGjB,MAAO,CACLiyC,SAAUA,EACVqJ,aAAcA,EACdqxB,oBAAqBA,EACrBE,SAAUA,EACVnuE,OAAQA,EAEZ,CAjkD4BouE,CAAsB5sE,GAM9CtK,KAAKm3E,iBAAkB,EAMvBn3E,KAAKo3E,SAAU,EAGfp3E,KAAKq3E,yBAA2Br3E,KAAKs3E,mBAAmBpwE,KAAKlH,MAM7DA,KAAKu3E,sBACyB/wE,IAA5B8D,EAAQktE,gBAAgCltE,EAAQktE,gBAAkB,GAMpEx3E,KAAK68B,iBACoBr2B,IAAvB8D,EAAQqyB,WACJryB,EAAQqyB,WACR7uB,GAMN9N,KAAKy3E,yBAMLz3E,KAAK03E,mBAKL13E,KAAK23E,gBAAkB33E,KAAK23E,gBAAgBzwE,KAAKlH,MAMjDA,KAAK43E,4B3F5RA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G2FkSrB53E,KAAK63E,4B3FlSA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G2FwSrB73E,KAAK83E,YAAc,EAMnB93E,KAAK+3E,YAAc,KAOnB/3E,KAAKg4E,gBAAkB,KAMvBh4E,KAAKi4E,yBAA2B,KAMhCj4E,KAAKk4E,uBAAyB,KAM9Bl4E,KAAKm4E,gCAAkC,KAMvCn4E,KAAKo4E,UAAYhpE,SAASC,cAAc,OACxCrP,KAAKo4E,UAAUngC,UACb,eAAiB,iBAAkBrpC,OAAS,YAAc,IAC5D5O,KAAKo4E,UAAUtoE,MAAMwjC,SAAW,WAChCtzC,KAAKo4E,UAAUtoE,MAAMo7D,SAAW,SAChClrE,KAAKo4E,UAAUtoE,MAAMhB,MAAQ,OAC7B9O,KAAKo4E,UAAUtoE,MAAMf,OAAS,OAM9B/O,KAAKq4E,kBAAoBjpE,SAASC,cAAc,OAChDrP,KAAKq4E,kBAAkBvoE,MAAMwjC,SAAW,WACxCtzC,KAAKq4E,kBAAkBvoE,MAAM42C,OAAS,IACtC1mD,KAAKq4E,kBAAkBvoE,MAAMhB,MAAQ,OACrC9O,KAAKq4E,kBAAkBvoE,MAAMf,OAAS,OACtC/O,KAAKq4E,kBAAkBvoE,MAAMgnC,cAAgB,OAC7C92C,KAAKq4E,kBAAkBpgC,UAAY,sBACnCj4C,KAAKo4E,UAAU5mE,YAAYxR,KAAKq4E,mBAMhCr4E,KAAKs4E,2BAA6BlpE,SAASC,cAAc,OACzDrP,KAAKs4E,2BAA2BxoE,MAAMwjC,SAAW,WACjDtzC,KAAKs4E,2BAA2BxoE,MAAM42C,OAAS,IAC/C1mD,KAAKs4E,2BAA2BxoE,MAAMhB,MAAQ,OAC9C9O,KAAKs4E,2BAA2BxoE,MAAMf,OAAS,OAC/C/O,KAAKs4E,2BAA2BxoE,MAAMgnC,cAAgB,OACtD92C,KAAKs4E,2BAA2BrgC,UAAY,gCAC5Cj4C,KAAKo4E,UAAU5mE,YAAYxR,KAAKs4E,4BAMhCt4E,KAAKu4E,wBAA0B,KAM/Bv4E,KAAKyiC,eAAiBn4B,EAAQ63B,cAM9BniC,KAAKw4E,qBAAuB1B,EAAgBC,oBAM5C/2E,KAAKy4E,yBAA2B,KAMhCz4E,KAAK04E,eAAiB,KAMtB14E,KAAK24E,gBAAkB,IAAIC,gBAAe,IAAM54E,KAAK64E,eAMrD74E,KAAKq8C,SAAWy6B,EAAgBz6B,UAAYy8B,KAM5C94E,KAAK0lD,aACHoxB,EAAgBpxB,cAChBqzB,GAAoB,CAClBt4B,aAAa,IAOjBzgD,KAAKg5E,UAAYlC,EAAgBG,SAOjCj3E,KAAKi5E,gBAAkB,CAAE,EAMzBj5E,KAAK0pD,UAAY,KAMjB1pD,KAAKk5E,qBAAuB,GAM5Bl5E,KAAKm5E,WAAa,IAAIxyC,GACpB3mC,KAAK2nC,gBAAgBzgC,KAAKlH,MAC1BA,KAAKo5E,kBAAkBlyE,KAAKlH,OAG9BA,KAAK0J,kBACHi7B,GACA3kC,KAAKq5E,0BAEPr5E,KAAK0J,kBAAkBi7B,GAAkB3kC,KAAKs5E,oBAC9Ct5E,KAAK0J,kBAAkBi7B,GAAkB3kC,KAAKu5E,oBAC9Cv5E,KAAK0J,kBAAkBi7B,GAAoB3kC,KAAKw5E,sBAIhDx5E,KAAKgJ,cAAc8tE,EAAgBhuE,QAEnC,MAAMqoB,EAAMnxB,MACRsK,EAAQ8wC,MAAU9wC,EAAQ8wC,gBAAgB3Q,IAC5CngC,EAAQ8wC,KAAK7nC,MAAK,SAAUkmE,GAC1BtoD,EAAIuoD,QAAQ,IAAIjvC,GAAKgvC,GAC7B,IAGIz5E,KAAKq8C,SAAS/2C,iBACZ3F,GAICkG,IACCA,EAAMsE,QAAQgtC,OAAOn3C,KAAK,IAI9BA,KAAKq8C,SAAS/2C,iBACZ3F,GAICkG,IACCA,EAAMsE,QAAQgtC,OAAO,KAAK,IAI9Bn3C,KAAK0lD,aAAapgD,iBAChB3F,GAICkG,IACCA,EAAMsE,QAAQgtC,OAAOn3C,KAAK,IAI9BA,KAAK0lD,aAAapgD,iBAChB3F,GAICkG,IACCA,EAAMsE,QAAQgtC,OAAO,KAAK,IAI9Bn3C,KAAKg5E,UAAU1zE,iBACb3F,GAICkG,IACC7F,KAAK25E,oBAAoB9zE,EAAMsE,QAAQ,IAI3CnK,KAAKg5E,UAAU1zE,iBACb3F,GAICkG,IACC,MAAMkH,EAAKlH,EAAMsE,QAAQ4K,aACdvO,IAAPuG,UACK/M,KAAKi5E,gBAAgBlsE,EAAGgkB,YAEjClrB,EAAMsE,QAAQgtC,OAAO,KAAK,IAI9Bn3C,KAAKq8C,SAASvxC,SAIX8uE,IACCA,EAAQziC,OAAOn3C,KAAK,IAIxBA,KAAK0lD,aAAa56C,SAIf+uE,IACCA,EAAY1iC,OAAOn3C,KAAK,IAI5BA,KAAKg5E,UAAUluE,QAAQ9K,KAAK25E,oBAAoBzyE,KAAKlH,MACzD,CAOE,UAAA85E,CAAWF,GACT55E,KAAK+5E,cAAcp0E,KAAKi0E,EAC5B,CAWE,cAAAI,CAAeH,GACb75E,KAAKi6E,kBAAkBt0E,KAAKk0E,EAChC,CASE,QAAAK,CAAS1gC,GACQx5C,KAAKsqD,gBAAgB/B,YAC7B5iD,KAAK6zC,EAChB,CAME,eAAA2gC,CAAgBt0E,GACdgxE,GAAoBhxE,EAAM2zC,MAAOx5C,KACrC,CAOE,UAAAo6E,CAAWC,GACTr6E,KAAKs6E,cAAc30E,KAAK00E,EAC5B,CAOE,mBAAAV,CAAoBU,GAClB,MAAMttE,EAAKstE,EAAQtlE,aACRvO,IAAPuG,IACF/M,KAAKi5E,gBAAgBlsE,EAAGgkB,YAAcspD,GAExCA,EAAQljC,OAAOn3C,KACnB,CAOE,eAAAG,GACEH,KAAKq8C,SAASh4C,QACdrE,KAAK0lD,aAAarhD,QAClBrE,KAAKg5E,UAAU30E,QACfrE,KAAK24E,gBAAgB4B,aACrBv6E,KAAKi3C,UAAU,MACfhyC,MAAM9E,iBACV,CAuBE,qBAAAq6E,CAAsBv5C,EAAO/oB,EAAU5N,GACrC,IAAKtK,KAAK+3E,cAAgB/3E,KAAK0pD,UAC7B,OAEF,MAAMtzC,EAAapW,KAAK+gD,+BAA+B9f,GAEjDg0C,OACqBzuE,KAF3B8D,OAAsB9D,IAAZ8D,EAAwBA,EAAU,CAAE,GAEpC2qE,aAA6B3qE,EAAQ2qE,aAAe,EACxDE,OACoB3uE,IAAxB8D,EAAQ6qE,YAA4B7qE,EAAQ6qE,YAAcryE,EACtDoyE,GAAwC,IAAzB5qE,EAAQ4qE,aAC7B,OAAOl1E,KAAK0pD,UAAUsrB,2BACpB5+D,EACApW,KAAK+3E,YACL9C,EACAC,EACAh9D,EACA,KACAi9D,EACA,KAEN,CAaE,kBAAAsF,CAAmBx5C,EAAO32B,GACxB,MAAMowE,EAAW,GAQjB,OAPA16E,KAAKw6E,sBACHv5C,GACA,SAAUwoC,GACRiR,EAAS/0E,KAAK8jE,EACf,GACDn/D,GAEKowE,CACX,CAOE,YAAAthC,GACE,MAAMD,EAAS,GAWf,OAVA,SAASwhC,EAAc3D,GACrBA,EAAWlsE,SAAQ,SAAU0uC,GACvBA,aAAiBwO,GACnB2yB,EAAcnhC,EAAM+O,aAEpBpP,EAAOxzC,KAAK6zC,EAEtB,GACA,CACImhC,CAAc36E,KAAKuoD,aACZpP,CACX,CAaE,iBAAAyhC,CAAkB35C,EAAO32B,GACvB,IAAKtK,KAAK+3E,cAAgB/3E,KAAK0pD,UAC7B,OAAO,EAET,MAAMtzC,EAAapW,KAAK+gD,+BAA+B9f,GAEjDk0C,OACoB3uE,KAF1B8D,OAAsB9D,IAAZ8D,EAAwBA,EAAU,CAAE,GAEpC6qE,YAA4B7qE,EAAQ6qE,YAAcryE,EACtDmyE,OACqBzuE,IAAzB8D,EAAQ2qE,aAA6B3qE,EAAQ2qE,aAAe,EACxDC,GAAwC,IAAzB5qE,EAAQ4qE,aAC7B,OAAOl1E,KAAK0pD,UAAUosB,uBACpB1/D,EACApW,KAAK+3E,YACL9C,EACAC,EACAC,EACA,KAEN,CAQE,kBAAA0F,CAAmBh1E,GACjB,OAAO7F,KAAKmhC,uBAAuBnhC,KAAKkhC,cAAcr7B,GAC1D,CAOE,0BAAAi1E,CAA2Bj1E,GACzB,OAAO7F,KAAK+gD,+BAA+B/gD,KAAKkhC,cAAcr7B,GAClE,CAQE,aAAAq7B,CAAcr7B,GACZ,MACMk1E,EADW/6E,KAAKo4E,UACY4C,wBAC5B9xC,EAAelpC,KAAKmT,UACpB8nE,EAASF,EAAiBjsE,MAAQo6B,EAAa,GAC/CgyC,EAASH,EAAiBhsE,OAASm6B,EAAa,GAChDiyC,EAEJ,mBAAoBt1E,EACU,EAAQu1E,eAAe,GAC3D,EAEI,MAAO,EACJD,EAAc32C,QAAUu2C,EAAiBr5B,MAAQu5B,GACjDE,EAAc12C,QAAUs2C,EAAiBp5B,KAAOu5B,EAEvD,CAWE,SAAAG,GACE,OACEr7E,KAAKiJ,IAAI07B,GAEf,CASE,gBAAAoZ,GACE,OAAO/9C,KAAK04E,cAChB,CASE,sBAAAv3C,CAAuBF,GACrB,OAAO9S,GACLnuB,KAAK+gD,+BAA+B9f,GACpCjhC,KAAKq7C,UAAU/nB,gBAErB,CAQE,8BAAAytB,CAA+B9f,GAC7B,MAAMP,EAAa1gC,KAAK+3E,YACxB,OAAKr3C,EAGEvlB,GAAeulB,EAAWq0C,2BAA4B9zC,EAAMz9B,SAF1D,IAGb,CAQE,WAAAu2E,GACE,OAAO/5E,KAAKq8C,QAChB,CAQE,WAAAi+B,GACE,OAAOt6E,KAAKg5E,SAChB,CAUE,cAAAsC,CAAevuE,GACb,MAAMstE,EAAUr6E,KAAKi5E,gBAAgBlsE,EAAGgkB,YACxC,YAAmBvqB,IAAZ6zE,EAAwBA,EAAU,IAC7C,CAUE,eAAAJ,GACE,OAAOj6E,KAAK0lD,YAChB,CAQE,aAAA4E,GACE,OAAkCtqD,KAAKiJ,IAAI07B,GAC/C,CAOE,SAAA0jB,CAAUlP,GACR,MAAMoiC,EAAQv7E,KAAKsqD,gBACnB,GAAInR,aAAkB/uC,EAEpB,YADAmxE,EAAMlzB,UAAUlP,GAIlB,MAAM4P,EAAawyB,EAAMhzB,YACzBQ,EAAW1kD,QACX0kD,EAAWlnD,OAAOs3C,EACtB,CAOE,SAAAoP,GAEE,OADevoD,KAAKsqD,gBAAgB/B,WAExC,CAKE,oBAAAizB,GACE,MAAMnxB,EAAmBrqD,KAAKsqD,gBAAgBjD,sBAC9C,IAAK,IAAI9lD,EAAI,EAAG4E,EAAKkkD,EAAiBxpD,OAAQU,EAAI4E,IAAM5E,EAAG,CACzD,MAAM4K,EAAQk+C,EAAiB9oD,GAC/B,IAAK4K,EAAMguC,QACT,SAEF,MAAM2uB,EAAW38D,EAAMqtC,MAAMmR,cAC7B,GAAIme,IAAaA,EAASpN,MACxB,OAAO,EAET,MAAM3xD,EAASoC,EAAMqtC,MAAMG,YAC3B,GAAI5vC,GAAUA,EAAOy5D,QACnB,OAAO,CAEf,CACI,OAAO,CACX,CASE,sBAAAiY,CAAuBrlE,GACrB,MAAMslE,EAAiBrtD,GACrBjY,EACApW,KAAKq7C,UAAU/nB,iBAEjB,OAAOtzB,KAAK8gD,+BAA+B46B,EAC/C,CAQE,8BAAA56B,CAA+B1qC,GAC7B,MAAMsqB,EAAa1gC,KAAK+3E,YACxB,OAAKr3C,EAGEvlB,GACLulB,EAAWo0C,2BACX1+D,EAAW5S,MAAM,EAAG,IAJb,IAMb,CAME,WAAAmnD,GACE,OAAO3qD,KAAK0pD,SAChB,CAQE,OAAAv2C,GACE,OACEnT,KAAKiJ,IAAI07B,GAEf,CASE,OAAA0W,GACE,OAA4Br7C,KAAKiJ,IAAI07B,GACzC,CAOE,WAAAhC,GACE,OAAO3iC,KAAKo4E,SAChB,CASE,mBAAAx2B,GACE,OAAO5hD,KAAKq4E,iBAChB,CASE,4BAAAjhC,GACE,OAAOp3C,KAAKs4E,0BAChB,CAKE,gBAAAn0C,GACE,MAAM2Z,EAAgB99C,KAAK+9C,mBAC3B,OAAOD,EAAgBA,EAAc69B,cAAgBvsE,QACzD,CASE,eAAAu4B,CAAgBN,EAAMO,EAAeC,EAAYC,GAC/C,OAAOH,GACL3nC,KAAK+3E,YACL1wC,EACAO,EACAC,EACAC,EAEN,CAME,kBAAAwvC,CAAmBl6B,EAAc14C,GAC/BA,EAAOA,GAAQ04C,EAAa14C,KAC5B,MAAMm4C,EAAkB,IAAIlc,GAAgBj8B,EAAM1E,KAAMo9C,GACxDp9C,KAAK47E,sBAAsB/+B,EAC/B,CAKE,qBAAA++B,CAAsB/+B,GACpB,IAAK78C,KAAK+3E,YAGR,OAEF,MAAMn3C,EAAgBic,EAAgBjc,cAChCn3B,EAAYm3B,EAAcl8B,KAChC,GACE+E,IAAcw4B,IACdx4B,IAAc5J,GACd4J,IAAc5J,EACd,CACA,MAAMqkC,EAAMlkC,KAAKmkC,mBACX6Z,EAAWh+C,KAAKo4E,UAAU/zC,YAC5BrkC,KAAKo4E,UAAU/zC,cACfH,EACE9iC,EAA8Bw/B,EAAoB,OAElDi7C,EACJ79B,aAAoBE,WAChBF,EAASG,OAAS/8C,EAChB48C,EAASG,KAAKw9B,cACd39B,EACFA,IAAa9Z,EACXA,EAAI43C,gBACJ99B,EACR,GAGEh+C,KAAKs4E,2BAA2Bh9B,SAASl6C,KAKxCy6E,EAAWvgC,SAASl6C,GAErB,MAER,CAEI,GADAy7C,EAAgBnc,WAAa1gC,KAAK+3E,aACU,IAAxC/3E,KAAK4F,cAAci3C,GAA4B,CACjD,MAAMk/B,EAAoB/7E,KAAKi6E,kBAAkBjvE,WAAWxH,QAC5D,IAAK,IAAIjC,EAAIw6E,EAAkBl7E,OAAS,EAAGU,GAAK,EAAGA,IAAK,CACtD,MAAMs4E,EAAckC,EAAkBx6E,GACtC,GACEs4E,EAAY3iC,WAAal3C,OACxB65E,EAAYj9B,cACZ58C,KAAK+9C,mBAEN,SAGF,IADa87B,EAAYzzE,YAAYy2C,IACxBA,EAAgBl4C,mBAC3B,KAEV,CACA,CACA,CAKE,gBAAAq3E,GACE,MAAMt7C,EAAa1gC,KAAK+3E,YAWlBkE,EAAYj8E,KAAKm5E,WACvB,IAAK8C,EAAUz3E,UAAW,CACxB,IAAIgjC,EAAkBxnC,KAAKu3E,iBACvB9vC,EAAcD,EAClB,GAAI9G,EAAY,CACd,MAAM4P,EAAQ5P,EAAWw7C,UACzB,GAAI5rC,EAAMrI,KAAuBqI,EAAMrI,IAAuB,CAC5D,MAAMk0C,EAAmBh8C,KAAKC,MAAQM,EAAW1zB,KAAO,EACxDw6B,EAAkB20C,EAAmB,EAAI,EACzC10C,EAAc00C,EAAmB,EAAI,CAC/C,CACA,CACUF,EAAU70C,kBAAoBI,IAChCy0C,EAAUv1C,eACVu1C,EAAU10C,cAAcC,EAAiBC,GAEjD,CAEQ/G,GAAc1gC,KAAK0pD,YAAchpB,EAAW4M,UAC1CttC,KAAKm3E,iBACHn3E,KAAKyG,YAAY4iD,KACnBrpD,KAAK0pD,UAAUkrB,oBACbvrB,GACA3oB,IAGiB,IAAjB1gC,KAAKo3E,UACPp3E,KAAKo3E,SAAU,EACfp3E,KAAK4F,cACH,IAAI66B,GAASiE,GAAsB1kC,KAAM0gC,OAGnB,IAAjB1gC,KAAKo3E,UACdp3E,KAAKo3E,SAAU,EACfp3E,KAAK4F,cACH,IAAI66B,GAASiE,GAAwB1kC,KAAM0gC,MAKjD,MAAMs1C,EAAsBh2E,KAAKk5E,qBACjC,GAAIx4C,EACF,IAAK,IAAIn/B,EAAI,EAAG4E,EAAK6vE,EAAoBn1E,OAAQU,EAAI4E,IAAM5E,EACzDy0E,EAAoBz0E,GAAGvB,KAAM0gC,GAGjCs1C,EAAoBn1E,OAAS,CACjC,CAKE,kBAAA04E,GACMv5E,KAAKq7C,YAAcr7C,KAAKq7C,UAAU5N,gBACpCztC,KAAKq7C,UAAU3N,mBAAmB,GAGpC1tC,KAAKg3C,QACT,CAKE,oBAAAwiC,GACE,GAAIx5E,KAAKu4E,wBAAyB,CAChC,IAAK,IAAIh3E,EAAI,EAAG4E,EAAKnG,KAAKy4E,yBAAyB53E,OAAQU,EAAI4E,IAAM5E,EACnE8F,EAAcrH,KAAKy4E,yBAAyBl3E,IAE9CvB,KAAKy4E,yBAA2B,KAChCz4E,KAAKo4E,UAAU9xE,oBACbzG,EACAG,KAAKq3E,0BAEPr3E,KAAKo4E,UAAU9xE,oBACbzG,EACAG,KAAKq3E,0BAEPr3E,KAAKu4E,wBAAwBr4E,UAC7BF,KAAKu4E,wBAA0B,KAC/Bv4E,KAAKo4E,UAAU/sE,QACrB,CAEI,GAAIrL,KAAK04E,eAAgB,CACvB14E,KAAK24E,gBAAgByD,UAAUp8E,KAAK04E,gBACpC,MAAM16B,EAAWh+C,KAAK04E,eAAer0C,cACjC2Z,aAAoBE,YACtBl+C,KAAK24E,gBAAgByD,UAAUp+B,EAASG,MAE1Cn+C,KAAK47D,aAAQp1D,EACnB,CAOI,MAAMpF,EAASpB,KAAKq7E,YACdv9B,EACc,iBAAX18C,EAAsBgO,SAASkoC,eAAel2C,GAAUA,EAEjE,GADApB,KAAK04E,eAAiB56B,EACjBA,EAYE,CACLA,EAActsC,YAAYxR,KAAKo4E,WAC1Bp4E,KAAK0pD,YACR1pD,KAAK0pD,UAAY,IAAIwsB,GAAqBl2E,OAG5CA,KAAKu4E,wBAA0B,IAAIr2C,GACjCliC,KACAA,KAAKyiC,gBAEP,IAAK,MAAMn7B,KAAO85B,GAChBphC,KAAKu4E,wBAAwBjzE,iBAC3B87B,GAAoB95B,GACpBtH,KAAK47E,sBAAsB10E,KAAKlH,OAcpC,IAAI+2E,EACJ,GAZA/2E,KAAKo4E,UAAU9yE,iBACbzF,EACAG,KAAKq3E,0BACL,GAEFr3E,KAAKo4E,UAAU9yE,iBACbzF,EACAG,KAAKq3E,2BACL5oE,IAA0B,CAACC,SAAS,IAIjC1O,KAAKw4E,qBAORzB,EAAsB/2E,KAAKw4E,yBAPG,CAE9B,MAAM6D,EAAav+B,EAAczZ,cAGjC0yC,EADEsF,aAAsBn+B,WAAam+B,EAAWl+B,KAAOL,CAE/D,CAIM99C,KAAKy4E,yBAA2B,CAC9B3xE,EACEiwE,EACAl3E,EACAG,KAAKs3E,mBACLt3E,MAEF8G,EACEiwE,EACAl3E,EACAG,KAAKs3E,mBACLt3E,OAGJ,MAAMg+C,EAAWF,EAAczZ,cAC3B2Z,aAAoBE,YACtBl+C,KAAK24E,gBAAgB2D,QAAQt+B,EAASG,MAExCn+C,KAAK24E,gBAAgB2D,QAAQx+B,EACnC,MApEU99C,KAAK0pD,YACPjmB,aAAazjC,KAAKy3E,0BAClBz3E,KAAKy3E,8BAA2BjxE,EAChCxG,KAAKk5E,qBAAqBr4E,OAAS,EACnCb,KAAK0pD,UAAUxpD,UACfF,KAAK0pD,UAAY,MAEf1pD,KAAK03E,qBACP7oC,qBAAqB7uC,KAAK03E,oBAC1B13E,KAAK03E,wBAAqBlxE,GA6D9BxG,KAAK64E,YAGT,CAKE,iBAAAO,GACEp5E,KAAKg3C,QACT,CAKE,0BAAAulC,GACEv8E,KAAKg3C,QACT,CAKE,kBAAAsiC,GACMt5E,KAAKi4E,2BACP5wE,EAAcrH,KAAKi4E,0BACnBj4E,KAAKi4E,yBAA2B,MAE9Bj4E,KAAKk4E,yBACP7wE,EAAcrH,KAAKk4E,wBACnBl4E,KAAKk4E,uBAAyB,MAEhC,MAAM98B,EAAOp7C,KAAKq7C,UACdD,IACFp7C,KAAKw8E,oBAAoBx8E,KAAKmT,WAE9BnT,KAAKi4E,yBAA2BnxE,EAC9Bs0C,EACAx7C,EACAI,KAAKu8E,2BACLv8E,MAEFA,KAAKk4E,uBAAyBpxE,EAC5Bs0C,EACAv7C,EACAG,KAAKu8E,2BACLv8E,MAGFo7C,EAAK1N,mBAAmB,IAE1B1tC,KAAKg3C,QACT,CAKE,wBAAAqiC,GACMr5E,KAAKm4E,kCACPn4E,KAAKm4E,gCAAgCrtE,QAAQzD,GAC7CrH,KAAKm4E,gCAAkC,MAEzC,MAAMnB,EAAah3E,KAAKsqD,gBACpB0sB,IACFh3E,KAAKm6E,gBAAgB,IAAIpyB,GAAW,WAAYivB,IAChDh3E,KAAKm4E,gCAAkC,CACrCrxE,EAAOkwE,EAAYp3E,EAAgCI,KAAKg3C,OAAQh3C,MAChE8G,EAAOkwE,EAAYn3E,EAAkBG,KAAKg3C,OAAQh3C,MAClD8G,EAAOkwE,EAAY,WAAYh3E,KAAKm6E,gBAAiBn6E,MACrD8G,EAAOkwE,EAAY,cAAeh3E,KAAKy8E,mBAAoBz8E,QAG/DA,KAAKg3C,QACT,CAKE,UAAA0lC,GACE,QAAS18E,KAAK+3E,WAClB,CAKE,eAAAJ,GACE33E,KAAK03E,wBAAqBlxE,EAC1BxG,KAAK28E,aAAax8C,KAAKC,MAC3B,CAME,UAAAw8C,GACM58E,KAAK03E,oBACP7oC,qBAAqB7uC,KAAK03E,oBAE5B13E,KAAK23E,iBACT,CAKE,UAAAvB,GACE,MAAMb,EAAcv1E,KAAKsqD,gBAAgBjD,sBACzC,IAAK,IAAI9lD,EAAI,EAAG4E,EAAKovE,EAAY10E,OAAQU,EAAI4E,IAAM5E,EAAG,CACpD,MAAMi4C,EAAQ+7B,EAAYh0E,GAAGi4C,MACzBA,EAAM+R,eACR/R,EAAMmR,cAAckyB,oBAE5B,CACA,CAME,MAAA7lC,GACMh3C,KAAK0pD,gBAAyCljD,IAA5BxG,KAAK03E,qBACzB13E,KAAK03E,mBAAqB/nC,sBAAsB3vC,KAAK23E,iBAE3D,CASE,aAAAmF,CAAclD,GACZ,OAAO55E,KAAK+5E,cAAc1uE,OAAOuuE,EACrC,CASE,iBAAAmD,CAAkBlD,GAChB,OAAO75E,KAAKi6E,kBAAkB5uE,OAAOwuE,EACzC,CASE,WAAAmD,CAAYxjC,GAEV,OADex5C,KAAKsqD,gBAAgB/B,YACtBl9C,OAAOmuC,EACzB,CAME,kBAAAijC,CAAmB52E,GACjB+wE,GAAuB/wE,EAAM2zC,MACjC,CASE,aAAAyjC,CAAc5C,GACZ,OAAOr6E,KAAKs6E,cAAcjvE,OAAOgvE,EACrC,CAME,YAAAsC,CAAa3vE,GACX,MAAMgG,EAAOhT,KAAKmT,UACZioC,EAAOp7C,KAAKq7C,UACZ6hC,EAAqBl9E,KAAK+3E,YAEhC,IAAIr3C,EAAa,KACjB,QAAal6B,IAATwM,GAAsB++C,GAAQ/+C,IAASooC,GAAQA,EAAK5N,QAAS,CAC/D,MAAM0uC,EAAY9gC,EAAK/K,SACrBrwC,KAAK+3E,YAAc/3E,KAAK+3E,YAAYmE,eAAY11E,GAE5CwhC,EAAYoT,EAAKxuC,WA2BvB,GA1BA8zB,EAAa,CACX4M,SAAS,EACTwnC,2BAA4B90E,KAAK43E,4BACjCnE,UAAW,KACXh+D,OAAQsD,GACNivB,EAAUhvB,OACVgvB,EAAU/uB,WACV+uB,EAAU9uB,SACVlG,GAEFpQ,MAAO5C,KAAK83E,cACZpB,WAAY,EACZrsB,iBAAkBrqD,KAAKsqD,gBAAgBjD,sBACvC1qB,WAAY38B,KAAK68B,YACjBk4C,2BAA4B/0E,KAAK63E,4BACjC7B,oBAAqB,GACrBhjE,KAAMA,EACNipE,UAAWj8E,KAAKm5E,WAChBnsE,KAAMA,EACNmwE,UAAW,CAAE,EACbn1C,UAAWA,EACXk0C,UAAWA,EACXn0C,YAAa,CAAE,EACfq1C,MAAO70E,EAAOvI,MACdq9E,cAAe,CAAE,GAEfr1C,EAAU8J,YAAc9J,EAAU+J,eAAgB,CACpD,MAAM74B,EAAWga,MAAM8U,EAAUgK,cAC7BhK,EAAU9uB,SACV8uB,EAAUgK,aAEdtR,EAAW48C,WAAavkE,GACtBivB,EAAU8J,WACV9J,EAAU+J,eACV74B,EACAlG,EAEV,CACA,CAKI,GAHAhT,KAAK+3E,YAAcr3C,EACnB1gC,KAAK0pD,UAAUmB,YAAYnqB,GAEvBA,EAAY,CASd,GARIA,EAAW4M,SACbttC,KAAKg3C,SAEPh1C,MAAMuB,UAAUoC,KAAK/B,MACnB5D,KAAKk5E,qBACLx4C,EAAWs1C,qBAGTkH,EAAoB,GAEnBl9E,KAAKg4E,kBACJxzE,GAAQxE,KAAKg4E,mBACZuF,GAAa78C,EAAWjrB,OAAQzV,KAAKg4E,oBAExCh4E,KAAK4F,cACH,IAAI66B,GAASiE,GAAwB1kC,KAAMk9E,IAE7Cl9E,KAAKg4E,gBAAkB/gE,GAAoBjX,KAAKg4E,iBAE1D,CAGQh4E,KAAKg4E,kBACJt3C,EAAWw7C,UAAUj0C,MACrBvH,EAAWw7C,UAAUj0C,MACrBs1C,GAAa78C,EAAWjrB,OAAQzV,KAAKg4E,mBAGtCh4E,KAAK4F,cACH,IAAI66B,GAASiE,GAAsB1kC,KAAM0gC,IAE3CjsB,GAAMisB,EAAWjrB,OAAQzV,KAAKg4E,iBAEtC,CAEIh4E,KAAK4F,cAAc,IAAI66B,GAASiE,GAAyB1kC,KAAM0gC,IAE/D1gC,KAAKm3E,iBACFn3E,KAAKyG,YAAYi+B,KAChB1kC,KAAKyG,YAAYi+B,KACjB1kC,KAAKyG,YAAY4iD,OAClBrpD,KAAKm5E,WAAW/xC,oBAChBpnC,KAAKm5E,WAAWtzC,aAChB7lC,KAAKw7E,uBAEHx7E,KAAKy3E,2BACRz3E,KAAKy3E,yBAA2B/zC,YAAW,KACzC1jC,KAAKy3E,8BAA2BjxE,EAChCxG,KAAKg8E,kBAAkB,GACtB,GAET,CAQE,aAAAwB,CAAcxG,GACZ,MAAMyG,EAAgBz9E,KAAKsqD,gBACvBmzB,GACFz9E,KAAKy8E,mBAAmB,IAAI10B,GAAW,cAAe01B,IAExDz9E,KAAK4J,IAAI+6B,GAAwBqyC,EACrC,CAQE,OAAApb,CAAQ5oD,GACNhT,KAAK4J,IAAI+6B,GAAkB3xB,EAC/B,CAYE,SAAAikC,CAAU71C,GACRpB,KAAK4J,IAAI+6B,GAAoBvjC,EACjC,CAWE,OAAAs4E,CAAQt+B,GACN,IAAKA,GAAQA,aAAgB3Q,GAE3B,YADAzqC,KAAK4J,IAAI+6B,GAAkByW,GAG7Bp7C,KAAK4J,IAAI+6B,GAAkB,IAAI8F,IAE/B,MAAMtZ,EAAMnxB,KACZo7C,EAAK7nC,MAAK,SAAUkmE,GAClBtoD,EAAIuoD,QAAQ,IAAIjvC,GAAKgvC,GAC3B,GACA,CAOE,UAAAZ,GACE,MAAM/6B,EAAgB99C,KAAK+9C,mBAE3B,IAAI/qC,EACJ,GAAI8qC,EAAe,CACjB,MAAM4/B,EAAgB3tE,iBAAiB+tC,GACjChvC,EACJgvC,EAAcjuC,YACduhB,WAAWssD,EAA+B,iBAC1CtsD,WAAWssD,EAA2B,aACtCtsD,WAAWssD,EAA4B,cACvCtsD,WAAWssD,EAAgC,kBACvC3uE,EACJ+uC,EAAc1tC,aACdghB,WAAWssD,EAA8B,gBACzCtsD,WAAWssD,EAA0B,YACrCtsD,WAAWssD,EAA6B,eACxCtsD,WAAWssD,EAAiC,mBACzCxqD,MAAMpkB,IAAWokB,MAAMnkB,KAC1BiE,EAAO,CAACpH,KAAKoM,IAAI,EAAGlJ,GAAQlD,KAAKoM,IAAI,EAAGjJ,KAErCgjD,GAAQ/+C,KAEP8qC,EAAcjuC,aACdiuC,EAAc1tC,cACd0tC,EAAc6/B,iBAAiB98E,SAGjCue,GACE,qEAIZ,CAEI,MAAMw+D,EAAU59E,KAAKmT,WACjBH,GAAU4qE,GAAY17E,EAAO8Q,EAAM4qE,KACrC59E,KAAK47D,QAAQ5oD,GACbhT,KAAKw8E,oBAAoBxpE,GAE/B,CAOE,mBAAAwpE,CAAoBxpE,GAClB,MAAMooC,EAAOp7C,KAAKq7C,UACdD,GACFA,EAAKlL,gBAAgBl9B,EAE3B,GCvqDA,MAAM/I,GACK,UADLA,GAEC,MAFDA,GAGI,SAHJA,GAIM,WAJNA,GAKS,cAoCf,MAAM4zE,WAAgBh1E,EAIpB,WAAA9I,CAAYuK,GACVrF,QAKAjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAKsK,QAAUA,EAMftK,KAAK+M,GAAKzC,EAAQyC,GAMlB/M,KAAK89E,iBACqBt3E,IAAxB8D,EAAQwzE,aAA4BxzE,EAAQwzE,YAM9C99E,KAAKm9C,eAAkC32C,IAAtB8D,EAAQ6yC,WAA0B7yC,EAAQ6yC,UAM3Dn9C,KAAKmK,QAAUiF,SAASC,cAAc,OACtCrP,KAAKmK,QAAQ8tC,eACWzxC,IAAtB8D,EAAQ2tC,UACJ3tC,EAAQ2tC,UACR,wBAA0BnC,GAChC91C,KAAKmK,QAAQ2F,MAAMwjC,SAAW,WAC9BtzC,KAAKmK,QAAQ2F,MAAMgnC,cAAgB,OAMnC92C,KAAK+9E,SAA8B,IAApBzzE,EAAQyzE,QAAmB,GAAKzzE,EAAQyzE,cAAWv3E,EAOlExG,KAAK4pD,SAAW,CACdo0B,WAAY,GACZ7jC,SAAS,GAOXn6C,KAAKi+E,yBAA2B,KAEhCj+E,KAAK0J,kBAAkBO,GAAkBjK,KAAKk+E,sBAC9Cl+E,KAAK0J,kBAAkBO,GAAcjK,KAAKm+E,kBAC1Cn+E,KAAK0J,kBAAkBO,GAAiBjK,KAAKo+E,qBAC7Cp+E,KAAK0J,kBAAkBO,GAAmBjK,KAAKq+E,uBAC/Cr+E,KAAK0J,kBAAkBO,GAAsBjK,KAAKs+E,+BAE1B93E,IAApB8D,EAAQH,SACVnK,KAAKu+E,WAAWj0E,EAAQH,SAG1BnK,KAAKw+E,eAA6Bh4E,IAAnB8D,EAAQ+M,OAAuB/M,EAAQ+M,OAAS,CAAC,EAAG,IAEnErX,KAAKy+E,eAAen0E,EAAQo0E,aAAe,iBAElBl4E,IAArB8D,EAAQgpC,UACVtzC,KAAK2+E,YAAYr0E,EAAQgpC,SAE/B,CAQE,UAAAsrC,GACE,OAA6C5+E,KAAKiJ,IAAIgB,GAC1D,CAOE,KAAA8K,GACE,OAAO/U,KAAK+M,EAChB,CASE,MAAAmqC,GACE,OACEl3C,KAAKiJ,IAAIgB,KAAiB,IAEhC,CAQE,SAAA40E,GACE,OAAqC7+E,KAAKiJ,IAAIgB,GAClD,CASE,WAAA60E,GACE,OACE9+E,KAAKiJ,IAAIgB,GAEf,CASE,cAAA80E,GACE,OAAmC/+E,KAAKiJ,IAAIgB,GAChD,CAKE,oBAAAi0E,GACErtE,GAAe7Q,KAAKmK,SACpB,MAAMA,EAAUnK,KAAK4+E,aACjBz0E,GACFnK,KAAKmK,QAAQqH,YAAYrH,EAE/B,CAKE,gBAAAg0E,GACMn+E,KAAKi+E,2BACPj+E,KAAKmK,SAASkB,SACdhE,EAAcrH,KAAKi+E,0BACnBj+E,KAAKi+E,yBAA2B,MAElC,MAAM9sD,EAAMnxB,KAAKk3C,SACjB,GAAI/lB,EAAK,CACPnxB,KAAKi+E,yBAA2Bn3E,EAC9BqqB,EACAuT,GACA1kC,KAAKg3C,OACLh3C,MAEFA,KAAKg/E,sBACL,MAAM3I,EAAYr2E,KAAKm9C,UACnBhsB,EAAIimB,+BACJjmB,EAAIywB,sBACJ5hD,KAAK89E,YACPzH,EAAU/kE,aAAatR,KAAKmK,QAASksE,EAAUllE,WAAW,IAAM,MAEhEklE,EAAU7kE,YAAYxR,KAAKmK,SAE7BnK,KAAKi/E,gBACX,CACA,CAKE,MAAAjoC,GACEh3C,KAAKg/E,qBACT,CAKE,mBAAAZ,GACEp+E,KAAKg/E,qBACT,CAKE,qBAAAX,GACEr+E,KAAKg/E,sBACLh/E,KAAKi/E,gBACT,CAKE,wBAAAX,GACEt+E,KAAKg/E,qBACT,CAQE,UAAAT,CAAWp0E,GACTnK,KAAK4J,IAAIK,GAAkBE,EAC/B,CASE,MAAAgtC,CAAOhmB,GACLnxB,KAAK4J,IAAIK,GAAcknB,EAC3B,CAQE,SAAAqtD,CAAUnnE,GACRrX,KAAK4J,IAAIK,GAAiBoN,EAC9B,CAUE,WAAAsnE,CAAYrrC,GACVtzC,KAAK4J,IAAIK,GAAmBqpC,EAChC,CAOE,cAAA2rC,GACMj/E,KAAK+9E,SACP/9E,KAAKk/E,YAAYl/E,KAAK+9E,QAE5B,CAQE,WAAAmB,CAAYC,GACV,MAAMhuD,EAAMnxB,KAAKk3C,SAEjB,IAAK/lB,IAAQA,EAAI4sB,qBAAuB/9C,KAAKiJ,IAAIgB,IAC/C,OAGF,MAAMm1E,EAAUp/E,KAAKq/E,QAAQluD,EAAI4sB,mBAAoB5sB,EAAIhe,WACnDhJ,EAAUnK,KAAK4+E,aACfU,EAAct/E,KAAKq/E,QAAQl1E,EAAS,CACxCyF,GAAWzF,GACXgG,GAAYhG,KAKRo1E,OAC0B/4E,KAHhC24E,EAAqBA,GAAsB,CAAE,GAGxBzvB,OAAuB,GAAKyvB,EAAmBzvB,OACpE,IAAKp5C,GAAe8oE,EAASE,GAAc,CAEzC,MAAME,EAAaF,EAAY,GAAKF,EAAQ,GACtCK,EAAcL,EAAQ,GAAKE,EAAY,GACvCI,EAAYJ,EAAY,GAAKF,EAAQ,GACrCO,EAAeP,EAAQ,GAAKE,EAAY,GAExCpyE,EAAQ,CAAC,EAAG,GAgBlB,GAfIsyE,EAAa,EAEftyE,EAAM,GAAKsyE,EAAaD,EACfE,EAAc,IAEvBvyE,EAAM,GAAKtB,KAAK8L,IAAI+nE,GAAeF,GAEjCG,EAAY,EAEdxyE,EAAM,GAAKwyE,EAAYH,EACdI,EAAe,IAExBzyE,EAAM,GAAKtB,KAAK8L,IAAIioE,GAAgBJ,GAGrB,IAAbryE,EAAM,IAAyB,IAAbA,EAAM,GAAU,CACpC,MAAM8L,EACJmY,EAAIkqB,UAAUvO,oBAEV8yC,EAAWzuD,EAAI2vB,+BAA+B9nC,GACpD,IAAK4mE,EACH,OAEF,MAAMC,EAAc,CAACD,EAAS,GAAK1yE,EAAM,GAAI0yE,EAAS,GAAK1yE,EAAM,IAE3D4yE,EAAaX,EAAmBpxC,WAAa,CAAE,EACrD5c,EAAIkqB,UAAU1N,gBAAgB,CAC5B30B,OAAQmY,EAAI4vB,+BAA+B8+B,GAC3Ct/C,SAAUu/C,EAAWv/C,SACrByN,OAAQ8xC,EAAW9xC,QAE7B,CACA,CACA,CASE,OAAAqxC,CAAQl1E,EAAS6I,GACf,MAAM+sE,EAAM51E,EAAQ6wE,wBACdhuC,EAAU+yC,EAAIr+B,KAAO9yC,OAAOoxE,YAC5B/yC,EAAU8yC,EAAIp+B,IAAM/yC,OAAOqxE,YACjC,MAAO,CAACjzC,EAASC,EAASD,EAAUh6B,EAAK,GAAIi6B,EAAUj6B,EAAK,GAChE,CASE,cAAAyrE,CAAeC,GACb1+E,KAAK4J,IAAIK,GAAsBy0E,EACnC,CAOE,UAAA92B,CAAWzN,GACLn6C,KAAK4pD,SAASzP,UAAYA,IAC5Bn6C,KAAKmK,QAAQ2F,MAAMkqC,QAAUG,EAAU,GAAK,OAC5Cn6C,KAAK4pD,SAASzP,QAAUA,EAE9B,CAME,mBAAA6kC,GACE,MAAM7tD,EAAMnxB,KAAKk3C,SACX5D,EAAWtzC,KAAK8+E,cACtB,IAAK3tD,IAAQA,EAAIurD,eAAiBppC,EAEhC,YADAtzC,KAAK4nD,YAAW,GAIlB,MAAM3mB,EAAQ9P,EAAIsqD,uBAAuBnoC,GACnC4sC,EAAU/uD,EAAIhe,UACpBnT,KAAKmgF,uBAAuBl/C,EAAOi/C,EACvC,CAOE,sBAAAC,CAAuBl/C,EAAOi/C,GAC5B,MAAMpwE,EAAQ9P,KAAKmK,QAAQ2F,MACrBuH,EAASrX,KAAK6+E,YAEdH,EAAc1+E,KAAK++E,iBAEzB/+E,KAAK4nD,YAAW,GAIhB,IAAIw4B,EAAO,KACPC,EAAO,KAEM,gBAAf3B,GACe,gBAAfA,GACe,aAAfA,EAEA0B,EAAO,QAEQ,iBAAf1B,GACe,iBAAfA,GACe,cAAfA,IAEA0B,EAAO,QAGQ,eAAf1B,GACe,iBAAfA,GACe,gBAAfA,EAEA2B,EAAO,QAEQ,eAAf3B,GACe,iBAAfA,GACe,gBAAfA,IAEA2B,EAAO,QAET,MAAMtzD,EAAY,aAAaqzD,MAASC,gBA9B9Bz0E,KAAK+R,MAAMsjB,EAAM,GAAK5pB,EAAO,IAAM,SACnCzL,KAAK+R,MAAMsjB,EAAM,GAAK5pB,EAAO,IAAM,QA8BzCrX,KAAK4pD,SAASo0B,YAAcjxD,IAC9B/sB,KAAK4pD,SAASo0B,WAAajxD,EAC3Bjd,EAAMid,UAAYA,EAExB,CAME,UAAAuzD,GACE,OAAOtgF,KAAKsK,OAChB,EC1jBA,MAAMi2E,GAOJ,WAAAxgF,CAAY2W,EAAME,EAAMD,EAAME,GAI5B7W,KAAK0W,KAAOA,EAKZ1W,KAAK4W,KAAOA,EAKZ5W,KAAK2W,KAAOA,EAKZ3W,KAAK6W,KAAOA,CAChB,CAME,QAAAykC,CAASpvC,GACP,OAAOlM,KAAKqW,WAAWnK,EAAU,GAAIA,EAAU,GACnD,CAME,iBAAAs0E,CAAkBC,GAChB,OACEzgF,KAAK0W,MAAQ+pE,EAAU/pE,MACvB+pE,EAAU7pE,MAAQ5W,KAAK4W,MACvB5W,KAAK2W,MAAQ8pE,EAAU9pE,MACvB8pE,EAAU5pE,MAAQ7W,KAAK6W,IAE7B,CAOE,UAAAR,CAAWN,EAAGC,GACZ,OAAOhW,KAAK0W,MAAQX,GAAKA,GAAK/V,KAAK4W,MAAQ5W,KAAK2W,MAAQX,GAAKA,GAAKhW,KAAK6W,IAC3E,CAME,MAAA3U,CAAOu+E,GACL,OACEzgF,KAAK0W,MAAQ+pE,EAAU/pE,MACvB1W,KAAK2W,MAAQ8pE,EAAU9pE,MACvB3W,KAAK4W,MAAQ6pE,EAAU7pE,MACvB5W,KAAK6W,MAAQ4pE,EAAU5pE,IAE7B,CAKE,MAAAhV,CAAO4+E,GACDA,EAAU/pE,KAAO1W,KAAK0W,OACxB1W,KAAK0W,KAAO+pE,EAAU/pE,MAEpB+pE,EAAU7pE,KAAO5W,KAAK4W,OACxB5W,KAAK4W,KAAO6pE,EAAU7pE,MAEpB6pE,EAAU9pE,KAAO3W,KAAK2W,OACxB3W,KAAK2W,KAAO8pE,EAAU9pE,MAEpB8pE,EAAU5pE,KAAO7W,KAAK6W,OACxB7W,KAAK6W,KAAO4pE,EAAU5pE,KAE5B,CAKE,SAAA8B,GACE,OAAO3Y,KAAK6W,KAAO7W,KAAK2W,KAAO,CACnC,CAKE,OAAAxD,GACE,MAAO,CAACnT,KAAK0Y,WAAY1Y,KAAK2Y,YAClC,CAKE,QAAAD,GACE,OAAO1Y,KAAK4W,KAAO5W,KAAK0W,KAAO,CACnC,CAME,UAAA4D,CAAWmmE,GACT,OACEzgF,KAAK0W,MAAQ+pE,EAAU7pE,MACvB5W,KAAK4W,MAAQ6pE,EAAU/pE,MACvB1W,KAAK2W,MAAQ8pE,EAAU5pE,MACvB7W,KAAK6W,MAAQ4pE,EAAU9pE,IAE7B,EAWO,SAASK,GAAeN,EAAME,EAAMD,EAAME,EAAM4pE,GACrD,YAAkBj6E,IAAdi6E,GACFA,EAAU/pE,KAAOA,EACjB+pE,EAAU7pE,KAAOA,EACjB6pE,EAAU9pE,KAAOA,EACjB8pE,EAAU5pE,KAAOA,EACV4pE,GAEF,IAAIF,GAAU7pE,EAAME,EAAMD,EAAME,EACzC,CCjIA,MAAM7H,GAAa,GCZnB,ICkII0xE,GDlIAC,IAAkB,EAmDf,SAASC,GACdC,EACAr/D,EACA/L,EACAwD,EACA0C,EACAmlE,EACAC,GAEA,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,KACF,MACe,mBAARL,EAAqBA,EAAIprE,EAAQwD,EAAY0C,GAAcklE,GAClE,GAEsB,eAApBr/D,EAAO4R,YACT4tD,EAAIG,aAAe,eAErBH,EAAIL,gBAAkBA,GAKtBK,EAAIrZ,OAAS,SAAU9hE,GAErB,IAAKm7E,EAAII,QAAWJ,EAAII,QAAU,KAAOJ,EAAII,OAAS,IAAM,CAC1D,MAAM18E,EAAO8c,EAAO4R,UACpB,IAEE,IAAIrpB,EACQ,QAARrF,GAA0B,QAARA,EACpBqF,EAASi3E,EAAIK,aACI,OAAR38E,EACTqF,EAASi3E,EAAIM,aAAeN,EAAIK,aACf,eAAR38E,IACTqF,EAAqCi3E,EAAY,UAE/Cj3E,EACF+2E,EAGIt/D,EAAO+/D,aAAax3E,EAAQ,CAC1B0L,OAAQA,EACR+rE,kBAAmB7lE,IAGvB6F,EAAOigE,eAAe13E,IAGxBg3E,GAEV,CAAQ,MACAA,GACR,CACA,MACMA,GAEH,EAIDC,EAAIU,QAAUX,EACdC,EAAIW,MACN,CAaO,SAASX,GAAIH,EAAKr/D,GAWvB,OAAO,SAAU/L,EAAQwD,EAAY0C,EAAYmlE,EAASC,GACxDH,GACEC,EACAr/D,EACA/L,EACAwD,EACA0C,GAMA,CAAC++D,EAAUkH,KACT5hF,KAAK6hF,YAAYnH,QACDl0E,IAAZs6E,GACFA,EAAQpG,EAClB,IAEM,KACE16E,KAAK4H,eACWpB,IAAZu6E,GACFA,GACV,GAGG,CACH,CEhKO,SAAS9mC,GAAIxkC,EAAQwD,GAC1B,MAAO,CAAC,EAAElC,KAAWA,IAAUA,IAAUA,KAC3C,CDCO,SAAS+qE,GAAMjB,EAAK3oE,EAAU6pE,EAASC,GAC5C,MAAMC,EAAS7yE,SAASC,cAAc,UAChC/H,EAAM,OAASiB,EAAO2P,GAC5B,SAASgqE,WACAtzE,OAAOtH,GACd26E,EAAOtxE,WAAWY,YAAY0wE,EAClC,CACEA,EAAOE,OAAQ,EACfF,EAAOlkD,IACL8iD,GACCA,EAAIn7E,SAAS,KAAO,IAAM,MAC1Bs8E,GAAiB,YAClB,IACA16E,EACF,MAAM86E,EAAQ1+C,YAAW,WACvBw+C,IACIH,GACFA,GAEH,GAAE,KACHnzE,OAAOtH,GAAO,SAAUxF,GACtB2hC,aAAa2+C,GACbF,IACAhqE,EAASpW,EACV,EACDsN,SAASizE,KAAK7wE,YAAYywE,EAC5B,CAEO,MAAMK,WAAsBj6E,MAIjC,WAAAtI,CAAYwiF,GAEVt9E,MADgB,+BAAiCs9E,EAASnB,QAM1DphF,KAAKoV,KAAO,gBAKZpV,KAAKuiF,SAAWA,CACpB,EAGO,MAAMC,WAAoBn6E,MAI/B,WAAAtI,CAAY0iF,GACVx9E,MAAM,2BAKNjF,KAAKoV,KAAO,cAKZpV,KAAKyiF,OAASA,CAClB,EAOO,SAASC,GAAQ7B,GACtB,OAAO,IAAI58E,SAAQ,SAAUE,EAASD,GA8BpC,MAAMu+E,EAAS,IAAIxB,eACnBwB,EAAOn9E,iBAAiB,QA3BxB,SAAgBO,GACd,MAAM48E,EAAS58E,EAAMzE,OAErB,IAAKqhF,EAAOrB,QAAWqB,EAAOrB,QAAU,KAAOqB,EAAOrB,OAAS,IAA/D,CACE,IAAIt/E,EACJ,IACEA,EAAO+1D,KAAKjE,MAAM6uB,EAAOpB,aAC1B,CAAC,MAAOr9E,GACP,MAAMw4B,EAAU,wCAA0Cx4B,EAAIw4B,QAE9D,YADAt4B,EAAO,IAAImE,MAAMm0B,GAE3B,CACQr4B,EAAQrC,EAEhB,MAEMoC,EAAO,IAAIo+E,GAAcG,GAC/B,IAWIA,EAAOn9E,iBAAiB,SANxB,SAAiBO,GACf3B,EAAO,IAAIs+E,GAAY38E,EAAMzE,QACnC,IAKIqhF,EAAOvB,KAAK,MAAOL,GACnB4B,EAAOE,iBAAiB,SAAU,oBAClCF,EAAOd,MACX,GACA,CAOO,SAASiB,GAAWhrB,EAAMipB,GAC/B,OAAIA,EAAIn7E,SAAS,OACRm7E,EAEF,IAAIgC,IAAIhC,EAAKjpB,GAAMkrB,IAC5B,CE/HA,MAAMC,GAUJ,UAAAC,CAAW1uE,EAAUm1D,EAASX,EAAUE,EAAsBpmE,GAAO,CAOrE,YAAAqgF,CAAa3uE,GAAU,CAOvB,QAAAQ,CAAShF,GAAO,CAOhB,UAAAozE,CAAWC,EAAgB1Z,EAAS7mE,GAAO,CAO3C,WAAAwgF,CAAY3Z,EAAS35D,EAAOlN,GAAO,CAOnC,sBAAAygF,CAAuBC,EAA4B7Z,EAAS7mE,GAAO,CAOnE,cAAA2gF,CAAeC,EAAoB/Z,EAAS7mE,GAAO,CAOnD,mBAAA6gF,CAAoBC,EAAyBja,EAAS7mE,GAAO,CAO7D,cAAA+gF,CAAeC,EAAoBna,EAAS7mE,GAAO,CAOnD,gBAAAihF,CAAiBC,EAAsBra,EAAS7mE,GAAO,CAOvD,SAAAmhF,CAAUC,EAAeva,EAAS7mE,GAAO,CAOzC,WAAAqhF,CAAYC,EAAiBza,EAAS7mE,GAAO,CAO7C,QAAAuhF,CAAS7vE,EAAUm1D,EAAS7mE,GAAO,CAMnC,kBAAAwhF,CAAmBllD,EAAW8lC,GAAa,CAM3C,aAAAqf,CAAcC,EAAYC,GAAwB,CAMlD,YAAAC,CAAaC,EAAWF,GAAwB,ECjFlD,MAAMG,WAAgC3B,GAUpC,WAAAhjF,CACE2P,EACAitB,EACAlnB,EACAsX,EACA43D,EACApyD,EACAqyD,GAEA3/E,QAMAjF,KAAK6kF,SAAWn1E,EAMhB1P,KAAK68B,YAAcF,EAMnB38B,KAAKijB,QAAUxN,EAMfzV,KAAKg+E,WAAajxD,EAMlB/sB,KAAK8kF,mBAAqB/3D,EACtBvP,GAAQ5R,KAAK4S,MAAMuO,EAAU,GAAIA,EAAU,IAAK,IAChD,EAMJ/sB,KAAK+kF,cAAgBJ,EAMrB3kF,KAAKglF,kBAAoBzyD,EAMzBvyB,KAAKilF,eAAiBL,EAMtB5kF,KAAKklF,kBAAoB,KAMzBllF,KAAKmlF,oBAAsB,KAM3BnlF,KAAKolF,kBAAoB,KAMzBplF,KAAKqlF,WAAa,KAMlBrlF,KAAKslF,aAAe,KAMpBtlF,KAAK88B,OAAS,KAMd98B,KAAKulF,cAAgB,EAMrBvlF,KAAKwlF,cAAgB,EAMrBxlF,KAAKylF,aAAe,EAMpBzlF,KAAK0lF,cAAgB,EAMrB1lF,KAAK2lF,cAAgB,EAMrB3lF,KAAK4lF,cAAgB,EAMrB5lF,KAAK6lF,sBAAuB,EAM5B7lF,KAAK8lF,eAAiB,EAMtB9lF,KAAK+lF,YAAc,CAAC,EAAG,GAMvB/lF,KAAKgmF,YAAc,EAMnBhmF,KAAKipE,MAAQ,GAMbjpE,KAAKimF,aAAe,EAMpBjmF,KAAKkmF,aAAe,EAMpBlmF,KAAKmmF,qBAAsB,EAM3BnmF,KAAKomF,cAAgB,EAMrBpmF,KAAKqmF,WAAa,CAAC,EAAG,GAMtBrmF,KAAKsmF,eAAiB,KAMtBtmF,KAAKumF,iBAAmB,KAMxBvmF,KAAKwmF,WAAa,KAMlBxmF,KAAKymF,kBAAoB,GAMzBzmF,KAAK0mF,mBnG7OA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EmG8OzB,CASE,WAAAC,CAAYvvE,EAAiBC,EAAQ1V,EAAK2V,GACxC,IAAKtX,KAAK88B,OACR,OAEF,MAAM8pD,EAAmBn1D,GACvBra,EACAC,EACA1V,EACA2V,EACAtX,KAAKg+E,WACLh+E,KAAKymF,mBAED/2E,EAAU1P,KAAK6kF,SACfgC,EAAiB7mF,KAAK0mF,mBACtB91B,EAAQlhD,EAAQwxD,YACI,GAAtBlhE,KAAK0lF,gBACPh2E,EAAQwxD,YAActQ,EAAQ5wD,KAAK0lF,eAErC,IAAIxsE,EAAWlZ,KAAK8lF,eACY,IAA5B9lF,KAAK8kF,qBACP5rE,GAAYlZ,KAAK+kF,eAEf/kF,KAAK6lF,uBACP3sE,GAAYlZ,KAAK+kF,eAEnB,IAAK,IAAIxjF,EAAI,EAAG4E,EAAKygF,EAAiB/lF,OAAQU,EAAI4E,EAAI5E,GAAK,EAAG,CAC5D,MAAMwU,EAAI6wE,EAAiBrlF,GAAKvB,KAAKulF,cAC/BvvE,EAAI4wE,EAAiBrlF,EAAI,GAAKvB,KAAKwlF,cACzC,GACe,IAAbtsE,GACuB,GAAvBlZ,KAAK+lF,YAAY,IACM,GAAvB/lF,KAAK+lF,YAAY,GACjB,CACA,MAAM7yC,EAAUn9B,EAAI/V,KAAKulF,cACnBpyC,EAAUn9B,EAAIhW,KAAKwlF,cACzB7xD,GACEkzD,EACA3zC,EACAC,EACA,EACA,EACAj6B,GACCg6B,GACAC,GAEHzjC,EAAQuxD,OACRvxD,EAAQqd,UAAUnpB,MAAM8L,EAASm3E,GACjCn3E,EAAQygB,UAAU+iB,EAASC,GAC3BzjC,EAAQuS,MAAMjiB,KAAK+lF,YAAY,GAAI/lF,KAAK+lF,YAAY,IACpDr2E,EAAQ6C,UACNvS,KAAK88B,OACL98B,KAAK2lF,cACL3lF,KAAK4lF,cACL5lF,KAAKgmF,YACLhmF,KAAKylF,cACJzlF,KAAKulF,eACLvlF,KAAKwlF,cACNxlF,KAAKgmF,YACLhmF,KAAKylF,cAEP/1E,EAAQ2xD,SAChB,MACQ3xD,EAAQ6C,UACNvS,KAAK88B,OACL98B,KAAK2lF,cACL3lF,KAAK4lF,cACL5lF,KAAKgmF,YACLhmF,KAAKylF,aACL1vE,EACAC,EACAhW,KAAKgmF,YACLhmF,KAAKylF,aAGf,CAC8B,GAAtBzlF,KAAK0lF,gBACPh2E,EAAQwxD,YAActQ,EAE5B,CASE,SAAAk2B,CAAU1vE,EAAiBC,EAAQ1V,EAAK2V,GACtC,IAAKtX,KAAKwmF,YAA6B,KAAfxmF,KAAKipE,MAC3B,OAEEjpE,KAAKsmF,gBACPtmF,KAAK+mF,qBAAqB/mF,KAAKsmF,gBAE7BtmF,KAAKumF,kBACPvmF,KAAKgnF,uBAAuBhnF,KAAKumF,kBAEnCvmF,KAAKinF,qBAAqBjnF,KAAKwmF,YAC/B,MAAMI,EAAmBn1D,GACvBra,EACAC,EACA1V,EACA2V,EACAtX,KAAKg+E,WACLh+E,KAAKymF,mBAED/2E,EAAU1P,KAAK6kF,SACrB,IAAI3rE,EAAWlZ,KAAKomF,cAOpB,IANgC,IAA5BpmF,KAAK8kF,qBACP5rE,GAAYlZ,KAAK+kF,eAEf/kF,KAAKmmF,sBACPjtE,GAAYlZ,KAAK+kF,eAEZ1tE,EAAS1V,EAAK0V,GAAUC,EAAQ,CACrC,MAAMvB,EAAI6wE,EAAiBvvE,GAAUrX,KAAKimF,aACpCjwE,EAAI4wE,EAAiBvvE,EAAS,GAAKrX,KAAKkmF,aAE/B,IAAbhtE,GACsB,GAAtBlZ,KAAKqmF,WAAW,IACM,GAAtBrmF,KAAKqmF,WAAW,IAEhB32E,EAAQuxD,OACRvxD,EAAQygB,UAAUpa,EAAI/V,KAAKimF,aAAcjwE,EAAIhW,KAAKkmF,cAClDx2E,EAAQmS,OAAO3I,GACfxJ,EAAQygB,UAAUnwB,KAAKimF,aAAcjmF,KAAKkmF,cAC1Cx2E,EAAQuS,MAAMjiB,KAAKqmF,WAAW,GAAIrmF,KAAKqmF,WAAW,IAC9CrmF,KAAKumF,kBACP72E,EAAQw3E,WAAWlnF,KAAKipE,MAAO,EAAG,GAEhCjpE,KAAKsmF,gBACP52E,EAAQy3E,SAASnnF,KAAKipE,MAAO,EAAG,GAElCv5D,EAAQ2xD,YAEJrhE,KAAKumF,kBACP72E,EAAQw3E,WAAWlnF,KAAKipE,MAAOlzD,EAAGC,GAEhChW,KAAKsmF,gBACP52E,EAAQy3E,SAASnnF,KAAKipE,MAAOlzD,EAAGC,GAG1C,CACA,CAWE,aAAAoxE,CAAchwE,EAAiBC,EAAQ1V,EAAK2V,EAAQ+vE,GAClD,MAAM33E,EAAU1P,KAAK6kF,SACf+B,EAAmBn1D,GACvBra,EACAC,EACA1V,EACA2V,EACAtX,KAAKg+E,WACLh+E,KAAKymF,mBAEP/2E,EAAQ43E,OAAOV,EAAiB,GAAIA,EAAiB,IACrD,IAAI/lF,EAAS+lF,EAAiB/lF,OAC1BwmF,IACFxmF,GAAU,GAEZ,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAQU,GAAK,EAC/BmO,EAAQu2D,OAAO2gB,EAAiBrlF,GAAIqlF,EAAiBrlF,EAAI,IAK3D,OAHI8lF,GACF33E,EAAQw2D,YAEHvkE,CACX,CAUE,UAAA4lF,CAAWnwE,EAAiBC,EAAQ8d,EAAM7d,GACxC,IAAK,IAAI/V,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAC1C8V,EAASrX,KAAKonF,cACZhwE,EACAC,EACA8d,EAAK5zB,GACL+V,GACA,GAGJ,OAAOD,CACX,CAUE,UAAA6rE,CAAW5uE,GAST,GARItU,KAAKglF,oBACP1wE,EACEA,EAASme,oBACPzyB,KAAKglF,kBACLhlF,KAAKilF,iBAIN3qE,GAAWta,KAAKijB,QAAS3O,EAASuH,aAAvC,CAGA,GAAI7b,KAAKqlF,YAAcrlF,KAAKslF,aAAc,CACpCtlF,KAAKqlF,YACPrlF,KAAK+mF,qBAAqB/mF,KAAKqlF,YAE7BrlF,KAAKslF,cACPtlF,KAAKgnF,uBAAuBhnF,KAAKslF,cAEnC,MAAMsB,EAAmB9xD,GACvBxgB,EACAtU,KAAKg+E,WACLh+E,KAAKymF,mBAEDxwE,EAAK2wE,EAAiB,GAAKA,EAAiB,GAC5C1wE,EAAK0wE,EAAiB,GAAKA,EAAiB,GAC5CzoE,EAASvS,KAAK6S,KAAKxI,EAAKA,EAAKC,EAAKA,GAClCxG,EAAU1P,KAAK6kF,SACrBn1E,EAAQ83E,YACR93E,EAAQo2D,IACN8gB,EAAiB,GACjBA,EAAiB,GACjBzoE,EACA,EACA,EAAIvS,KAAKuR,IAEPnd,KAAKqlF,YACP31E,EAAQszD,OAENhjE,KAAKslF,cACP51E,EAAQ4zD,QAEhB,CACuB,KAAftjE,KAAKipE,OACPjpE,KAAK8mF,UAAUxyE,EAASsE,YAAa,EAAG,EAAG,EAjCjD,CAmCA,CAUE,QAAA9D,CAAShF,GACP9P,KAAKokF,mBAAmBt0E,EAAM2zD,UAAW3zD,EAAM8zD,aAC/C5jE,KAAKqkF,cAAcv0E,EAAMitB,YACzB/8B,KAAKwkF,aAAa10E,EAAMq5D,UAC5B,CAKE,YAAAse,CAAa16D,GACX/sB,KAAKg+E,WAAajxD,CACtB,CAUE,YAAAk2D,CAAa3uE,GAEX,OADaA,EAAS8e,WAEpB,IAAK,QACHpzB,KAAK+jF,UACb,GAEQ,MACF,IAAK,aACH/jF,KAAKujF,eACb,GAEQ,MACF,IAAK,UACHvjF,KAAKikF,YACb,GAEQ,MACF,IAAK,aACHjkF,KAAK2jF,eACb,GAEQ,MACF,IAAK,kBACH3jF,KAAKyjF,oBACb,GAIQ,MACF,IAAK,eACHzjF,KAAK6jF,iBACb,GAIQ,MACF,IAAK,qBACH7jF,KAAKqjF,uBACb,GAIQ,MACF,IAAK,SACHrjF,KAAKkjF,WACb,GAKA,CAaE,WAAAE,CAAY3Z,EAAS35D,GACnB,MAAMwE,EAAWxE,EAAMy5D,qBAANz5D,CAA4B25D,GACxCn1D,IAGLtU,KAAK8U,SAAShF,GACd9P,KAAKijF,aAAa3uE,GACtB,CASE,sBAAA+uE,CAAuB/uE,GACrB,MAAMozE,EAAapzE,EAASqzE,qBAC5B,IAAK,IAAIpmF,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChDvB,KAAKijF,aAAayE,EAAWnmF,GAEnC,CASE,SAAAwiF,CAAUzvE,GACJtU,KAAKglF,oBACP1wE,EACEA,EAASme,oBACPzyB,KAAKglF,kBACLhlF,KAAKilF,iBAIX,MAAM7tE,EAAkB9C,EAAS2f,qBAC3B3c,EAAShD,EAASggB,YACpBt0B,KAAK88B,QACP98B,KAAK2mF,YAAYvvE,EAAiB,EAAGA,EAAgBvW,OAAQyW,GAE5C,KAAftX,KAAKipE,OACPjpE,KAAK8mF,UAAU1vE,EAAiB,EAAGA,EAAgBvW,OAAQyW,EAEjE,CASE,cAAAqsE,CAAervE,GACTtU,KAAKglF,oBACP1wE,EACEA,EAASme,oBACPzyB,KAAKglF,kBACLhlF,KAAKilF,iBAIX,MAAM7tE,EAAkB9C,EAAS2f,qBAC3B3c,EAAShD,EAASggB,YACpBt0B,KAAK88B,QACP98B,KAAK2mF,YAAYvvE,EAAiB,EAAGA,EAAgBvW,OAAQyW,GAE5C,KAAftX,KAAKipE,OACPjpE,KAAK8mF,UAAU1vE,EAAiB,EAAGA,EAAgBvW,OAAQyW,EAEjE,CASE,cAAAisE,CAAejvE,GASb,GARItU,KAAKglF,oBACP1wE,EACEA,EAASme,oBACPzyB,KAAKglF,kBACLhlF,KAAKilF,iBAIN3qE,GAAWta,KAAKijB,QAAS3O,EAASuH,aAAvC,CAGA,GAAI7b,KAAKslF,aAAc,CACrBtlF,KAAKgnF,uBAAuBhnF,KAAKslF,cACjC,MAAM51E,EAAU1P,KAAK6kF,SACfztE,EAAkB9C,EAAS2f,qBACjCvkB,EAAQ83E,YACRxnF,KAAKonF,cACHhwE,EACA,EACAA,EAAgBvW,OAChByT,EAASggB,aACT,GAEF5kB,EAAQ4zD,QACd,CACI,GAAmB,KAAftjE,KAAKipE,MAAc,CACrB,MAAM2e,EAAetzE,EAASuzE,kBAC9B7nF,KAAK8mF,UAAUc,EAAc,EAAG,EAAG,EACzC,CAlBA,CAmBA,CASE,mBAAAnE,CAAoBnvE,GACdtU,KAAKglF,oBACP1wE,EAEIA,EAASme,oBACPzyB,KAAKglF,kBACLhlF,KAAKilF,iBAIb,MAAM6C,EAAiBxzE,EAASuH,YAChC,GAAKvB,GAAWta,KAAKijB,QAAS6kE,GAA9B,CAGA,GAAI9nF,KAAKslF,aAAc,CACrBtlF,KAAKgnF,uBAAuBhnF,KAAKslF,cACjC,MAAM51E,EAAU1P,KAAK6kF,SACfztE,EAAkB9C,EAAS2f,qBACjC,IAAI5c,EAAS,EACb,MAAM8d,EAAqC7gB,EAASgnB,UAC9ChkB,EAAShD,EAASggB,YACxB5kB,EAAQ83E,YACR,IAAK,IAAIjmF,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAC1C8V,EAASrX,KAAKonF,cACZhwE,EACAC,EACA8d,EAAK5zB,GACL+V,GACA,GAGJ5H,EAAQ4zD,QACd,CACI,GAAmB,KAAftjE,KAAKipE,MAAc,CACrB,MAAM8e,EAAgBzzE,EAAS0zE,mBAC/BhoF,KAAK8mF,UAAUiB,EAAe,EAAGA,EAAclnF,OAAQ,EAC7D,CAvBA,CAwBA,CASE,WAAAojF,CAAY3vE,GASV,GARItU,KAAKglF,oBACP1wE,EACEA,EAASme,oBACPzyB,KAAKglF,kBACLhlF,KAAKilF,iBAIN3qE,GAAWta,KAAKijB,QAAS3O,EAASuH,aAAvC,CAGA,GAAI7b,KAAKslF,cAAgBtlF,KAAKqlF,WAAY,CACpCrlF,KAAKqlF,YACPrlF,KAAK+mF,qBAAqB/mF,KAAKqlF,YAE7BrlF,KAAKslF,cACPtlF,KAAKgnF,uBAAuBhnF,KAAKslF,cAEnC,MAAM51E,EAAU1P,KAAK6kF,SACrBn1E,EAAQ83E,YACRxnF,KAAKunF,WACHjzE,EAAS8mB,6BACT,EAC8B9mB,EAASgnB,UACvChnB,EAASggB,aAEPt0B,KAAKqlF,YACP31E,EAAQszD,OAENhjE,KAAKslF,cACP51E,EAAQ4zD,QAEhB,CACI,GAAmB,KAAftjE,KAAKipE,MAAc,CACrB,MAAMgf,EAAoB3zE,EAASinB,uBACnCv7B,KAAK8mF,UAAUmB,EAAmB,EAAG,EAAG,EAC9C,CA1BA,CA2BA,CAQE,gBAAApE,CAAiBvvE,GASf,GARItU,KAAKglF,oBACP1wE,EACEA,EAASme,oBACPzyB,KAAKglF,kBACLhlF,KAAKilF,iBAIN3qE,GAAWta,KAAKijB,QAAS3O,EAASuH,aAAvC,CAGA,GAAI7b,KAAKslF,cAAgBtlF,KAAKqlF,WAAY,CACpCrlF,KAAKqlF,YACPrlF,KAAK+mF,qBAAqB/mF,KAAKqlF,YAE7BrlF,KAAKslF,cACPtlF,KAAKgnF,uBAAuBhnF,KAAKslF,cAEnC,MAAM51E,EAAU1P,KAAK6kF,SACfztE,EAAkB9C,EAAS8mB,6BACjC,IAAI/jB,EAAS,EACb,MAAMge,EAAQ/gB,EAAS4zE,WACjB5wE,EAAShD,EAASggB,YACxB5kB,EAAQ83E,YACR,IAAK,IAAIjmF,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GACnB8V,EAASrX,KAAKunF,WAAWnwE,EAAiBC,EAAQ8d,EAAM7d,EAChE,CACUtX,KAAKqlF,YACP31E,EAAQszD,OAENhjE,KAAKslF,cACP51E,EAAQ4zD,QAEhB,CACI,GAAmB,KAAftjE,KAAKipE,MAAc,CACrB,MAAMkf,EAAqB7zE,EAAS8zE,wBACpCpoF,KAAK8mF,UAAUqB,EAAoB,EAAGA,EAAmBtnF,OAAQ,EACvE,CA5BA,CA6BA,CAME,oBAAAkmF,CAAqBsB,GACnB,MAAM34E,EAAU1P,KAAK6kF,SACfyD,EAAmBtoF,KAAKklF,kBACzBoD,EAMCA,EAAiBppD,WAAampD,EAAUnpD,YAC1CopD,EAAiBppD,UAAYmpD,EAAUnpD,UACvCxvB,EAAQwvB,UAAYmpD,EAAUnpD,YAPhCxvB,EAAQwvB,UAAYmpD,EAAUnpD,UAC9Bl/B,KAAKklF,kBAAoB,CACvBhmD,UAAWmpD,EAAUnpD,WAQ7B,CAME,sBAAA8nD,CAAuBuB,GACrB,MAAM74E,EAAU1P,KAAK6kF,SACf2D,EAAqBxoF,KAAKmlF,oBAC3BqD,GAkBCA,EAAmBvjB,SAAWsjB,EAAYtjB,UAC5CujB,EAAmBvjB,QAAUsjB,EAAYtjB,QACzCv1D,EAAQu1D,QAAUsjB,EAAYtjB,SAE3B/iE,EAAOsmF,EAAmBtjB,SAAUqjB,EAAYrjB,WACnDx1D,EAAQk2D,YACL4iB,EAAmBtjB,SAAWqjB,EAAYrjB,UAG3CsjB,EAAmBrjB,gBAAkBojB,EAAYpjB,iBACnDqjB,EAAmBrjB,eAAiBojB,EAAYpjB,eAChDz1D,EAAQy1D,eAAiBojB,EAAYpjB,gBAEnCqjB,EAAmBpkB,UAAYmkB,EAAYnkB,WAC7CokB,EAAmBpkB,SAAWmkB,EAAYnkB,SAC1C10D,EAAQ00D,SAAWmkB,EAAYnkB,UAE7BokB,EAAmB9nB,WAAa6nB,EAAY7nB,YAC9C8nB,EAAmB9nB,UAAY6nB,EAAY7nB,UAC3ChxD,EAAQgxD,UAAY6nB,EAAY7nB,WAE9B8nB,EAAmBlkB,YAAcikB,EAAYjkB,aAC/CkkB,EAAmBlkB,WAAaikB,EAAYjkB,WAC5C50D,EAAQ40D,WAAaikB,EAAYjkB,YAE/BkkB,EAAmBxjB,aAAeujB,EAAYvjB,cAChDwjB,EAAmBxjB,YAAcujB,EAAYvjB,YAC7Ct1D,EAAQs1D,YAAcujB,EAAYvjB,eA5CpCt1D,EAAQu1D,QAAUsjB,EAAYtjB,QAC9Bv1D,EAAQk2D,YAAY2iB,EAAYrjB,UAChCx1D,EAAQy1D,eAAiBojB,EAAYpjB,eACrCz1D,EAAQ00D,SAAWmkB,EAAYnkB,SAC/B10D,EAAQgxD,UAAY6nB,EAAY7nB,UAChChxD,EAAQ40D,WAAaikB,EAAYjkB,WACjC50D,EAAQs1D,YAAcujB,EAAYvjB,YAClChlE,KAAKmlF,oBAAsB,CACzBlgB,QAASsjB,EAAYtjB,QACrBC,SAAUqjB,EAAYrjB,SACtBC,eAAgBojB,EAAYpjB,eAC5Bf,SAAUmkB,EAAYnkB,SACtB1D,UAAW6nB,EAAY7nB,UACvB4D,WAAYikB,EAAYjkB,WACxBU,YAAaujB,EAAYvjB,aAiCjC,CAME,oBAAAiiB,CAAqBwB,GACnB,MAAM/4E,EAAU1P,KAAK6kF,SACf6D,EAAmB1oF,KAAKolF,kBACxB9a,EAAYme,EAAUne,UACxBme,EAAUne,UACVxM,GACC4qB,GAUCA,EAAiBtpB,MAAQqpB,EAAUrpB,OACrCspB,EAAiBtpB,KAAOqpB,EAAUrpB,KAClC1vD,EAAQ0vD,KAAOqpB,EAAUrpB,MAEvBspB,EAAiBpe,WAAaA,IAChCoe,EAAiBpe,UAAYA,EAC7B56D,EAAQ46D,UAAYA,GAElBoe,EAAiB9d,cAAgB6d,EAAU7d,eAC7C8d,EAAiB9d,aAAe6d,EAAU7d,aAC1Cl7D,EAAQk7D,aAAe6d,EAAU7d,gBAnBnCl7D,EAAQ0vD,KAAOqpB,EAAUrpB,KACzB1vD,EAAQ46D,UAAYA,EACpB56D,EAAQk7D,aAAe6d,EAAU7d,aACjC5qE,KAAKolF,kBAAoB,CACvBhmB,KAAMqpB,EAAUrpB,KAChBkL,UAAWA,EACXM,aAAc6d,EAAU7d,cAgBhC,CAUE,kBAAAwZ,CAAmBllD,EAAW8lC,GAC5B,GAAK9lC,EAEE,CACL,MAAMypD,EAAiBzpD,EAAUkmC,WACjCplE,KAAKqlF,WAAa,CAChBnmD,UAAW+9B,GACT0rB,GAAkCnrB,IAG5C,MARMx9D,KAAKqlF,WAAa,KASpB,GAAKrgB,EAEE,CACL,MAAM4jB,EAAmB5jB,EAAYI,WAC/ByjB,EAAqB7jB,EAAYQ,aACjCsjB,EAAsB9jB,EAAYK,cAClC0jB,EAA4B/jB,EAAYM,oBACxC0jB,EAAsBhkB,EAAYO,cAClC0jB,EAAmBjkB,EAAYtsD,WAC/BwwE,EAAwBlkB,EAAYS,gBACpCP,EAAW4jB,GAEbprB,GACJ19D,KAAKslF,aAAe,CAClBrgB,aACyBz+D,IAAvBqiF,EACIA,EACAprB,GACNyH,SACuB,IAArBllE,KAAK68B,YACDqoC,EACAA,EAAS/zC,KAAK7vB,GAAMA,EAAItB,KAAK68B,cACnCsoC,gBACG4jB,GtB35B0B,GsB65BE/oF,KAAK68B,YACpCunC,cAC0B59D,IAAxBwiF,EACIA,EACArrB,GACN+C,gBACwBl6D,IAArByiF,EACGA,EtB13BkB,GsB23BEjpF,KAAK68B,YAC/BynC,gBAC4B99D,IAA1B0iF,EACIA,EACAtrB,GACNoH,YAAa/H,GACX2rB,GAAsC/qB,IAGhD,MAzCM79D,KAAKslF,aAAe,IA0C1B,CASE,aAAAjB,CAAcC,GACZ,IAAI1c,EACJ,IAAK0c,KAAgB1c,EAAY0c,EAAWnxE,WAE1C,YADAnT,KAAK88B,OAAS,MAGhB,MAAMqsD,EAAkB7E,EAAWtnD,cAAch9B,KAAK68B,aAChDusD,EAAc9E,EAAWjiB,YACzBgnB,EAAc/E,EAAW/hB,YAC/BviE,KAAK88B,OAASwnD,EAAWvnD,SAAS/8B,KAAK68B,aACvC78B,KAAKulF,cAAgB6D,EAAY,GAAKD,EACtCnpF,KAAKwlF,cAAgB4D,EAAY,GAAKD,EACtCnpF,KAAKylF,aAAe7d,EAAU,GAAKuhB,EACnCnpF,KAAK0lF,cAAgBpB,EAAWp9B,aAChClnD,KAAK2lF,cAAgB0D,EAAY,GACjCrpF,KAAK4lF,cAAgByD,EAAY,GACjCrpF,KAAK6lF,qBAAuBvB,EAAWriB,oBACvCjiE,KAAK8lF,eAAiBxB,EAAWj3C,cACjC,MAAMi8C,EAAahF,EAAWliB,gBAC9BpiE,KAAK+lF,YAAc,CAChBuD,EAAW,GAAKtpF,KAAK68B,YAAessD,EACpCG,EAAW,GAAKtpF,KAAK68B,YAAessD,GAEvCnpF,KAAKgmF,YAAcpe,EAAU,GAAKuhB,CACtC,CASE,YAAA3E,CAAaC,GACX,GAAKA,EAEE,CACL,MAAM8E,EAAgB9E,EAAUhhB,UAChC,GAAK8lB,EAEE,CACL,MAAMC,EAAqBD,EAAcnkB,WACzCplE,KAAKsmF,eAAiB,CACpBpnD,UAAW+9B,GACTusB,GAA0ChsB,IAGtD,MARQx9D,KAAKsmF,eAAiB,KASxB,MAAMmD,EAAkBhF,EAAU7gB,YAClC,GAAK6lB,EAEE,CACL,MAAMC,EAAuBD,EAAgBrkB,WACvCukB,EAAyBF,EAAgBjkB,aACzCokB,EAA0BH,EAAgBpkB,cAC1CwkB,EACJJ,EAAgBnkB,oBACZwkB,EAA0BL,EAAgBlkB,cAC1CwkB,EAAuBN,EAAgB/wE,WACvCsxE,EAA4BP,EAAgBhkB,gBAClDzlE,KAAKumF,iBAAmB,CACtBthB,aAC6Bz+D,IAA3BmjF,EACIA,EACAlsB,GACNyH,SAAU0kB,GAENlsB,GACJyH,eAAgB0kB,GtB5/BW,EsB+/B3BzlB,cAC8B59D,IAA5BsjF,EACIA,EACAnsB,GACN+C,eAC2Bl6D,IAAzBujF,EACIA,EtB39BgB,EsB69BtBzlB,gBACgC99D,IAA9BwjF,EACIA,EACApsB,GACNoH,YAAa/H,GACXysB,GAA8C7rB,IAG1D,MArCQ79D,KAAKumF,iBAAmB,KAsC1B,MAAM0D,EAAWxF,EAAUhZ,UACrBye,EAAczF,EAAUvY,aACxBie,EAAc1F,EAAUtY,aACxBie,EAAqB3F,EAAUxiB,oBAC/BooB,EAAe5F,EAAUp3C,cACzBi9C,EAAY7F,EAAUriB,gBACtBmoB,EAAW9F,EAAUtb,UACrBqhB,EAAgB/F,EAAU1Y,eAC1B0e,EAAmBhG,EAAUxY,kBACnCjsE,KAAKwmF,WAAa,CAChBpnB,UAAmB54D,IAAbyjF,EAAyBA,EAAW1sB,GAC1C+M,eACoB9jE,IAAlBgkF,EAA8BA,EAAgB1sB,GAChD8M,kBACuBpkE,IAArBikF,EACIA,EACA1sB,IAER/9D,KAAKipE,WACUziE,IAAb+jF,EACIvoF,MAAMC,QAAQsoF,GACZA,EAASrqB,QAAO,CAACwqB,EAAK/+E,EAAGpK,IAAOmpF,GAAOnpF,EAAI,EAAI,IAAMoK,IAAI,IACzD4+E,EACF,GACNvqF,KAAKimF,kBACaz/E,IAAhB0jF,EAA4BlqF,KAAK68B,YAAcqtD,EAAc,EAC/DlqF,KAAKkmF,kBACa1/E,IAAhB2jF,EAA4BnqF,KAAK68B,YAAcstD,EAAc,EAC/DnqF,KAAKmmF,yBACoB3/E,IAAvB4jF,GAAmCA,EACrCpqF,KAAKomF,mBAAiC5/E,IAAjB6jF,EAA6BA,EAAe,EACjErqF,KAAKqmF,WAAa,CAChBrmF,KAAK68B,YAAcytD,EAAU,GAC7BtqF,KAAK68B,YAAcytD,EAAU,GAErC,MAxFMtqF,KAAKipE,MAAQ,EAyFnB,ECppCA,MAQM0hB,GAAqB,CACzB3yD,MA+TF,SACE4yD,EACAt2E,EACAxE,EACA25D,EACA7mE,EACA6wE,GAEA,MAAM6Q,EAAax0E,EAAMitB,WACnB0nD,EAAY30E,EAAMq5D,UAClB0hB,EAAUpG,GAAaA,EAAUtb,UAEjCob,EACJ9Q,GAAa6Q,GAAcuG,EAAU,CAAA,OAAKrkF,EAC5C,GAAI89E,EAAY,CACd,GAAIA,EAAW7oB,iBAAmBh/B,GAChC,OAEF,MAAMquD,EAAcF,EAAaG,WAAWj7E,EAAMm3C,YAAa,SAC/D6jC,EAAYzG,cAAcC,EAAYC,GACtCuG,EAAY/G,UAAUzvE,EAAUm1D,EAAS7mE,EAC7C,CACE,GAAIioF,EAAS,CACX,MAAMG,EAAaJ,EAAaG,WAAWj7E,EAAMm3C,YAAa,QAC9D+jC,EAAWxG,aAAaC,EAAWF,GACnCyG,EAAW7G,SAAS7vE,EAAUm1D,EAAS7mE,EAC3C,CACA,EAzVEqoF,WAkOF,SACEL,EACAt2E,EACAxE,EACA25D,EACA7mE,GAEA,MAAMoiE,EAAcl1D,EAAM8zD,YAC1B,GAAIoB,EAAa,CACf,MAAMkmB,EAAmBN,EAAaG,WACpCj7E,EAAMm3C,YACN,cAEFikC,EAAiB9G,mBAAmB,KAAMpf,GAC1CkmB,EAAiB3H,eAAejvE,EAAUm1D,EAAS7mE,EACvD,CACE,MAAM6hF,EAAY30E,EAAMq5D,UACxB,GAAIsb,GAAaA,EAAUtb,UAAW,CACpC,MAAM6hB,EAAaJ,EAAaG,WAAWj7E,EAAMm3C,YAAa,QAC9D+jC,EAAWxG,aAAaC,GACxBuG,EAAW7G,SAAS7vE,EAAUm1D,EAAS7mE,EAC3C,CACA,EAvPEg4B,QAuYF,SAA+BgwD,EAAct2E,EAAUxE,EAAO25D,EAAS7mE,GACrE,MAAMs8B,EAAYpvB,EAAM2zD,UAClBuB,EAAcl1D,EAAM8zD,YAC1B,GAAI1kC,GAAa8lC,EAAa,CAC5B,MAAMmmB,EAAgBP,EAAaG,WAAWj7E,EAAMm3C,YAAa,WACjEkkC,EAAc/G,mBAAmBllD,EAAW8lC,GAC5CmmB,EAAclH,YAAY3vE,EAAUm1D,EAAS7mE,EACjD,CACE,MAAM6hF,EAAY30E,EAAMq5D,UACxB,GAAIsb,GAAaA,EAAUtb,UAAW,CACpC,MAAM6hB,EAAaJ,EAAaG,WAAWj7E,EAAMm3C,YAAa,QAC9D+jC,EAAWxG,aAAaC,GACxBuG,EAAW7G,SAAS7vE,EAAUm1D,EAAS7mE,EAC3C,CACA,EApZEwoF,WAiWF,SACER,EACAt2E,EACAxE,EACA25D,EACA7mE,EACA6wE,GAEA,MAAM6Q,EAAax0E,EAAMitB,WACnBsuD,EAAW/G,GAA0C,IAA5BA,EAAWp9B,aACpCu9B,EAAY30E,EAAMq5D,UAClB0hB,EAAUpG,GAAaA,EAAUtb,UAEjCob,EACJ9Q,GAAa4X,GAAYR,EAAU,CAAA,OAAKrkF,EAC1C,GAAI6kF,EAAU,CACZ,GAAI/G,EAAW7oB,iBAAmBh/B,GAChC,OAEF,MAAMquD,EAAcF,EAAaG,WAAWj7E,EAAMm3C,YAAa,SAC/D6jC,EAAYzG,cAAcC,EAAYC,GACtCuG,EAAYnH,eAAervE,EAAUm1D,EAAS7mE,EAClD,CACE,GAAIioF,EAAS,CACX,MAAMG,EAAaJ,EAAaG,WAAWj7E,EAAMm3C,YAAa,QAC9D+jC,EAAWxG,aAAaC,EAAWF,GACnCyG,EAAW7G,SAAS7vE,EAAUm1D,EAAS7mE,EAC3C,CACA,EA5XE0oF,gBA8PF,SACEV,EACAt2E,EACAxE,EACA25D,EACA7mE,GAEA,MAAMoiE,EAAcl1D,EAAM8zD,YAC1B,GAAIoB,EAAa,CACf,MAAMkmB,EAAmBN,EAAaG,WACpCj7E,EAAMm3C,YACN,cAEFikC,EAAiB9G,mBAAmB,KAAMpf,GAC1CkmB,EAAiBzH,oBAAoBnvE,EAAUm1D,EAAS7mE,EAC5D,CACE,MAAM6hF,EAAY30E,EAAMq5D,UACxB,GAAIsb,GAAaA,EAAUtb,UAAW,CACpC,MAAM6hB,EAAaJ,EAAaG,WAAWj7E,EAAMm3C,YAAa,QAC9D+jC,EAAWxG,aAAaC,GACxBuG,EAAW7G,SAAS7vE,EAAUm1D,EAAS7mE,EAC3C,CACA,EAnRE2oF,aA4RF,SACEX,EACAt2E,EACAxE,EACA25D,EACA7mE,GAEA,MAAMs8B,EAAYpvB,EAAM2zD,UAClBuB,EAAcl1D,EAAM8zD,YAC1B,GAAIoB,GAAe9lC,EAAW,CAC5B,MAAMisD,EAAgBP,EAAaG,WAAWj7E,EAAMm3C,YAAa,WACjEkkC,EAAc/G,mBAAmBllD,EAAW8lC,GAC5CmmB,EAActH,iBAAiBvvE,EAAUm1D,EAAS7mE,EACtD,CACE,MAAM6hF,EAAY30E,EAAMq5D,UACxB,GAAIsb,GAAaA,EAAUtb,UAAW,CACpC,MAAM6hB,EAAaJ,EAAaG,WAAWj7E,EAAMm3C,YAAa,QAC9D+jC,EAAWxG,aAAaC,GACxBuG,EAAW7G,SAAS7vE,EAAUm1D,EAAS7mE,EAC3C,CACA,EA/SE4oF,mBA+LF,SACEC,EACAn3E,EACAxE,EACA25D,EACAiiB,EACA9oF,GAEA,MAAM8kF,EAAapzE,EAASqzE,qBAC5B,IAAIpmF,EAAG4E,EACP,IAAK5E,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAAG,EAE/CoqF,EADyBhB,GAAmBjD,EAAWnmF,GAAG6xB,YAExDq4D,EACA/D,EAAWnmF,GACXuO,EACA25D,EACAiiB,EACA9oF,EAEN,CACA,EAnNEmvE,OAsCF,SAA8B6Y,EAAct2E,EAAUxE,EAAO25D,EAAS7mE,GACpE,MAAMs8B,EAAYpvB,EAAM2zD,UAClBuB,EAAcl1D,EAAM8zD,YAC1B,GAAI1kC,GAAa8lC,EAAa,CAC5B,MAAM4mB,EAAehB,EAAaG,WAAWj7E,EAAMm3C,YAAa,UAChE2kC,EAAaxH,mBAAmBllD,EAAW8lC,GAC3C4mB,EAAa1I,WAAW5uE,EAAUm1D,EAAS7mE,EAC/C,CACE,MAAM6hF,EAAY30E,EAAMq5D,UACxB,GAAIsb,GAAaA,EAAUtb,UAAW,CACpC,MAAM6hB,EAAaJ,EAAaG,WAAWj7E,EAAMm3C,YAAa,QAC9D+jC,EAAWxG,aAAaC,GACxBuG,EAAW7G,SAAS7vE,EAAUm1D,EAClC,CACA,GA5CO,SAASoiB,GAAaC,EAAUC,GACrC,OAAO/7E,SAASzH,EAAOujF,GAAW,IAAM97E,SAASzH,EAAOwjF,GAAW,GACrE,CAOO,SAASC,GAAoB/yE,EAAY0jB,GAC9C,MAAMllB,EAAYw0E,GAAahzE,EAAY0jB,GAC3C,OAAOllB,EAAYA,CACrB,CAOO,SAASw0E,GAAahzE,EAAY0jB,GACvC,MA5CyB,GA4CI1jB,EAAc0jB,CAC7C,CAoCO,SAASuvD,GACdT,EACAhiB,EACA35D,EACAyiB,EACAhtB,EACAwnB,EACA0mD,EACA7wE,GAEA,MAAMupF,EAAkB,GAClB7H,EAAax0E,EAAMitB,WACzB,GAAIunD,EAAY,CACd,IAAI9gB,GAAU,EACd,MAAMvH,EAAaqoB,EAAW7oB,gBAC1BQ,GAAcx/B,IAAqBw/B,GAAcx/B,GACnD+mC,GAAU,EAENvH,GAAcx/B,IAChB6nD,EAAWz3E,OAGX22D,GACF2oB,EAAgBxmF,KAAK2+E,EAAW5oB,QAEtC,CACE,MAAMx8B,EAAYpvB,EAAM2zD,UACpBvkC,GAAaA,EAAUskC,WACzB2oB,EAAgBxmF,KAAKu5B,EAAUw8B,SAEjC,MAAM8H,EAAU2oB,EAAgBtrF,OAAS,EAczC,OAbI2iE,GACFv/D,QAAQg2C,IAAIkyC,GAAiB54E,MAAK,IAAMhO,EAAS,QAwBrD,SACEkmF,EACAhiB,EACA35D,EACAyiB,EACAxF,EACA0mD,EACA7wE,GAEA,MAAM0R,EAAWxE,EAAMy5D,qBAANz5D,CAA4B25D,GAC7C,IAAKn1D,EACH,OAEF,MAAM8f,EAAqB9f,EAASme,oBAClCF,EACAxF,GAEI+7C,EAAWh5D,EAAM66C,cACvB,GAAIme,EACFsjB,GAAeX,EAAar3D,EAAoBtkB,EAAO25D,EAAS7mE,OAC3D,EAEL+oF,EADyBhB,GAAmBv2D,EAAmBhB,YAE7Dq4D,EACAr3D,EACAtkB,EACA25D,EACA7mE,EACA6wE,EAEN,CACA,CArDE4Y,CACEZ,EACAhiB,EACA35D,EACAyiB,EACAxF,EACA0mD,EACA7wE,GAGK4gE,CACT,CAmDA,SAAS4oB,GAAeX,EAAan3E,EAAUxE,EAAO25D,EAAS7mE,GAC7D,GAA0B,sBAAtB0R,EAAS8e,UAAmC,CAC9C,MAAMs0D,EAC2D,EAE7D5uB,gBACJ,IAAK,IAAIv3D,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChD6qF,GAAeX,EAAa/D,EAAWnmF,GAAIuO,EAAO25D,EAAS7mE,GAE7D,MACJ,CACiB6oF,EAAYV,WAAWj7E,EAAMm3C,YAAa,WAClD+7B,WACT,EACIvZ,EACA35D,EAAM66C,cACN76C,EAAMw5D,0BACN1mE,EAEJ,CC5HO,SAAS0pF,GAAiBzmF,GAC/B,KAAMA,EAAM6J,mBAAmB68E,0BAC7B,MAAM,IAAIlkF,MAAM,sDAIlB,MAAMtH,EAAI8E,EAAM6uE,sBAAsB,GAChC1zE,EAAI6E,EAAM6uE,sBAAsB,GAChC8X,EAAmB5gF,KAAK6S,KAAK1d,EAAIA,EAAIC,EAAIA,GACzC0/B,EAAa76B,EAAM66B,WACnB3T,EAAY0/D,GAChB5mF,EAAM6uE,sBAAsBlxE,QAC5Bk9B,EAAWo0C,4BAEPviD,EAAmBy5D,GACvBtrD,EAAWsH,UAAU/uB,WACrBuzE,GAEF,IAAI5H,EACJ,MAAM52D,EAAiBE,KAQvB,OAPIF,IACF42D,EAAgBj5D,GACdqC,EACA0S,EAAWsH,UAAUrsB,aAIlB,IAAI+oE,GACT7+E,EAAM6J,QACN88E,EACA9rD,EAAWjrB,OACXsX,EACA2T,EAAWsH,UAAU9uB,SACrBqZ,EACAqyD,EAEJ,CC/GA,IAAI8H,GAKG,MAAM19E,GAAa,GAY1B,SAAS29E,GAAiB1tD,EAAK2tD,EAAI5sE,EAAI6sE,EAAI5sE,GACzCgf,EAAIuoD,YACJvoD,EAAIqoD,OAAO,EAAG,GACdroD,EAAIgnC,OAAO2mB,EAAI5sE,GACfif,EAAIgnC,OAAO4mB,EAAI5sE,GACfgf,EAAIinC,YACJjnC,EAAIgiC,OACJhiC,EAAI6tD,OACJ7tD,EAAIE,SAAS,EAAG,EAAGvzB,KAAKoM,IAAI40E,EAAIC,GAAM,EAAGjhF,KAAKoM,IAAIgI,EAAIC,IACtDgf,EAAIoiC,SACN,CAUA,SAAS0rB,GAA8BjrF,EAAMuV,GAE3C,OACEzL,KAAK8L,IAAI5V,EAAc,EAATuV,GAAc,KAAO,GACnCzL,KAAK8L,IAAI5V,EAAc,EAATuV,EAAa,GAAK,QAAc,CAElD,CA2CO,SAAS21E,GACdpgE,EACAqgE,EACA/+C,EACAE,GAEA,MAAMH,EAAelhB,GAAUmhB,EAAc++C,EAAYrgE,GAGzD,IAAIuhB,EAAmBzqB,GACrBupE,EACA7+C,EACAF,GAGF,MAAMg/C,EAAsBD,EAAWjpE,wBACXxd,IAAxB0mF,IACF/+C,GAAoB++C,GAEtB,MAAMx+D,EAAsB9B,EAAW5I,wBACXxd,IAAxBkoB,IACFyf,GAAoBzf,GAOtB,MAAMM,EAAepC,EAAW/Q,YAChC,IAAKmT,GAAgB7Y,GAAmB6Y,EAAcif,GAAe,CACnE,MAAMk/C,EACJzpE,GAAmBkJ,EAAYuhB,EAAkBF,GACjDE,EACEhyB,SAASgxE,IAAuBA,EAAqB,IACvDh/C,GAAoBg/C,EAE1B,CAEE,OAAOh/C,CACT,CAcO,SAASi/C,GACdxgE,EACAqgE,EACAI,EACAj/C,GAEA,MAAMF,EAAet1B,GAAUy0E,GAC/B,IAAIl/C,EAAmB6+C,GACrBpgE,EACAqgE,EACA/+C,EACAE,GAeF,QAZKjyB,SAASgyB,IAAqBA,GAAoB,IACrDl2B,GAAco1E,GAAc,SAAUv0E,GAOpC,OANAq1B,EAAmB6+C,GACjBpgE,EACAqgE,EACAn0E,EACAs1B,GAEKjyB,SAASgyB,IAAqBA,EAAmB,CAC9D,IAGSA,CACT,CA4BO,SAAS6I,GACdloC,EACAC,EACA4tB,EACAwR,EACAnf,EACAof,EACAi/C,EACAC,EACAC,EACAC,EACAC,EACAlhF,EACAmhF,EACAC,GAEA,MAAMj+E,EAAUb,GACdjD,KAAK+R,MAAMgf,EAAa7tB,GACxBlD,KAAK+R,MAAMgf,EAAa5tB,GACxBC,IAOF,GAJKzC,IACHmD,EAAQk+E,uBAAwB,GAGX,IAAnBL,EAAQ1sF,OACV,OAAO6O,EAAQR,OAKjB,SAAS2+E,EAAW9pF,GAClB,OAAO6H,KAAK+R,MAAM5Z,EAAQ44B,GAAcA,CAC5C,CAJEjtB,EAAQuS,MAAM0a,EAAYA,GAM1BjtB,EAAQmtD,yBAA2B,UAEnC,MAAMixB,EpHrDC,CAAC/2E,IAAUA,KAAU,KAAW,KoH0DvC,IAAIg3E,EAJJR,EAAQziF,SAAQ,SAAUizB,EAAKx8B,EAAGJ,GAChCU,GAAOisF,EAAkB/vD,EAAItoB,OACjC,IAGE,MAAMu4E,EAAcrxD,EAAawR,EAE3B8/C,GAAgB1hF,EAAc,EAAI,EAAIX,KAAKC,IAAI,GAAM,KAAKmiF,EAEhE,IAAKN,GAAiC,IAAnBH,EAAQ1sF,QAA2B,IAAX2sF,EAAc,CAUvD,GATAO,EAAgBl/E,GACdjD,KAAK+R,MAAMjF,GAASo1E,GAAoBE,GACxCpiF,KAAK+R,MAAMhF,GAAUm1E,GAAoBE,GACzCh/E,IAGGzC,IACHwhF,EAAcH,uBAAwB,GAEpC5+D,GAAgB2+D,EAAY,CAC9B,MAAMO,GAAQl/D,EAAa,GAAK8+D,EAAiB,IAAME,EACjDG,IAASn/D,EAAa,GAAK8+D,EAAiB,IAAME,EAClDl/E,EAAQ4J,GAASsW,GAAgBg/D,EACjCj/E,EAAS4J,GAAUqW,GAAgBg/D,EACzCD,EAAcK,KAAKF,EAAMC,EAAMr/E,EAAOC,GACtCg/E,EAAcjB,MACpB,CAEIS,EAAQziF,SAAQ,SAAUizB,EAAKx8B,EAAGJ,GAEhC,GAAI48B,EAAI1rB,MAAMvD,MAAQ,GAAKivB,EAAI1rB,MAAMtD,OAAS,EAAG,CAC/C,GAAIgvB,EAAI4vD,WAAY,CAClBI,EAAc9sB,OACd,MAAMitB,GAAQnwD,EAAI4vD,WAAW,GAAKG,EAAiB,IAAME,EACnDG,IAASpwD,EAAI4vD,WAAW,GAAKG,EAAiB,IAAME,EACpDl/E,EAAQ4J,GAASqlB,EAAI4vD,YAAcK,EACnCj/E,EAAS4J,GAAUolB,EAAI4vD,YAAcK,EAC3CD,EAAcK,KACZ7hF,EAAc2hF,EAAOtiF,KAAK+R,MAAMuwE,GAChC3hF,EAAc4hF,EAAOviF,KAAK+R,MAAMwwE,GAChC5hF,EAAcuC,EAAQlD,KAAK+R,MAAMuwE,EAAOp/E,GAASlD,KAAK+R,MAAMuwE,GAC5D3hF,EAAcwC,EAASnD,KAAK+R,MAAMwwE,EAAOp/E,GAAUnD,KAAK+R,MAAMwwE,IAEhEJ,EAAcjB,MACxB,CAEQ,MAAMoB,GAAQnwD,EAAItoB,OAAO,GAAKq4E,EAAiB,IAAME,EAC/CG,IAASpwD,EAAItoB,OAAO,GAAKq4E,EAAiB,IAAME,EAChDK,EAAW31E,GAASqlB,EAAItoB,QAAUu4E,EAClCM,EAAY31E,GAAUolB,EAAItoB,QAAUu4E,EAC1CD,EAAcx7E,UACZwrB,EAAI1rB,MACJm7E,EACAA,EACAzvD,EAAI1rB,MAAMvD,MAAQ,EAAI0+E,EACtBzvD,EAAI1rB,MAAMtD,OAAS,EAAIy+E,EACvBjhF,EAAc2hF,EAAOtiF,KAAK+R,MAAMuwE,GAChC3hF,EAAc4hF,EAAOviF,KAAK+R,MAAMwwE,GAChC5hF,EACI8hF,EACAziF,KAAK+R,MAAMuwE,EAAOG,GAAYziF,KAAK+R,MAAMuwE,GAC7C3hF,EACI+hF,EACA1iF,KAAK+R,MAAMwwE,EAAOG,GAAa1iF,KAAK+R,MAAMwwE,IAG5CpwD,EAAI4vD,YACNI,EAAc1sB,SAExB,CACA,GACA,CACE,MAAMktB,EAAgBh2E,GAAW80E,GAqKjC,OAnKAC,EAAckB,eAAe1jF,SAAQ,SAAU2jF,EAAUltF,EAAGJ,GAqB1D,MAAM4I,EAAS0kF,EAAS1kF,OAClB3I,EAASqtF,EAASrtF,OACxB,IAAI+X,EAAKpP,EAAO,GAAG,GACjBqP,EAAKrP,EAAO,GAAG,GACbsP,EAAKtP,EAAO,GAAG,GACjBuP,EAAKvP,EAAO,GAAG,GACbwP,EAAKxP,EAAO,GAAG,GACjByP,EAAKzP,EAAO,GAAG,GAEjB,MAAM2kF,EAAKb,GAAYzsF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,GACpDugD,EAAKd,IACPzsF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,GAEjCw+C,EAAKiB,GAAYzsF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,GACpDpuB,EAAK6tE,IACPzsF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,GAEjCy+C,EAAKgB,GAAYzsF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,GACpDnuB,EAAK4tE,IACPzsF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,GAMjCwgD,EAAwBz1E,EACxB01E,EAAwBz1E,EAC9BD,EAAK,EACLC,EAAK,EACLC,GAAMu1E,EACNt1E,GAAMu1E,EACNt1E,GAAMq1E,EACNp1E,GAAMq1E,EAEN,MAMMC,EAAcvyE,GANI,CACtB,CAAClD,EAAIC,EAAI,EAAG,EAAGszE,EAAK8B,GACpB,CAACn1E,EAAIC,EAAI,EAAG,EAAGqzE,EAAK6B,GACpB,CAAC,EAAG,EAAGr1E,EAAIC,EAAI0G,EAAK2uE,GACpB,CAAC,EAAG,EAAGp1E,EAAIC,EAAIyG,EAAK0uE,KAGtB,IAAKG,EACH,OAMF,GAHAp/E,EAAQuxD,OACRvxD,EAAQ83E,YA/TZ,WACE,QAAiChhF,IAA7BkmF,GAAwC,CAC1C,MAAMztD,EAAMpwB,GAAsB,EAAG,EAAGG,IACxCiwB,EAAI49B,yBAA2B,UAC/B59B,EAAIC,UAAY,wBAChBytD,GAAiB1tD,EAAK,EAAG,EAAG,EAAG,GAC/B0tD,GAAiB1tD,EAAK,EAAG,EAAG,EAAG,GAC/B,MAAMn9B,EAAOm9B,EAAIzsB,aAAa,EAAG,EAAG,EAAG,GAAG1Q,KAC1C4qF,GACEK,GAA8BjrF,EAAM,IACpCirF,GAA8BjrF,EAAM,IACpCirF,GAA8BjrF,EAAM,GACtC2N,GAAcwvB,GACdjwB,GAAWrJ,KAAKs5B,EAAI/vB,OACxB,CAEE,OAAOw9E,EACT,CAgTQqC,KAAgCxiF,EAAa,CAE/CmD,EAAQ43E,OAAOsF,EAAI5sE,GAEnB,MAAMgvE,EAAQ,EACRC,EAAKP,EAAK9B,EACVsC,EAAKP,EAAK3uE,EAChB,IAAK,IAAI+wC,EAAO,EAAGA,EAAOi+B,EAAOj+B,IAE/BrhD,EAAQu2D,OACN2mB,EAAKiB,GAAa98B,EAAO,GAAKk+B,EAAMD,GACpChvE,EAAK6tE,EAAY98B,EAAOm+B,GAAOF,EAAQ,KAGrCj+B,GAAQi+B,EAAQ,GAClBt/E,EAAQu2D,OACN2mB,EAAKiB,GAAa98B,EAAO,GAAKk+B,EAAMD,GACpChvE,EAAK6tE,GAAa98B,EAAO,GAAKm+B,GAAOF,EAAQ,KAKnDt/E,EAAQu2D,OAAO4mB,EAAI5sE,EACzB,MACMvQ,EAAQ43E,OAAOsF,EAAI5sE,GACnBtQ,EAAQu2D,OAAOyoB,EAAIC,GACnBj/E,EAAQu2D,OAAO4mB,EAAI5sE,GAmBrB,IAAI5N,EACJ,GAjBA3C,EAAQo9E,OAERp9E,EAAQqd,UACN+hE,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,GACZJ,EACAC,GAGFj/E,EAAQygB,UACN29D,EAAiB,GAAKc,EACtBd,EAAiB,GAAKe,GAIpBd,EACF17E,EAAQ07E,EAAc7+E,OACtBQ,EAAQuS,MAAMgsE,GAAeA,OACxB,CACL,MAAMlkF,EAASwjF,EAAQ,GACjB93E,EAAS1L,EAAO0L,OACtBpD,EAAQtI,EAAOsI,MACf3C,EAAQuS,MACNvJ,GAASjD,GAAUpD,EAAMvD,OACxB6J,GAAUlD,GAAUpD,EAAMtD,OAEnC,CAEIW,EAAQ6C,UAAUF,EAAO,EAAG,GAC5B3C,EAAQ2xD,SACZ,IAEM0sB,IACFt+E,GAAcs+E,GACd/+E,GAAWrJ,KAAKooF,EAAc7+E,SAG5Bu+E,IACF/9E,EAAQuxD,OAERvxD,EAAQmtD,yBAA2B,cACnCntD,EAAQs1D,YAAc,QACtBt1D,EAAQgxD,UAAY,EAEpB4sB,EAAckB,eAAe1jF,SAAQ,SAAU2jF,EAAUltF,EAAGJ,GAC1D,MAAMC,EAASqtF,EAASrtF,OAClBstF,GAAMttF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EACzCugD,IAAOvtF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EAC1Cw+C,GAAMxrF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EACzCpuB,IAAO5e,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EAC1Cy+C,GAAMzrF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EACzCnuB,IAAO7e,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EAEhD1+B,EAAQ83E,YACR93E,EAAQ43E,OAAOsF,EAAI5sE,GACnBtQ,EAAQu2D,OAAOyoB,EAAIC,GACnBj/E,EAAQu2D,OAAO4mB,EAAI5sE,GACnBvQ,EAAQw2D,YACRx2D,EAAQ4zD,QACd,IAEI5zD,EAAQ2xD,WAEH3xD,EAAQR,MACjB,CC5dO,SAASigF,GAAmBl2E,GACjC,OAAIjX,MAAMC,QAAQgX,GACTrN,KAAKmM,OAAOkB,GAEdA,CACT,CCOA,MAAMm2E,GAIJ,WAAArvF,CAAYsvF,GAMVrvF,KAAKqvF,mBAAkC7oF,IAAlB6oF,EAA8BA,EAAgB,KAMnErvF,KAAKsvF,OAAS,EAMdtvF,KAAKuvF,SAAW,CAAE,EAMlBvvF,KAAKwvF,QAAU,KAMfxvF,KAAKyvF,QAAU,IACnB,CAEE,YAAAC,GACE,MAAMC,EAAQ3vF,KAAK6K,MACf8kF,aAAiB7vF,GACnB6vF,EAAMzvF,SAEZ,CAKE,cAAAi7D,GACE,OAAOn7D,KAAKqvF,cAAgB,GAAKrvF,KAAK6lC,WAAa7lC,KAAKqvF,aAC5D,CAOE,WAAAO,CAAYC,GACV,KAAO7vF,KAAKm7D,kBACVn7D,KAAK0vF,cAEX,CAKE,KAAArrF,GACE,KAAOrE,KAAKwvF,SACVxvF,KAAK0vF,cAEX,CAME,WAAAI,CAAYxoF,GACV,OAAOtH,KAAKuvF,SAASrmF,eAAe5B,EACxC,CAQE,OAAAwD,CAAQC,GACN,IAAI4kF,EAAQ3vF,KAAKwvF,QACjB,KAAOG,GACL5kF,EAAE4kF,EAAMI,OAAQJ,EAAMK,KAAMhwF,MAC5B2vF,EAAQA,EAAMM,KAEpB,CAOE,GAAAhnF,CAAI3B,EAAKgD,GACP,MAAMqlF,EAAQ3vF,KAAKuvF,SAASjoF,GAK5B,OAJAqM,QACYnN,IAAVmpF,EACA,mEAEEA,IAAU3vF,KAAKyvF,UAGfE,IAAU3vF,KAAKwvF,SACjBxvF,KAAKwvF,QAAgCxvF,KAAKwvF,QAAa,MACvDxvF,KAAKwvF,QAAQU,MAAQ,OAErBP,EAAMM,MAAMC,MAAQP,EAAMO,MAC1BP,EAAMO,MAAMD,MAAQN,EAAMM,OAE5BN,EAAMM,MAAQ,KACdN,EAAMO,MAAQlwF,KAAKyvF,QACnBzvF,KAAKyvF,QAAQQ,MAAQN,EACrB3vF,KAAKyvF,QAAUE,GAZNA,EAAMI,MAcnB,CAOE,MAAA1kF,CAAO/D,GACL,MAAMqoF,EAAQ3vF,KAAKuvF,SAASjoF,GAqB5B,OApBAqM,QACYnN,IAAVmpF,EACA,mEAEEA,IAAU3vF,KAAKyvF,SACjBzvF,KAAKyvF,QAAgCE,EAAW,MAC5C3vF,KAAKyvF,UACPzvF,KAAKyvF,QAAQQ,MAAQ,OAEdN,IAAU3vF,KAAKwvF,SACxBxvF,KAAKwvF,QAAgCG,EAAW,MAC5C3vF,KAAKwvF,UACPxvF,KAAKwvF,QAAQU,MAAQ,QAGvBP,EAAMM,MAAMC,MAAQP,EAAMO,MAC1BP,EAAMO,MAAMD,MAAQN,EAAMM,cAErBjwF,KAAKuvF,SAASjoF,KACnBtH,KAAKsvF,OACAK,EAAMI,MACjB,CAKE,QAAAlqD,GACE,OAAO7lC,KAAKsvF,MAChB,CAKE,OAAAnmF,GACE,MAAMxC,EAAO,IAAI3E,MAAMhC,KAAKsvF,QAC5B,IACIK,EADApuF,EAAI,EAER,IAAKouF,EAAQ3vF,KAAKyvF,QAASE,EAAOA,EAAQA,EAAMO,MAC9CvpF,EAAKpF,KAAOouF,EAAMK,KAEpB,OAAOrpF,CACX,CAKE,SAAAwpF,GACE,MAAMrnF,EAAS,IAAI9G,MAAMhC,KAAKsvF,QAC9B,IACIK,EADApuF,EAAI,EAER,IAAKouF,EAAQ3vF,KAAKyvF,QAASE,EAAOA,EAAQA,EAAMO,MAC9CpnF,EAAOvH,KAAOouF,EAAMI,OAEtB,OAAOjnF,CACX,CAKE,QAAAsnF,GACE,OAAOpwF,KAAKwvF,QAAQO,MACxB,CAKE,WAAAM,GACE,OAAOrwF,KAAKwvF,QAAQQ,IACxB,CAME,YAAAM,GACE,OAAOtwF,KAAKyvF,QAAQO,IACxB,CAOE,IAAAO,CAAKjpF,GACH,OAAOtH,KAAKuvF,SAASjoF,IAAMyoF,MAC/B,CAKE,GAAAllF,GACE,MAAM8kF,EAAQ3vF,KAAKwvF,QAUnB,cATOxvF,KAAKuvF,SAASI,EAAMK,MACvBL,EAAMM,QACRN,EAAMM,MAAMC,MAAQ,MAEtBlwF,KAAKwvF,QAAgCG,EAAW,MAC3C3vF,KAAKwvF,UACRxvF,KAAKyvF,QAAU,QAEfzvF,KAAKsvF,OACAK,EAAMI,MACjB,CAME,OAAAruE,CAAQpa,EAAKvD,GACX/D,KAAKiJ,IAAI3B,GACTtH,KAAKuvF,SAASjoF,GAAKyoF,OAAShsF,CAChC,CAME,GAAA6F,CAAItC,EAAKvD,GACP4P,KACIrM,KAAOtH,KAAKuvF,UACd,uDAEF,MAAMI,EAAQ,CACZK,KAAM1oF,EACN2oF,MAAO,KACPC,MAAOlwF,KAAKyvF,QACZM,OAAQhsF,GAEL/D,KAAKyvF,QAGRzvF,KAAKyvF,QAAQQ,MAAQN,EAFrB3vF,KAAKwvF,QAAUG,EAIjB3vF,KAAKyvF,QAAUE,EACf3vF,KAAKuvF,SAASjoF,GAAOqoF,IACnB3vF,KAAKsvF,MACX,CAOE,OAAA1zB,CAAQ5oD,GACNhT,KAAKqvF,cAAgBr8E,CACzB,ECvRO,SAASgE,GAAe8yB,EAAG/zB,EAAGC,EAAG9J,GACtC,YAAkB1F,IAAd0F,GACFA,EAAU,GAAK49B,EACf59B,EAAU,GAAK6J,EACf7J,EAAU,GAAK8J,EACR9J,GAEF,CAAC49B,EAAG/zB,EAAGC,EAChB,CAQO,SAASw6E,GAAU1mD,EAAG/zB,EAAGC,GAC9B,OAAO8zB,EAAI,IAAM/zB,EAAI,IAAMC,CAC7B,CAqCO,SAASy6E,GAAKvkF,GACnB,OAAOwkF,GAAQxkF,EAAU,GAAIA,EAAU,GAAIA,EAAU,GACvD,CAQO,SAASwkF,GAAQ5mD,EAAG/zB,EAAGC,GAC5B,OAAQD,GAAK+zB,GAAK9zB,CACpB,CAOO,SAAS26E,GAAiBzkF,EAAWqY,GAC1C,MAAMulB,EAAI59B,EAAU,GACd6J,EAAI7J,EAAU,GACd8J,EAAI9J,EAAU,GAEpB,GAAIqY,EAASysB,aAAelH,GAAKA,EAAIvlB,EAASqsB,aAC5C,OAAO,EAET,MAAM6vC,EAAYl8D,EAASqsE,iBAAiB9mD,GAC5C,OAAK22C,GAGEA,EAAUpqE,WAAWN,EAAGC,EACjC,CCtFA,MAAM66E,GAAe,CAAC,EAAG,EAAG,GA6C5B,MAAMC,GAIJ,WAAA/wF,CAAYuK,GA2BV,IAAIshC,EACJ,GAvBA5rC,KAAKisC,aAA8BzlC,IAApB8D,EAAQ2hC,QAAwB3hC,EAAQ2hC,QAAU,EAMjEjsC,KAAK6rC,aAAevhC,EAAQq/B,YAC5Bh2B,GACErR,EACEtC,KAAK6rC,cAML,CAAC9qC,EAAGC,IAAMA,EAAID,IACd,GAEF,qDAKGuJ,EAAQymF,QACX,IAAK,IAAIxvF,EAAI,EAAG4E,EAAKnG,KAAK6rC,aAAahrC,OAAS,EAAGU,EAAI4E,IAAM5E,EAC3D,GAAKqqC,GAGH,GAAI5rC,KAAK6rC,aAAatqC,GAAKvB,KAAK6rC,aAAatqC,EAAI,KAAOqqC,EAAY,CAClEA,OAAaplC,EACb,KACZ,OALUolC,EAAa5rC,KAAK6rC,aAAatqC,GAAKvB,KAAK6rC,aAAatqC,EAAI,GAchEvB,KAAK2rC,YAAcC,EAMnB5rC,KAAK+wC,QAAU/wC,KAAK6rC,aAAahrC,OAAS,EAM1Cb,KAAKijE,aAA6Bz8D,IAAnB8D,EAAQ0mF,OAAuB1mF,EAAQ0mF,OAAS,KAM/DhxF,KAAKixF,SAAW,UACQzqF,IAApB8D,EAAQymF,UACV/wF,KAAKixF,SAAW3mF,EAAQymF,QACxBp9E,GACE3T,KAAKixF,SAASpwF,QAAUb,KAAK6rC,aAAahrC,OAC1C,wDAIJ,MAAM4U,EAASnL,EAAQmL,YAERjP,IAAXiP,GAAyBzV,KAAKijE,SAAYjjE,KAAKixF,WACjDjxF,KAAKijE,QAAU1qD,GAAW9C,IAG5B9B,IACI3T,KAAKijE,SAAWjjE,KAAKixF,UAAcjxF,KAAKijE,UAAYjjE,KAAKixF,SAC3D,+DAOFjxF,KAAKkxF,WAAa,UACQ1qF,IAAtB8D,EAAQ6mF,YACVnxF,KAAKkxF,WAAa5mF,EAAQ6mF,UAC1Bx9E,GACE3T,KAAKkxF,WAAWrwF,QAAUb,KAAK6rC,aAAahrC,OAC5C,0DAQJb,KAAKoxF,eACkB5qF,IAArB8D,EAAQ+mF,SACJ/mF,EAAQ+mF,SACPrxF,KAAKkxF,WAEJ,KADA1mD,GAER72B,IACI3T,KAAKoxF,WAAapxF,KAAKkxF,YACtBlxF,KAAKoxF,YAAcpxF,KAAKkxF,WAC3B,mEAOFlxF,KAAKijB,aAAqBzc,IAAXiP,EAAuBA,EAAS,KAM/CzV,KAAKsxF,gBAAkB,KAMvBtxF,KAAKuxF,SAAW,CAAC,EAAG,GAMpBvxF,KAAKwxF,WAAa,CAAC,EAAG,EAAG,EAAG,QAENhrF,IAAlB8D,EAAQmnF,MACVzxF,KAAKsxF,gBAAkBhnF,EAAQmnF,MAAMtgE,KAAI,CAACne,EAAM82B,KAC9C,MAAM22C,EAAY,IAAIF,GACpB30E,KAAKmM,IAAI,EAAG/E,EAAK,IACjBpH,KAAKoM,IAAIhF,EAAK,GAAK,GAAG,GACtBpH,KAAKmM,IAAI,EAAG/E,EAAK,IACjBpH,KAAKoM,IAAIhF,EAAK,GAAK,GAAG,IAExB,GAAIyC,EAAQ,CACV,MAAMi8E,EAAsB1xF,KAAK2xF,0BAA0Bl8E,EAAQq0B,GACnE22C,EAAU/pE,KAAO9K,KAAKoM,IAAI05E,EAAoBh7E,KAAM+pE,EAAU/pE,MAC9D+pE,EAAU7pE,KAAOhL,KAAKmM,IAAI25E,EAAoB96E,KAAM6pE,EAAU7pE,MAC9D6pE,EAAU9pE,KAAO/K,KAAKoM,IAAI05E,EAAoB/6E,KAAM8pE,EAAU9pE,MAC9D8pE,EAAU5pE,KAAOjL,KAAKmM,IAAI25E,EAAoB76E,KAAM4pE,EAAU5pE,KACxE,CACQ,OAAO4pE,CAAS,IAEThrE,GACTzV,KAAK4xF,qBAAqBn8E,EAEhC,CAUE,gBAAAo8E,CAAiBp8E,EAAQk3B,EAAMz0B,GAC7B,MAAMuoE,EAAYzgF,KAAK2xF,0BAA0Bl8E,EAAQk3B,GACzD,IAAK,IAAIprC,EAAIk/E,EAAU/pE,KAAMvQ,EAAKs6E,EAAU7pE,KAAMrV,GAAK4E,IAAM5E,EAC3D,IAAK,IAAIsb,EAAI4jE,EAAU9pE,KAAM+V,EAAK+zD,EAAU5pE,KAAMgG,GAAK6P,IAAM7P,EAC3D3E,EAAS,CAACy0B,EAAMprC,EAAGsb,GAG3B,CASE,+BAAAi1E,CACE5lF,EACAgM,EACA65E,EACAC,GAEA,IAAIvR,EAAW1qE,EAAGC,EACdi8E,EAAkB,KAClBnoD,EAAI59B,EAAU,GAAK,EAOvB,IANyB,IAArBlM,KAAK2rC,aACP51B,EAAI7J,EAAU,GACd8J,EAAI9J,EAAU,IAEd+lF,EAAkBjyF,KAAKkyF,mBAAmBhmF,EAAW8lF,GAEhDloD,GAAK9pC,KAAKisC,SAAS,CAYxB,QAXUzlC,IAANuP,QAAyBvP,IAANwP,GACrBD,EAAInK,KAAKoQ,MAAMjG,EAAI,GACnBC,EAAIpK,KAAKoQ,MAAMhG,EAAI,GACnByqE,EAAY0R,GAAwBp8E,EAAGA,EAAGC,EAAGA,EAAG+7E,IAEhDtR,EAAYzgF,KAAK2xF,0BACfM,EACAnoD,EACAioD,GAGA75E,EAAS4xB,EAAG22C,GACd,OAAO,IAEP32C,CACR,CACI,OAAO,CACX,CAOE,SAAAjuB,GACE,OAAO7b,KAAKijB,OAChB,CAOE,UAAA2tB,GACE,OAAO5wC,KAAK+wC,OAChB,CAOE,UAAAC,GACE,OAAOhxC,KAAKisC,OAChB,CAQE,SAAAs2B,CAAUz4B,GACR,OAAI9pC,KAAKijE,QACAjjE,KAAKijE,QAEPjjE,KAAKixF,SAASnnD,EACzB,CAQE,aAAA7M,CAAc6M,GACZ,OAAO9pC,KAAK6rC,aAAa/B,EAC7B,CAOE,cAAAuH,GACE,OAAOrxC,KAAK6rC,YAChB,CAQE,0BAAAumD,CAA2BlmF,EAAW6lF,EAAeC,GACnD,GAAI9lF,EAAU,GAAKlM,KAAK+wC,QAAS,CAC/B,GAAyB,IAArB/wC,KAAK2rC,YAAmB,CAC1B,MAAMj1B,EAAsB,EAAfxK,EAAU,GACjByK,EAAsB,EAAfzK,EAAU,GACvB,OAAOimF,GACLz7E,EACAA,EAAO,EACPC,EACAA,EAAO,EACPo7E,EAEV,CACM,MAAME,EAAkBjyF,KAAKkyF,mBAC3BhmF,EACA8lF,GAAchyF,KAAKwxF,YAErB,OAAOxxF,KAAK2xF,0BACVM,EACA/lF,EAAU,GAAK,EACf6lF,EAER,CACI,OAAO,IACX,CAQE,4BAAAM,CAA6BnmF,EAAW49B,EAAGioD,GACzC,GAAIjoD,EAAI9pC,KAAK+wC,SAAWjH,EAAI9pC,KAAKisC,QAC/B,OAAO,KAGT,MAAMqmD,EAAapmF,EAAU,GACvBqmF,EAAarmF,EAAU,GACvBsmF,EAAatmF,EAAU,GAE7B,GAAI49B,IAAMwoD,EACR,OAAOH,GACLI,EACAC,EACAD,EACAC,EACAT,GAIJ,GAAI/xF,KAAK2rC,YAAa,CACpB,MAAMjuB,EAAS9R,KAAKC,IAAI7L,KAAK2rC,YAAa7B,EAAIwoD,GACxC57E,EAAO9K,KAAKoQ,MAAMu2E,EAAa70E,GAC/B/G,EAAO/K,KAAKoQ,MAAMw2E,EAAa90E,GACrC,GAAIosB,EAAIwoD,EACN,OAAOH,GAAwBz7E,EAAMA,EAAMC,EAAMA,EAAMo7E,GAKzD,OAAOI,GAAwBz7E,EAFlB9K,KAAKoQ,MAAM0B,GAAU60E,EAAa,IAAM,EAEV57E,EAD9B/K,KAAKoQ,MAAM0B,GAAU80E,EAAa,IAAM,EACET,EAC7D,CAEI,MAAME,EAAkBjyF,KAAKkyF,mBAAmBhmF,EAAWlM,KAAKwxF,YAChE,OAAOxxF,KAAK2xF,0BAA0BM,EAAiBnoD,EAAGioD,EAC9D,CASE,yBAAAJ,CAA0Bl8E,EAAQq0B,EAAGioD,GACnC/xF,KAAKyyF,uBAAuBh9E,EAAO,GAAIA,EAAO,GAAIq0B,GAAG,EAAO+mD,IAC5D,MAAMn6E,EAAOm6E,GAAa,GACpBl6E,EAAOk6E,GAAa,GAC1B7wF,KAAKyyF,uBAAuBh9E,EAAO,GAAIA,EAAO,GAAIq0B,GAAG,EAAM+mD,IAG3D,OAAOsB,GAAwBz7E,EAFlBm6E,GAAa,GAEiBl6E,EAD9Bk6E,GAAa,GAC6BkB,EAC3D,CAME,kBAAAW,CAAmBxmF,GACjB,MAAM8kF,EAAShxF,KAAKuiE,UAAUr2D,EAAU,IAClC+M,EAAajZ,KAAKi9B,cAAc/wB,EAAU,IAC1CmlF,EAAWr/B,GAAOhyD,KAAK2yF,YAAYzmF,EAAU,IAAKlM,KAAKuxF,UAC7D,MAAO,CACLP,EAAO,IAAM9kF,EAAU,GAAK,IAAOmlF,EAAS,GAAKp4E,EACjD+3E,EAAO,IAAM9kF,EAAU,GAAK,IAAOmlF,EAAS,GAAKp4E,EAEvD,CAUE,kBAAAi5E,CAAmBhmF,EAAW8lF,GAC5B,MAAMhB,EAAShxF,KAAKuiE,UAAUr2D,EAAU,IAClC+M,EAAajZ,KAAKi9B,cAAc/wB,EAAU,IAC1CmlF,EAAWr/B,GAAOhyD,KAAK2yF,YAAYzmF,EAAU,IAAKlM,KAAKuxF,UACvD76E,EAAOs6E,EAAO,GAAK9kF,EAAU,GAAKmlF,EAAS,GAAKp4E,EAChDtC,EAAOq6E,EAAO,IAAM9kF,EAAU,GAAK,GAAKmlF,EAAS,GAAKp4E,EAG5D,OAAOjC,GAAeN,EAAMC,EAFfD,EAAO26E,EAAS,GAAKp4E,EACrBtC,EAAO06E,EAAS,GAAKp4E,EACY+4E,EAClD,CAaE,iCAAAY,CAAkCx8E,EAAY6C,EAAY45E,GACxD,OAAO7yF,KAAK8yF,gCACV18E,EAAW,GACXA,EAAW,GACX6C,GACA,EACA45E,EAEN,CAeE,+BAAAC,CACE/8E,EACAC,EACAiD,EACA85E,EACAF,GAEA,MAAM/oD,EAAI9pC,KAAKgzF,kBAAkB/5E,GAC3BgJ,EAAQhJ,EAAajZ,KAAKi9B,cAAc6M,GACxCknD,EAAShxF,KAAKuiE,UAAUz4B,GACxBunD,EAAWr/B,GAAOhyD,KAAK2yF,YAAY7oD,GAAI9pC,KAAKuxF,UAElD,IAAIgB,EAActwE,GAASlM,EAAIi7E,EAAO,IAAO/3E,EAAao4E,EAAS,GAC/DmB,EAAcvwE,GAAS+uE,EAAO,GAAKh7E,GAAMiD,EAAao4E,EAAS,GAUnE,OARI0B,GACFR,EAAa30E,GAAK20E,EA7eP,GA6e+B,EAC1CC,EAAa50E,GAAK40E,EA9eP,GA8e+B,IAE1CD,EAAav2E,GAAMu2E,EAhfR,GAifXC,EAAax2E,GAAMw2E,EAjfR,IAofNS,GAAwBnpD,EAAGyoD,EAAYC,EAAYK,EAC9D,CAiBE,sBAAAJ,CAAuB18E,EAAGC,EAAG8zB,EAAGipD,EAA2BF,GACzD,MAAM7B,EAAShxF,KAAKuiE,UAAUz4B,GACxB7wB,EAAajZ,KAAKi9B,cAAc6M,GAChCunD,EAAWr/B,GAAOhyD,KAAK2yF,YAAY7oD,GAAI9pC,KAAKuxF,UAElD,IAAIgB,GAAcx8E,EAAIi7E,EAAO,IAAM/3E,EAAao4E,EAAS,GACrDmB,GAAcxB,EAAO,GAAKh7E,GAAKiD,EAAao4E,EAAS,GAUzD,OARI0B,GACFR,EAAa30E,GAAK20E,EA/gBP,GA+gB+B,EAC1CC,EAAa50E,GAAK40E,EAhhBP,GAghB+B,IAE1CD,EAAav2E,GAAMu2E,EAlhBR,GAmhBXC,EAAax2E,GAAMw2E,EAnhBR,IAshBNS,GAAwBnpD,EAAGyoD,EAAYC,EAAYK,EAC9D,CAUE,wBAAAK,CAAyB98E,EAAY0zB,EAAG+oD,GACtC,OAAO7yF,KAAKyyF,uBACVr8E,EAAW,GACXA,EAAW,GACX0zB,GACA,EACA+oD,EAEN,CAME,sBAAAM,CAAuBjnF,GACrB,OAAOlM,KAAK6rC,aAAa3/B,EAAU,GACvC,CAUE,WAAAymF,CAAY7oD,GACV,OAAI9pC,KAAKoxF,UACApxF,KAAKoxF,UAEPpxF,KAAKkxF,WAAWpnD,EAC3B,CAME,gBAAA8mD,CAAiB9mD,GACf,OAAK9pC,KAAKsxF,gBAKHtxF,KAAKsxF,gBAAgBxnD,GAJnB9pC,KAAKijB,QACRjjB,KAAK2xF,0BAA0B3xF,KAAKijB,QAAS6mB,GAC7C,IAGV,CAmBE,iBAAAkpD,CAAkB/5E,EAAYm6E,GAM5B,OAAOh3E,GALGlb,EACRlB,KAAK6rC,aACL5yB,EACAm6E,GAAiB,GAEHpzF,KAAKisC,QAASjsC,KAAK+wC,QACvC,CAQE,2BAAAsiD,CAA4BnnF,EAAWonF,GACrC,OAAO15D,GACL05D,EACA,EACAA,EAASzyF,OACT,EACAb,KAAKkyF,mBAAmBhmF,GAE9B,CAME,oBAAA0lF,CAAqBn8E,GACnB,MAAM5U,EAASb,KAAK6rC,aAAahrC,OAC3B0yF,EAAiB,IAAIvxF,MAAMnB,GACjC,IAAK,IAAIipC,EAAI9pC,KAAKisC,QAASnC,EAAIjpC,IAAUipC,EACvCypD,EAAezpD,GAAK9pC,KAAK2xF,0BAA0Bl8E,EAAQq0B,GAE7D9pC,KAAKsxF,gBAAkBiC,CAC3B,ECjnBA,MAAMC,WAAqB1C,GAIzB,WAAA/wF,CAAYuK,GACVrF,MAAM,CACJwQ,OAAQnL,EAAQmL,OAChBu7E,OAAQ1mF,EAAQ0mF,OAChBD,QAASzmF,EAAQymF,QACjBpnD,YAAar/B,EAAQq/B,YACrB0nD,SAAU/mF,EAAQ+mF,SAClBF,UAAW7mF,EAAQ6mF,UACnBM,MAAOnnF,EAAQmnF,QAOjBzxF,KAAKyzF,WAAanpF,EAAQopF,SAC9B,CAME,WAAAC,CAAY7pD,GACV,OAAO9pC,KAAKyzF,WAAW3pD,EAC3B,CAOE,YAAA8pD,GACE,OAAO5zF,KAAKyzF,UAChB,EAiBO,SAASI,GACdC,EACAr+E,EACAs+E,GAGA,MAAMpqD,EAAc,GAEd+pD,EAAY,GAEZ3C,EAAU,GAEVI,EAAY,GAEZM,EAAQ,GAEdsC,OAAgCvtF,IAAjButF,EAA6BA,EAAe,GAE3D,MACMC,EAAoB,aACpBC,EAAqB,aACrBC,EAA2B,mBAC3BC,EAAwB,gBAKxBx4E,EAAa2X,GADNwgE,EAA8B,cAErCjwE,EAAgBlI,EAAWqI,mBAE3BowE,EAAiBz4E,EAAWuI,qBAAqB2Q,WAAW,MAmDlE,OAjDAi/D,EAAUE,GAAmBn7D,MAAK,SAAU93B,EAAGC,GAC7C,OAAOA,EAAEkzF,GAA4BnzF,EAAEmzF,EAC3C,IAEEJ,EAAUE,GAAmBlpF,SAAQ,SAAUupF,GAC7C,IAAIC,EAsBJ,GAlBEA,IADEP,EAAalzF,OAAS,IACNkzF,EAAaxpC,MAAK,SAAUgqC,GAC5C,OAAIF,EAAIJ,IAAuBM,EAAOP,KAKjCK,EAAIJ,GAAoBvuF,SAAS,MAElCouF,EAAUG,GAAsB,IAAMI,EAAIJ,KAC1CM,EAAOP,EAInB,IAKQM,EAAiB,CACnBZ,EAAU/tF,KAAK0uF,EAAIJ,IACnB,MAAMh7E,EAC6B,MAAhCo7E,EAAIH,GAAuCrwE,EACxC2wE,EAAYH,EAAqB,UACjCI,EAAaJ,EAAsB,WACrCD,EACFrD,EAAQprF,KAAK,CACX0uF,EAAIF,GAAuB,GAC3BE,EAAIF,GAAuB,KAG7BpD,EAAQprF,KAAK0uF,EAAIF,IAEnBxqD,EAAYhkC,KAAKsT,GACjBk4E,EAAUxrF,KACR6uF,GAAaC,EAAaD,EAAY,CAACA,EAAWC,IAEpDhD,EAAM9rF,KAAK,CAAC0uF,EAAiB,YAAGA,EAAkB,cACxD,CACA,IAES,IAAIb,GAAa,CACtB/9E,OAAQA,EACRs7E,QAASA,EACTpnD,YAAaA,EACb+pD,UAAWA,EACXvC,UAAWA,EACXM,MAAOA,GAEX,CCpKO,SAASiD,GAAiB/4E,GAC/B,IAAI4I,EAAW5I,EAAW0I,qBAK1B,OAJKE,IACHA,EAAWowE,GAAoBh5E,GAC/BA,EAAW2I,mBAAmBC,IAEzBA,CACT,CAQO,SAAS7I,GAAM6I,EAAUrY,EAAWyP,GACzC,MAAMmuB,EAAI59B,EAAU,GACd8M,EAASuL,EAASmuE,mBAAmBxmF,GACrC0P,EAAmBg5E,GAAqBj5E,GAC9C,IAAKxF,GAAmByF,EAAkB5C,GAAS,CACjD,MAAM+C,EAAarD,GAASkD,GACtB0G,EAAa1W,KAAKgS,MACrBhC,EAAiB,GAAK5C,EAAO,IAAM+C,GAGtC,OADA/C,EAAO,IAAM+C,EAAauG,EACnBiC,EAAS2uE,yBAAyBl6E,EAAQ8wB,EACrD,CACE,OAAO59B,CACT,CAWO,SAAS2oF,GAAgBp/E,EAAQs7B,EAASsgD,EAAUv4E,GACzDA,OAAoBtS,IAAXsS,EAAuBA,EAAS,WAEzC,MAAM6wB,EAAcmrD,GAAsBr/E,EAAQs7B,EAASsgD,GAE3D,OAAO,IAAIP,GAAS,CAClBr7E,OAAQA,EACRu7E,OAAQn4E,GAAUpD,EAAQqD,GAC1B6wB,YAAaA,EACb0nD,SAAUA,GAEd,CAoBO,SAAS0D,GAAUzqF,GACxB,MAAM0qF,EAAa1qF,GAAW,CAAE,EAE1BmL,EAASu/E,EAAWv/E,QAAU6d,GAAc,aAAazX,YAEzDo5E,EAAc,CAClBx/E,OAAQA,EACRw2B,QAAS+oD,EAAW/oD,QACpBolD,SAAU2D,EAAW3D,SACrB1nD,YAAamrD,GACXr/E,EACAu/E,EAAWjkD,QACXikD,EAAW3D,SACX2D,EAAWzrD,gBAGf,OAAO,IAAIunD,GAASmE,EACtB,CAYA,SAASH,GAAsBr/E,EAAQs7B,EAASsgD,EAAU9nD,GACxDwH,OAAsBvqC,IAAZuqC,EAAwBA,EtEnHJ,GsEoH9BsgD,EAAWr/B,QAAoBxrD,IAAb6qF,EAAyBA,EAAW7mD,IAEtD,MAAMz7B,EAAS4J,GAAUlD,GACnB3G,EAAQ4J,GAASjD,GAEvB8zB,EACEA,EAAgB,EACZA,EACA39B,KAAKoM,IAAIlJ,EAAQuiF,EAAS,GAAItiF,EAASsiF,EAAS,IAEtD,MAAMxwF,EAASkwC,EAAU,EACnBpH,EAAc,IAAI3nC,MAAMnB,GAC9B,IAAK,IAAIipC,EAAI,EAAGA,EAAIjpC,IAAUipC,EAC5BH,EAAYG,GAAKP,EAAgB39B,KAAKC,IAAI,EAAGi+B,GAE/C,OAAOH,CACT,CAWO,SAASgrD,GAAoBh5E,EAAYo1B,EAASsgD,EAAUv4E,GAEjE,OAAO+7E,GADQD,GAAqBj5E,GACLo1B,EAASsgD,EAAUv4E,EACpD,CAQO,SAAS87E,GAAqBj5E,GAEnC,IAAIlG,GADJkG,EAAa2X,GAAc3X,IACHE,YACxB,IAAKpG,EAAQ,CACX,MAAMy/E,EACH,IAAMxyE,GAAgBzB,QAAWtF,EAAWqI,mBAC/CvO,EAASuB,IAAgBk+E,GAAOA,EAAMA,EAAMA,EAChD,CACE,OAAOz/E,CACT,CC5JO,SAAS0/E,GAAaC,EAAKC,GAEhC,MAAMC,EAAY,GAElB5uF,OAAOC,KAAK0uF,GAAQvqF,SAAQ,SAAUiS,GAClB,OAAds4E,EAAOt4E,SAA6BvW,IAAd6uF,EAAOt4E,IAC/Bu4E,EAAU3vF,KAAKoX,EAAI,IAAMw4E,mBAAmBF,EAAOt4E,IAEzD,IACE,MAAMy4E,EAAKF,EAAUx1E,KAAK,KAK1B,OAHAs1E,EAAMA,EAAI1zE,QAAQ,QAAS,KAE3B0zE,GAAOA,EAAI1vF,SAAS,KAAO,IAAM,KACpB8vF,CACf,CAEA,MAAMC,GAAS,SACTC,GAAS,SACTC,GAAS,SACTC,GAAa,UAWZ,SAASC,GAAkBp0E,EAAUqoB,EAAG/zB,EAAGC,EAAGa,GACnD,OAAO4K,EACJC,QAAQ+zE,GAAQ3rD,EAAE/Y,YAClBrP,QAAQg0E,GAAQ3/E,EAAEgb,YAClBrP,QAAQi0E,GAAQ3/E,EAAE+a,YAClBrP,QAAQk0E,IAAY,WACnB,QAAapvF,IAATqQ,EACF,MAAM,IAAIxO,MACR,6EAGJ,OAAQwO,EAAOb,GAAG+a,UACxB,GACA,CASO,SAAS+kE,GAAQC,EAAMjsD,EAAG/zB,EAAGC,GAGlC,OAAO+/E,EADOz4E,GADDozE,GAAQ5mD,EAAG/zB,EAAGC,GACA+/E,EAAKl1F,QAElC,CAMO,SAASm1F,GAAUnV,GACxB,MAAMkV,EAAO,GACb,IAAI9rE,EAAQ,sBAAsBgsE,KAAKpV,GACvC,GAAI52D,EAAO,CAET,MAAMisE,EAAgBjsE,EAAM,GAAGksE,WAAW,GACpCC,EAAensE,EAAM,GAAGksE,WAAW,GACzC,IAAIE,EACJ,IAAKA,EAAWH,EAAeG,GAAYD,IAAgBC,EACzDN,EAAKpwF,KAAKk7E,EAAIn/D,QAAQuI,EAAM,GAAIvhB,OAAO4tF,aAAaD,KAEtD,OAAON,CACX,CAEE,GADA9rE,EAAQ,kBAAkBgsE,KAAKpV,GAC3B52D,EAAO,CAET,MAAM+tC,EAAOhoD,SAASia,EAAM,GAAI,IAChC,IAAK,IAAI1oB,EAAIyO,SAASia,EAAM,GAAI,IAAK1oB,GAAKy2D,EAAMz2D,IAC9Cw0F,EAAKpwF,KAAKk7E,EAAIn/D,QAAQuI,EAAM,GAAI1oB,EAAEwvB,aAEpC,OAAOglE,CACX,CAEE,OADAA,EAAKpwF,KAAKk7E,GACHkV,CACT,CC1FO,SAASQ,GAAmB90E,EAAU8C,GAC3C,OAAA,SAOYrY,EAAWywB,EAAYhhB,GAC/B,IAAKzP,EACH,OAEF,IAAI2K,EACJ,MAAMizB,EAAI59B,EAAU,GACpB,GAAIqY,EAAU,CAEZ,MAAMzG,EAAQyG,EAASqsE,iBAAiB9mD,GACpChsB,IACFjH,EAAOiH,EAAMnF,YAAc,EAErC,CACM,OAAOk9E,GAAkBp0E,EAAUqoB,EAAG59B,EAAU,GAAIA,EAAU,GAAI2K,EAExE,CACA,CAOO,SAAS2/E,GAAoBC,EAAWlyE,GAC7C,MAAMxc,EAAM0uF,EAAU51F,OAChB61F,EAAmB,IAAI10F,MAAM+F,GACnC,IAAK,IAAIxG,EAAI,EAAGA,EAAIwG,IAAOxG,EACzBm1F,EAAiBn1F,GAAKg1F,GAAmBE,EAAUl1F,GAAIgjB,GAEzD,OAAOoyE,GAA2BD,EACpC,CAMO,SAASC,GAA2BD,GACzC,OAAgC,IAA5BA,EAAiB71F,OACZ61F,EAAiB,GAE1B,SAOYxqF,EAAWywB,EAAYhhB,GAC/B,IAAKzP,EACH,OAEF,MACMtJ,EAAQ0a,GADJs5E,GAAc1qF,GACAwqF,EAAiB71F,QACzC,OAAO61F,EAAiB9zF,GAAOsJ,EAAWywB,EAAYhhB,EAE5D,CACA,CAQO,SAASk7E,GAAoB3qF,EAAWywB,EAAYhhB,GAE3D,CChCA,MAAMm7E,GAUJ,WAAA/2F,CACE6sB,EACAqgE,EACAI,EACA0J,EACAC,EACAC,EACAC,GAMAl3F,KAAKm3F,YAAcvqE,EAMnB5sB,KAAKo3F,YAAcnK,EAGnB,IAAIoK,EAAoB,CAAE,EAC1B,MAAMC,EAAeJ,EACjB3qE,IAAwC9G,GACtC8xE,GACEL,EACAnqE,GAAUtH,EAAOzlB,KAAKo3F,YAAap3F,KAAKm3F,gBAG5CrpE,GAAa9tB,KAAKo3F,YAAap3F,KAAKm3F,aAOxCn3F,KAAKw3F,cAAgB,SAAUjvE,GAC7B,MAAMjhB,EAAMihB,EAAE,GAAK,IAAMA,EAAE,GAI3B,OAHK8uE,EAAkB/vF,KACrB+vF,EAAkB/vF,GAAOgwF,EAAa/uE,IAEjC8uE,EAAkB/vF,EAC1B,EAMDtH,KAAKy3F,iBAAmBV,EAMxB/2F,KAAK03F,uBAAyBV,EAAiBA,EAM/Ch3F,KAAK23F,WAAa,GAOlB33F,KAAK43F,iBAAkB,EAMvB53F,KAAK63F,kBACH73F,KAAKm3F,YAAYr7E,cACfi7E,KACA/2F,KAAKm3F,YAAYt7E,aACnBnD,GAASq+E,IAAoBr+E,GAAS1Y,KAAKm3F,YAAYt7E,aAMzD7b,KAAK83F,kBAAoB93F,KAAKm3F,YAAYt7E,YACtCnD,GAAS1Y,KAAKm3F,YAAYt7E,aAC1B,KAMJ7b,KAAK+3F,kBAAoB/3F,KAAKo3F,YAAYv7E,YACtCnD,GAAS1Y,KAAKo3F,YAAYv7E,aAC1B,KAEJ,MAAMm8E,EAAqBz/E,GAAW80E,GAChC4K,EAAsB3/E,GAAY+0E,GAClC6K,EAAyB7/E,GAAeg1E,GACxC8K,EAAwB//E,GAAci1E,GACtC+K,EAAgBp4F,KAAKw3F,cAAcQ,GACnCK,EAAiBr4F,KAAKw3F,cAAcS,GACpCK,EAAoBt4F,KAAKw3F,cAAcU,GACvCK,EAAmBv4F,KAAKw3F,cAAcW,GAYtCK,EA9Ic,IAgJjBvB,EACGrrF,KAAKoM,IACH,EACApM,KAAKgS,KACHhS,KAAK6sF,KACHjgF,GAAQ60E,IACL4J,EAAwBA,EAAwB,IAAM,QAI/D,GAcN,GAZAj3F,KAAK04F,SACHV,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGEx4F,KAAK43F,gBAAiB,CACxB,IAAIe,EAAY5hF,IAChB/W,KAAK23F,WAAW7sF,SAAQ,SAAU2jF,EAAUltF,EAAGJ,GAC7Cw3F,EAAY/sF,KAAKmM,IACf4gF,EACAlK,EAAS1kF,OAAO,GAAG,GACnB0kF,EAAS1kF,OAAO,GAAG,GACnB0kF,EAAS1kF,OAAO,GAAG,GAE7B,IAIM/J,KAAK23F,WAAW7sF,SAAS2jF,IACvB,GACE7iF,KAAKoM,IACHy2E,EAAS1kF,OAAO,GAAG,GACnB0kF,EAAS1kF,OAAO,GAAG,GACnB0kF,EAAS1kF,OAAO,GAAG,IAEnB4uF,EACF34F,KAAK83F,kBAAoB,EACzB,CACA,MAAMc,EAAc,CAClB,CAACnK,EAAS1kF,OAAO,GAAG,GAAI0kF,EAAS1kF,OAAO,GAAG,IAC3C,CAAC0kF,EAAS1kF,OAAO,GAAG,GAAI0kF,EAAS1kF,OAAO,GAAG,IAC3C,CAAC0kF,EAAS1kF,OAAO,GAAG,GAAI0kF,EAAS1kF,OAAO,GAAG,KAEzC6uF,EAAY,GAAG,GAAKD,EAAY34F,KAAK83F,kBAAoB,IAC3Dc,EAAY,GAAG,IAAM54F,KAAK83F,mBAExBc,EAAY,GAAG,GAAKD,EAAY34F,KAAK83F,kBAAoB,IAC3Dc,EAAY,GAAG,IAAM54F,KAAK83F,mBAExBc,EAAY,GAAG,GAAKD,EAAY34F,KAAK83F,kBAAoB,IAC3Dc,EAAY,GAAG,IAAM54F,KAAK83F,mBAM5B,MAAMphF,EAAO9K,KAAKmM,IAChB6gF,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEJhtF,KAAKoM,IAChB4gF,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAENliF,EAAO1W,KAAK83F,kBAAoB,IACzCrJ,EAAS1kF,OAAS6uF,EAE9B,IAEA,CAEIvB,EAAoB,CAAE,CAC1B,CAYE,YAAAwB,CAAa93F,EAAGC,EAAGunB,EAAGuwE,EAAMC,EAAMC,GAChCh5F,KAAK23F,WAAWhyF,KAAK,CACnBoE,OAAQ,CAAC+uF,EAAMC,EAAMC,GACrB53F,OAAQ,CAACL,EAAGC,EAAGunB,IAErB,CAkBE,QAAAmwE,CAAS33F,EAAGC,EAAGunB,EAAG5H,EAAGm4E,EAAMC,EAAMC,EAAMC,EAAMT,GAC3C,MAAMU,EAAmB3jF,GAAe,CAACujF,EAAMC,EAAMC,EAAMC,IACrDE,EAAkBn5F,KAAK83F,kBACzBp/E,GAASwgF,GAAoBl5F,KAAK83F,kBAClC,KACEsB,EAA0Cp5F,KAAsB,kBAIhEq5F,EACJr5F,KAAKm3F,YAAYr7E,YACjBq9E,EAAkB,IAClBA,EAAkB,EAEpB,IAAIG,GAAmB,EAEvB,GAAId,EAAiB,EAAG,CACtB,GAAIx4F,KAAKo3F,YAAYjzE,YAAcnkB,KAAK+3F,kBAAmB,CAIzDuB,EADE5gF,GAFuBnD,GAAe,CAACxU,EAAGC,EAAGunB,EAAG5H,KAEnB3gB,KAAK+3F,kBAhRjB,KAkRuBuB,CAClD,EACWD,GAAUr5F,KAAKm3F,YAAYhzE,YAAcg1E,IAC5CG,EACEH,EAtRiB,KAsRuBG,EAElD,CAEI,IAAKA,GAAoBt5F,KAAKy3F,kBAE1Bt7E,SAAS+8E,EAAiB,KAC1B/8E,SAAS+8E,EAAiB,KAC1B/8E,SAAS+8E,EAAiB,KAC1B/8E,SAAS+8E,EAAiB,MAErB5+E,GAAW4+E,EAAkBl5F,KAAKy3F,kBAErC,OAKN,IAAI8B,EAAc,EAElB,KAAKD,GAEAn9E,SAAS28E,EAAK,KACd38E,SAAS28E,EAAK,KACd38E,SAAS48E,EAAK,KACd58E,SAAS48E,EAAK,KACd58E,SAAS68E,EAAK,KACd78E,SAAS68E,EAAK,KACd78E,SAAS88E,EAAK,KACd98E,SAAS88E,EAAK,KAEf,GAAIT,EAAiB,EACnBc,GAAmB,OASnB,GALAC,GACIp9E,SAAS28E,EAAK,KAAQ38E,SAAS28E,EAAK,IAAU,EAAJ,IAC1C38E,SAAS48E,EAAK,KAAQ58E,SAAS48E,EAAK,IAAU,EAAJ,IAC1C58E,SAAS68E,EAAK,KAAQ78E,SAAS68E,EAAK,IAAU,EAAJ,IAC1C78E,SAAS88E,EAAK,KAAQ98E,SAAS88E,EAAK,IAAU,EAAJ,GAE7B,GAAfM,GACe,GAAfA,GACe,GAAfA,GACe,GAAfA,EAEA,OAMR,GAAIf,EAAiB,EAAG,CACtB,IAAKc,EAAkB,CACrB,MAAMtgF,EAAS,EAAEjY,EAAE,GAAKwnB,EAAE,IAAM,GAAIxnB,EAAE,GAAKwnB,EAAE,IAAM,GAC7CixE,EAAYx5F,KAAKw3F,cAAcx+E,GAErC,IAAI/C,EACJ,GAAIojF,EAAQ,CAKVpjF,GAHGqH,GAAOw7E,EAAK,GAAIM,GACf97E,GAAO07E,EAAK,GAAII,IAClB,EACqB97E,GAAOk8E,EAAU,GAAIJ,EACtD,MACUnjF,GAAM6iF,EAAK,GAAKE,EAAK,IAAM,EAAIQ,EAAU,GAE3C,MAAMtjF,GAAM4iF,EAAK,GAAKE,EAAK,IAAM,EAAIQ,EAAU,GAE/CF,EAD8BrjF,EAAKA,EAAKC,EAAKA,EACFlW,KAAK03F,sBACxD,CACM,GAAI4B,EAAkB,CACpB,GAAI1tF,KAAK8L,IAAI3W,EAAE,GAAKwnB,EAAE,KAAO3c,KAAK8L,IAAI3W,EAAE,GAAKwnB,EAAE,IAAK,CAElD,MAAMkxE,EAAK,EAAEz4F,EAAE,GAAKunB,EAAE,IAAM,GAAIvnB,EAAE,GAAKunB,EAAE,IAAM,GACzCmxE,EAAQ15F,KAAKw3F,cAAciC,GAC3BE,EAAK,EAAEh5E,EAAE,GAAK5f,EAAE,IAAM,GAAI4f,EAAE,GAAK5f,EAAE,IAAM,GACzC64F,EAAQ55F,KAAKw3F,cAAcmC,GAEjC35F,KAAK04F,SACH33F,EACAC,EACAy4F,EACAE,EACAb,EACAC,EACAW,EACAE,EACApB,EAAiB,GAEnBx4F,KAAK04F,SACHiB,EACAF,EACAlxE,EACA5H,EACAi5E,EACAF,EACAV,EACAC,EACAT,EAAiB,EAE7B,KAAe,CAEL,MAAMqB,EAAK,EAAE94F,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzC84F,EAAQ95F,KAAKw3F,cAAcqC,GAC3BE,EAAK,EAAExxE,EAAE,GAAK5H,EAAE,IAAM,GAAI4H,EAAE,GAAK5H,EAAE,IAAM,GACzCq5E,EAAQh6F,KAAKw3F,cAAcuC,GAEjC/5F,KAAK04F,SACH33F,EACA84F,EACAE,EACAp5E,EACAm4E,EACAgB,EACAE,EACAf,EACAT,EAAiB,GAEnBx4F,KAAK04F,SACHmB,EACA74F,EACAunB,EACAwxE,EACAD,EACAf,EACAC,EACAgB,EACAxB,EAAiB,EAE7B,CACQ,MACR,CACA,CAEI,GAAIa,EAAQ,CACV,IAAKr5F,KAAK63F,kBACR,OAEF73F,KAAK43F,iBAAkB,CAC7B,CAMuB,GAAd2B,GACHv5F,KAAK64F,aAAa93F,EAAGwnB,EAAG5H,EAAGm4E,EAAME,EAAMC,GAEtB,GAAdM,GACHv5F,KAAK64F,aAAa93F,EAAGwnB,EAAGvnB,EAAG83F,EAAME,EAAMD,GAErCQ,IAEiB,GAAdA,GACHv5F,KAAK64F,aAAa73F,EAAG2f,EAAG5f,EAAGg4F,EAAME,EAAMH,GAEtB,EAAdS,GACHv5F,KAAK64F,aAAa73F,EAAG2f,EAAG4H,EAAGwwE,EAAME,EAAMD,GAG/C,CAOE,qBAAAiB,GACE,MAAMxkF,E7H3SD,CAACsB,IAAUA,KAAU,KAAW,K6HoTrC,OAPA/W,KAAK23F,WAAW7sF,SAAQ,SAAU2jF,EAAUltF,EAAGJ,GAC7C,MAAM48B,EAAM0wD,EAAS1kF,OACrB4L,GAAiBF,EAAQsoB,EAAI,IAC7BpoB,GAAiBF,EAAQsoB,EAAI,IAC7BpoB,GAAiBF,EAAQsoB,EAAI,GACnC,IAEWtoB,CACX,CAKE,YAAA+4E,GACE,OAAOxuF,KAAK23F,UAChB,ECvfO,MAAMuC,GAAkB,GC0B/B,MAAMC,WAAmBluF,GAgBvB,WAAAlM,CACE6sB,EACAwtE,EACAnN,EACAoN,EACAnuF,EACAouF,EACA39D,EACA6wD,EACA+M,EACAvD,EACAvJ,EACAnjF,GAEArF,MAAMiH,EAAWT,EAAgBnB,GAMjCtK,KAAKw6F,kBAA+Bh0F,IAAhBinF,GAA4BA,EAMhDztF,KAAK68B,YAAcF,EAMnB38B,KAAKy6F,QAAUjN,EAMfxtF,KAAKs+B,QAAU,KAMft+B,KAAK06F,gBAAkBN,EAMvBp6F,KAAK26F,gBAAkBN,EAMvBr6F,KAAK46F,kBAAoBN,GAAsCpuF,EAM/DlM,KAAK66F,aAAe,GAMpB76F,KAAK86F,qBAAuB,KAM5B96F,KAAK+6F,SAAW,EAMhB/6F,KAAKg7F,YAAcpuE,EAAW9Q,WAC1B8Q,EAAW/Q,iBACXrV,EAEJ,MAAM6mF,EAAegN,EAAenI,mBAClClyF,KAAK46F,mBAEDK,EAAkBj7F,KAAK26F,gBAAgB9+E,YAC7C,IAAIk7E,EAAkB/2F,KAAK06F,gBAAgB7+E,YAE3C,MAAMq/E,EAAsBD,EACxB7gF,GAAgBizE,EAAc4N,GAC9B5N,EAEJ,GAAqC,IAAjC70E,GAAQ0iF,GAIV,YADAl7F,KAAKmM,MAAQV,GAIf,MAAM0vF,EAAmBvuE,EAAW/Q,YAChCs/E,IAIApE,EAHGA,EAGe38E,GAAgB28E,EAAiBoE,GAFjCA,GAMtB,MAAM/sD,EAAmBisD,EAAep9D,cACtCj9B,KAAK46F,kBAAkB,IAGnBzsD,EAAmBi/C,GACvBxgE,EACAqgE,EACAiO,EACA9sD,GAGF,IAAKjyB,SAASgyB,IAAqBA,GAAoB,EAIrD,YADAnuC,KAAKmM,MAAQV,GAIf,MAAM2vF,OACe50F,IAAnBwwF,EAA+BA,EAAiBkD,GAelD,GATAl6F,KAAKq7F,eAAiB,IAAIvE,GACxBlqE,EACAqgE,EACAiO,EACAnE,EACA5oD,EAAmBitD,EACnBhtD,GAGgD,IAA9CpuC,KAAKq7F,eAAe7M,eAAe3tF,OAGrC,YADAb,KAAKmM,MAAQV,GAIfzL,KAAK+6F,SAAWX,EAAepH,kBAAkB7kD,GACjD,IAAInf,EAAehvB,KAAKq7F,eAAepB,wBAmBvC,GAjBIlD,IACEnqE,EAAW9Q,YACbkT,EAAa,GAAK5S,GAChB4S,EAAa,GACb+nE,EAAgB,GAChBA,EAAgB,IAElB/nE,EAAa,GAAK5S,GAChB4S,EAAa,GACb+nE,EAAgB,GAChBA,EAAgB,KAGlB/nE,EAAe5U,GAAgB4U,EAAc+nE,IAI5Cv+E,GAAQwW,GAEN,CACL,IAAIjT,EAAa,EACbuG,EAAa,EACbsK,EAAW9Q,aACbC,EAAarD,GAASyiF,GACtB74E,EAAa1W,KAAKoQ,OACfgT,EAAa,GAAKmsE,EAAiB,IAAMp/E,IAIxBE,GACpB+S,EAAaxrB,QACbopB,GACA,GAEY9hB,SAAS2K,IACrB,MAAM6lF,EAAclB,EAAezI,0BACjCl8E,EACAzV,KAAK+6F,UAGP,IAAK,IAAIQ,EAAOD,EAAY5kF,KAAM6kF,GAAQD,EAAY1kF,KAAM2kF,IAC1D,IAAK,IAAIC,EAAOF,EAAY3kF,KAAM6kF,GAAQF,EAAYzkF,KAAM2kF,IAAQ,CAClE,MAAMn0D,EAAOkzD,EAAgBv6F,KAAK+6F,SAAUQ,EAAMC,EAAM7+D,GACxD,GAAI0K,EAAM,CACR,MAAMhwB,EAASiL,EAAavG,EAC5B/b,KAAK66F,aAAal1F,KAAK,CAAC0hC,OAAMhwB,UAC5C,CACA,GAEUiL,CAAU,IAGmB,IAA7BtiB,KAAK66F,aAAah6F,SACpBb,KAAKmM,MAAQV,EAErB,MArCMzL,KAAKmM,MAAQV,CAsCnB,CAME,QAAAsxB,GACE,OAAO/8B,KAAKs+B,OAChB,CAKE,UAAAm9D,GACE,MAAMlO,EAAU,GAqBhB,GApBAvtF,KAAK66F,aAAa/vF,SAASf,IACzB,MAAMs9B,EAAOt9B,EAAOs9B,KACpB,GAAIA,GAAQA,EAAKz6B,YAAcnB,EAAkB,CAC/C,MAAMgK,EAASzV,KAAK06F,gBAAgBxI,mBAAmB7qD,EAAKn7B,WAC5DuJ,EAAO,IAAM1L,EAAOsN,OACpB5B,EAAO,IAAM1L,EAAOsN,OACpB,MAAMs2E,EAAa3tF,KAAKg7F,aAAax3F,QACjCmqF,IACFA,EAAW,IAAM5jF,EAAOsN,OACxBs2E,EAAW,IAAM5jF,EAAOsN,QAE1Bk2E,EAAQ5nF,KAAK,CACX8P,OAAQA,EACRk4E,WAAYA,EACZt7E,MAAOg1B,EAAKtK,YAEtB,KAEI/8B,KAAK66F,aAAah6F,OAAS,EAEJ,IAAnB0sF,EAAQ1sF,OACVb,KAAKmM,MAAQV,MACR,CACL,MAAMq+B,EAAI9pC,KAAK46F,kBAAkB,GAC3B5nF,EAAOhT,KAAK26F,gBAAgBhI,YAAY7oD,GACxCh7B,EAAwB,iBAATkE,EAAoBA,EAAOA,EAAK,GAC/CjE,EAAyB,iBAATiE,EAAoBA,EAAOA,EAAK,GAChDo7B,EAAmBpuC,KAAK26F,gBAAgB19D,cAAc6M,GACtDqE,EAAmBnuC,KAAK06F,gBAAgBz9D,cAC5Cj9B,KAAK+6F,UAGD1N,EAAertF,KAAK26F,gBAAgBzI,mBACxClyF,KAAK46F,mBAGP56F,KAAKs+B,QAAUo9D,GACb5sF,EACAC,EACA/O,KAAK68B,YACLsR,EACAnuC,KAAK06F,gBAAgB7+E,YACrBuyB,EACAi/C,EACArtF,KAAKq7F,eACL9N,EACAvtF,KAAKy6F,QACLz6F,KAAKw6F,aACLx6F,KAAKuM,aAGPvM,KAAKmM,MAAQV,CACnB,CACIzL,KAAK4H,SACT,CAME,IAAAiF,GACE,GAAI7M,KAAKmM,OAASV,EAAgB,CAChCzL,KAAKmM,MAAQV,EACbzL,KAAK4H,UAEL,IAAI+zF,EAAa,EAEjB37F,KAAK86F,qBAAuB,GAC5B96F,KAAK66F,aAAa/vF,SAAQ,EAAEu8B,WAC1B,MAAMl7B,EAAQk7B,EAAKz6B,WACnB,GAAIT,GAASV,GAAkBU,GAASV,EAAmB,CACzDkwF,IAEA,MAAMC,EAAkB90F,EAAOugC,EAAMxnC,GAAmBowB,IACtD,MAAM9jB,EAAQk7B,EAAKz6B,WAEjBT,GAASV,GACTU,GAASV,GACTU,GAASV,IAETpE,EAAcu0F,GACdD,IACmB,IAAfA,IACF37F,KAAK67F,mBACL77F,KAAKy7F,cAErB,IAEUz7F,KAAK86F,qBAAqBn1F,KAAKi2F,EACzC,KAGyB,IAAfD,EACFj4D,WAAW1jC,KAAKy7F,WAAWv0F,KAAKlH,MAAO,GAEvCA,KAAK66F,aAAa/vF,SAAQ,UAAUu8B,KAACA,GAAO9lC,EAAGJ,GAC/BkmC,EAAKz6B,YACNnB,GACX47B,EAAKx6B,MAEjB,GAEA,CACA,CAKE,gBAAAgvF,GACE77F,KAAK86F,qBAAqBhwF,QAAQzD,GAClCrH,KAAK86F,qBAAuB,IAChC,CAME,OAAAtuF,GACMxM,KAAKs+B,UACP7uB,GAAczP,KAAKs+B,QAAQhvB,WAAW,OACtCN,GAAWrJ,KAAK3F,KAAKs+B,SACrBt+B,KAAKs+B,QAAU,MAEjBr5B,MAAMuH,SACV,EC7VA,MAAMsvF,WAAejzF,EAInB,WAAA9I,CAAYuK,GACVrF,QAMAjF,KAAK2b,WAAa2X,GAAchpB,EAAQqR,YAMxC3b,KAAK+3C,cAAgBgkD,GAAkBzxF,EAAQ0tC,cAM/Ch4C,KAAKg8F,yBAA2B1xF,EAAQ2xF,0BAA2B,EAOnEj8F,KAAKwjE,SAAU,EAMfxjE,KAAK4mD,YAA2BpgD,IAAlB8D,EAAQ6B,MAAsB7B,EAAQ6B,MAAQ,QAM5DnM,KAAKk8F,YAA2B11F,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,MAMpD1b,KAAKm8F,eAAiB7xF,EAAQiC,YAM9BvM,KAAKo8F,aAAe,KAMpBp8F,KAAKq8F,aAAe,KAEpB,MAAMluF,EAAOnO,KAKbA,KAAKs8F,aAAe,IAAIr4F,SAAQ,SAAUE,EAASD,GACjDiK,EAAKiuF,aAAej4F,EACpBgK,EAAKkuF,aAAen4F,CAC1B,GACA,CAOE,eAAAu1C,GACE,OAAOz5C,KAAK+3C,aAChB,CAME,0BAAA6B,GACE,OAAO55C,KAAKg8F,wBAChB,CAOE,aAAA1oE,GACE,OAAOtzB,KAAK2b,UAChB,CAME,cAAA01B,CAAe11B,GACb,OAAO,IACX,CAKE,OAAA0/B,GACE,OAAOr7C,KAAKs8F,YAChB,CAOE,QAAA1vF,GACE,OAAO5M,KAAK4mD,MAChB,CAKE,QAAA+uB,GACE,OAAO31E,KAAKk8F,MAChB,CAKE,cAAAK,GACE,OAAOv8F,KAAKm8F,YAChB,CAME,OAAAK,GACEx8F,KAAK4H,SACT,CASE,eAAA60F,CAAgBzkD,GACdh4C,KAAK+3C,cAAgBgkD,GAAkB/jD,GACvCh4C,KAAK4H,SACT,CAME,QAAA6E,CAASN,GACPnM,KAAK4mD,OAASz6C,EACdnM,KAAK4H,SACT,EAQA,SAASm0F,GAAkBW,GACzB,OAAKA,EAG0B,mBAApBA,EACFA,GAEJ16F,MAAMC,QAAQy6F,KACjBA,EAAkB,CAACA,IAEbh8D,GAAeg8D,GARd,IASX,CCxLA,MAAMC,WAAmBb,GAIvB,WAAA/7F,CAAYuK,GACVrF,MAAM,CACJ+yC,aAAc1tC,EAAQ0tC,aACtBikD,wBAAyB3xF,EAAQ2xF,wBACjCtgF,WAAYrR,EAAQqR,WACpBxP,MAAO7B,EAAQ6B,MACfuP,MAAOpR,EAAQoR,MACfnP,YAAajC,EAAQiC,cAMvBvM,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAK48F,qBACwBp2F,IAA3B8D,EAAQuyF,eAA+BvyF,EAAQuyF,eAAiB,EAMlE78F,KAAKukB,cAAgC/d,IAArB8D,EAAQia,SAAyBja,EAAQia,SAAW,KAEpE,MAAM8sE,EAAW,CAAC,IAAK,KACnBrxF,KAAKukB,UACPytC,GAAOhyD,KAAKukB,SAASouE,YAAY3yF,KAAKukB,SAASysB,cAAeqgD,GAOhErxF,KAAK88F,QAAU,CAAC,EAAG,GAMnB98F,KAAKgwF,KAAO1lF,EAAQhD,KAAOiB,EAAOvI,MAMlCA,KAAK+8F,YAAc,CACjB1wF,WAAY/B,EAAQ+B,WACpBE,YAAajC,EAAQiC,aAUvBvM,KAAKg9F,WAAa1yF,EAAQ0yF,WAAa1yF,EAAQ0yF,WAAa,CAChE,CAME,sBAAAC,CAAuBthF,GACrB,OAAO,CACX,CAME,MAAAjP,GACE,OAAO1M,KAAKgwF,IAChB,CAOE,MAAAkN,CAAO51F,GACDtH,KAAKgwF,OAAS1oF,IAChBtH,KAAKgwF,KAAO1oF,EACZtH,KAAK4H,UAEX,CAOE,cAAAypC,CAAe11B,GACb,MAAM4I,EAAW5I,EACb3b,KAAKm9F,yBAAyBxhF,GAC9B3b,KAAKukB,SACT,OAAKA,EAGEA,EAAS8sB,iBAFP,IAGb,CAWE,OAAA+rD,CAAQtzD,EAAG/zB,EAAGC,EAAG2mB,EAAYhhB,GAC3B,OAAOvT,GACX,CAOE,WAAAi1F,GACE,OAAOr9F,KAAKukB,QAChB,CAME,wBAAA44E,CAAyBxhF,GACvB,OAAK3b,KAAKukB,SAGHvkB,KAAKukB,SAFH44E,GAAyBxhF,EAGtC,CASE,iBAAA2hF,CAAkB3gE,GAChB,OAAO38B,KAAK48F,eAChB,CAQE,gBAAAW,CAAiBzzD,EAAGnN,EAAYhhB,GAC9B,MAAM4I,EAAWvkB,KAAKm9F,yBAAyBxhF,GACzCkhF,EAAiB78F,KAAKs9F,kBAAkB3gE,GACxC00D,EAAWr/B,GAAOztC,EAASouE,YAAY7oD,GAAI9pC,KAAK88F,SACtD,OAAsB,GAAlBD,EACKxL,EAEFmM,GAAUnM,EAAUwL,EAAgB78F,KAAK88F,QACpD,CAWE,8BAAAW,CAA+BvxF,EAAWyP,GACxC,MAAM+hF,OACWl3F,IAAfmV,EAA2BA,EAAa3b,KAAKszB,gBACzC/O,OACW/d,IAAfmV,EACI3b,KAAKm9F,yBAAyBO,GAC9B19F,KAAKukB,UAAYvkB,KAAKm9F,yBAAyBO,GAIrD,OAHI19F,KAAK21E,YAAc+nB,EAAev5E,aACpCjY,EAAYwP,GAAM6I,EAAUrY,EAAWwxF,IAElC/M,GAAiBzkF,EAAWqY,GAAYrY,EAAY,IAC/D,CAME,KAAA7H,GAAQ,CAKR,OAAAm4F,GACEx8F,KAAKqE,QACLY,MAAMu3F,SACV,EAQO,MAAMmB,WAAwB53F,EAKnC,WAAAhG,CAAY2E,EAAM2iC,GAChBpiC,MAAMP,GAON1E,KAAKqnC,KAAOA,CAChB,ECvRe,IAAAu2D,GAME,gBANFA,GAcA,cAdAA,GAuBE,gBCOjB,MAAMC,WAAgBlB,GAIpB,WAAA58F,CAAYuK,GACVrF,MAAM,CACJ+yC,aAAc1tC,EAAQ0tC,aACtBuZ,UAAWjnD,EAAQinD,UACnB51C,WAAYrR,EAAQqR,WACpBxP,MAAO7B,EAAQ6B,MACfoY,SAAUja,EAAQia,SAClBs4E,eAAgBvyF,EAAQuyF,eACxBnhF,MAAOpR,EAAQoR,MACfrP,WAAY/B,EAAQ+B,WACpBE,YAAajC,EAAQiC,YACrBjF,IAAKgD,EAAQhD,IACb20F,wBAAyB3xF,EAAQ2xF,wBACjCe,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAK89F,yBACH99F,KAAK+9F,kBAAoBF,GAAQt6F,UAAUw6F,gBAM7C/9F,KAAK0+B,iBAAmBp0B,EAAQo0B,iBAE5Bp0B,EAAQyzF,kBACV/9F,KAAK+9F,gBAAkBzzF,EAAQyzF,iBAOjC/9F,KAAK+1F,KAAO,KAERzrF,EAAQyrF,KACV/1F,KAAKg+F,QAAQ1zF,EAAQyrF,MACZzrF,EAAQu2E,KACjB7gF,KAAKi+F,OAAO3zF,EAAQu2E,KAOtB7gF,KAAKk+F,iBAAmB,CAAE,CAC9B,CAQE,mBAAAC,GACE,OAAOn+F,KAAK0+B,gBAChB,CAQE,kBAAA0/D,GACE,OAAO13F,OAAO23F,eAAer+F,MAAM+9F,kBAAoB/9F,KAAK+9F,gBACxD/9F,KAAK+9F,gBAAgB72F,KAAKlH,MAC1BA,KAAK+9F,eACb,CAUE,OAAAO,GACE,OAAOt+F,KAAK+1F,IAChB,CAOE,gBAAAhvD,CAAiBlhC,GACf,MAAMwhC,EAAoDxhC,EAAY,OAChE04F,EAAMh2F,EAAO8+B,GACbm3D,EAAYn3D,EAAKz6B,WACvB,IAAIlI,EACA85F,GAAa/yF,GACfzL,KAAKk+F,iBAAiBK,IAAO,EAC7B75F,EAAOk5F,IACEW,KAAOv+F,KAAKk+F,0BACdl+F,KAAKk+F,iBAAiBK,GAC7B75F,EACE85F,GAAa/yF,EACTmyF,GACAY,GAAa/yF,EACXmyF,QACAp3F,GAEEA,MAAR9B,GACF1E,KAAK4F,cAAc,IAAI+3F,GAAgBj5F,EAAM2iC,GAEnD,CAQE,mBAAAo3D,CAAoB//D,GAClB1+B,KAAK0+B,iBAAmBA,EACxB1+B,KAAK4H,SACT,CASE,kBAAA82F,CAAmBX,EAAiBz2F,GAClCtH,KAAK+9F,gBAAkBA,OACJ,IAARz2F,EACTtH,KAAKk9F,OAAO51F,GAEZtH,KAAK4H,SAEX,CAOE,MAAAq2F,CAAOpd,GACL,MAAMkV,EAAOC,GAAUnV,GACvB7gF,KAAK+1F,KAAOA,EACZ/1F,KAAKg+F,QAAQjI,EACjB,CAQE,OAAAiI,CAAQjI,GACN/1F,KAAK+1F,KAAOA,EACZ,MAAMzuF,EAAMyuF,EAAKj2E,KAAK,MAClB9f,KAAK89F,yBACP99F,KAAK0+F,mBAAmBlI,GAAoBT,EAAM/1F,KAAKukB,UAAWjd,GAElEtH,KAAKk9F,OAAO51F,EAElB,CAQE,eAAAy2F,CAAgB7xF,EAAWywB,EAAYhhB,GAEzC,ECzJA,MAAMgjF,WAAkBd,GAItB,WAAA99F,CAAYuK,GACVrF,MAAM,CACJ+yC,aAAc1tC,EAAQ0tC,aACtBuZ,UAAWjnD,EAAQinD,UACnB51C,WAAYrR,EAAQqR,WACpBxP,MAAO7B,EAAQ6B,MACfoY,SAAUja,EAAQia,SAClBma,iBAAkBp0B,EAAQo0B,iBACtBp0B,EAAQo0B,iBACRkgE,GACJ/B,eAAgBvyF,EAAQuyF,eACxBkB,gBAAiBzzF,EAAQyzF,gBACzBld,IAAKv2E,EAAQu2E,IACbkV,KAAMzrF,EAAQyrF,KACdr6E,MAAOpR,EAAQoR,MACfrP,WAAY/B,EAAQ+B,WACpBE,iBAC0B/F,IAAxB8D,EAAQiC,aAA4BjC,EAAQiC,YAC9CjF,IAAKgD,EAAQhD,IACb20F,wBAAyB3xF,EAAQ2xF,wBACjCe,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAKy+B,iBACqBj4B,IAAxB8D,EAAQm0B,YAA4Bn0B,EAAQm0B,YAAc,KAM5Dz+B,KAAK6+F,eACmBr4F,IAAtB8D,EAAQu0F,UAA0Bv0F,EAAQu0F,UAAYrgE,GAMxDx+B,KAAK8+F,sBAAwB,CAAE,EAM/B9+F,KAAK++F,4BAA8Bz0F,EAAQ00F,2BAM3Ch/F,KAAKi/F,0BAA2B,CACpC,CAOE,sBAAAhC,CAAuBthF,GACrB,OACE3b,KAAKszB,iBACL3X,IACCsR,GAAWjtB,KAAKszB,gBAAiB3X,GAE3B,EAEF3b,KAAKk/F,WAChB,CAKE,SAAAA,GACE,OAAO,CACX,CAOE,MAAAxyF,GACE,IAAIpF,EAAMrC,MAAMyH,SAIhB,OAHK1M,KAAKu8F,mBACRj1F,GAAO,0BAEFA,CACX,CAOE,wBAAA61F,CAAyBxhF,GACvB,MAAMwjF,EAAWn/F,KAAKszB,gBACtB,GAAItzB,KAAKukB,YAAc46E,GAAYlyE,GAAWkyE,EAAUxjF,IACtD,OAAO3b,KAAKukB,SAEd,MAAM66E,EAAU72F,EAAOoT,GAKvB,OAJMyjF,KAAWp/F,KAAK8+F,wBACpB9+F,KAAK8+F,sBAAsBM,GACzBjC,GAAyBxhF,IAEtB3b,KAAK8+F,sBAAsBM,EACtC,CAYE,WAAAC,CAAYv1D,EAAG/zB,EAAGC,EAAG2mB,EAAYhhB,EAAYrU,GAC3C,MAAM4E,EAAY,CAAC49B,EAAG/zB,EAAGC,GACnBspF,EAAet/F,KAAKy9F,+BACxBvxF,EACAyP,GAEI4jF,EAAUD,EACZt/F,KAAK+9F,gBAAgBuB,EAAc3iE,EAAYhhB,QAC/CnV,EACE6gC,EAAO,IAAIrnC,KAAK6+F,UACpB3yF,OACY1F,IAAZ+4F,EAAwB9zF,EAAiBA,OAC7BjF,IAAZ+4F,EAAwBA,EAAU,GAClCv/F,KAAKy+B,YACLz+B,KAAK0+B,iBACL1+B,KAAK+8F,aAIP,OAFA11D,EAAK//B,IAAMA,EACX+/B,EAAK/hC,iBAAiBzF,EAAkBG,KAAK+mC,iBAAiB7/B,KAAKlH,OAC5DqnC,CACX,CAWE,OAAA+1D,CAAQtzD,EAAG/zB,EAAGC,EAAG2mB,EAAYhhB,GAC3B,MAAMyS,EAAmBpuB,KAAKszB,gBAC9B,IACGlF,IACAzS,GACDsR,GAAWmB,EAAkBzS,GAE7B,OAAO3b,KAAKw/F,gBACV11D,EACA/zB,EACAC,EACA2mB,EACAvO,GAAoBzS,GAGxB,MAAMzP,EAAY,CAAC49B,EAAG/zB,EAAGC,GACnB1O,EAAMtH,KAAK0M,SACX0tF,EAAiBp6F,KAAKm9F,yBAAyB/uE,GAC/CisE,EAAiBr6F,KAAKm9F,yBAAyBxhF,GAC/C2+E,EAAmBt6F,KAAKy9F,+BAC5BvxF,EACAyP,GAEI0rB,EAAO,IAAI8yD,GACf/rE,EACAgsE,EACAz+E,EACA0+E,EACAnuF,EACAouF,EACAt6F,KAAKs9F,kBAAkB3gE,GACvB38B,KAAKk/F,aACL,CAACp1D,EAAG/zB,EAAGC,EAAG2mB,IACR38B,KAAKw/F,gBAAgB11D,EAAG/zB,EAAGC,EAAG2mB,EAAYvO,IAC5CpuB,KAAK++F,4BACL/+F,KAAKi/F,yBACLj/F,KAAK+8F,aAGP,OADA11D,EAAK//B,IAAMA,EACJ+/B,CACX,CAWE,eAAAm4D,CAAgB11D,EAAG/zB,EAAGC,EAAG2mB,EAAYhhB,GACnC,MAAMrU,EAAMtH,KAAK0M,SACjB,OAAO1M,KAAKq/F,YAAYv1D,EAAG/zB,EAAGC,EAAG2mB,EAAYhhB,EAAYrU,EAC7D,CAOE,0BAAAm4F,CAA2BzoD,GACrBh3C,KAAKi/F,0BAA4BjoD,IAGrCh3C,KAAKi/F,yBAA2BjoD,EAChCh3C,KAAK4H,UACT,CAcE,wBAAA83F,CAAyB/jF,EAAYgkF,GACnC,MAAMC,EAAOtsE,GAAc3X,GAC3B,GAAIikF,EAAM,CACR,MAAMR,EAAU72F,EAAOq3F,GACjBR,KAAWp/F,KAAK8+F,wBACpB9+F,KAAK8+F,sBAAsBM,GAAWO,EAE9C,CACA,EAOA,SAASf,GAAwBiB,EAAW9hE,GACQ8hE,EAAU9iE,WAAYgB,IACtEA,CACJ,CC9SO,SAAS+hE,GAAQ5zF,GACtB,MAAM49B,EAAI59B,EAAU,GACd6zF,EAAS,IAAI/9F,MAAM8nC,GACzB,IACIvoC,EAAG80F,EADH2J,EAAO,GAAMl2D,EAAI,EAErB,IAAKvoC,EAAI,EAAGA,EAAIuoC,IAAKvoC,EAEnB80F,EAAW,GACPnqF,EAAU,GAAK8zF,IACjB3J,GAAY,GAEVnqF,EAAU,GAAK8zF,IACjB3J,GAAY,GAEd0J,EAAOx+F,GAAKmH,OAAO4tF,aAAaD,GAChC2J,IAAS,EAEX,OAAOD,EAAOjgF,KAAK,GACrB,CCuCA,MAAMmgF,WAAYtB,GAIhB,WAAA5+F,CAAYuK,GAGV,MAAMqR,OACmBnV,KAHzB8D,EAAUA,GAAW,CAAE,GAGbqR,WAA2BrR,EAAQqR,WAAa,YAEpD4I,OACiB/d,IAArB8D,EAAQia,SACJja,EAAQia,SACRwwE,GAAU,CACRt/E,OAAQm/E,GAAqBj5E,GAC7B4tB,cAAej/B,EAAQi/B,cACvBwH,QAASzmC,EAAQymC,QACjB9E,QAAS3hC,EAAQ2hC,QACjBolD,SAAU/mF,EAAQ+mF,WAG1BpsF,MAAM,CACJ+yC,aAAc1tC,EAAQ0tC,aACtBuZ,UAAWjnD,EAAQinD,UACnB9yB,YAAan0B,EAAQm0B,YACrBlyB,YAAajC,EAAQiC,YACrBoP,WAAYA,EACZqjF,2BAA4B10F,EAAQ00F,2BACpCz6E,SAAUA,EACVma,iBAAkBp0B,EAAQo0B,iBAC1Bm+D,eAAgBvyF,EAAQuyF,eACxBkB,gBAAiBzzF,EAAQyzF,gBACzBld,IAAKv2E,EAAQu2E,IACbkV,KAAMzrF,EAAQyrF,KACdr6E,WAAyBlV,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,MAC7CrP,WAAY/B,EAAQ+B,WACpB4vF,wBAAyB3xF,EAAQ2xF,wBACjCe,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAKy6F,aAA6Bj0F,IAAnB8D,EAAQkjF,OAAuBljF,EAAQkjF,OAAS,CACnE,CAME,SAAA0R,GACE,OAAOl/F,KAAKy6F,OAChB,ECjHO,SAASrlE,GAAahe,EAAiBC,EAAQge,EAAO/d,GAC3D,MAAMihB,EAAc,GACpB,IAAI9iB,EvIsLG,CAACsB,IAAUA,KAAU,KAAW,KuIrLvC,IAAK,IAAIxV,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GACnBkU,EAAS0B,GACPC,EACAC,EACA8d,EAAK,GACL7d,GAEFihB,EAAY5yB,MAAM8P,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GACxE4B,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CACE,OAAO03B,CACT,CCXO,SAAS2nE,GACd9oF,EACAC,EACA1V,EACA2V,EACA23B,EACAp5B,EACA8P,GAEA,IAAIw6E,EAAGx0F,EACP,MAAMrK,GAAKK,EAAM0V,GAAUC,EAC3B,GAAU,IAANhW,EACF6+F,EAAI9oF,OACC,GAAU,IAAN/V,EACT6+F,EAAI9oF,EACJ1L,EAAIsjC,OACC,GAAU,IAAN3tC,EAAS,CAClB,IAAI+X,EAAKjC,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAC9BxW,EAAS,EACb,MAAMu/F,EAAoB,CAAC,GAC3B,IAAK,IAAI7+F,EAAI8V,EAASC,EAAQ/V,EAAII,EAAKJ,GAAK+V,EAAQ,CAClD,MAAMiC,EAAKnC,EAAgB7V,GACrBiY,EAAKpC,EAAgB7V,EAAI,GAC/BV,GAAU+K,KAAK6S,MAAMlF,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9D8mF,EAAkBz6F,KAAK9E,GACvBwY,EAAKE,EACLD,EAAKE,CACX,CACI,MAAMpY,EAAS6tC,EAAWpuC,EACpB+B,EAAQxC,EAAaggG,EAAmBh/F,GAC1CwB,EAAQ,GACV+I,GACGvK,EAASg/F,GAAmBx9F,EAAQ,KACpCw9F,GAAmBx9F,EAAQ,GAAKw9F,GAAmBx9F,EAAQ,IAC9Du9F,EAAI9oF,IAAWzU,EAAQ,GAAK0U,GAE5B6oF,EAAI9oF,EAASzU,EAAQ0U,CAE3B,CACEqO,EAAYA,EAAY,EAAIA,EAAY,EACxC9P,EAAOA,GAAc,IAAI7T,MAAM2jB,GAC/B,IAAK,IAAIpkB,EAAI,EAAGA,EAAIokB,IAAapkB,EAC/BsU,EAAKtU,QACGiF,IAAN25F,EACInuE,SACMxrB,IAANmF,EACEyL,EAAgB+oF,EAAI5+F,GACpBgc,GAAKnG,EAAgB+oF,EAAI5+F,GAAI6V,EAAgB+oF,EAAI7oF,EAAS/V,GAAIoK,GAExE,OAAOkK,CACT,CAWO,SAASwqF,GACdjpF,EACAC,EACA1V,EACA2V,EACA0F,EACAsjF,GAEA,GAAI3+F,GAAO0V,EACT,OAAO,KAET,IAAIjB,EACJ,GAAI4G,EAAI5F,EAAgBC,EAASC,EAAS,GACxC,OAAIgpF,GACFlqF,EAAagB,EAAgB5T,MAAM6T,EAAQA,EAASC,GACpDlB,EAAWkB,EAAS,GAAK0F,EAClB5G,GAEF,KAET,GAAIgB,EAAgBzV,EAAM,GAAKqb,EAC7B,OAAIsjF,GACFlqF,EAAagB,EAAgB5T,MAAM7B,EAAM2V,EAAQ3V,GACjDyU,EAAWkB,EAAS,GAAK0F,EAClB5G,GAEF,KAGT,GAAI4G,GAAK5F,EAAgBC,EAASC,EAAS,GACzC,OAAOF,EAAgB5T,MAAM6T,EAAQA,EAASC,GAEhD,IAAIipF,EAAKlpF,EAASC,EACdkpF,EAAK7+F,EAAM2V,EACf,KAAOipF,EAAKC,GAAI,CACd,MAAMhgG,EAAO+/F,EAAKC,GAAO,EACrBxjF,EAAI5F,GAAiB5W,EAAM,GAAK8W,EAAS,GAC3CkpF,EAAKhgG,EAEL+/F,EAAK//F,EAAM,CAEjB,CACE,MAAMigG,EAAKrpF,EAAgBmpF,EAAKjpF,EAAS,GACzC,GAAI0F,GAAKyjF,EACP,OAAOrpF,EAAgB5T,OAAO+8F,EAAK,GAAKjpF,GAASipF,EAAK,GAAKjpF,EAASA,GAEtE,MACM3L,GAAKqR,EAAIyjF,IADJrpF,GAAiBmpF,EAAK,GAAKjpF,EAAS,GACpBmpF,GAC3BrqF,EAAa,GACb,IAAK,IAAI7U,EAAI,EAAGA,EAAI+V,EAAS,IAAK/V,EAChC6U,EAAWzQ,KACT4X,GACEnG,GAAiBmpF,EAAK,GAAKjpF,EAAS/V,GACpC6V,EAAgBmpF,EAAKjpF,EAAS/V,GAC9BoK,IAKN,OADAyK,EAAWzQ,KAAKqX,GACT5G,CACT,CAYO,SAASsqF,GACdtpF,EACAC,EACA8d,EACA7d,EACA0F,EACAsjF,EACA/zF,GAEA,GAAIA,EACF,OAAO8zF,GACLjpF,EACAC,EACA8d,EAAKA,EAAKt0B,OAAS,GACnByW,EACA0F,EACAsjF,GAGJ,IAAIlqF,EACJ,GAAI4G,EAAI5F,EAAgBE,EAAS,GAC/B,OAAIgpF,GACFlqF,EAAagB,EAAgB5T,MAAM,EAAG8T,GACtClB,EAAWkB,EAAS,GAAK0F,EAClB5G,GAEF,KAET,GAAIgB,EAAgBA,EAAgBvW,OAAS,GAAKmc,EAChD,OAAIsjF,GACFlqF,EAAagB,EAAgB5T,MAAM4T,EAAgBvW,OAASyW,GAC5DlB,EAAWkB,EAAS,GAAK0F,EAClB5G,GAEF,KAET,IAAK,IAAI7U,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACjB,GAAI8V,GAAU1V,EAAd,CAGA,GAAIqb,EAAI5F,EAAgBC,EAASC,EAAS,GACxC,OAAO,KAET,GAAI0F,GAAK5F,EAAgBzV,EAAM,GAC7B,OAAO0+F,GACLjpF,EACAC,EACA1V,EACA2V,EACA0F,GACA,GAGJ3F,EAAS1V,CAdb,CAeA,CACE,OAAO,IACT,CCjMA,MAAMowE,WAAel+C,GAQnB,WAAA9zB,CAAYiZ,EAAQmF,EAAQ2V,GAC1B7uB,aACeuB,IAAXstB,QAAmCttB,IAAX2X,EAC1Bne,KAAKu0B,mBAAmBT,EAAQ9a,IAEhCmF,EAASA,GAAkB,EAC3Bne,KAAK2gG,mBAAmB3nF,EAAQmF,EAAQ2V,GAE9C,CAQE,KAAArf,GACE,MAAMgM,EAAS,IAAIsxD,GACjB/xE,KAAKoX,gBAAgB5T,aACrBgD,EACAxG,KAAK8zB,QAGP,OADArT,EAAO3W,gBAAgB9J,MAChBygB,CACX,CAUE,cAAAiS,CAAe3c,EAAGC,EAAG2c,EAAcC,GACjC,MAAMxb,EAAkBpX,KAAKoX,gBACvBnB,EAAKF,EAAIqB,EAAgB,GACzBlB,EAAKF,EAAIoB,EAAgB,GACzBkF,EAAkBrG,EAAKA,EAAKC,EAAKA,EACvC,GAAIoG,EAAkBsW,EAAoB,CACxC,GAAwB,IAApBtW,EACF,IAAK,IAAI/a,EAAI,EAAGA,EAAIvB,KAAKsX,SAAU/V,EACjCoxB,EAAapxB,GAAK6V,EAAgB7V,OAE/B,CACL,MAAM2L,EAAQlN,KAAK0gB,YAAc9U,KAAK6S,KAAKnC,GAC3CqW,EAAa,GAAKvb,EAAgB,GAAKlK,EAAQ+I,EAC/C0c,EAAa,GAAKvb,EAAgB,GAAKlK,EAAQgJ,EAC/C,IAAK,IAAI3U,EAAI,EAAGA,EAAIvB,KAAKsX,SAAU/V,EACjCoxB,EAAapxB,GAAK6V,EAAgB7V,EAE5C,CAEM,OADAoxB,EAAa9xB,OAASb,KAAKsX,OACpBgF,CACb,CACI,OAAOsW,CACX,CAQE,UAAAvc,CAAWN,EAAGC,GACZ,MAAMoB,EAAkBpX,KAAKoX,gBACvBnB,EAAKF,EAAIqB,EAAgB,GACzBlB,EAAKF,EAAIoB,EAAgB,GAC/B,OAAOnB,EAAKA,EAAKC,EAAKA,GAAMlW,KAAK4gG,mBACrC,CAOE,SAAAhoF,GACE,OAAO5Y,KAAKoX,gBAAgB5T,MAAM,EAAGxD,KAAKsX,OAC9C,CAQE,aAAA2b,CAAcxd,GACZ,MAAM2B,EAAkBpX,KAAKoX,gBACvB+G,EAAS/G,EAAgBpX,KAAKsX,QAAUF,EAAgB,GAC9D,OAAOJ,GACLI,EAAgB,GAAK+G,EACrB/G,EAAgB,GAAK+G,EACrB/G,EAAgB,GAAK+G,EACrB/G,EAAgB,GAAK+G,EACrB1I,EAEN,CAOE,SAAAiL,GACE,OAAO9U,KAAK6S,KAAKze,KAAK4gG,oBAC1B,CAME,iBAAAA,GACE,MAAM3qF,EAAKjW,KAAKoX,gBAAgBpX,KAAKsX,QAAUtX,KAAKoX,gBAAgB,GAC9DlB,EAAKlW,KAAKoX,gBAAgBpX,KAAKsX,OAAS,GAAKtX,KAAKoX,gBAAgB,GACxE,OAAOnB,EAAKA,EAAKC,EAAKA,CAC1B,CAQE,OAAAkd,GACE,MAAO,QACX,CASE,gBAAAC,CAAiB5d,GAEf,GAAI6E,GAAW7E,EADMzV,KAAK6b,aACY,CACpC,MAAM7C,EAAShZ,KAAK4Y,YAEpB,OAAInD,EAAO,IAAMuD,EAAO,IAAMvD,EAAO,IAAMuD,EAAO,KAG9CvD,EAAO,IAAMuD,EAAO,IAAMvD,EAAO,IAAMuD,EAAO,IAI3Cf,GAAcxC,EAAQzV,KAAKgzB,qBAAqB9rB,KAAKlH,OAClE,CACI,OAAO,CACX,CAOE,SAAA4zC,CAAU56B,GACR,MAAM1B,EAAStX,KAAKsX,OACd6G,EAASne,KAAKoX,gBAAgBE,GAAUtX,KAAKoX,gBAAgB,GAC7DA,EAAkB4B,EAAOxV,QAC/B4T,EAAgBE,GAAUF,EAAgB,GAAK+G,EAC/C,IAAK,IAAI5c,EAAI,EAAGA,EAAI+V,IAAU/V,EAC5B6V,EAAgBE,EAAS/V,GAAKyX,EAAOzX,GAEvCvB,KAAKu0B,mBAAmBv0B,KAAK8zB,OAAQ1c,GACrCpX,KAAK4H,SACT,CAUE,kBAAA+4F,CAAmB3nF,EAAQmF,EAAQ2V,GACjC9zB,KAAK00B,UAAUZ,EAAQ9a,EAAQ,GAC1BhZ,KAAKoX,kBACRpX,KAAKoX,gBAAkB,IAGzB,MAAMA,EAAkBpX,KAAKoX,gBAC7B,IAAIC,EAAS8e,GAAkB/e,EAAiB,EAAG4B,EAAQhZ,KAAKsX,QAChEF,EAAgBC,KAAYD,EAAgB,GAAK+G,EACjD,IAAK,IAAI5c,EAAI,EAAG4E,EAAKnG,KAAKsX,OAAQ/V,EAAI4E,IAAM5E,EAC1C6V,EAAgBC,KAAYD,EAAgB7V,GAE9C6V,EAAgBvW,OAASwW,EACzBrX,KAAK4H,SACT,CAKE,cAAAmsB,GACE,OAAO,IACX,CAKE,cAAAU,CAAejf,EAAase,GAAQ,CAOpC,SAAAsyC,CAAUjoD,GACRne,KAAKoX,gBAAgBpX,KAAKsX,QAAUtX,KAAKoX,gBAAgB,GAAK+G,EAC9Dne,KAAK4H,SACT,CAUE,MAAAia,CAAOC,EAAO6P,GACZ,MAAM3Y,EAAShZ,KAAK4Y,YACdtB,EAAStX,KAAKs0B,YACpBt0B,KAAK4zC,UACH/xB,GAAO7I,EAAQ,EAAGA,EAAOnY,OAAQyW,EAAQwK,EAAO6P,EAAQ3Y,IAE1DhZ,KAAK4H,SACT,EAyBAmqE,GAAOxuE,UAAUwpB,UCjQjB,MAAMy+D,WAA2Bv5D,GAI/B,WAAAlyB,CAAY2nF,GACVziF,QAMAjF,KAAK6gG,YAAcnZ,EAMnB1nF,KAAK8gG,kBAAoB,GAEzB9gG,KAAK+gG,yBACT,CAKE,yBAAAC,GACEhhG,KAAK8gG,kBAAkBh2F,QAAQzD,GAC/BrH,KAAK8gG,kBAAkBjgG,OAAS,CACpC,CAKE,uBAAAkgG,GACE,MAAMrZ,EAAa1nF,KAAK6gG,YACxB,IAAK,IAAIt/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChDvB,KAAK8gG,kBAAkBn7F,KACrBmB,EAAO4gF,EAAWnmF,GAAI1B,EAAkBG,KAAK4H,QAAS5H,MAG9D,CAQE,KAAAyU,GACE,MAAMwsF,EAAqB,IAAIzV,GAC7B0V,GAAgBlhG,KAAK6gG,cAGvB,OADAI,EAAmBn3F,gBAAgB9J,MAC5BihG,CACX,CAUE,cAAAvuE,CAAe3c,EAAGC,EAAG2c,EAAcC,GACjC,GAAIA,EAAqB9c,GAAyB9V,KAAK6b,YAAa9F,EAAGC,GACrE,OAAO4c,EAET,MAAM80D,EAAa1nF,KAAK6gG,YACxB,IAAK,IAAIt/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChDqxB,EAAqB80D,EAAWnmF,GAAGmxB,eACjC3c,EACAC,EACA2c,EACAC,GAGJ,OAAOA,CACX,CAQE,UAAAvc,CAAWN,EAAGC,GACZ,MAAM0xE,EAAa1nF,KAAK6gG,YACxB,IAAK,IAAIt/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChD,GAAImmF,EAAWnmF,GAAG8U,WAAWN,EAAGC,GAC9B,OAAO,EAGX,OAAO,CACX,CAQE,aAAAid,CAAcxd,GACZwB,GAAoBxB,GACpB,MAAMiyE,EAAa1nF,KAAK6gG,YACxB,IAAK,IAAIt/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChDM,GAAO4T,EAAQiyE,EAAWnmF,GAAGsa,aAE/B,OAAOpG,CACX,CAOE,aAAAqjD,GACE,OAAOooC,GAAgBlhG,KAAK6gG,YAChC,CAKE,kBAAAlZ,GACE,OAAO3nF,KAAK6gG,WAChB,CAKE,2BAAAM,GAEE,IAAIC,EAAkB,GACtB,MAAM1Z,EAAa1nF,KAAK6gG,YACxB,IAAK,IAAIt/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAC5CmmF,EAAWnmF,GAAG6xB,YAAcpzB,KAAKozB,UACnCguE,EAAkBA,EAAgB7nC,OAE9BmuB,EAAWnmF,GACX4/F,+BAGJC,EAAgBz7F,KAAK+hF,EAAWnmF,IAGpC,OAAO6/F,CACX,CAQE,qBAAA5uE,CAAsBD,GAKpB,GAJIvyB,KAAKoyB,6BAA+BpyB,KAAK6H,gBAC3C7H,KAAKmyB,yCAA2C,EAChDnyB,KAAKoyB,2BAA6BpyB,KAAK6H,eAGvC0qB,EAAmB,GACgC,IAAlDvyB,KAAKmyB,0CACJI,EAAmBvyB,KAAKmyB,yCAE1B,OAAOnyB,KAGT,MAAMqhG,EAAuB,GACvB3Z,EAAa1nF,KAAK6gG,YACxB,IAAIS,GAAa,EACjB,IAAK,IAAI//F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAAG,CACnD,MAAM+S,EAAWozE,EAAWnmF,GACtB6yB,EACJ9f,EAASke,sBAAsBD,GACjC8uE,EAAqB17F,KAAKyuB,GACtBA,IAAuB9f,IACzBgtF,GAAa,EAErB,CACI,GAAIA,EAAY,CAId,OAHqC,IAAI9V,GACvC6V,EAGR,CAEI,OADArhG,KAAKmyB,yCAA2CI,EACzCvyB,IACX,CAQE,OAAAozB,GACE,MAAO,oBACX,CASE,gBAAAC,CAAiB5d,GACf,MAAMiyE,EAAa1nF,KAAK6gG,YACxB,IAAK,IAAIt/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChD,GAAImmF,EAAWnmF,GAAG8xB,iBAAiB5d,GACjC,OAAO,EAGX,OAAO,CACX,CAKE,OAAAjR,GACE,OAAmC,IAA5BxE,KAAK6gG,YAAYhgG,MAC5B,CAUE,MAAAghB,CAAOC,EAAO6P,GACZ,MAAM+1D,EAAa1nF,KAAK6gG,YACxB,IAAK,IAAIt/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChDmmF,EAAWnmF,GAAGsgB,OAAOC,EAAO6P,GAE9B3xB,KAAK4H,SACT,CAaE,KAAAqa,CAAMsO,EAAIC,EAAImB,GACPA,IACHA,EAAS/Y,GAAU5Y,KAAK6b,cAE1B,MAAM6rE,EAAa1nF,KAAK6gG,YACxB,IAAK,IAAIt/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChDmmF,EAAWnmF,GAAG0gB,MAAMsO,EAAIC,EAAImB,GAE9B3xB,KAAK4H,SACT,CAOE,aAAA25F,CAAc7Z,GACZ1nF,KAAKwhG,mBAAmBN,GAAgBxZ,GAC5C,CAKE,kBAAA8Z,CAAmB9Z,GACjB1nF,KAAKghG,4BACLhhG,KAAK6gG,YAAcnZ,EACnB1nF,KAAK+gG,0BACL/gG,KAAK4H,SACT,CAYE,cAAAuT,CAAeC,GACb,MAAMssE,EAAa1nF,KAAK6gG,YACxB,IAAK,IAAIt/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChDmmF,EAAWnmF,GAAG4Z,eAAeC,GAE/Bpb,KAAK4H,SACT,CAUE,SAAAuoB,CAAU1V,EAAQC,GAChB,MAAMgtE,EAAa1nF,KAAK6gG,YACxB,IAAK,IAAIt/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChDmmF,EAAWnmF,GAAG4uB,UAAU1V,EAAQC,GAElC1a,KAAK4H,SACT,CAME,eAAAzH,GACEH,KAAKghG,4BACL/7F,MAAM9E,iBACV,EAOA,SAAS+gG,GAAgBxZ,GACvB,OAAOA,EAAWv2D,KAAK7c,GAAaA,EAASG,SAC/C,CClVO,SAASgtF,GAAiBrqF,EAAiBC,EAAQ1V,EAAK2V,GAC7D,IAAI+B,EAAKjC,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAC9BxW,EAAS,EACb,IAAK,IAAIU,EAAI8V,EAASC,EAAQ/V,EAAII,EAAKJ,GAAK+V,EAAQ,CAClD,MAAMiC,EAAKnC,EAAgB7V,GACrBiY,EAAKpC,EAAgB7V,EAAI,GAC/BV,GAAU+K,KAAK6S,MAAMlF,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9DD,EAAKE,EACLD,EAAKE,CACT,CACE,OAAO3Y,CACT,CCFA,MAAMoqF,WAAmBp3D,GAMvB,WAAA9zB,CAAYyV,EAAase,GACvB7uB,QAMAjF,KAAK0hG,cAAgB,KAMrB1hG,KAAK2hG,uBAA0B,EAM/B3hG,KAAK63B,WAAc,EAMnB73B,KAAK83B,mBAAsB,OAEZtxB,IAAXstB,GAAyB9xB,MAAMC,QAAQuT,EAAY,IAMrDxV,KAAKy0B,eACX,EAGQX,GATF9zB,KAAKu0B,mBACHT,EACR,EAUA,CAOE,gBAAA8tE,CAAiBxrF,GACfvU,EAAO7B,KAAKoX,gBAAiBhB,GAC7BpW,KAAK4H,SACT,CAQE,KAAA6M,GACE,MAAMotF,EAAa,IAAI5W,GACrBjrF,KAAKoX,gBAAgB5T,QACrBxD,KAAK8zB,QAGP,OADA+tE,EAAW/3F,gBAAgB9J,MACpB6hG,CACX,CAUE,cAAAnvE,CAAe3c,EAAGC,EAAG2c,EAAcC,GACjC,OAAIA,EAAqB9c,GAAyB9V,KAAK6b,YAAa9F,EAAGC,GAC9D4c,GAEL5yB,KAAK83B,mBAAqB93B,KAAK6H,gBACjC7H,KAAK63B,UAAYjsB,KAAK6S,KACpBgX,GACEz1B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACL,IAGJtX,KAAK83B,kBAAoB93B,KAAK6H,eAEzBiuB,GACL91B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACLtX,KAAK63B,WACL,EACA9hB,EACAC,EACA2c,EACAC,GAEN,CAaE,cAAA4G,CAAethB,GACb,OAAOshB,GACLx5B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACLY,EAEN,CAgBE,gBAAA4pF,CAAiB9kF,EAAGsjF,GAClB,MAAmB,OAAftgG,KAAK8zB,QAAkC,QAAf9zB,KAAK8zB,OACxB,MAETwsE,OAA8B95F,IAAhB85F,GAA4BA,EACnCD,GACLrgG,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACL0F,EACAsjF,GAEN,CAQE,cAAAvsE,GACE,OAAO0C,GACLz2B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OAEX,CAYE,eAAAyqF,CAAgB9yD,EAAUp5B,GACxB,OAAOqqF,GACLlgG,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACL23B,EACAp5B,EACA7V,KAAKsX,OAEX,CAOE,SAAA1M,GACE,OAAO62F,GACLzhG,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OAEX,CAKE,eAAAuwE,GAQE,OAPI7nF,KAAK2hG,uBAAyB3hG,KAAK6H,gBACrC7H,KAAK0hG,cAAgB1hG,KAAK+hG,gBACxB,GACA/hG,KAAK0hG,oBAAiBl7F,GAExBxG,KAAK2hG,sBAAwB3hG,KAAK6H,eAEC7H,KAAkB,aAC3D,CAQE,6BAAAq0B,CAA8B9B,GAE5B,MAAMsE,EAA4B,GAUlC,OATAA,EAA0Bh2B,OAAS+1B,GACjC52B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACLib,EACAsE,EACA,GAEK,IAAIo0D,GAAWp0D,EAA2B,KACrD,CAQE,OAAAzD,GACE,MAAO,YACX,CASE,gBAAAC,CAAiB5d,GACf,OAAO6jB,GACLt5B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OACL7B,EACAzV,KAAK6b,YAEX,CASE,cAAA4Y,CAAejf,EAAase,GAC1B9zB,KAAK00B,UAAUZ,EAAQte,EAAa,GAC/BxV,KAAKoX,kBACRpX,KAAKoX,gBAAkB,IAEzBpX,KAAKoX,gBAAgBvW,OAASu1B,GAC5Bp2B,KAAKoX,gBACL,EACA5B,EACAxV,KAAKsX,QAEPtX,KAAK4H,SACT,ECnSA,MAAM0jF,WAAwBz3D,GAQ5B,WAAA9zB,CAAYyV,EAAase,EAAQqB,GAqB/B,GApBAlwB,QAMAjF,KAAK66B,MAAQ,GAMb76B,KAAK63B,WAAc,EAMnB73B,KAAK83B,mBAAsB,EAEvB91B,MAAMC,QAAQuT,EAAY,IAC5BxV,KAAKy0B,eACX,EAGQX,QAEG,QAAettB,IAAXstB,GAAwBqB,EACjCn1B,KAAKu0B,mBACHT,EACR,GAEM9zB,KAAK66B,MAAQ1F,MACR,CACL,MAAM6sE,EAAgD,EAEhD5qF,EAAkB,GAClB+d,EAAO,GACb,IAAK,IAAI5zB,EAAI,EAAG4E,EAAK67F,EAAYnhG,OAAQU,EAAI4E,IAAM5E,EAAG,CAEpDM,EAAOuV,EADY4qF,EAAYzgG,GACI0yB,sBACnCkB,EAAKxvB,KAAKyR,EAAgBvW,OAClC,CACM,MAAMizB,EACmB,IAAvBkuE,EAAYnhG,OACRb,KAAKm0B,YACL6tE,EAAY,GAAG7tE,YACrBn0B,KAAKu0B,mBAAmBT,EAAQ1c,GAChCpX,KAAK66B,MAAQ1F,CACnB,CACA,CAOE,gBAAA8sE,CAAiBJ,GACfhgG,EAAO7B,KAAKoX,gBAAiByqF,EAAW5tE,qBAAqBzwB,SAC7DxD,KAAK66B,MAAMl1B,KAAK3F,KAAKoX,gBAAgBvW,QACrCb,KAAK4H,SACT,CAQE,KAAA6M,GACE,MAAMytF,EAAkB,IAAI5W,GAC1BtrF,KAAKoX,gBAAgB5T,QACrBxD,KAAK8zB,OACL9zB,KAAK66B,MAAMr3B,SAGb,OADA0+F,EAAgBp4F,gBAAgB9J,MACzBkiG,CACX,CAUE,cAAAxvE,CAAe3c,EAAGC,EAAG2c,EAAcC,GACjC,OAAIA,EAAqB9c,GAAyB9V,KAAK6b,YAAa9F,EAAGC,GAC9D4c,GAEL5yB,KAAK83B,mBAAqB93B,KAAK6H,gBACjC7H,KAAK63B,UAAYjsB,KAAK6S,KACpBmX,GACE51B,KAAKoX,gBACL,EACApX,KAAK66B,MACL76B,KAAKsX,OACL,IAGJtX,KAAK83B,kBAAoB93B,KAAK6H,eAEzBouB,GACLj2B,KAAKoX,gBACL,EACApX,KAAK66B,MACL76B,KAAKsX,OACLtX,KAAK63B,WACL,EACA9hB,EACAC,EACA2c,EACAC,GAEN,CAwBE,gBAAAkvE,CAAiB9kF,EAAGsjF,EAAa/zF,GAC/B,MACkB,OAAfvM,KAAK8zB,QAAkC,QAAf9zB,KAAK8zB,QACE,IAAhC9zB,KAAKoX,gBAAgBvW,OAEd,MAETy/F,OAA8B95F,IAAhB85F,GAA4BA,EAC1C/zF,OAA8B/F,IAAhB+F,GAA4BA,EACnCm0F,GACL1gG,KAAKoX,gBACL,EACApX,KAAK66B,MACL76B,KAAKsX,OACL0F,EACAsjF,EACA/zF,GAEN,CAQE,cAAAwnB,GACE,OAAO2C,GACL12B,KAAKoX,gBACL,EACApX,KAAK66B,MACL76B,KAAKsX,OAEX,CAKE,OAAAgkB,GACE,OAAOt7B,KAAK66B,KAChB,CAQE,aAAAsnE,CAAcv/F,GACZ,OAAIA,EAAQ,GAAK5C,KAAK66B,MAAMh6B,QAAU+B,EAC7B,KAEF,IAAIqoF,GACTjrF,KAAKoX,gBAAgB5T,MACT,IAAVZ,EAAc,EAAI5C,KAAK66B,MAAMj4B,EAAQ,GACrC5C,KAAK66B,MAAMj4B,IAEb5C,KAAK8zB,OAEX,CAOE,cAAAsuE,GACE,MAAMhrF,EAAkBpX,KAAKoX,gBACvB+d,EAAOn1B,KAAK66B,MACZ/G,EAAS9zB,KAAK8zB,OAEdkuE,EAAc,GACpB,IAAI3qF,EAAS,EACb,IAAK,IAAI9V,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACXsgG,EAAa,IAAI5W,GACrB7zE,EAAgB5T,MAAM6T,EAAQ1V,GAC9BmyB,GAEFkuE,EAAYr8F,KAAKk8F,GACjBxqF,EAAS1V,CACf,CACI,OAAOqgG,CACX,CAOE,SAAAp3F,GACE,MAAMuqB,EAAOn1B,KAAK66B,MAClB,IAAI5tB,EAAQ,EACRpM,EAAS,EACb,IAAK,IAAIU,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAC1CV,GAAU4gG,GACRzhG,KAAKoX,gBACLnK,EACAkoB,EAAK5zB,GACLvB,KAAKsX,QAEPrK,EAAQkoB,EAAK5zB,GAEf,OAAOV,CACX,CAKE,gBAAAmnF,GAEE,MAAMqa,EAAY,GACZjrF,EAAkBpX,KAAKoX,gBAC7B,IAAIC,EAAS,EACb,MAAM8d,EAAOn1B,KAAK66B,MACZvjB,EAAStX,KAAKsX,OACpB,IAAK,IAAI/V,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GAQjBM,EAAOwgG,EAPUnC,GACf9oF,EACAC,EACA1V,EACA2V,EACA,KAGFD,EAAS1V,CACf,CACI,OAAO0gG,CACX,CAQE,6BAAAhuE,CAA8B9B,GAE5B,MAAMsE,EAA4B,GAE5BQ,EAAiB,GAWvB,OAVAR,EAA0Bh2B,OAASu2B,GACjCp3B,KAAKoX,gBACL,EACApX,KAAK66B,MACL76B,KAAKsX,OACLib,EACAsE,EACA,EACAQ,GAEK,IAAIi0D,GAAgBz0D,EAA2B,KAAMQ,EAChE,CAQE,OAAAjE,GACE,MAAO,iBACX,CASE,gBAAAC,CAAiB5d,GACf,OAAOkkB,GACL35B,KAAKoX,gBACL,EACApX,KAAK66B,MACL76B,KAAKsX,OACL7B,EAEN,CASE,cAAAgf,CAAejf,EAAase,GAC1B9zB,KAAK00B,UAAUZ,EAAQte,EAAa,GAC/BxV,KAAKoX,kBACRpX,KAAKoX,gBAAkB,IAEzB,MAAM+d,EAAOkB,GACXr2B,KAAKoX,gBACL,EACA5B,EACAxV,KAAKsX,OACLtX,KAAK66B,OAEP76B,KAAKoX,gBAAgBvW,OAAyB,IAAhBs0B,EAAKt0B,OAAe,EAAIs0B,EAAKA,EAAKt0B,OAAS,GACzEb,KAAK4H,SACT,ECtWA,MAAMwjF,WAAmBv3D,GAMvB,WAAA9zB,CAAYyV,EAAase,GACvB7uB,QACI6uB,IAAW9xB,MAAMC,QAAQuT,EAAY,IACvCxV,KAAKu0B,mBACHT,EACR,GAGM9zB,KAAKy0B,eACX,EAGQX,EAGR,CAOE,WAAAwuE,CAAYj9E,GACVxjB,EAAO7B,KAAKoX,gBAAiBiO,EAAM4O,sBACnCj0B,KAAK4H,SACT,CAQE,KAAA6M,GACE,MAAM8tF,EAAa,IAAInX,GACrBprF,KAAKoX,gBAAgB5T,QACrBxD,KAAK8zB,QAGP,OADAyuE,EAAWz4F,gBAAgB9J,MACpBuiG,CACX,CAUE,cAAA7vE,CAAe3c,EAAGC,EAAG2c,EAAcC,GACjC,GAAIA,EAAqB9c,GAAyB9V,KAAK6b,YAAa9F,EAAGC,GACrE,OAAO4c,EAET,MAAMxb,EAAkBpX,KAAKoX,gBACvBE,EAAStX,KAAKsX,OACpB,IAAK,IAAI/V,EAAI,EAAG4E,EAAKiR,EAAgBvW,OAAQU,EAAI4E,EAAI5E,GAAK+V,EAAQ,CAChE,MAAMgF,EAAkBqZ,GACtB5f,EACAC,EACAoB,EAAgB7V,GAChB6V,EAAgB7V,EAAI,IAEtB,GAAI+a,EAAkBsW,EAAoB,CACxCA,EAAqBtW,EACrB,IAAK,IAAIO,EAAI,EAAGA,EAAIvF,IAAUuF,EAC5B8V,EAAa9V,GAAKzF,EAAgB7V,EAAIsb,GAExC8V,EAAa9xB,OAASyW,CAC9B,CACA,CACI,OAAOsb,CACX,CAQE,cAAAmB,GACE,OAAO0C,GACLz2B,KAAKoX,gBACL,EACApX,KAAKoX,gBAAgBvW,OACrBb,KAAKsX,OAEX,CAQE,QAAAkrF,CAAS5/F,GACP,MAAMtB,EAAItB,KAAKoX,gBAAgBvW,OAASb,KAAKsX,OAC7C,OAAI1U,EAAQ,GAAKtB,GAAKsB,EACb,KAEF,IAAIo1B,GACTh4B,KAAKoX,gBAAgB5T,MACnBZ,EAAQ5C,KAAKsX,QACZ1U,EAAQ,GAAK5C,KAAKsX,QAErBtX,KAAK8zB,OAEX,CAOE,SAAA4vC,GACE,MAAMtsD,EAAkBpX,KAAKoX,gBACvB0c,EAAS9zB,KAAK8zB,OACdxc,EAAStX,KAAKsX,OAEd4rD,EAAS,GACf,IAAK,IAAI3hE,EAAI,EAAG4E,EAAKiR,EAAgBvW,OAAQU,EAAI4E,EAAI5E,GAAK+V,EAAQ,CAChE,MAAM+N,EAAQ,IAAI2S,GAAM5gB,EAAgB5T,MAAMjC,EAAGA,EAAI+V,GAASwc,GAC9DovC,EAAOv9D,KAAK0f,EAClB,CACI,OAAO69C,CACX,CAQE,OAAA9vC,GACE,MAAO,YACX,CASE,gBAAAC,CAAiB5d,GACf,MAAM2B,EAAkBpX,KAAKoX,gBACvBE,EAAStX,KAAKsX,OACpB,IAAK,IAAI/V,EAAI,EAAG4E,EAAKiR,EAAgBvW,OAAQU,EAAI4E,EAAI5E,GAAK+V,EAAQ,CAGhE,GAAIjB,GAAWZ,EAFL2B,EAAgB7V,GAChB6V,EAAgB7V,EAAI,IAE5B,OAAO,CAEf,CACI,OAAO,CACX,CASE,cAAAkzB,CAAejf,EAAase,GAC1B9zB,KAAK00B,UAAUZ,EAAQte,EAAa,GAC/BxV,KAAKoX,kBACRpX,KAAKoX,gBAAkB,IAEzBpX,KAAKoX,gBAAgBvW,OAASu1B,GAC5Bp2B,KAAKoX,gBACL,EACA5B,EACAxV,KAAKsX,QAEPtX,KAAK4H,SACT,ECxKA,MAAM2jF,WAAqB13D,GAOzB,WAAA9zB,CAAYyV,EAAase,EAAQuB,GA6C/B,GA5CApwB,QAMAjF,KAAKyiG,OAAS,GAMdziG,KAAK0iG,6BAAgC,EAMrC1iG,KAAK2iG,oBAAsB,KAM3B3iG,KAAK63B,WAAc,EAMnB73B,KAAK83B,mBAAsB,EAM3B93B,KAAKg7B,mBAAsB,EAM3Bh7B,KAAKi7B,yBAA2B,MAE3B5F,IAAUrzB,MAAMC,QAAQuT,EAAY,IAAK,CAC5C,MAAMotF,EAA0C,EAE1CxrF,EAAkB,GAClByrF,EAAY,GAClB,IAAK,IAAIthG,EAAI,EAAG4E,EAAKy8F,EAAS/hG,OAAQU,EAAI4E,IAAM5E,EAAG,CACjD,MAAM45B,EAAUynE,EAASrhG,GACnB8V,EAASD,EAAgBvW,OACzBs0B,EAAOgG,EAAQG,UACrB,IAAK,IAAIze,EAAI,EAAG6P,EAAKyI,EAAKt0B,OAAQgc,EAAI6P,IAAM7P,EAC1CsY,EAAKtY,IAAMxF,EAEbxV,EAAOuV,EAAiB+jB,EAAQlH,sBAChC4uE,EAAUl9F,KAAKwvB,EACvB,CACMrB,EACsB,IAApB8uE,EAAS/hG,OAAeb,KAAKm0B,YAAcyuE,EAAS,GAAGzuE,YACzD3e,EAAc4B,EACdie,EAAQwtE,CACd,MACmBr8F,IAAXstB,GAAwBuB,GAC1Br1B,KAAKu0B,mBACHT,EACR,GAEM9zB,KAAKyiG,OAASptE,GAEdr1B,KAAKy0B,eACX,EAGQX,EAGR,CAOE,aAAAgvE,CAAc3nE,GAEZ,IAAIhG,EACJ,GAAKn1B,KAAKoX,gBAIH,CACL,MAAMC,EAASrX,KAAKoX,gBAAgBvW,OACpCgB,EAAO7B,KAAKoX,gBAAiB+jB,EAAQlH,sBACrCkB,EAAOgG,EAAQG,UAAU93B,QACzB,IAAK,IAAIjC,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAC1C4zB,EAAK5zB,IAAM8V,CAEnB,MAVMrX,KAAKoX,gBAAkB+jB,EAAQlH,qBAAqBzwB,QACpD2xB,EAAOgG,EAAQG,UAAU93B,QACzBxD,KAAKyiG,OAAO98F,OASd3F,KAAKyiG,OAAO98F,KAAKwvB,GACjBn1B,KAAK4H,SACT,CAQE,KAAA6M,GACE,MAAM1M,EAAM/H,KAAKyiG,OAAO5hG,OAClBkiG,EAAW,IAAI/gG,MAAM+F,GAC3B,IAAK,IAAIxG,EAAI,EAAGA,EAAIwG,IAAOxG,EACzBwhG,EAASxhG,GAAKvB,KAAKyiG,OAAOlhG,GAAGiC,QAG/B,MAAMw/F,EAAe,IAAIzX,GACvBvrF,KAAKoX,gBAAgB5T,QACrBxD,KAAK8zB,OACLivE,GAIF,OAFAC,EAAal5F,gBAAgB9J,MAEtBgjG,CACX,CAUE,cAAAtwE,CAAe3c,EAAGC,EAAG2c,EAAcC,GACjC,OAAIA,EAAqB9c,GAAyB9V,KAAK6b,YAAa9F,EAAGC,GAC9D4c,GAEL5yB,KAAK83B,mBAAqB93B,KAAK6H,gBACjC7H,KAAK63B,UAAYjsB,KAAK6S,KACpBoX,GACE71B,KAAKoX,gBACL,EACApX,KAAKyiG,OACLziG,KAAKsX,OACL,IAGJtX,KAAK83B,kBAAoB93B,KAAK6H,eAEzBquB,GACLl2B,KAAKo7B,6BACL,EACAp7B,KAAKyiG,OACLziG,KAAKsX,OACLtX,KAAK63B,WACL,EACA9hB,EACAC,EACA2c,EACAC,GAEN,CAQE,UAAAvc,CAAWN,EAAGC,GACZ,OAAOqiB,GACLr4B,KAAKo7B,6BACL,EACAp7B,KAAKyiG,OACLziG,KAAKsX,OACLvB,EACAC,EAEN,CAOE,OAAAwC,GACE,OAAOyqF,GACLjjG,KAAKo7B,6BACL,EACAp7B,KAAKyiG,OACLziG,KAAKsX,OAEX,CAgBE,cAAAyc,CAAemG,GACb,IAAI9iB,EAcJ,YAbc5Q,IAAV0zB,GACF9iB,EAAkBpX,KAAKo7B,6BAA6B53B,QACpD+2B,GACEnjB,EACA,EACApX,KAAKyiG,OACLziG,KAAKsX,OACL4iB,IAGF9iB,EAAkBpX,KAAKoX,gBAGlBuf,GACLvf,EACA,EACApX,KAAKyiG,OACLziG,KAAKsX,OAEX,CAKE,QAAA4wE,GACE,OAAOloF,KAAKyiG,MAChB,CAKE,qBAAAra,GACE,GAAIpoF,KAAK0iG,6BAA+B1iG,KAAK6H,cAAe,CAC1D,MAAM0wB,EAAc2qE,GAClBljG,KAAKoX,gBACL,EACApX,KAAKyiG,OACLziG,KAAKsX,QAEPtX,KAAK2iG,oBAAsB5pE,GACzB/4B,KAAKo7B,6BACL,EACAp7B,KAAKyiG,OACLziG,KAAKsX,OACLihB,GAEFv4B,KAAK0iG,4BAA8B1iG,KAAK6H,aAC9C,CACI,OAAqC7H,KAAwB,mBACjE,CAQE,iBAAAmjG,GACE,OAAO,IAAI/X,GAAWprF,KAAKooF,wBAAwB5kF,QAAS,MAChE,CAKE,0BAAA43B,GACE,GAAIp7B,KAAKg7B,mBAAqBh7B,KAAK6H,cAAe,CAChD,MAAMuP,EAAkBpX,KAAKoX,gBAE3BgjB,GAAwBhjB,EAAiB,EAAGpX,KAAKyiG,OAAQziG,KAAKsX,QAE9DtX,KAAKi7B,yBAA2B7jB,GAEhCpX,KAAKi7B,yBAA2B7jB,EAAgB5T,QAChDxD,KAAKi7B,yBAAyBp6B,OAAS05B,GACrCv6B,KAAKi7B,yBACL,EACAj7B,KAAKyiG,OACLziG,KAAKsX,SAGTtX,KAAKg7B,kBAAoBh7B,KAAK6H,aACpC,CACI,OAAqC7H,KAA6B,wBACtE,CAQE,6BAAAq0B,CAA8B9B,GAE5B,MAAMsE,EAA4B,GAE5Bc,EAAkB,GAWxB,OAVAd,EAA0Bh2B,OAAS62B,GACjC13B,KAAKoX,gBACL,EACApX,KAAKyiG,OACLziG,KAAKsX,OACL1L,KAAK6S,KAAK8T,GACVsE,EACA,EACAc,GAEK,IAAI4zD,GAAa10D,EAA2B,KAAMc,EAC7D,CAQE,UAAAyrE,CAAWxgG,GACT,GAAIA,EAAQ,GAAK5C,KAAKyiG,OAAO5hG,QAAU+B,EACrC,OAAO,KAET,IAAIyU,EACJ,GAAc,IAAVzU,EACFyU,EAAS,MACJ,CACL,MAAMgsF,EAAWrjG,KAAKyiG,OAAO7/F,EAAQ,GACrCyU,EAASgsF,EAASA,EAASxiG,OAAS,EAC1C,CACI,MAAMs0B,EAAOn1B,KAAKyiG,OAAO7/F,GAAOY,QAC1B7B,EAAMwzB,EAAKA,EAAKt0B,OAAS,GAC/B,GAAe,IAAXwW,EACF,IAAK,IAAI9V,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAC1C4zB,EAAK5zB,IAAM8V,EAGf,OAAO,IAAIujB,GACT56B,KAAKoX,gBAAgB5T,MAAM6T,EAAQ1V,GACnC3B,KAAK8zB,OACLqB,EAEN,CAOE,WAAAmuE,GACE,MAAMxvE,EAAS9zB,KAAK8zB,OACd1c,EAAkBpX,KAAKoX,gBACvBie,EAAQr1B,KAAKyiG,OACbG,EAAW,GACjB,IAAIvrF,EAAS,EACb,IAAK,IAAI9V,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GAAGiC,QAChB7B,EAAMwzB,EAAKA,EAAKt0B,OAAS,GAC/B,GAAe,IAAXwW,EACF,IAAK,IAAIwF,EAAI,EAAG6P,EAAKyI,EAAKt0B,OAAQgc,EAAI6P,IAAM7P,EAC1CsY,EAAKtY,IAAMxF,EAGf,MAAM8jB,EAAU,IAAIP,GAClBxjB,EAAgB5T,MAAM6T,EAAQ1V,GAC9BmyB,EACAqB,GAEFytE,EAASj9F,KAAKw1B,GACd9jB,EAAS1V,CACf,CACI,OAAOihG,CACX,CAQE,OAAAxvE,GACE,MAAO,cACX,CASE,gBAAAC,CAAiB5d,GACf,OAAOqkB,GACL95B,KAAKo7B,6BACL,EACAp7B,KAAKyiG,OACLziG,KAAKsX,OACL7B,EAEN,CASE,cAAAgf,CAAejf,EAAase,GAC1B9zB,KAAK00B,UAAUZ,EAAQte,EAAa,GAC/BxV,KAAKoX,kBACRpX,KAAKoX,gBAAkB,IAEzB,MAAMie,EAAQkB,GACZv2B,KAAKoX,gBACL,EACA5B,EACAxV,KAAKsX,OACLtX,KAAKyiG,QAEP,GAAqB,IAAjBptE,EAAMx0B,OACRb,KAAKoX,gBAAgBvW,OAAS,MACzB,CACL,MAAM0iG,EAAWluE,EAAMA,EAAMx0B,OAAS,GACtCb,KAAKoX,gBAAgBvW,OACC,IAApB0iG,EAAS1iG,OAAe,EAAI0iG,EAASA,EAAS1iG,OAAS,EAC/D,CACIb,KAAK4H,SACT,EC3aA,MAAMkqB,GlIbG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GkIoBzB,MAAM0xE,GAUJ,WAAAzjG,CAAY2E,EAAM0S,EAAiB+d,EAAM7d,EAAQ9C,EAAYzH,GAI3D/M,KAAK2pE,cAML3pE,KAAKijB,QAMLjjB,KAAKgU,IAAMjH,EAMX/M,KAAKyjG,MAAQ/+F,EAMb1E,KAAK0jG,iBAAmBtsF,EAMxBpX,KAAK2iG,oBAAsB,KAM3B3iG,KAAK2jG,eAAiB,KAMtB3jG,KAAK66B,MAAQ1F,GAAQ,KAMrBn1B,KAAK4jG,YAAcpvF,EAMnBxU,KAAKglF,kBAMLhlF,KAAK6jG,QAAUvsF,EAMftX,KAAK8jG,mBACT,CAQE,GAAA76F,CAAI3B,GACF,OAAOtH,KAAK4jG,YAAYt8F,EAC5B,CAOE,SAAAuU,GAYE,OAXK7b,KAAKijB,UACRjjB,KAAKijB,QACY,UAAfjjB,KAAKyjG,MACDvsF,GAA6BlX,KAAK0jG,kBAClCvsF,GACEnX,KAAK0jG,iBACL,EACA1jG,KAAK0jG,iBAAiB7iG,OACtB,IAGHb,KAAKijB,OAChB,CAKE,oBAAAsY,GACE,IAAKv7B,KAAK2iG,oBAAqB,CAC7B,MAAMnnE,EAAa5iB,GAAU5Y,KAAK6b,aAClC7b,KAAK2iG,oBAAsBrqE,GACzBt4B,KAAK0jG,iBACL,EACA1jG,KAAK66B,MACL,EACAW,EACA,EAER,CACI,OAAOx7B,KAAK2iG,mBAChB,CAKE,qBAAAva,GACE,IAAKpoF,KAAK2iG,oBAAqB,CAC7B,MAAMxtE,EAAOqF,GAAYx6B,KAAK0jG,iBAAkB1jG,KAAK66B,OAC/CtC,EAAc2qE,GAAmBljG,KAAK0jG,iBAAkB,EAAGvuE,EAAM,GACvEn1B,KAAK2iG,oBAAsB5pE,GACzB/4B,KAAK0jG,iBACL,EACAvuE,EACA,EACAoD,EAER,CACI,OAAOv4B,KAAK2iG,mBAChB,CAKE,eAAA9a,GAUE,OATK7nF,KAAK2jG,iBACR3jG,KAAK2jG,eAAiBzD,GACpBlgG,KAAK0jG,iBACL,EACA1jG,KAAK0jG,iBAAiB7iG,OACtB,EACA,KAGGb,KAAK2jG,cAChB,CAKE,gBAAA3b,GACE,IAAKhoF,KAAK2jG,eAAgB,CACxB3jG,KAAK2jG,eAAiB,GACtB,MAAMvsF,EAAkBpX,KAAK0jG,iBAC7B,IAAIrsF,EAAS,EACb,MAAM8d,EAAqCn1B,KAAU,MACrD,IAAK,IAAIuB,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACXwiG,EAAW7D,GAAiB9oF,EAAiBC,EAAQ1V,EAAK,EAAG,IACnEE,EAAO7B,KAAK2jG,eAAgBI,GAC5B1sF,EAAS1V,CACjB,CACA,CACI,OAAO3B,KAAK2jG,cAChB,CAQE,KAAA5uF,GACE,OAAO/U,KAAKgU,GAChB,CAKE,0BAAAonB,GACE,OAAOp7B,KAAK0jG,gBAChB,CAQE,WAAA9uF,GACE,OAAO5U,IACX,CAME,qBAAAwyB,CAAsBD,GACpB,OAAOvyB,IACX,CAQE,mBAAAyyB,CAAoBF,EAAkBxF,GACpC,OAAO/sB,IACX,CAOE,aAAAoJ,GACE,OAAOpJ,KAAK4jG,WAChB,CAOE,qBAAAt6F,GACE,OAAOtJ,KAAK4jG,WAChB,CAKE,SAAAtvE,GACE,OAAOt0B,KAAK6jG,OAChB,CAKE,gBAAA7uF,GACE,OAAOhV,KAAK2pE,aAChB,CAOE,OAAAv2C,GACE,OAAOpzB,KAAKyjG,KAChB,CAOE,SAAA12E,CAAUpR,GAER,MAAM8X,GADN9X,EAAa2X,GAAc3X,IACIE,YACzB6X,EAAkB/X,EAAWsI,iBACnC,GAAIwP,GAAeC,EAAiB,CAClC,MAAMzR,EAAQtJ,GAAU+a,GAAmB/a,GAAU8a,GACrDE,GACE7B,GACA4B,EAAgB,GAChBA,EAAgB,GAChBzR,GACCA,EACD,EACA,EACA,GAEFwP,GACEzxB,KAAK0jG,iBACL,EACA1jG,KAAK0jG,iBAAiB7iG,OACtB,EACAixB,GACA9xB,KAAK0jG,iBAEb,CACA,CASE,cAAAvoF,CAAeC,GACbA,EAAYpb,KAAK0jG,iBAAkB1jG,KAAK0jG,iBAAkB1jG,KAAK6jG,QACnE,CAKE,KAAApvF,GACE,OAAO,IAAI+uF,GACTxjG,KAAKyjG,MACLzjG,KAAK0jG,iBAAiBlgG,QACtBxD,KAAK66B,OAAOr3B,QACZxD,KAAK6jG,QACLn9F,OAAO2C,OAAO,GAAIrJ,KAAK4jG,aACvB5jG,KAAKgU,IAEX,CAKE,OAAAsnB,GACE,OAAOt7B,KAAK66B,KAChB,CAME,yBAAAmpE,GAkEE,OAjEAhkG,KAAKyyB,oBAAsBxvB,GAAW,CAACsvB,EAAkBxF,KACvD,GAAIwF,IAAqBvyB,KAAKglF,kBAC5B,OAAOhlF,KAAK8jG,oBAEd9jG,KAAK8jG,oBAAsB9jG,KAAKyU,QAC5BsY,GACF/sB,KAAK8jG,oBAAoB3oF,eAAe4R,GAE1C,MAAM8J,EACJ72B,KAAK8jG,oBAAoB7vE,qBAC3B,IAAIoD,EACJ,OAAQr3B,KAAKyjG,OACX,IAAK,aACH5sE,EAA0Bh2B,OAAS+1B,GACjCC,EACA,EACA72B,KAAK8jG,oBAAoBJ,iBAAiB7iG,OAC1Cb,KAAK8jG,oBAAoBD,QACzBtxE,EACAsE,EACA,GAEFQ,EAAiB,CAACR,EAA0Bh2B,QAC5C,MACF,IAAK,kBACHw2B,EAAiB,GACjBR,EAA0Bh2B,OAASu2B,GACjCP,EACA,EACA72B,KAAK8jG,oBAAoBjpE,MACzB76B,KAAK8jG,oBAAoBD,QACzBtxE,EACAsE,EACA,EACAQ,GAEF,MACF,IAAK,UACHA,EAAiB,GACjBR,EAA0Bh2B,OAAS42B,GACjCZ,EACA,EACA72B,KAAK8jG,oBAAoBjpE,MACzB76B,KAAK8jG,oBAAoBD,QACzBj4F,KAAK6S,KAAK8T,GACVsE,EACA,EACAQ,GAgBN,OAXIA,IACFr3B,KAAK8jG,oBAAsB,IAAIN,GAC7BxjG,KAAKyjG,MACL5sE,EACAQ,EACA,EACAr3B,KAAK4jG,YACL5jG,KAAKgU,MAGThU,KAAKglF,kBAAoBzyD,EAClBvyB,KAAK8jG,mBAAmB,IAE1B9jG,IACX,EAiBO,SAASikG,GAAW/X,GACzB,MAAMx4B,EAAew4B,EAAc94D,UACnC,OAAQsgC,GACN,IAAK,QACH,OAAO,IAAI17B,GAAMk0D,EAAcj4D,sBACjC,IAAK,aACH,OAAO,IAAIm3D,GAAWc,EAAcj4D,qBAAsB,MAC5D,IAAK,aACH,OAAO,IAAIg3D,GAAWiB,EAAcj4D,qBAAsB,MAC5D,IAAK,kBACH,OAAO,IAAIq3D,GACTY,EAAcj4D,qBACd,KAC8Bi4D,EAAc5wD,WAEhD,IAAK,UACH,MAAMlkB,EAAkB80E,EAAcj4D,qBAChCkB,EAAO+2D,EAAc5wD,UACrBjG,EAAQmF,GAAYpjB,EAAiB+d,GAC3C,OAAOE,EAAMx0B,OAAS,EAClB,IAAI0qF,GAAan0E,EAAiB,KAAMie,GACxC,IAAIuF,GAAQxjB,EAAiB,KAAM+d,GACzC,QACE,MAAM,IAAI9sB,MAAM,yBAA2BqrD,GAEjD,CApCA8vC,GAAcjgG,UAAU0wB,mBACtBuvE,GAAcjgG,UAAU63B,2BC/b1B,MAAM84C,GAIJ,WAAAn0E,CAAY+rD,GAKV9rD,KAAKkkG,OAAS,IAAIC,GAAOr4C,GAQzB9rD,KAAKokG,OAAS,CAAE,CACpB,CAOE,MAAA13C,CAAOj3C,EAAQ1R,GAEb,MAAMkH,EAAO,CACXyL,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACboB,KAAMpB,EAAO,GACb1R,MAAOA,GAGT/D,KAAKkkG,OAAOx3C,OAAOzhD,GACnBjL,KAAKokG,OAAO77F,EAAOxE,IAAUkH,CACjC,CAOE,IAAA4B,CAAKw3F,EAASv7F,GACZ,MAAM4kD,EAAQ,IAAI1rD,MAAM8G,EAAOjI,QAC/B,IAAK,IAAIU,EAAI,EAAGia,EAAI1S,EAAOjI,OAAQU,EAAIia,EAAGja,IAAK,CAC7C,MAAMkU,EAAS4uF,EAAQ9iG,GACjBwC,EAAQ+E,EAAOvH,GAGf0J,EAAO,CACXyL,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACboB,KAAMpB,EAAO,GACb1R,MAAOA,GAET2pD,EAAMnsD,GAAK0J,EACXjL,KAAKokG,OAAO77F,EAAOxE,IAAUkH,CACnC,CACIjL,KAAKkkG,OAAOr3F,KAAK6gD,EACrB,CAOE,MAAAriD,CAAOtH,GACL,MAAMw6F,EAAMh2F,EAAOxE,GAIbkH,EAAOjL,KAAKokG,OAAO7F,GAEzB,cADOv+F,KAAKokG,OAAO7F,GACiB,OAA7Bv+F,KAAKkkG,OAAO74F,OAAOJ,EAC9B,CAOE,MAAAi1B,CAAOzqB,EAAQ1R,GACb,MAAMkH,EAAOjL,KAAKokG,OAAO77F,EAAOxE,IAE3B7B,GADQ,CAAC+I,EAAKyL,KAAMzL,EAAK0L,KAAM1L,EAAK2L,KAAM3L,EAAK4L,MAClCpB,KAChBzV,KAAKqL,OAAOtH,GACZ/D,KAAK0sD,OAAOj3C,EAAQ1R,GAE1B,CAME,MAAAugG,GAEE,OADctkG,KAAKkkG,OAAOjqD,MACb9oB,KAAI,SAAUlmB,GACzB,OAAOA,EAAKlH,KAClB,GACA,CAOE,WAAAwgG,CAAY9uF,GAEV,MAAM02C,EAAO,CACXz1C,KAAMjB,EAAO,GACbkB,KAAMlB,EAAO,GACbmB,KAAMnB,EAAO,GACboB,KAAMpB,EAAO,IAGf,OADczV,KAAKkkG,OAAOh4C,OAAOC,GACpBh7B,KAAI,SAAUlmB,GACzB,OAAOA,EAAKlH,KAClB,GACA,CAUE,OAAA+G,CAAQoN,GACN,OAAOlY,KAAKwkG,SAASxkG,KAAKskG,SAAUpsF,EACxC,CASE,eAAAusF,CAAgBhvF,EAAQyC,GACtB,OAAOlY,KAAKwkG,SAASxkG,KAAKukG,YAAY9uF,GAASyC,EACnD,CASE,QAAAssF,CAAS17F,EAAQoP,GACf,IAAIuxB,EACJ,IAAK,IAAIloC,EAAI,EAAGia,EAAI1S,EAAOjI,OAAQU,EAAIia,EAAGja,IAExC,GADAkoC,EAASvxB,EAASpP,EAAOvH,IACrBkoC,EACF,OAAOA,EAGX,OAAOA,CACX,CAKE,OAAAjlC,GACE,OAAOA,EAAQxE,KAAKokG,OACxB,CAKE,KAAA//F,GACErE,KAAKkkG,OAAO7/F,QACZrE,KAAKokG,OAAS,CAAE,CACpB,CAME,SAAAvoF,CAAUpG,GACR,MAAM3T,EAAO9B,KAAKkkG,OAAO12C,SACzB,OAAOx2C,GAAelV,EAAK4U,KAAM5U,EAAK6U,KAAM7U,EAAK8U,KAAM9U,EAAK+U,KAAMpB,EACtE,CAKE,MAAA8jD,CAAOmrC,GACL1kG,KAAKkkG,OAAOr3F,KAAK63F,EAAMR,OAAOjqD,OAC9B,IAAK,MAAM14C,KAAKmjG,EAAMN,OACpBpkG,KAAKokG,OAAO7iG,GAAKmjG,EAAMN,OAAO7iG,EAEpC,ECjNe,IAAAojG,GAMD,aANCA,GAaE,gBAbFA,GAoBN,QApBMA,GA4BE,gBA5BFA,GAmCM,oBAnCNA,GA0CI,kBA1CJA,GAiDM,oBClBd,MAAMC,WAA0B7+F,EAMrC,WAAAhG,CAAY2E,EAAM+kE,EAASiR,GACzBz1E,MAAMP,GAON1E,KAAKypE,QAAUA,EAOfzpE,KAAK06E,SAAWA,CACpB,EAyHA,MAAMmqB,WAAqB/I,GAIzB,WAAA/7F,CAAYuK,GAGVrF,MAAM,CACJ+yC,cAHF1tC,EAAUA,GAAW,CAAE,GAGC0tC,aACtBzrC,aAAa,EACboP,gBAAYnV,EACZ2F,MAAO,QACPuP,WAAyBlV,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,QAM/C1b,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAK2S,QAAU3P,EAMfhD,KAAK8kG,QAAUx6F,EAAQkX,QAAU,KAMjCxhB,KAAK+kG,eAAiCv+F,IAArB8D,EAAQ06F,UAAgC16F,EAAQ06F,SAMjEhlG,KAAKilG,KAAO36F,EAAQu2E,SAEGr6E,IAAnB8D,EAAQsI,OACV5S,KAAK2S,QAAUrI,EAAQsI,YACApM,IAAdxG,KAAKilG,OACdtxF,GAAO3T,KAAK8kG,QAAS,0CAErB9kG,KAAK2S,QAAUquE,GAAIhhF,KAAKilG,KAAMjlG,KAAK8kG,UAOrC9kG,KAAKklG,eACkB1+F,IAArB8D,EAAQ66F,SAAyB76F,EAAQ66F,SAAWC,GAEtD,MAAMC,OACwB7+F,IAA5B8D,EAAQ+6F,iBAAgC/6F,EAAQ+6F,gBAqDlD,IAAIt8C,EAEA2xB,EAjDJ16E,KAAKslG,eAAiBD,EAAkB,IAAInxB,GAAU,KAMtDl0E,KAAKulG,oBAAsB,IAAIrxB,GAM/Bl0E,KAAKwlG,qBAAuB,EAM5BxlG,KAAKylG,sBAAwB,CAAE,EAO/BzlG,KAAK0lG,SAAW,CAAE,EAOlB1lG,KAAK2lG,UAAY,CAAE,EAMnB3lG,KAAK4lG,mBAAqB,CAAE,EAM5B5lG,KAAK6lG,oBAAsB,KAMvB7jG,MAAMC,QAAQqI,EAAQowE,UACxBA,EAAWpwE,EAAQowE,SACVpwE,EAAQowE,WACjB3xB,EAAaz+C,EAAQowE,SACrBA,EAAW3xB,EAAW/9C,YAEnBq6F,QAAkC7+F,IAAfuiD,IACtBA,EAAa,IAAI3+C,EAAWswE,SAEbl0E,IAAbk0E,GACF16E,KAAK8lG,oBAAoBprB,QAERl0E,IAAfuiD,GACF/oD,KAAK+lG,wBAAwBh9C,EAEnC,CAcE,UAAAi9C,CAAWv8B,GACTzpE,KAAKimG,mBAAmBx8B,GACxBzpE,KAAK4H,SACT,CAOE,kBAAAq+F,CAAmBx8B,GACjB,MAAMy8B,EAAa39F,EAAOkhE,GAE1B,IAAKzpE,KAAKmmG,YAAYD,EAAYz8B,GAIhC,YAHIzpE,KAAK6lG,qBACP7lG,KAAK6lG,oBAAoBx6F,OAAOo+D,IAKpCzpE,KAAKomG,mBAAmBF,EAAYz8B,GAEpC,MAAMn1D,EAAWm1D,EAAQ70D,cACzB,GAAIN,EAAU,CACZ,MAAMmB,EAASnB,EAASuH,YACpB7b,KAAKslG,gBACPtlG,KAAKslG,eAAe54C,OAAOj3C,EAAQg0D,EAE3C,MACMzpE,KAAKylG,sBAAsBS,GAAcz8B,EAG3CzpE,KAAK4F,cACH,IAAIg/F,GAAkBD,GAA4Bl7B,GAExD,CAOE,kBAAA28B,CAAmBF,EAAYz8B,GACzBA,aAAmB+5B,KAGvBxjG,KAAK4lG,mBAAmBM,GAAc,CACpCp/F,EAAO2iE,EAAS5pE,EAAkBG,KAAKqmG,qBAAsBrmG,MAC7D8G,EACE2iE,EACA7pE,EACAI,KAAKqmG,qBACLrmG,OAGR,CASE,WAAAmmG,CAAYD,EAAYz8B,GACtB,IAAI68B,GAAQ,EACZ,QAAwB9/F,IAApBijE,EAAQ10D,QAAuB,CACjC,MAAMhI,EAAKrE,OAAO+gE,EAAQ10D,SAC1B,GAAMhI,KAAM/M,KAAK0lG,SAEV,GAAIj8B,aAAmB+5B,GAAe,CAC3C,MAAM+C,EAAiBvmG,KAAK0lG,SAAS34F,GAC/Bw5F,aAA0B/C,GAEpBxhG,MAAMC,QAAQskG,GAGxBA,EAAe5gG,KAAK8jE,GAFpBzpE,KAAK0lG,SAAS34F,GAAM,CAACw5F,EAAgB98B,GAFrC68B,GAAQ,CAMlB,MACQA,GAAQ,OAXRtmG,KAAK0lG,SAAS34F,GAAM08D,CAa5B,CAQI,OAPI68B,IACF3yF,KACIuyF,KAAclmG,KAAK2lG,WACrB,wDAEF3lG,KAAK2lG,UAAUO,GAAcz8B,GAExB68B,CACX,CAOE,WAAAzkB,CAAYnH,GACV16E,KAAK8lG,oBAAoBprB,GACzB16E,KAAK4H,SACT,CAOE,mBAAAk+F,CAAoBprB,GAClB,MAAM2pB,EAAU,GAEVmC,EAAc,GAEdC,EAAmB,GAEzB,IAAK,IAAIllG,EAAI,EAAGV,EAAS65E,EAAS75E,OAAQU,EAAIV,EAAQU,IAAK,CACzD,MAAMkoE,EAAUiR,EAASn5E,GACnB2kG,EAAa39F,EAAOkhE,GACtBzpE,KAAKmmG,YAAYD,EAAYz8B,IAC/B+8B,EAAY7gG,KAAK8jE,EAEzB,CAEI,IAAK,IAAIloE,EAAI,EAAGV,EAAS2lG,EAAY3lG,OAAQU,EAAIV,EAAQU,IAAK,CAC5D,MAAMkoE,EAAU+8B,EAAYjlG,GACtB2kG,EAAa39F,EAAOkhE,GAC1BzpE,KAAKomG,mBAAmBF,EAAYz8B,GAEpC,MAAMn1D,EAAWm1D,EAAQ70D,cACzB,GAAIN,EAAU,CACZ,MAAMmB,EAASnB,EAASuH,YACxBwoF,EAAQ1+F,KAAK8P,GACbgxF,EAAiB9gG,KAAK8jE,EAC9B,MACQzpE,KAAKylG,sBAAsBS,GAAcz8B,CAEjD,CAKI,GAJIzpE,KAAKslG,gBACPtlG,KAAKslG,eAAez4F,KAAKw3F,EAASoC,GAGhCzmG,KAAKyG,YAAYk+F,IACnB,IAAK,IAAIpjG,EAAI,EAAGV,EAAS2lG,EAAY3lG,OAAQU,EAAIV,EAAQU,IACvDvB,KAAK4F,cACH,IAAIg/F,GAAkBD,GAA4B6B,EAAYjlG,IAIxE,CAME,uBAAAwkG,CAAwBh9C,GACtB,IAAI29C,GAAsB,EAC1B1mG,KAAKsF,iBACHq/F,IAIA,SAAU5/F,GACH2hG,IACHA,GAAsB,EACtB39C,EAAWpjD,KAAKZ,EAAI0kE,SACpBi9B,GAAsB,EAEzB,IAEH1mG,KAAKsF,iBACHq/F,IAIA,SAAU5/F,GACH2hG,IACHA,GAAsB,EACtB39C,EAAW19C,OAAOtG,EAAI0kE,SACtBi9B,GAAsB,EAEzB,IAEH39C,EAAWzjD,iBACT3F,GAICoF,IACM2hG,IACHA,GAAsB,EACtB1mG,KAAKgmG,WAAWjhG,EAAIoF,SACpBu8F,GAAsB,EAChC,IAGI39C,EAAWzjD,iBACT3F,GAICoF,IACM2hG,IACHA,GAAsB,EACtB1mG,KAAK2mG,cAAc5hG,EAAIoF,SACvBu8F,GAAsB,EAChC,IAGI1mG,KAAK6lG,oBAAsB98C,CAC/B,CAOE,KAAA1kD,CAAMuiG,GACJ,GAAIA,EAAM,CACR,IAAK,MAAMnzC,KAAazzD,KAAK4lG,mBAAoB,CAClC5lG,KAAK4lG,mBAAmBnyC,GAChC3oD,QAAQzD,EACrB,CACWrH,KAAK6lG,sBACR7lG,KAAK4lG,mBAAqB,CAAE,EAC5B5lG,KAAK0lG,SAAW,CAAE,EAClB1lG,KAAK2lG,UAAY,CAAE,EAE3B,MACM,GAAI3lG,KAAKslG,eAAgB,CACvBtlG,KAAKslG,eAAex6F,SAAS2+D,IAC3BzpE,KAAK6mG,sBAAsBp9B,EAAQ,IAErC,IAAK,MAAM18D,KAAM/M,KAAKylG,sBACpBzlG,KAAK6mG,sBAAsB7mG,KAAKylG,sBAAsB14F,GAEhE,CAEQ/M,KAAK6lG,qBACP7lG,KAAK6lG,oBAAoBxhG,QAGvBrE,KAAKslG,gBACPtlG,KAAKslG,eAAejhG,QAEtBrE,KAAKylG,sBAAwB,CAAE,EAE/B,MAAMqB,EAAa,IAAIlC,GAAkBD,IACzC3kG,KAAK4F,cAAckhG,GACnB9mG,KAAK4H,SACT,CAcE,cAAAm/F,CAAe7uF,GACb,GAAIlY,KAAKslG,eACP,OAAOtlG,KAAKslG,eAAex6F,QAAQoN,GAEjClY,KAAK6lG,qBACP7lG,KAAK6lG,oBAAoB/6F,QAAQoN,EAEvC,CAiBE,gCAAA8uF,CAAiC5wF,EAAY8B,GAC3C,MAAMzC,EAAS,CAACW,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACxE,OAAOpW,KAAKinG,uBAAuBxxF,GAAQ,SAAUg0D,GACnD,MAAMn1D,EAAWm1D,EAAQ70D,cACzB,GACEN,aAAoBkvF,IACpBlvF,EAAS0e,qBAAqB5c,GAE9B,OAAO8B,EAASuxD,EAGxB,GACA,CAqBE,sBAAAw9B,CAAuBxxF,EAAQyC,GAC7B,GAAIlY,KAAKslG,eACP,OAAOtlG,KAAKslG,eAAeb,gBAAgBhvF,EAAQyC,GAEjDlY,KAAK6lG,qBACP7lG,KAAK6lG,oBAAoB/6F,QAAQoN,EAEvC,CAiBE,gCAAAgvF,CAAiCzxF,EAAQyC,GACvC,OAAOlY,KAAKinG,uBACVxxF,GAKA,SAAUg0D,GACR,MAAMn1D,EAAWm1D,EAAQ70D,cACzB,GACEN,aAAoBkvF,IACpBlvF,EAAS+e,iBAAiB5d,GAC1B,CACA,MAAMg0B,EAASvxB,EAASuxD,GACxB,GAAIhgC,EACF,OAAOA,CAEnB,CACO,GAEP,CASE,qBAAA09D,GACE,OAAOnnG,KAAK6lG,mBAChB,CAQE,WAAA37C,GACE,IAAIwwB,EASJ,OARI16E,KAAK6lG,oBACPnrB,EAAW16E,KAAK6lG,oBAAoB76F,WAAWxH,MAAM,GAC5CxD,KAAKslG,iBACd5qB,EAAW16E,KAAKslG,eAAehB,SAC1B9/F,EAAQxE,KAAKylG,wBAChB5jG,EAAO64E,EAAUh0E,OAAOoC,OAAO9I,KAAKylG,yBAGjC/qB,CACX,CAQE,uBAAA0sB,CAAwBhxF,GAEtB,MAAMskE,EAAW,GAIjB,OAHA16E,KAAKgnG,iCAAiC5wF,GAAY,SAAUqzD,GAC1DiR,EAAS/0E,KAAK8jE,EACpB,IACWiR,CACX,CAgBE,mBAAA2sB,CAAoB5xF,EAAQkG,GAC1B,GAAI3b,KAAKslG,eAAgB,CAGvB,KAFmB3pF,GAAcA,EAAWG,YAAc9b,KAAK21E,YAG7D,OAAO31E,KAAKslG,eAAef,YAAY9uF,GAGzC,MAAM4uF,EAAUpoF,GAAcxG,EAAQkG,GAEtC,MAAO,GAAG49C,UACL8qC,EAAQlzE,KAAKm2E,GAAatnG,KAAKslG,eAAef,YAAY+C,KAErE,CACI,OAAItnG,KAAK6lG,oBACA7lG,KAAK6lG,oBAAoB76F,WAAWxH,MAAM,GAE5C,EACX,CAeE,6BAAA+jG,CAA8BnxF,EAAYq5B,GAQxC,MAAM15B,EAAIK,EAAW,GACfJ,EAAII,EAAW,GACrB,IAAIoxF,EAAiB,KACrB,MAAM70E,EAAe,CAACX,IAAKA,KAC3B,IAAIY,EAAqB7b,IACzB,MAAMtB,EAAS,EAAEsB,KAAWA,IAAUA,IAAUA,KA8BhD,OA7BA04B,EAASA,GAAkB3sC,EAC3B9C,KAAKslG,eAAeb,gBAClBhvF,GAIA,SAAUg0D,GACR,GAAIh6B,EAAOg6B,GAAU,CACnB,MAAMn1D,EAAWm1D,EAAQ70D,cACnB6yF,EAA6B70E,EAKnC,GAJAA,EACEte,aAAoBkvF,GAChB,EACAlvF,EAASoe,eAAe3c,EAAGC,EAAG2c,EAAcC,GAC9CA,EAAqB60E,EAA4B,CACnDD,EAAiB/9B,EAKjB,MAAMi+B,EAAc97F,KAAK6S,KAAKmU,GAC9Bnd,EAAO,GAAKM,EAAI2xF,EAChBjyF,EAAO,GAAKO,EAAI0xF,EAChBjyF,EAAO,GAAKM,EAAI2xF,EAChBjyF,EAAO,GAAKO,EAAI0xF,CAC5B,CACA,CACO,IAEIF,CACX,CAYE,SAAA3rF,CAAUpG,GACR,OAAOzV,KAAKslG,eAAezpF,UAAUpG,EACzC,CAcE,cAAAkyF,CAAe56F,GACb,MAAM08D,EAAUzpE,KAAK0lG,SAAS34F,EAAGgkB,YACjC,YAAmBvqB,IAAZijE,EACX,EAGQ,IACR,CAQE,eAAAm+B,CAAgBrJ,GACd,MAAM90B,EAAUzpE,KAAK2lG,UAAUpH,GAC/B,YAAmB/3F,IAAZijE,EAAwBA,EAAU,IAC7C,CAQE,SAAAo+B,GACE,OAAO7nG,KAAK8kG,OAChB,CAKE,WAAAgD,GACE,OAAO9nG,KAAK+kG,SAChB,CAQE,MAAAgD,GACE,OAAO/nG,KAAKilG,IAChB,CAME,oBAAAoB,CAAqBxgG,GACnB,MAAM4jE,EAAsC5jE,EAAY,OAClDqgG,EAAa39F,EAAOkhE,GACpBn1D,EAAWm1D,EAAQ70D,cACzB,GAAKN,EAOE,CACL,MAAMmB,EAASnB,EAASuH,YACpBqqF,KAAclmG,KAAKylG,8BACdzlG,KAAKylG,sBAAsBS,GAC9BlmG,KAAKslG,gBACPtlG,KAAKslG,eAAe54C,OAAOj3C,EAAQg0D,IAGjCzpE,KAAKslG,gBACPtlG,KAAKslG,eAAeplE,OAAOzqB,EAAQg0D,EAG7C,MAlBYy8B,KAAclmG,KAAKylG,wBACnBzlG,KAAKslG,gBACPtlG,KAAKslG,eAAej6F,OAAOo+D,GAE7BzpE,KAAKylG,sBAAsBS,GAAcz8B,GAe7C,MAAM18D,EAAK08D,EAAQ10D,QACnB,QAAWvO,IAAPuG,EAAkB,CACpB,MAAMi7F,EAAMj7F,EAAGgkB,WACX/wB,KAAK0lG,SAASsC,KAASv+B,IACzBzpE,KAAKioG,mBAAmBx+B,GACxBzpE,KAAK0lG,SAASsC,GAAOv+B,EAE7B,MACMzpE,KAAKioG,mBAAmBx+B,GACxBzpE,KAAK2lG,UAAUO,GAAcz8B,EAE/BzpE,KAAK4H,UACL5H,KAAK4F,cACH,IAAIg/F,GAAkBD,GAA+Bl7B,GAE3D,CAQE,UAAAy+B,CAAWz+B,GACT,MAAM18D,EAAK08D,EAAQ10D,QACnB,YAAWvO,IAAPuG,EACKA,KAAM/M,KAAK0lG,SAEbn9F,EAAOkhE,KAAYzpE,KAAK2lG,SACnC,CAKE,OAAAnhG,GACE,OAAIxE,KAAKslG,eAELtlG,KAAKslG,eAAe9gG,WAAaA,EAAQxE,KAAKylG,wBAG9CzlG,KAAK6lG,qBACyC,IAAzC7lG,KAAK6lG,oBAAoBj7F,WAGtC,CAOE,YAAAu9F,CAAa1yF,EAAQwD,EAAY0C,GAC/B,MAAMysF,EAAqBpoG,KAAKulG,oBAC1B8C,EAAgBroG,KAAKklG,UAAUzvF,EAAQwD,EAAY0C,GACzD,IAAK,IAAIpa,EAAI,EAAG4E,EAAKkiG,EAAcxnG,OAAQU,EAAI4E,IAAM5E,EAAG,CACtD,MAAM+mG,EAAeD,EAAc9mG,GACb6mG,EAAmB3D,gBACvC6D,GAKA,SAAUhkG,GACR,OAAOgS,GAAehS,EAAOmR,OAAQ6yF,EACtC,QAGCtoG,KAAKwlG,qBACPxlG,KAAK4F,cACH,IAAIg/F,GAAkBD,KAExB3kG,KAAK2S,QAAQlP,KACXzD,KACAsoG,EACArvF,EACA0C,GAIC++D,MACG16E,KAAKwlG,qBACPxlG,KAAK4F,cACH,IAAIg/F,GACFD,QACAn+F,EACAk0E,GAEH,IAEH,OACI16E,KAAKwlG,qBACPxlG,KAAK4F,cACH,IAAIg/F,GAAkBD,IACvB,IAGLyD,EAAmB17C,OAAO47C,EAAc,CAAC7yF,OAAQ6yF,EAAa9kG,UAEtE,CACIxD,KAAKwjE,UACHxjE,KAAK2S,QAAQ9R,OAAS,IAAYb,KAAKwlG,qBAAuB,CACpE,CAKE,OAAAhJ,GACEx8F,KAAKqE,OAAM,GACXrE,KAAKulG,oBAAoBlhG,QACzBY,MAAMu3F,SACV,CAOE,kBAAA+L,CAAmB9yF,GACjB,MAAM2yF,EAAqBpoG,KAAKulG,oBAC1B/8F,EAAM4/F,EAAmB3D,gBAAgBhvF,GAAQ,SAAUnR,GAC/D,GAAIpC,GAAOoC,EAAOmR,OAAQA,GACxB,OAAOnR,CAEf,IACQkE,GACF4/F,EAAmB/8F,OAAO7C,EAEhC,CASE,cAAAggG,CAAe9tB,GACb,IAAI+tB,GAAU,EACd,IAAK,IAAIlnG,EAAI,EAAG4E,EAAKu0E,EAAS75E,OAAQU,EAAI4E,IAAM5E,EAC9CknG,EAAUzoG,KAAK6mG,sBAAsBnsB,EAASn5E,KAAOknG,EAEnDA,GACFzoG,KAAK4H,SAEX,CASE,aAAA++F,CAAcl9B,GACZ,IAAKA,EACH,OAEczpE,KAAK6mG,sBAAsBp9B,IAEzCzpE,KAAK4H,SAEX,CAQE,qBAAAi/F,CAAsBp9B,GACpB,MAAMy8B,EAAa39F,EAAOkhE,GAC1B,KAAMy8B,KAAclmG,KAAK2lG,WACvB,OAAO,EAGLO,KAAclmG,KAAKylG,6BACdzlG,KAAKylG,sBAAsBS,GAE9BlmG,KAAKslG,gBACPtlG,KAAKslG,eAAej6F,OAAOo+D,GAI/B,MAAMi/B,EAAoB1oG,KAAK4lG,mBAAmBM,GAClDwC,GAAmB59F,QAAQzD,UACpBrH,KAAK4lG,mBAAmBM,GAE/B,MAAMn5F,EAAK08D,EAAQ10D,QACnB,QAAWvO,IAAPuG,EAAkB,CACpB,MAAM47F,EAAW57F,EAAGgkB,WACdw1E,EAAiBvmG,KAAK0lG,SAASiD,GACjCpC,IAAmB98B,SACdzpE,KAAK0lG,SAASiD,GACZ3mG,MAAMC,QAAQskG,KACvBA,EAAe1/F,OAAO0/F,EAAe3/F,QAAQ6iE,GAAU,GACzB,IAA1B88B,EAAe1lG,SACjBb,KAAK0lG,SAASiD,GAAYpC,EAAe,IAGnD,CAOI,cANOvmG,KAAK2lG,UAAUO,GAClBlmG,KAAKyG,YAAYk+F,KACnB3kG,KAAK4F,cACH,IAAIg/F,GAAkBD,GAA+Bl7B,KAGlD,CACX,CAQE,kBAAAw+B,CAAmBx+B,GACjB,IAAK,MAAM18D,KAAM/M,KAAK0lG,SACpB,GAAI1lG,KAAK0lG,SAAS34F,KAAQ08D,EAAS,QAC1BzpE,KAAK0lG,SAAS34F,GACrB,KACR,CAEA,CAQE,SAAA67F,CAAUh2F,GACR5S,KAAK2S,QAAUC,CACnB,CAOE,MAAAqrF,CAAOpd,GACLltE,GAAO3T,KAAK8kG,QAAS,0CACrB9kG,KAAKilG,KAAOpkB,EACZ7gF,KAAK4oG,UAAU5nB,GAAIH,EAAK7gF,KAAK8kG,SACjC,CAKE,WAAA+D,CAAY7D,GACVhlG,KAAK+kG,UAAYC,EACjBhlG,KAAK4H,SACT,EC/pCO,SAASynB,KACd,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACvD,CAOO,SAASy5E,GAAcC,EAAMh8E,GAOlC,OANAg8E,EAAK,GAAKh8E,EAAU,GACpBg8E,EAAK,GAAKh8E,EAAU,GACpBg8E,EAAK,GAAKh8E,EAAU,GACpBg8E,EAAK,GAAKh8E,EAAU,GACpBg8E,EAAK,IAAMh8E,EAAU,GACrBg8E,EAAK,IAAMh8E,EAAU,GACdg8E,CACT,CAcO,SAASC,GAAatnD,EAAMxnB,EAAO+uE,EAAQtnD,EAAKunD,EAAMC,EAAKvmD,GAEhE,MAAMwmD,EAAK,GAAK1nD,EAAOxnB,GACrBmvE,EAAK,GAAKJ,EAAStnD,GACnB2nD,EAAK,GAAKJ,EAAOC,GAiBnB,OApBAvmD,EAAMA,GA/BC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAmCjD,IAAK,EAAKwmD,EACdxmD,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAK,EAAKymD,EACdzmD,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAI0mD,EACd1mD,EAAI,IAAM,EACVA,EAAI,KAAOlB,EAAOxnB,GAASkvE,EAC3BxmD,EAAI,KAAOjB,EAAMsnD,GAAUI,EAC3BzmD,EAAI,KAAOumD,EAAMD,GAAQI,EACzB1mD,EAAI,IAAM,EACHA,CACT,CAYO,SAAS3gC,GAAMjF,EAAGjH,EAAGC,EAAG8zB,EAAG8Y,GAkBhC,OAjBAA,EAAMA,GAjEC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAkEjD,GAAK5lC,EAAE,GAAKjH,EAChB6sC,EAAI,GAAK5lC,EAAE,GAAKjH,EAChB6sC,EAAI,GAAK5lC,EAAE,GAAKjH,EAChB6sC,EAAI,GAAK5lC,EAAE,GAAKjH,EAChB6sC,EAAI,GAAK5lC,EAAE,GAAKhH,EAChB4sC,EAAI,GAAK5lC,EAAE,GAAKhH,EAChB4sC,EAAI,GAAK5lC,EAAE,GAAKhH,EAChB4sC,EAAI,GAAK5lC,EAAE,GAAKhH,EAChB4sC,EAAI,GAAK5lC,EAAE,GAAK8sB,EAChB8Y,EAAI,GAAK5lC,EAAE,GAAK8sB,EAChB8Y,EAAI,IAAM5lC,EAAE,IAAM8sB,EAClB8Y,EAAI,IAAM5lC,EAAE,IAAM8sB,EAClB8Y,EAAI,IAAM5lC,EAAE,IACZ4lC,EAAI,IAAM5lC,EAAE,IACZ4lC,EAAI,IAAM5lC,EAAE,IACZ4lC,EAAI,IAAM5lC,EAAE,IACL4lC,CACT,CAYO,SAASzyB,GAAUnT,EAAGjH,EAAGC,EAAG8zB,EAAG8Y,GAEpC,IAAI2mD,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAwC3D,OAtCIltF,KAHJ4lC,EAAMA,GAhGC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAoGnDA,EAAI,IAAM5lC,EAAE,GAAKjH,EAAIiH,EAAE,GAAKhH,EAAIgH,EAAE,GAAK8sB,EAAI9sB,EAAE,IAC7C4lC,EAAI,IAAM5lC,EAAE,GAAKjH,EAAIiH,EAAE,GAAKhH,EAAIgH,EAAE,GAAK8sB,EAAI9sB,EAAE,IAC7C4lC,EAAI,IAAM5lC,EAAE,GAAKjH,EAAIiH,EAAE,GAAKhH,EAAIgH,EAAE,IAAM8sB,EAAI9sB,EAAE,IAC9C4lC,EAAI,IAAM5lC,EAAE,GAAKjH,EAAIiH,EAAE,GAAKhH,EAAIgH,EAAE,IAAM8sB,EAAI9sB,EAAE,MAE9CusF,EAAMvsF,EAAE,GACRwsF,EAAMxsF,EAAE,GACRysF,EAAMzsF,EAAE,GACR0sF,EAAM1sF,EAAE,GACR2sF,EAAM3sF,EAAE,GACR4sF,EAAM5sF,EAAE,GACR6sF,EAAM7sF,EAAE,GACR8sF,EAAM9sF,EAAE,GACR+sF,EAAM/sF,EAAE,GACRgtF,EAAMhtF,EAAE,GACRitF,EAAMjtF,EAAE,IACRktF,EAAMltF,EAAE,IAER4lC,EAAI,GAAK2mD,EACT3mD,EAAI,GAAK4mD,EACT5mD,EAAI,GAAK6mD,EACT7mD,EAAI,GAAK8mD,EACT9mD,EAAI,GAAK+mD,EACT/mD,EAAI,GAAKgnD,EACThnD,EAAI,GAAKinD,EACTjnD,EAAI,GAAKknD,EACTlnD,EAAI,GAAKmnD,EACTnnD,EAAI,GAAKonD,EACTpnD,EAAI,IAAMqnD,EACVrnD,EAAI,IAAMsnD,EAEVtnD,EAAI,IAAM2mD,EAAMxzF,EAAI4zF,EAAM3zF,EAAI+zF,EAAMjgE,EAAI9sB,EAAE,IAC1C4lC,EAAI,IAAM4mD,EAAMzzF,EAAI6zF,EAAM5zF,EAAIg0F,EAAMlgE,EAAI9sB,EAAE,IAC1C4lC,EAAI,IAAM6mD,EAAM1zF,EAAI8zF,EAAM7zF,EAAIi0F,EAAMngE,EAAI9sB,EAAE,IAC1C4lC,EAAI,IAAM8mD,EAAM3zF,EAAI+zF,EAAM9zF,EAAIk0F,EAAMpgE,EAAI9sB,EAAE,KAGrC4lC,CACT,CASO,SAASunD,GAAYp0F,EAAGC,EAAG8zB,EAAG8Y,GAoBnC,OAnBAA,EAAMA,GApJC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAsJjD,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM7sC,EACV6sC,EAAI,IAAM5sC,EACV4sC,EAAI,IAAM9Y,EACV8Y,EAAI,IAAM,EAEHA,CACT,CCnIO,MAAMwnD,GAIX,WAAArqG,CAAYsqG,GAKVrqG,KAAKsqG,IAAMD,EAMXrqG,KAAKuqG,SAAWC,GAAcH,EAxCV,0UAhBF,mTA0DlBrqG,KAAKyqG,iBAAmBJ,EAAGK,kBAAkB1qG,KAAKuqG,SAAU,cAC5DvqG,KAAK2qG,iBAAmBN,EAAGK,kBAAkB1qG,KAAKuqG,SAAU,cAE5DvqG,KAAK4qG,eAAiBP,EAAGQ,mBAAmB7qG,KAAKuqG,SAAU,YAC3DvqG,KAAK8qG,sBAAwBT,EAAGQ,mBAC9B7qG,KAAKuqG,SACL,mBAEFvqG,KAAK+qG,gBAAkBV,EAAGQ,mBAAmB7qG,KAAKuqG,SAAU,aAE5DvqG,KAAKgrG,eAAiBX,EAAGY,eACzBZ,EAAGa,WAAWb,EAAGc,aAAcnrG,KAAKgrG,gBAEpChrG,KAAKorG,UAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnDf,EAAGgB,WACDhB,EAAGc,aACH,IAAIn5F,aAAahS,KAAKorG,WACtBf,EAAGiB,aAGLtrG,KAAKurG,eAAiBlB,EAAGY,eACzBZ,EAAGa,WAAWb,EAAGc,aAAcnrG,KAAKurG,gBAEpCvrG,KAAKwrG,UAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnDnB,EAAGgB,WACDhB,EAAGc,aACH,IAAIn5F,aAAahS,KAAKwrG,WACtBnB,EAAGiB,YAET,CAqBE,SAAA/4F,CACEk5F,EACAC,EACAC,EACApQ,EACAC,EACAnN,EACAC,EACAsd,EACAC,EACAC,EACAC,EACAj9F,EACAC,GAEA,MAAMs7F,EAAKrqG,KAAKsqG,SAEH9jG,IAATolG,IACFA,EAAOrQ,QAEI/0F,IAATqlG,IACFA,EAAOrQ,QAEQh1F,IAAb6nF,IACFA,EAAWqd,QAEKllG,IAAd8nF,IACFA,EAAYqd,QAEGnlG,IAAbslG,IACFA,EAAWzd,QAEK7nF,IAAdulG,IACFA,EAAYzd,QAEA9nF,IAAVsI,IACFA,EAAQu7F,EAAGn7F,OAAOJ,YAELtI,IAAXuI,IACFA,EAASs7F,EAAGn7F,OAAOH,QAGrBs7F,EAAG2B,YAAY3B,EAAG4B,WAAYR,GAE9BpB,EAAG6B,WAAWlsG,KAAKuqG,UAEnBF,EAAGa,WAAWb,EAAGc,aAAcnrG,KAAKgrG,gBACpCX,EAAG8B,wBAAwBnsG,KAAKyqG,kBAChCJ,EAAG+B,oBAAoBpsG,KAAKyqG,iBAAkB,EAAGJ,EAAGgC,OAAO,EAAO,EAAG,GACrEhC,EAAGa,WAAWb,EAAGc,aAAcnrG,KAAKurG,gBACpClB,EAAG8B,wBAAwBnsG,KAAK2qG,kBAChCN,EAAG+B,oBAAoBpsG,KAAK2qG,iBAAkB,EAAGN,EAAGgC,OAAO,EAAO,EAAG,GAGrE,IAAIC,EAASC,GAAkB,EAAGz9F,EAAO,EAAGC,GAAU,EAAE,GACxDu9F,EAASE,GAAeF,EAAQV,EAAMC,EAAM,GAC5CS,EAASG,GAAWH,EAAQR,EAAUC,EAAW,GACjD1B,EAAGqC,iBAAiB1sG,KAAK4qG,gBAAgB,EAAO0B,GAEhD,IAAIK,EAAYC,GAAiBrR,EAAOmQ,EAAUlQ,EAAOmQ,EAAW,GACpEgB,EAAYF,GACVE,EACAte,EAAWqd,EACXpd,EAAYqd,EACZ,GAGFtB,EAAGqC,iBAAiB1sG,KAAK8qG,uBAAuB,EAAO6B,GACvDtC,EAAGwC,UAAU7sG,KAAK+qG,gBAAiB,GACnCV,EAAGyC,WAAWzC,EAAG0C,UAAW,EAAG/sG,KAAKorG,UAAUvqG,OAAS,EAC3D,EASA,SAASmsG,GAAa3C,EAAI3lG,EAAMqF,GAC9B,MAAMkjG,EAAS5C,EAAG2C,aAAatoG,GAE/B,GAAe,OAAXuoG,EACF,MAAM,IAAI5kG,MAAM,6BAMlB,GAHAgiG,EAAG6C,aAAaD,EAAQljG,GAExBsgG,EAAG8C,cAAcF,IACZ5C,EAAG+C,mBAAmBH,EAAQ5C,EAAGgD,gBAAiB,CACrD,MAAMpoF,EAAMolF,EAAGiD,iBAAiBL,GAChC,GAAY,OAARhoF,EACF,MAAM,IAAI5c,MAAM,mCAElB,MAAM,IAAIA,MAAM4c,EACpB,CAEE,OAAOgoF,CACT,CAQO,SAASzC,GAAcH,EAAIkD,EAAgBC,GAChD,MAAMC,EAAUpD,EAAGG,gBAEbkD,EAAeV,GAAa3C,EAAIA,EAAGsD,cAAeH,GAClDI,EAAiBZ,GAAa3C,EAAIA,EAAGwD,gBAAiBN,GAC5D,GAAgB,OAAZE,EACF,MAAM,IAAIplG,MAAM,2BAOlB,GAJAgiG,EAAGyD,aAAaL,EAASC,GACzBrD,EAAGyD,aAAaL,EAASG,GAEzBvD,EAAG0D,YAAYN,IACVpD,EAAG2D,oBAAoBP,EAASpD,EAAG4D,aAAc,CAEpD,GAAY,OADA5D,EAAG6D,kBAAkBT,GAE/B,MAAM,IAAIplG,MAAM,oCAElB,MAAM,IAAIA,KACd,CACE,OAAOolG,CACT,CC7KO,SAASU,GAAyBr/F,EAAOC,EAAQC,EAAYC,GAElE,IAAIC,EAeJ,OAbEA,EADEF,GAAcA,EAAWnO,OACgBmO,EAAWG,QAC7CnB,GACA,IAAIE,gBAAgBY,GAAS,IAAKC,GAAU,KAE5CK,SAASC,cAAc,UAE9BP,IACFI,EAAOJ,MAAQA,GAEbC,IACFG,EAAOH,OAASA,GAIhBG,EAAOI,WAAW,QAASL,EAE/B,CAOO,SAASm/F,GAAgB/D,GAC9B,MAAMn7F,EAASm7F,EAAGn7F,OAClBA,EAAOJ,MAAQ,EACfI,EAAOH,OAAS,EAChBs7F,EAAGhmG,MAAMgmG,EAAGgE,iBAAmBhE,EAAGiE,iBAAmBjE,EAAGkE,mBAC1D,CAKO,MAAMC,GAAe,GA+BrB,SAASx3D,GACdqzD,EACAhiC,EACAomC,EACA9xE,EACAwR,EACAC,EACAi/C,EACAC,EACAC,EACAC,EACAkhB,EACAjhB,EACAlhF,EACAmhF,GAEA,MAAM5+E,EAAQlD,KAAK+R,MAAMgf,EAAa0rC,GAChCt5D,EAASnD,KAAK+R,MAAMgf,EAAa8xE,GAKvC,IAAIE,EAEAC,EAqCJ,GA3CAvE,EAAGn7F,OAAOJ,MAAQA,EAClBu7F,EAAGn7F,OAAOH,OAASA,EAOjB6/F,EAAgBvE,EAAGwE,gBACnBxE,EAAG2B,YAAY3B,EAAG4B,WAAY2C,GAE9BvE,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG0E,eAAgB1E,EAAG2E,eACtD3E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG4E,eAAgB5E,EAAG2E,eAClDziG,GACF89F,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoB7E,EAAG8E,QAC1D9E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG+E,mBAAoB/E,EAAG8E,UAE1D9E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoB7E,EAAGgF,SAC1DhF,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG+E,mBAAoB/E,EAAGgF,UAE5DhF,EAAGiF,WACDjF,EAAG4B,WACH,EACA5B,EAAGkF,KACHzgG,EACAC,EACA,EACAs7F,EAAGkF,KACHb,EACA,MAGFC,EAAoBtE,EAAGmF,oBACvBnF,EAAGoF,gBAAgBpF,EAAGqF,YAAaf,GACnCtE,EAAGsF,qBACDtF,EAAGqF,YACHrF,EAAGuF,kBACHvF,EAAG4B,WACH2C,EACA,GAIsB,OAAtBD,EACF,MAAM,IAAItmG,MAAM,gCAElB,GAAsB,OAAlBumG,EACF,MAAM,IAAIvmG,MAAM,4BAGlB,GAAuB,IAAnBklF,EAAQ1sF,OACV,MAAO,CACLiO,QACAC,SACA8gG,YAAalB,EACbmB,QAASlB,GAIb,MAAM9gB,EtJjBC,CAAC/2E,IAAUA,KAAU,KAAW,KsJuBvC,IAAIg5F,EAEAC,EAEAC,EATJ1iB,EAAQziF,SAAQ,SAAUizB,EAAKx8B,EAAGJ,GAChCU,GAAOisF,EAAkB/vD,EAAItoB,OACjC,IAQE,MAAMu4E,EAAc,EAAI7/C,EAExB,GAAKu/C,GAAiC,IAAnBH,EAAQ1sF,QAA2B,IAAX2sF,EAoGzCuiB,EAAgBxiB,EAAQ,GAAGuiB,QAC3BE,EAAcziB,EAAQ,GAAGz+E,MACzBmhG,EAAe1iB,EAAQ,GAAGz+E,UAtG6B,CAEvD,GADAihG,EAAgB1F,EAAGwE,gBACG,OAAlBD,EACF,MAAM,IAAIvmG,MAAM,4BAElB2nG,EAAcpkG,KAAK+R,MAAMjF,GAASo1E,GAAoBE,GACtDiiB,EAAerkG,KAAK+R,MAAMhF,GAAUm1E,GAAoBE,GAIxD,MAAMkiB,EAAa7F,EAAG8F,aAAa9F,EAAG+F,kBAChCC,EAAYzkG,KAAKoM,IAAIg4F,EAAaC,GAClCK,EAAcD,EAAYH,EAAaA,EAAaG,EAAY,EAChEE,EAAmB3kG,KAAK+R,MAAMqyF,EAAcM,GAC5CE,EAAoB5kG,KAAK+R,MAAMsyF,EAAeK,GAEpDjG,EAAG2B,YAAY3B,EAAG4B,WAAY8D,GAE9B1F,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG0E,eAAgB1E,EAAG2E,eACtD3E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG4E,eAAgB5E,EAAG2E,eAClDziG,GACF89F,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoB7E,EAAG8E,QAC1D9E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG+E,mBAAoB/E,EAAG8E,UAE1D9E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoB7E,EAAGgF,SAC1DhF,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG+E,mBAAoB/E,EAAGgF,UAE5DhF,EAAGiF,WACDjF,EAAG4B,WACH,EACA5B,EAAGkF,KACHgB,EACAC,EACA,EACAnG,EAAGkF,KACHb,EACA,MAGF,MAAM+B,EAAKpG,EAAGmF,oBACdnF,EAAGoF,gBAAgBpF,EAAGqF,YAAae,GACnCpG,EAAGsF,qBACDtF,EAAGqF,YACHrF,EAAGuF,kBACHvF,EAAG4B,WACH8D,EACA,GAEF,MAAMW,EAAc,IAAIC,GAAYtG,GAEpC9c,EAAQziF,SAAQ,SAAUizB,EAAKx8B,EAAGJ,GAChC,MAAM+sF,GACHnwD,EAAItoB,OAAO,GAAKq4E,EAAiB,IAAME,EAAcsiB,EAClDniB,IACFpwD,EAAItoB,OAAO,GAAKq4E,EAAiB,IAAME,EAAcsiB,EACnDjiB,EAAW31E,GAASqlB,EAAItoB,QAAUu4E,EAAcsiB,EAChDhiB,EAAY31E,GAAUolB,EAAItoB,QAAUu4E,EAAcsiB,EAIxD,GAHAjG,EAAGoF,gBAAgBpF,EAAGqF,YAAae,GACnCpG,EAAG/W,SAAS,EAAG,EAAGid,EAAkBC,GAEhCzyE,EAAI4vD,WAAY,CAClB,MAAMO,GACHnwD,EAAI4vD,WAAW,GAAKG,EAAiB,IAAME,EAAcsiB,EACtDniB,IACFpwD,EAAI4vD,WAAW,GAAKG,EAAiB,IACvCE,EACAsiB,EACIxhG,EAAQ4J,GAASqlB,EAAI4vD,YAAcK,EAAcsiB,EACjDvhG,EAAS4J,GAAUolB,EAAI4vD,YAAcK,EAAcsiB,EACzDjG,EAAGuG,OAAOvG,EAAGwG,cACbxG,EAAGyG,QACDvkG,EAAc2hF,EAAOtiF,KAAK+R,MAAMuwE,GAChC3hF,EAAc4hF,EAAOviF,KAAK+R,MAAMwwE,GAChC5hF,EAAcuC,EAAQlD,KAAK+R,MAAMuwE,EAAOp/E,GAASlD,KAAK+R,MAAMuwE,GAC5D3hF,EAAcwC,EAASnD,KAAK+R,MAAMwwE,EAAOp/E,GAAUnD,KAAK+R,MAAMwwE,GAExE,CAEMuiB,EAAYn+F,UACVwrB,EAAI+xE,QACJ/xE,EAAIjvB,MACJivB,EAAIhvB,OACJy+E,EACAA,EACAzvD,EAAIjvB,MAAQ,EAAI0+E,EAChBzvD,EAAIhvB,OAAS,EAAIy+E,EACjBjhF,EAAc2hF,EAAOtiF,KAAK+R,MAAMuwE,GAChC3hF,EAAc4hF,EAAOviF,KAAK+R,MAAMwwE,GAChC5hF,EAAc8hF,EAAWziF,KAAK+R,MAAMuwE,EAAOG,GAAYziF,KAAK+R,MAAMuwE,GAClE3hF,EACI+hF,EACA1iF,KAAK+R,MAAMwwE,EAAOG,GAAa1iF,KAAK+R,MAAMwwE,GAC9CoiB,EACAC,GAGFnG,EAAGt/E,QAAQs/E,EAAGwG,aACpB,IACIxG,EAAG0G,kBAAkBN,EACzB,CAME,MAAMliB,EAAgBh2E,GAAW80E,GAC3B+K,EAAgB7/E,GAAWu1E,GAE3BkjB,EACwD5vG,IAE5D,MAAMstF,GACFttF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EAAoBzR,EACrDgyD,IACDvtF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EAAoBzR,EAS5D,MAAO,CAACiwD,IAPJxrF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EAAoBzR,EAO/C3c,KALP5e,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EAAoBzR,EAK5C+xD,KAAIC,KAAI9B,IAHpBzrF,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EAAoBzR,EAG/B1c,KADvB7e,EAAO,GAAG,GAAKmtF,EAAc,IAAMngD,EAAoBzR,EAC7B,EAGjC0tE,EAAGoF,gBAAgBpF,EAAGqF,YAAaf,GACnCtE,EAAG/W,SAAS,EAAG,EAAGxkF,EAAOC,GAGzB,CAEE,MAAM6c,EAAW,GAEX4/E,EAAY,GAEZyF,EAAazG,GACjBH,EA9T2B,uSAbF,8NA+U3BA,EAAG6B,WAAW+E,GAGd,MAAMlG,EAAkBV,EAAGQ,mBAAmBoG,EAAY,aAC1D5G,EAAG2B,YAAY3B,EAAG4B,WAAY8D,GAG9B1F,EAAGwC,UAAU9B,EAAiB,GAG9Bzd,EAAckB,eAAe1jF,SAAQ,SAAU2jF,EAAUltF,EAAGJ,GAC1D,MAAM4I,EAAS0kF,EAAS1kF,OAClB3I,EAASqtF,EAASrtF,QAElBwrF,GAACA,EAAE5sE,GAAEA,EAAE0uE,GAAEA,EAAEC,GAAEA,EAAE9B,GAAEA,EAAE5sE,GAAEA,GAAM+wF,EAAO5vG,GAElC8vG,GACHnnG,EAAO,GAAG,GAAKquF,EAAc,IAAMjqD,EAAmB6hE,EACnDmB,IACFpnG,EAAO,GAAG,GAAKquF,EAAc,IAAMjqD,EAAmB8hE,EACpDmB,GACHrnG,EAAO,GAAG,GAAKquF,EAAc,IAAMjqD,EAAmB6hE,EACnDqB,IACFtnG,EAAO,GAAG,GAAKquF,EAAc,IAAMjqD,EAAmB8hE,EACpDqB,GACHvnG,EAAO,GAAG,GAAKquF,EAAc,IAAMjqD,EAAmB6hE,EACnDuB,IACFxnG,EAAO,GAAG,GAAKquF,EAAc,IAAMjqD,EAAmB8hE,EAE1DrkF,EAASjmB,KAAKinF,EAAI5sE,EAAI0uE,EAAIC,EAAI9B,EAAI5sE,GAClCurF,EAAU7lG,KAAKyrG,EAAKC,EAAKH,EAAKC,EAAKG,EAAKC,EAC9C,IAGI,MAAMjF,EAASC,GAAkB,EAAGz9F,EAAOC,EAAQ,GAAK,EAAE,GACpD67F,EAAiBP,EAAGQ,mBAAmBoG,EAAY,YACzD5G,EAAGqC,iBAAiB9B,GAAgB,EAAO0B,GAE3C,MAAM7B,EAAmBJ,EAAGK,kBAAkBuG,EAAY,cACpDjG,EAAiBX,EAAGY,eAC1BZ,EAAGa,WAAWb,EAAGc,aAAcH,GAC/BX,EAAGgB,WAAWhB,EAAGc,aAAc,IAAIn5F,aAAa4Z,GAAWy+E,EAAGiB,aAC9DjB,EAAG+B,oBAAoB3B,EAAkB,EAAGJ,EAAGgC,OAAO,EAAO,EAAG,GAChEhC,EAAG8B,wBAAwB1B,GAE3B,MAAME,EAAmBN,EAAGK,kBAAkBuG,EAAY,cACpD1F,EAAiBlB,EAAGY,eAC1BZ,EAAGa,WAAWb,EAAGc,aAAcI,GAC/BlB,EAAGgB,WAAWhB,EAAGc,aAAc,IAAIn5F,aAAaw5F,GAAYnB,EAAGiB,aAC/DjB,EAAG+B,oBAAoBzB,EAAkB,EAAGN,EAAGgC,OAAO,EAAO,EAAG,GAChEhC,EAAG8B,wBAAwBxB,GAE3BN,EAAGyC,WAAWzC,EAAG0C,UAAW,EAAGnhF,EAAS/qB,OAAS,EACrD,CAEE,GAAI4sF,EAAa,CACf,MAAM+jB,EAAchH,GAClBH,EAjZuB,4GATF,mIA8ZvBA,EAAG6B,WAAWsF,GACd,MAAMlF,EAASC,GAAkB,EAAGz9F,EAAOC,EAAQ,GAAK,EAAE,GACpD67F,EAAiBP,EAAGQ,mBAAmB2G,EAAa,YAC1DnH,EAAGqC,iBAAiB9B,GAAgB,EAAO0B,GAE3C,MAAMmF,EAAUzvG,MAAMC,QAAQwrF,GAAeA,EAAc,CAAC,EAAG,EAAG,EAAG,KAC/DikB,EAAkBrH,EAAGQ,mBAAmB2G,EAAa,SAGzDnH,EAAGsH,WAAWD,EAAiBD,GAKjC,MAAMhH,EAAmBJ,EAAGK,kBAAkB8G,EAAa,cACrDxG,EAAiBX,EAAGY,eAC1BZ,EAAGa,WAAWb,EAAGc,aAAcH,GAC/BX,EAAG+B,oBAAoB3B,EAAkB,EAAGJ,EAAGgC,OAAO,EAAO,EAAG,GAChEhC,EAAG8B,wBAAwB1B,GAG3B,MAAMmH,EAAQtkB,EAAckB,eAAetuB,QAAO,SACnB0xC,EAC7BnjB,GAEA,MAAMrtF,EAASqtF,EAASrtF,QAClBwrF,GAACA,EAAE5sE,GAAEA,EAAE0uE,GAAEA,EAAEC,GAAEA,EAAE9B,GAAEA,EAAE5sE,GAAEA,GAAM+wF,EAAO5vG,GAExC,OAAOwwG,EAAMr4C,OAAO,CAACqzB,EAAI5sE,EAAI0uE,EAAIC,EAAID,EAAIC,EAAI9B,EAAI5sE,EAAI4sE,EAAI5sE,EAAI2sE,EAAI5sE,GAClE,GAAE,IACHqqF,EAAGgB,WAAWhB,EAAGc,aAAc,IAAIn5F,aAAa4/F,GAAQvH,EAAGiB,aAC3DjB,EAAGyC,WAAWzC,EAAGwH,MAAO,EAAGD,EAAM/wG,OAAS,EAC9C,CAEE,MAAO,CACLiO,QACAC,SACA8gG,YAAalB,EACbmB,QAASlB,EAEb,CC3ZA,MAAMkD,WAAuBp/F,GAI3B,WAAA3S,CAAYuK,GACVrF,MAAM,CACJiH,UAAW5B,EAAQ4B,UACnB0G,OAAQ,IAAM3O,QAAQE,QAAQ,IAAI4N,kBAAkB,IACpDxF,YAAajC,EAAQiC,YACrBF,WAAY/B,EAAQ+B,aAOtBrM,KAAKw6F,kBACqBh0F,IAAxB8D,EAAQmjF,aAA4BnjF,EAAQmjF,YAM9CztF,KAAK68B,YAAcvyB,EAAQqyB,WAM3B38B,KAAKy6F,QAAUnwF,EAAQkjF,OAMvBxtF,KAAK+xG,YAAc,KAMnB/xG,KAAKgyG,aAAe,KAMpBhyG,KAAKiyG,iBAAczrG,EAMnBxG,KAAK06F,gBAAkBpwF,EAAQ8vF,eAM/Bp6F,KAAK26F,gBAAkBrwF,EAAQ+vF,eAM/Br6F,KAAK46F,kBAAoBtwF,EAAQgwF,kBAAoBhwF,EAAQ4B,UAM7DlM,KAAK66F,aAAe,GAMpB76F,KAAK86F,qBAAuB,KAM5B96F,KAAK+6F,SAAW,EAEhB,MAAMnuE,EAAatiB,EAAQsiB,WACrBuuE,EAAmBvuE,EAAW/Q,YAC9Bq2F,EAAuB5nG,EAAQ8vF,eAAev+E,YAMpD7b,KAAKg7F,YAAcpuE,EAAW9Q,WAC1Bo2F,EACE93F,GAAgB+gF,EAAkB+W,GAClC/W,EACF+W,EAEJ,MAAM7kB,EAAertF,KAAK26F,gBAAgBzI,mBACxClyF,KAAK46F,mBAEDK,EAAkBj7F,KAAK26F,gBAAgB9+E,YAC7C,IAAIk7E,EAAkB/2F,KAAK06F,gBAAgB7+E,YAE3C,MAAMq/E,EAAsBD,EACxB7gF,GAAgBizE,EAAc4N,GAC9B5N,EAEJ,GAAqC,IAAjC70E,GAAQ0iF,GAIV,YADAl7F,KAAKmM,MAAQV,GAIX0vF,IAIApE,EAHGA,EAGe38E,GAAgB28E,EAAiBoE,GAFjCA,GAMtB,MAAM/sD,EAAmBpuC,KAAK26F,gBAAgB19D,cAC5Cj9B,KAAK46F,kBAAkB,IAGnB3N,EAAa3iF,EAAQ2iF,WACrB9+C,EAAmBi/C,GACvBxgE,EACAqgE,EACAiO,EACA9sD,GAGF,IAAKjyB,SAASgyB,IAAqBA,GAAoB,EAIrD,YADAnuC,KAAKmM,MAAQV,GAIf,MAAM2vF,OACuB50F,IAA3B8D,EAAQ0sF,eACJ1sF,EAAQ0sF,eACRkD,GAgBN,GAVAl6F,KAAKq7F,eAAiB,IAAIvE,GACxBlqE,EACAqgE,EACAiO,EACAnE,EACA5oD,EAAmBitD,EACnBhtD,EACA9jC,EAAQ6nG,iBAGwC,IAA9CnyG,KAAKq7F,eAAe7M,eAAe3tF,OAGrC,YADAb,KAAKmM,MAAQV,GAIfzL,KAAK+6F,SAAW/6F,KAAK06F,gBAAgB1H,kBAAkB7kD,GACvD,IAAInf,EAAehvB,KAAKq7F,eAAepB,wBAmBvC,GAjBIlD,IACEnqE,EAAW9Q,YACbkT,EAAa,GAAK5S,GAChB4S,EAAa,GACb+nE,EAAgB,GAChBA,EAAgB,IAElB/nE,EAAa,GAAK5S,GAChB4S,EAAa,GACb+nE,EAAgB,GAChBA,EAAgB,KAGlB/nE,EAAe5U,GAAgB4U,EAAc+nE,IAI5Cv+E,GAAQwW,GAEN,CACL,IAAIjT,EAAa,EACbuG,EAAa,EACbsK,EAAW9Q,aACbC,EAAarD,GAASyiF,GACtB74E,EAAa1W,KAAKoQ,OACfgT,EAAa,GAAKmsE,EAAiB,IAAMp/E,IAIxBE,GACpB+S,EAAaxrB,QACbopB,GACA,GAEY9hB,SAAS2K,IACrB,MAAM6lF,EAAct7F,KAAK06F,gBAAgB/I,0BACvCl8E,EACAzV,KAAK+6F,UAEDqC,EAAU9yF,EAAQiwF,gBACxB,IAAK,IAAIgB,EAAOD,EAAY5kF,KAAM6kF,GAAQD,EAAY1kF,KAAM2kF,IAC1D,IAAK,IAAIC,EAAOF,EAAY3kF,KAAM6kF,GAAQF,EAAYzkF,KAAM2kF,IAAQ,CAClE,MAAMn0D,EAAO+1D,EAAQp9F,KAAK+6F,SAAUQ,EAAMC,EAAMx7F,KAAK68B,aACrD,GAAIwK,EAAM,CACR,MAAMhwB,EAASiL,EAAavG,EAC5B/b,KAAK66F,aAAal1F,KAAK,CAAC0hC,OAAMhwB,UAC5C,CACA,GAEUiL,CAAU,IAGmB,IAA7BtiB,KAAK66F,aAAah6F,SACpBb,KAAKmM,MAAQV,EAErB,MArCMzL,KAAKmM,MAAQV,CAsCnB,CAOE,OAAA0H,GACE,OAAOnT,KAAKiyG,WAChB,CAOE,OAAA5+F,GACE,OAAOrT,KAAK+xG,WAChB,CAOE,QAAAz+F,GACE,OAAOtT,KAAKgyG,YAChB,CAKE,UAAAvW,GACE,MAAM2W,EAAc,GACpB,IAAIC,GAAY,EAkDhB,GAjDAryG,KAAK66F,aAAa/vF,SAASf,IACzB,MAAMs9B,EAAOt9B,EAAOs9B,KACpB,IAAKA,GAAQA,EAAKz6B,aAAenB,EAC/B,OAEF,MAAMuH,EAAOq0B,EAAKl0B,UACZq6E,EAASxtF,KAAKy6F,QAIpB,IAAI6X,EACJ,MAAMC,EAAY1gG,GAAYw1B,EAAKh0B,WAC/Bk/F,EACFD,EAAWC,GAEXF,GAAY,EACZC,EAAWlgG,GAAQX,GAAY41B,EAAKh0B,aAEtC,MAAMm/F,EAAY,CAACx/F,EAAK,GAAK,EAAIw6E,EAAQx6E,EAAK,GAAK,EAAIw6E,GACjDilB,EAAUH,aAAoBtgG,aAC9B0gG,EAAaF,EAAU,GAAKA,EAAU,GACtCG,EAAWF,EAAUzgG,aAAeD,kBACpC6gG,EAAY,IAAID,EAASL,EAAS18F,QAClCi9F,EAAkBF,EAASG,kBAC3BC,EAAiBF,EAAkBD,EAAU/xG,OAAU6xG,EACvDM,EAAcJ,EAAUK,WAAaT,EAAU,GAC/CU,EAAYtnG,KAAKoQ,MACrBg3F,EAAcH,EAAkBL,EAAU,IAEtC/8F,EAASzV,KAAK06F,gBAAgBxI,mBAAmB7qD,EAAKn7B,WAC5DuJ,EAAO,IAAM1L,EAAOsN,OACpB5B,EAAO,IAAM1L,EAAOsN,OACpB,MAAMs2E,EAAa3tF,KAAKg7F,aAAax3F,QACjCmqF,IACFA,EAAW,IAAM5jF,EAAOsN,OACxBs2E,EAAW,IAAM5jF,EAAOsN,QAE1B+6F,EAAYzsG,KAAK,CACf8P,OAAQA,EACRk4E,WAAYA,EACZ7rF,KAAM8wG,EACNlE,SAAUiE,EACVI,cAAeA,EACfP,UAAWA,EACXU,UAAWA,GACX,IAEJlzG,KAAK66F,aAAah6F,OAAS,EAEA,IAAvBuxG,EAAYvxG,OAGd,OAFAb,KAAKmM,MAAQV,OACbzL,KAAK4H,UAIP,MAAMkiC,EAAI9pC,KAAK46F,kBAAkB,GAC3B5nF,EAAOhT,KAAK26F,gBAAgBhI,YAAY7oD,GACxCqpE,EAA8B,iBAATngG,EAAoBA,EAAOA,EAAK,GACrDogG,EAA+B,iBAATpgG,EAAoBA,EAAOA,EAAK,GACtDqgG,EAAWF,EAAcnzG,KAAK68B,YAC9By2E,EAAYF,EAAepzG,KAAK68B,YAChCuR,EAAmBpuC,KAAK26F,gBAAgB19D,cAAc6M,GACtDqE,EAAmBnuC,KAAK06F,gBAAgBz9D,cAAcj9B,KAAK+6F,UAE3D1N,EAAertF,KAAK26F,gBAAgBzI,mBACxClyF,KAAK46F,mBAGDsY,EAAYd,EAAY,GAAGc,UAC3BK,EAAQ,IAAInB,EAAY,GAAG1D,SAASwE,EAAYG,EAAWC,GAE3DjJ,EAAK8D,GAAyBkF,EAAUC,EAAW9E,GAAc,CACrEgF,oBAAoB,EACpBC,WAAW,IAGb,IAAIC,EACJ,MAAMlyF,EAAS6oF,EAAGkF,KAClB,IAAIoE,EACJ,GAAIvB,EAAY,GAAG1D,UAAY18F,aAAc,CAC3C2hG,EAActJ,EAAGgC,MACjBhC,EAAGuJ,aAAa,4BAChBvJ,EAAGuJ,aAAa,qBAChBvJ,EAAGuJ,aAAa,mBAGhBF,EADqC,OADnBrJ,EAAGuJ,aAAa,6BAEE5zG,KAAKuM,WAC/C,MACMonG,EAActJ,EAAGwJ,cACjBH,EAAkB1zG,KAAKuM,YAKzB,IAAK,IAAIunG,EADOloG,KAAKgS,KAAKs1F,EADF,GAEI,EAAGY,GAAU,IAAKA,EAAQ,CACpD,MAAMvmB,EAAU,GAChB,IAAK,IAAIhsF,EAAI,EAAGwG,EAAMqqG,EAAYvxG,OAAQU,EAAIwG,IAAOxG,EAAG,CACtD,MAAMwyG,EAAa3B,EAAY7wG,GAEzBixG,EAAYuB,EAAWvB,UACvB1jG,EAAQ0jG,EAAU,GAClBzjG,EAASyjG,EAAU,GAEnB1wG,EAAO,IAAIiyG,EAAWrF,SAXR,EAWmC5/F,EAAQC,GACzDilG,EAAQD,EAAWjyG,KACzB,IAAIuV,EAbgB,EAaPy8F,EACb,IAAK,IAAIj3F,EAAI,EAAG9U,EAAMjG,EAAKjB,OAAQgc,EAAI9U,EAAK8U,GAdxB,EAelB/a,EAAK+a,GAAKm3F,EAAM38F,GAChBvV,EAAK+a,EAAI,GAAKm3F,EAAM38F,EAAS,GAC7BvV,EAAK+a,EAAI,GAAKm3F,EAAM38F,EAAS,GAC7BvV,EAAK+a,EAAI,GAAKm3F,EAAM38F,EAAS,GAC7BA,GAAU67F,EAGZ,MAAMpD,EAAUzF,EAAGwE,gBACnBxE,EAAG2B,YAAY3B,EAAG4B,WAAY6D,GAE1B4D,GACFrJ,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoB7E,EAAG8E,QAC1D9E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG+E,mBAAoB/E,EAAG8E,UAE1D9E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoB7E,EAAGgF,SAC1DhF,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG+E,mBAAoB/E,EAAGgF,UAE5DhF,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG0E,eAAgB1E,EAAG2E,eACtD3E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG4E,eAAgB5E,EAAG2E,eACtD3E,EAAGiF,WACDjF,EAAG4B,WACH,EACAzqF,EACA1S,EACAC,EACA,EACAyS,EACAmyF,EACA7xG,GAGFyrF,EAAQ5nF,KAAK,CACX8P,OAAQs+F,EAAWt+F,OACnBk4E,WAAYomB,EAAWpmB,WACvBmiB,QAASA,EACThhG,MAAOA,EACPC,OAAQA,GAElB,CAEM,MAAM8gG,YAACA,EAAW/gG,MAAEA,EAAKC,OAAEA,GAAU2sF,GACnC2O,EACA8I,EACAC,EACApzG,KAAK68B,YACLsR,EACAC,EACAi/C,EACArtF,KAAKq7F,eACL9N,EACAvtF,KAAKy6F,QACLkZ,EACA3zG,KAAKw6F,aACLkZ,GAIIO,EAAOnlG,EACPolG,EAzEgB,EAyETnlG,EACPjN,EAAO,IAAIswG,EAAY,GAAG1D,SAASuF,EAAOC,GAChD7J,EAAGoF,gBAAgBpF,EAAGqF,YAAaG,GACnCxF,EAAG8J,WAAW,EAAG,EAAGrlG,EAAOC,EAAQs7F,EAAGkF,KAAMoE,EAAa7xG,GAEzD,IAAIuV,EA9EkB,EA8ETy8F,EACb,IAAK,IAAIvyG,EAAI,EAAGwG,EAAMjG,EAAKjB,OAAQU,EAAIwG,EAAKxG,GA/EtB,EA+E4C,CAEhE,MAAM6yG,GAASH,EAAO,GAAM1yG,EAAI2yG,EAAQ,IAAMA,EAAQ3yG,EAAI2yG,EAC1DX,EAAMl8F,GAAUvV,EAAKsyG,GACrBb,EAAMl8F,EAAS,GAAKvV,EAAKsyG,EAAQ,GACjCb,EAAMl8F,EAAS,GAAKvV,EAAKsyG,EAAQ,GACjCb,EAAMl8F,EAAS,GAAKvV,EAAKsyG,EAAQ,GACjC/8F,GAAU67F,CAClB,CACA,CAKI,GAHA9E,GAAgB/D,GAChBmE,GAAa7oG,KAAK0kG,EAAGn7F,QAEjBmjG,EAAW,CACb,MAAM3iG,EAAUb,GAAsBskG,EAAaC,GAC7ChgG,EAAY,IAAIihG,UAAUd,EAAOJ,GACvCzjG,EAAQ4kG,aAAalhG,EAAW,EAAG,GACnCpT,KAAK+xG,YAAcriG,EAAQR,MACjC,MACMlP,KAAK+xG,YAAcwB,EAErBvzG,KAAKiyG,YAAc,CAACrmG,KAAK+R,MAAM01F,GAAWznG,KAAK+R,MAAM21F,IACrDtzG,KAAKmM,MAAQV,EACbzL,KAAK4H,SACT,CAME,IAAAiF,GACE,GAAI7M,KAAKmM,QAAUV,GAAkBzL,KAAKmM,QAAUV,EAClD,OAEFzL,KAAKmM,MAAQV,EACbzL,KAAK4H,UAEL,IAAI+zF,EAAa,EAEjB37F,KAAK86F,qBAAuB,GAC5B96F,KAAK66F,aAAa/vF,SAAQ,EAAEu8B,WAC1B,MAAMl7B,EAAQk7B,EAAKz6B,WACnB,GAAIT,IAAUV,GAAkBU,IAAUV,EACxC,OAEFkwF,IAEA,MAAMC,EAAkB90F,EAAOugC,EAAMxnC,GAAkB,KACrD,MAAMsM,EAAQk7B,EAAKz6B,WAEjBT,GAASV,GACTU,GAASV,GACTU,GAASV,IAETpE,EAAcu0F,GACdD,IACmB,IAAfA,IACF37F,KAAK67F,mBACL77F,KAAKy7F,cAEjB,IAEMz7F,KAAK86F,qBAAqBn1F,KAAKi2F,EAAgB,IAG9B,IAAfD,EACFj4D,WAAW1jC,KAAKy7F,WAAWv0F,KAAKlH,MAAO,GAEvCA,KAAK66F,aAAa/vF,SAAQ,UAAUu8B,KAACA,IACrBA,EAAKz6B,YACNnB,GACX47B,EAAKx6B,MAEf,GAEA,CAKE,gBAAAgvF,GACE77F,KAAK86F,qBAAqBhwF,QAAQzD,GAClCrH,KAAK86F,qBAAuB,IAChC,EClfA,MAAMyZ,WAAuB5X,GAI3B,WAAA58F,CAAYuK,GACV,MAAMqR,OACmBnV,IAAvB8D,EAAQqR,WAA2B,YAAcrR,EAAQqR,WAE3D,IAAI4I,EAAWja,EAAQia,cACN/d,IAAb+d,GAA0B5I,IAC5B4I,EAAWwwE,GAAU,CACnBt/E,OAAQm/E,GAAqBj5E,GAC7B4tB,cAAej/B,EAAQi/B,cACvBwH,QAASzmC,EAAQymC,QACjB9E,QAAS3hC,EAAQ2hC,QACjBolD,SAAU/mF,EAAQ+mF,YAItBpsF,MAAM,CACJssD,UAAW,GACXvZ,aAAc1tC,EAAQ0tC,aACtBikD,wBAAyB3xF,EAAQ2xF,wBACjCtgF,WAAYA,EACZ4I,SAAUA,EACVpY,MAAO7B,EAAQ6B,MACfuP,MAAOpR,EAAQoR,MACfrP,WAAY/B,EAAQ+B,WACpBE,YAAajC,EAAQiC,YACrBjF,IAAKgD,EAAQhD,IACb01F,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAKy6F,aAA6Bj0F,IAAnB8D,EAAQkjF,OAAuBljF,EAAQkjF,OAAS,EAM/DxtF,KAAKoxF,UAAY9mF,EAAQ+mF,SAAWr/B,GAAO1nD,EAAQ+mF,UAAY,KAM/DrxF,KAAKkxF,WAAa,KAMlBlxF,KAAKk+F,iBAAmB,CAAE,EAK1Bl+F,KAAK2S,QAAUrI,EAAQsI,OAKvB5S,KAAKo5E,kBAAoBp5E,KAAKo5E,kBAAkBlyE,KAAKlH,MAKrDA,KAAKkzG,eAAkC1sG,IAAtB8D,EAAQ4oG,UAA0B,EAAI5oG,EAAQ4oG,UAM/DlzG,KAAKw0G,uBAAyB,CAAE,EAMhCx0G,KAAK2+B,aAAer0B,EAAQm0B,aAAe,YAK3Cz+B,KAAKmyG,gBAAkB,IAC3B,CAQE,YAAAsC,CAAatjB,GACXnxF,KAAKkxF,WAAaC,CACtB,CASE,WAAAwB,CAAY7oD,GACV,GAAI9pC,KAAKkxF,WACP,OAAOlxF,KAAKkxF,WAAWpnD,GAEzB,GAAI9pC,KAAKoxF,UACP,OAAOpxF,KAAKoxF,UAEd,MAAM7sE,EAAWvkB,KAAKq9F,cACtB,OAAO94E,EAAWytC,GAAOztC,EAASouE,YAAY7oD,IAAM,CAAC,IAAK,IAC9D,CAOE,sBAAAmzD,CAAuBthF,GACrB,MAAMwjF,EAAWn/F,KAAKszB,gBACtB,OACI6rE,IAAYlyE,GAAWkyE,EAAUxjF,IAClC3b,KAAKmyG,gBAKD,EAHEnyG,KAAKy6F,OAIlB,CAME,SAAAmO,CAAUh2F,GACR5S,KAAK2S,QAAUC,CACnB,CAUE,cAAA8hG,CAAe5qE,EAAG/zB,EAAGC,EAAGi3E,EAAYrgE,GAClC,MAAMwtE,EACJp6F,KAAKukB,UAAYvkB,KAAKm9F,yBAAyBvwE,GAAcqgE,GACzD0nB,EAAuB/oG,KAAKoM,IAAIpU,MACpC,KACAw2F,EAAe/oD,iBAAiBlgB,KAAI,CAACxU,EAAGmtB,KACtC,MAAMunD,EAAWr/B,GAAOooC,EAAezH,YAAY7oD,IAC7C8qE,EAAc50G,KAAK2yF,YAAY7oD,GACrC,OAAOl+B,KAAKoM,IACV48F,EAAY,GAAKvjB,EAAS,GAC1BujB,EAAY,GAAKvjB,EAAS,GAC3B,KAICgJ,EAAiBr6F,KAAKm9F,yBAAyBlQ,GAC/C/gF,EAAY,CAAC49B,EAAG/zB,EAAGC,GACnBskF,EAAmBt6F,KAAKy9F,+BAC5BvxF,EACA+gF,GAGI3iF,EAAU5D,OAAO2C,OACrB,CACEujB,WAAYA,GAAcqgE,EAC1BmN,iBACAnN,aACAoN,iBACAnuF,YACAouF,mBACA39D,WAAYg4E,EACZnnB,OAAQxtF,KAAKy6F,QACbF,gBAAiB,CAACzwD,EAAG/zB,EAAGC,EAAG2mB,IACzB38B,KAAKo9F,QAAQtzD,EAAG/zB,EAAGC,EAAG2mB,GACxBw1E,gBAAiBnyG,KAAKmyG,iBAEgCnyG,KAAgB,aAEpEqnC,EAAI,IACcyqE,GAAexnG,GAGvC,OADA+8B,EAAK//B,IAAMtH,KAAK0M,SACT26B,CACX,CAWE,OAAA+1D,CAAQtzD,EAAG/zB,EAAGC,EAAG2mB,EAAYhhB,GAC3B,MAAMyS,EAAmBpuB,KAAKszB,gBAC9B,GACE3X,IACEyS,IAAqBnB,GAAWmB,EAAkBzS,IAClD3b,KAAKmyG,iBAEP,OAAOnyG,KAAK00G,eAAe5qE,EAAG/zB,EAAGC,EAAG2F,EAAYyS,GAGlD,MAAMpb,EAAOhT,KAAK2yF,YAAY7oD,GAExB+qE,EAAe70G,KAAK2S,QAEpBO,EAAa,IAAI4hG,gBAKjBC,EAAgB,CACpBC,OAAQ9hG,EAAW8hG,OACnBv2E,YAAaz+B,KAAK2+B,cAGdzyB,EAAYlM,KAAKy9F,+BAA+B,CAAC3zD,EAAG/zB,EAAGC,IAC7D,IAAK9J,EACH,OAAO,KAGT,MAAM+oG,EAAW/oG,EAAU,GACrBgpG,EAAWhpG,EAAU,GACrBipG,EAAWjpG,EAAU,GACrB4R,EAAQ9d,KAAKq9F,eAAezM,iBAAiBqkB,GAC/Cn3F,IACFi3F,EAAcl+F,KAAOiH,EAAMnF,YAAc,GAW3C,MAAMrO,EAAU5D,OAAO2C,OACrB,CACE6C,UAAW,CAAC49B,EAAG/zB,EAAGC,GAClBpD,OAZJ,WACE,OAAO/O,GAAU,WACf,OAAOgxG,EAAaI,EAAUC,EAAUC,EAAUJ,EAC1D,GACA,EASQ/hG,KAAMA,EACNE,WAAYA,GAEdlT,KAAK+8F,aAGD11D,EAAI,IACc30B,GAASpI,GAKjC,OAHA+8B,EAAK//B,IAAMtH,KAAK0M,SAChB26B,EAAK/hC,iBAAiBzF,EAAkBG,KAAKo5E,mBAEtC/xC,CACX,CAME,iBAAA+xC,CAAkBvzE,GAChB,MAAMwhC,EAAoDxhC,EAAY,OAChE04F,EAAMh2F,EAAO8+B,GACbm3D,EAAYn3D,EAAKz6B,WACvB,IAAIlI,EACA85F,GAAa/yF,GACfzL,KAAKk+F,iBAAiBK,IAAO,EAC7B75F,EAAOk5F,IACEW,KAAOv+F,KAAKk+F,0BACdl+F,KAAKk+F,iBAAiBK,GAC7B75F,EACE85F,GAAa/yF,EACTmyF,GACAY,GAAa/yF,EACXmyF,QACAp3F,GAEN9B,GACF1E,KAAK4F,cAAc,IAAI+3F,GAAgBj5F,EAAM2iC,GAEnD,CAOE,wBAAA81D,CAAyBxhF,GACvB,MAAMwjF,EAAWn/F,KAAKszB,gBACtB,GACEtzB,KAAKukB,YACH46E,GAAYlyE,GAAWkyE,EAAUxjF,MAClC3b,KAAKmyG,gBAEN,OAAOnyG,KAAKukB,SAGd,MAAM66E,EAAU72F,EAAOoT,GAKvB,OAJMyjF,KAAWp/F,KAAKw0G,yBACpBx0G,KAAKw0G,uBAAuBpV,GAC1BjC,GAAyBxhF,IAEtB3b,KAAKw0G,uBAAuBpV,EACvC,CAcE,wBAAAM,CAAyB/jF,EAAYgkF,GACnC,MAAMC,EAAOtsE,GAAc3X,GAC3B,GAAIikF,EAAM,CACR,MAAMR,EAAU72F,EAAOq3F,GACjBR,KAAWp/F,KAAKw0G,yBACpBx0G,KAAKw0G,uBAAuBpV,GAAWO,EAE/C,CACA,EC9XA,MAAMyV,WAAoB14E,GAWxB,WAAA38B,CACE6sB,EACAqgE,EACAI,EACAj/C,EACAzR,EACA04E,EACA9oG,GAEA,IAAIwqF,EAAkBnqE,EAAW/Q,YAC7Bk7E,GAAmBnqE,EAAW9Q,aAChCi7E,EAAkBA,EAAgBvzF,QAClCuzF,EAAgB,IAAMhgF,IACtBggF,EAAgB,GAAKhgF,KAEvB,IAAIkkF,EAAkBhO,EAAWpxE,YAC7Bo/E,GAAmBhO,EAAWnxE,aAChCm/E,EAAkBA,EAAgBz3F,QAClCy3F,EAAgB,IAAMlkF,IACtBkkF,EAAgB,GAAKlkF,KAGvB,MAAMmkF,EAAsBD,EACxB7gF,GAAgBizE,EAAc4N,GAC9B5N,EAGEl/C,EAAmB6+C,GACvBpgE,EACAqgE,EAHmBr0E,GAAUsiF,GAK7B9sD,GAKIk/C,EAAgB,IAAIwJ,GACxBlqE,EACAqgE,EACAiO,EACAnE,EAN6BmD,GAO7B/rD,EACAC,GAGIpf,EAAes+D,EAAc2M,wBAC7Bqb,EAAc9wG,GAAQwqB,GACxB,KACAqmF,EAAiBrmF,EAAcmf,EAAkBxR,GAC/CxwB,EAAQmpG,EAAc74E,GAAkBA,GACxC84E,EAAmBD,EAAcA,EAAYt4E,gBAAkB,EAErE/3B,MAAMooF,EAAcj/C,EAAkBmnE,EAAkBppG,GAMxDnM,KAAKo3F,YAAcnK,EAMnBjtF,KAAKy3F,iBAAmBV,EAMxB/2F,KAAKq7F,eAAiB/N,EAMtBttF,KAAKgrC,kBAAoBoD,EAMzBpuC,KAAKw1G,cAAgBnoB,EAMrBrtF,KAAKy1G,aAAeH,EAMpBt1G,KAAK01G,kBAAoBH,EAMzBv1G,KAAKm8F,aAAe5vF,EAMpBvM,KAAKs+B,QAAU,KAMft+B,KAAK21G,mBAAqB,IAC9B,CAME,eAAAx1G,GACMH,KAAKmM,OAASswB,IAChBz8B,KAAK41G,kBAEP3wG,MAAM9E,iBACV,CAME,QAAA48B,GACE,OAAO/8B,KAAKs+B,OAChB,CAKE,aAAAhL,GACE,OAAOtzB,KAAKo3F,WAChB,CAKE,UAAAqE,GACE,MAAM9kB,EAAc32E,KAAKy1G,aAAa7oG,WACtC,GAAI+pE,GAAel6C,GAAmB,CACpC,MAAM3tB,EAAQ4J,GAAS1Y,KAAKw1G,eAAiBx1G,KAAKgrC,kBAC5Cj8B,EAAS4J,GAAU3Y,KAAKw1G,eAAiBx1G,KAAKgrC,kBACpDhrC,KAAKs+B,QAAUo9D,GACb5sF,EACAC,EACA/O,KAAK01G,kBACLvmB,GAAmBnvF,KAAKy1G,aAAax4E,iBACrCj9B,KAAKy3F,iBACLz3F,KAAKgrC,kBACLhrC,KAAKw1G,cACLx1G,KAAKq7F,eACL,CACE,CACE5lF,OAAQzV,KAAKy1G,aAAa55F,YAC1BxJ,MAAOrS,KAAKy1G,aAAa14E,aAG7B,OACAv2B,EACAxG,KAAKm8F,cACL,EAER,CACIn8F,KAAKmM,MAAQwqE,EACb32E,KAAK4H,SACT,CAME,IAAAiF,GACE,GAAI7M,KAAKmM,OAASswB,GAAiB,CACjCz8B,KAAKmM,MAAQswB,GACbz8B,KAAK4H,UAEL,MAAM+uE,EAAc32E,KAAKy1G,aAAa7oG,WAClC+pE,GAAel6C,IAAqBk6C,GAAel6C,GACrDz8B,KAAKy7F,cAELz7F,KAAK21G,mBAAqB7uG,EACxB9G,KAAKy1G,aACL51G,GACCowB,IACC,MAAM0mD,EAAc32E,KAAKy1G,aAAa7oG,WAEpC+pE,GAAel6C,IACfk6C,GAAel6C,KAEfz8B,KAAK41G,kBACL51G,KAAKy7F,aACnB,IAGQz7F,KAAKy1G,aAAa5oG,OAE1B,CACA,CAKE,eAAA+oG,GACEvuG,EAEIrH,KACR,oBAEIA,KAAK21G,mBAAqB,IAC9B,EC3PO,MCkBME,GAMK,iBANLA,GAaG,eAbHA,GAoBK,iBAYX,MAAMC,WAAyB/vG,EAKpC,WAAAhG,CAAY2E,EAAM2N,GAChBpN,MAAMP,GAON1E,KAAKqS,MAAQA,CACjB,EAgCA,MAAM0jG,WAAoBja,GAIxB,WAAA/7F,CAAYuK,GACVrF,MAAM,CACJ+yC,aAAc1tC,EAAQ0tC,aACtBr8B,WAAYrR,EAAQqR,WACpBxP,MAAO7B,EAAQ6B,MACfI,iBAC0B/F,IAAxB8D,EAAQiC,aAA4BjC,EAAQiC,cAMhDvM,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAK4S,OAAStI,EAAQsI,QAAU,KAMhC5S,KAAK6rC,kBACqBrlC,IAAxB8D,EAAQq/B,YAA4Br/B,EAAQq/B,YAAc,KAM5D3pC,KAAKg2G,kBAAoB,KAMzBh2G,KAAKi2G,qBAAuB,EAM5Bj2G,KAAKqS,MAAQ,KAMbrS,KAAKk2G,cAMLl2G,KAAKm2G,kBAMLn2G,KAAKo2G,UAAU9rG,EAAQsI,QAAmC,IAA1BtI,EAAQsI,OAAO/R,OAM/Cb,KAAKq2G,kBAAoB,IAC7B,CAME,cAAAhlE,GACE,OAAOrxC,KAAK6rC,YAChB,CAKE,cAAAyqE,CAAe3sE,GACb3pC,KAAK6rC,aAAelC,CACxB,CAOE,qBAAA4sE,CAAsBt9F,GACpB,MAAM0wB,EAAc3pC,KAAKqxC,iBACzB,GAAI1H,EAAa,CAEf1wB,EAAa0wB,EADDzoC,EAAkByoC,EAAa1wB,EAAY,GAE7D,CACI,OAAOA,CACX,CASE,QAAA8jB,CAAStnB,EAAQwD,EAAY0jB,EAAYhhB,GACvC,MAAMyS,EAAmBpuB,KAAKszB,gBAC9B,IACGlF,IACAzS,GACDsR,GAAWmB,EAAkBzS,GAM7B,OAJIyS,IACFzS,EAAayS,GAGRpuB,KAAKw2G,iBAAiB/gG,EAAQwD,EAAY0jB,EAAYhhB,GAE/D,GAAI3b,KAAKg2G,kBAAmB,CAC1B,GACEh2G,KAAKi2G,sBAAwBj2G,KAAK6H,eAClColB,GAAWjtB,KAAKg2G,kBAAkB1iF,gBAAiB3X,IACnD3b,KAAKg2G,kBAAkB/4E,iBAAmBhkB,GAC1C/W,GAAOlC,KAAKg2G,kBAAkBn6F,YAAapG,GAE3C,OAAOzV,KAAKg2G,kBAEdh2G,KAAKg2G,kBAAkB91G,UACvBF,KAAKg2G,kBAAoB,IAC/B,CAcI,OAZAh2G,KAAKg2G,kBAAoB,IAAIZ,GAC3BhnF,EACAzS,EACAlG,EACAwD,EACA0jB,GACA,CAAClnB,EAAQwD,EAAY0jB,IACnB38B,KAAKw2G,iBAAiB/gG,EAAQwD,EAAY0jB,EAAYvO,IACxDpuB,KAAKu8F,kBAEPv8F,KAAKi2G,qBAAuBj2G,KAAK6H,cAE1B7H,KAAKg2G,iBAChB,CAWE,gBAAAQ,CAAiB/gG,EAAQwD,EAAY0jB,EAAYhhB,GAC/C,GAAI3b,KAAK4S,OAAQ,CACf,MAAM6jG,EAAgBC,GAAiBjhG,EAAQwD,EAAY0jB,EAAY,GACjEO,EAAoBl9B,KAAKu2G,sBAAsBt9F,GACrD,GACEjZ,KAAKqS,QACJrS,KAAKo2G,SACHp2G,KAAKq2G,oBAAsB16F,IACxB3b,KAAKk2G,eACL5/F,GAAetW,KAAKk2G,cAAeO,IACnCngG,GAAetW,KAAKqS,MAAMwJ,YAAa46F,MACvCz2G,KAAKm2G,mBACLhnB,GAAmBnvF,KAAKm2G,qBACtBj5E,GACFiyD,GAAmBnvF,KAAKqS,MAAM4qB,mBAC5BC,IAER,OAAOl9B,KAAKqS,MAEdrS,KAAKq2G,kBAAoB16F,EACzB3b,KAAKk2G,cAAgBO,EACrBz2G,KAAKm2G,kBAAoBj5E,EACzBl9B,KAAKqS,MAAQ,IAAIqqB,GACf+5E,EACAv5E,EACAP,EACA38B,KAAK4S,QAEP5S,KAAKqS,MAAM/M,iBACTzF,EACAG,KAAK22G,kBAAkBzvG,KAAKlH,MAEpC,CACI,OAAOA,KAAKqS,KAChB,CAOE,iBAAAskG,CAAkB9wG,GAChB,MAAMwM,EAAsDxM,EAAY,OACxE,IAAInB,EACJ,OAAQ2N,EAAMzF,YACZ,KAAK6vB,GACHz8B,KAAKwjE,SAAU,EACf9+D,EAAOmxG,GACP,MACF,KAAKp5E,GACHz8B,KAAKwjE,SAAU,EACf9+D,EAAOmxG,GACP,MACF,KAAKp5E,GACHz8B,KAAKwjE,SAAU,EACf9+D,EAAOmxG,GACP,MACF,QACE,OAEA71G,KAAKyG,YAAY/B,IACnB1E,KAAK4F,cAAc,IAAIkwG,GAAiBpxG,EAAM2N,GAEpD,EASO,SAASukG,GAAyBvkG,EAAO0rB,GACI1rB,EAAM0qB,WAAYgB,IAAMA,CAC5E,CAUO,SAAS24E,GAAiBjhG,EAAQwD,EAAY0jB,EAAYoM,GAC/D,MAAM8tE,EAAkB59F,EAAa0jB,EAC/B3jB,EAASJ,GAAUnD,GACnBkzB,EAAY/qB,GAAKlF,GAASjD,GAAUohG,ED3VpB,GC4VhBjuE,EAAahrB,GAAKjF,GAAUlD,GAAUohG,ED5VtB,GCiWtB,OAAO99F,GAAkBC,EAAQ69F,EAAiB,EAAG,CAHhCluE,EAAY,EADb/qB,IAAOmrB,EAAQ,GAAKJ,EAAa,ED7V/B,GCgWAC,EAAa,EADdhrB,IAAOmrB,EAAQ,GAAKH,EAAc,ED/VjC,ICqWxB,CC9VO,SAASkuE,GACdC,EACAthG,EACAwD,EACA0jB,EACAhhB,EACA05E,GAKA,MAAM2hB,EAAOr7F,EACVmI,UACA3D,MAAM,aACNtV,MAEGgsG,EAAkB59F,EAAa0jB,EAE/BirC,EAAY,CAChBjqD,GAAMjF,GAASjD,GAAUohG,EF1BL,GE2BpBl5F,GAAMhF,GAAUlD,GAAUohG,EF3BN,IE8BtBxhB,EAAa,KAAIztB,EAAU,GAAK,IAAMA,EAAU,GAChDytB,EAAa,KAAI5/E,EAAOqK,KAAK,KAC7Bu1E,EAAe,OAAI2hB,EACnB3hB,EAAgB,QAAI2hB,EACpB3hB,EAAY,IAAIzpF,KAAK+R,MACnB03E,EAAY,IAAIA,EAAY,IAAI14D,EAAa,GAAKA,GAMpD,OAAOw4D,GAHa4hB,EACjBr1F,QAAQ,gBAAiB,oBACzBA,QAAQ,kBAAmB,2BACG2zE,EACnC,CAiCO,SAAS4hB,GAAa3sG,GAC3B,MAAMuC,EAAOvC,EAAQuC,KAAOvC,EAAQuC,KAAOyB,GACrCqN,EAAa2X,GAAchpB,EAAQqR,YAAc,aACjDotB,EAAQz+B,EAAQy+B,OAAS,IACzBtK,EAAcn0B,EAAQm0B,aAAe,KAE3C,OAAO,SAAUhpB,EAAQwD,EAAY0jB,GACnCA,EAAaryB,EAAQ4sG,MAAQv6E,EAAa,EAE1C,MAAM04D,EAAS,CACb8hB,EAAK,QACLC,OAAU,QACVC,aAAe,GAEjB3wG,OAAO2C,OAAOgsF,EAAQ/qF,EAAQ+qF,QAE9B5/E,EAASihG,GAAiBjhG,EAAQwD,EAAY0jB,EAAYoM,GAE1D,MAAMhL,EAAM+4E,GACVxsG,EAAQu2E,IACRprE,EACAwD,EACA0jB,EACAhhB,EACA05E,GAGIhjF,EAAQ,IAAIhE,MAGlB,OAFAgE,EAAMosB,YAAcA,EAEb5xB,EAAKwF,EAAO0rB,GAAKxqB,MAAMlB,IAE5B,MAAM4G,EAAcP,GAASjD,GAAUpD,EAAMvD,MAAS6tB,EACtD,MAAO,CAACtqB,QAAOoD,SAAQwD,aAAY0jB,aAAW,GAEjD,CACH,CClGO,SAASs6E,GAAa3sG,GAC3B,MAAMuC,EAAOvC,EAAQuC,MAAQyB,GACvBmH,EAASnL,EAAQgtG,YACjB74E,EAAcn0B,EAAQm0B,aAAe,KAE3C,MAAO,KACL,MAAMpsB,EAAQ,IAAIhE,MAElB,OADAgE,EAAMosB,YAAcA,EACb5xB,EAAKwF,EAAO/H,EAAQu2E,KAAKttE,MAAMlB,IACpC,MAAMklG,EAAc7+F,GAASjD,GAAUpD,EAAMvD,MACvC0oG,EAAc7+F,GAAUlD,GAAUpD,EAAMtD,OAG9C,MAAO,CAACsD,QAAOoD,SAAQwD,WADrBs+F,IAAgBC,EAAc,CAACD,EAAaC,GAAeA,EAC1B76E,WAAY,EAAE,GACjD,CAEN,CCQA,MAAM86E,GAAY,IAAIpvG,MAAM,wBAU5B,SAASqvG,GAAUj2F,EAAUqoB,EAAG/zB,EAAGC,EAAG1L,GACpC,OAAO,IAAIrG,SAAQ,CAACE,EAASD,KAC3B,MAAMmO,EAAQ,IAAIhE,MAClBgE,EAAMosB,YAAcn0B,EAAQm0B,aAAe,KAC3CpsB,EAAM/M,iBAAiB,QAAQ,IAAMnB,EAAQkO,KAC7CA,EAAM/M,iBAAiB,SAAS,IAAMpB,EAAOuzG,MAC7CplG,EAAM0rB,IAAM83D,GAAkBp0E,EAAUqoB,EAAG/zB,EAAGC,EAAG1L,EAAQuM,KAAK,GAElE,CAMA,SAAS8gG,GAAwBlhB,GAC/B,OAAO,SAAU3sD,EAAG/zB,EAAGC,EAAG1L,GAExB,OAAOotG,GADU5hB,GAAQW,EAAW3sD,EAAG/zB,EAAGC,GACf8zB,EAAG/zB,EAAGC,EAAG1L,EACrC,CACH,CAiBA,SAASstG,GAAsB/2B,GAI7B,IAAIjuE,EAEJ,GAAI5Q,MAAMC,QAAQ4+E,GAChBjuE,EAAS+kG,GAAwB92B,QAC5B,GAAmB,iBAARA,EAAkB,CAElCjuE,EAAS+kG,GADI3hB,GAAUnV,GAE3B,KAAS,IAAmB,mBAARA,EAGhB,MAAM,IAAIx4E,MACR,oGA1BwBvE,EAuBI+8E,EAA9BjuE,EAtBK,SAAUk3B,EAAG/zB,EAAGC,EAAG1L,GAExB,OAAOotG,GADK5zG,EAAOgmC,EAAG/zB,EAAGC,EAAG1L,GACNw/B,EAAG/zB,EAAGC,EAAG1L,EAChC,CAwBH,CA5BA,IAA8BxG,EA6B5B,OAAO8O,CACT,CAEA,IAAIilG,GAAW,EAMf,SAASC,GAAej3B,GACtB,OAAI7+E,MAAMC,QAAQ4+E,GACTA,EAAI/gE,KAAK,MAGC,iBAAR+gE,EACFA,KAGPg3B,GACK,oBAAsBA,GAC/B,CAUA,MAAME,WAAwBxD,GAI5B,WAAAx0G,CAAYuK,GAMV,IAKIhD,EALAsL,GALJtI,EAAUA,GAAW,CAAE,GAKFsI,OAOjBtI,EAAQu2E,MACVjuE,EAASglG,GAAsBttG,EAAQu2E,KACvCv5E,EAAMwwG,GAAextG,EAAQu2E,MAM/B,MAAM10E,EAASyG,EAAqBtI,EAAQ6B,MAApB,UAElBuP,OAA0BlV,IAAlB8D,EAAQoR,OAA6BpR,EAAQoR,MAE3DzW,MAAM,CACJ2N,OAAQA,EACRtL,IAAKA,EACL0wC,aAAc1tC,EAAQ0tC,aACtBikD,wBAAyB3xF,EAAQ2xF,wBACjClrD,QAASzmC,EAAQymC,QACjB9E,QAAS3hC,EAAQ2hC,QACjBolD,SAAU/mF,EAAQ+mF,SAClB7D,OAAQljF,EAAQkjF,OAChBjkD,cAAej/B,EAAQi/B,cACvB5tB,WAAYrR,EAAQqR,WACpB4I,SAAUja,EAAQia,SAClBpY,MAAOA,EACPuP,MAAOA,EACPrP,WAAY/B,EAAQ+B,WACpBE,aAAqC,IAAxBjC,EAAQiC,YACrBkyB,YAAan0B,EAAQm0B,YACrBu+D,WAAY1yF,EAAQ0yF,YAE1B,CAME,MAAAiB,CAAOpd,GACL,MAAMjuE,EAASglG,GAAsB/2B,GACrC7gF,KAAK4oG,UAAUh2F,GACf5S,KAAKk9F,OAAO4a,GAAej3B,IACH,UAApB7gF,KAAK4M,YACP5M,KAAKyM,SAAS,QAEpB,EC7LO,MAAMurG,GAAkB,QAMzBC,GAA4B,CAAC,IAAK,KAoBjC,SAASnB,GAAcC,EAASthG,EAAQzC,EAAM2I,EAAY05E,GAC/DA,EAAc,MAAIriF,EAAK,GACvBqiF,EAAe,OAAIriF,EAAK,GAExB,MAAMqQ,EAAkB1H,EAAWuI,qBAC7Bg0F,EAAMn4F,GAAgBs1E,EAAgB,QAAG,QAAU,EACzDA,EAAO6iB,EAAM,MAAQ,OAASv8F,EAAWmI,UACzC,MAAMqoC,EACJ+rD,GAAO70F,EAAgBwR,WAAW,MAC9B,CAACpf,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IACzCA,EAGN,OAFA4/E,EAAa,KAAIlpC,EAAKrsC,KAAK,KAEpBq1E,GAAa4hB,EAAS1hB,EAC/B,CAYO,SAAS8iB,GACd1iG,EACAwD,EACA0jB,EACAhhB,EACAklE,EACAwU,EACA+iB,GAEA/iB,EAAS3uF,OAAO2C,OAAO,CAACgvG,QAAS,UAAWhjB,GAE5C,MAAMwhB,EAAkB59F,EAAa0jB,EAE/BirC,EAAY,CAChBjqD,GAAMjF,GAASjD,GAAUohG,ELrEL,GKsEpBl5F,GAAMhF,GAAUlD,GAAUohG,ELtEN,IKyEtB,GAAkB,GAAdl6E,EACF,OAAQy7E,GACN,IAAK,YACH,MAAME,EAAO,GAAK37E,EAAa,GAAO,EAClC,mBAAoB04D,EACtBA,EAAuB,gBAAK,QAAUijB,EAEtCjjB,EAAuB,eAAI,OAASijB,EAEtC,MACF,IAAK,YACHjjB,EAAuB,eAAI,GAAK14D,EAChC,MACF,IAAK,iBACL,IAAK,OACH04D,EAAY,IAAI,GAAK14D,EACrB,MACF,QACE,MAAM,IAAIt0B,MAAM,mCAKtB,OADYyuG,GAAcj2B,EAAKprE,EAAQmyD,EAAWjsD,EAAY05E,EAEhE,CAOO,SAASkjB,GAAiBljB,EAAQmjB,GACvC,OAAO9xG,OAAO2C,OACZ,CACEgvG,QAAWG,EACXC,QAAW,MACXC,QAAWV,GACXZ,OAAU,YACVuB,OAAU,GACVtB,YAAe,QAEjBhiB,EAEJ,CA+BO,SAAS4hB,GAAa3sG,GAC3B,MAAM4sG,OAA0B1wG,IAAlB8D,EAAQ4sG,OAA6B5sG,EAAQ4sG,MACrDv7F,EAAa2X,GAAchpB,EAAQqR,YAAc,aACjDotB,EAAQz+B,EAAQy+B,OAAS,IACzBl8B,EAAOvC,EAAQuC,MAAQyB,GACvBmwB,EAAcn0B,EAAQm0B,aAAe,KAE3C,MAAO,CAAChpB,EAAQwD,EAAY0jB,KAC1BlnB,EAASihG,GAAiBjhG,EAAQwD,EAAY0jB,EAAYoM,GACxC,GAAdpM,GAAqBu6E,QAAgC1wG,IAAvB8D,EAAQ8tG,aACxCz7E,EAAa,GAEf,MAAMoB,EAAMo6E,GACV1iG,EACAwD,EACA0jB,EACAhhB,EACArR,EAAQu2E,IACR03B,GAAiBjuG,EAAQ+qF,OAAQ,UACjC/qF,EAAQ8tG,YAEJ/lG,EAAQ,IAAIhE,MAElB,OADAgE,EAAMosB,YAAcA,EACb5xB,EAAKwF,EAAO0rB,GAAKxqB,MAAMlB,IAAK,CAAOA,QAAOoD,SAAQknB,gBAAa,CAE1E,CAcO,SAASi8E,GAAkBtuG,EAAS8L,EAAY6C,GACrD,QAAoBzS,IAAhB8D,EAAQu2E,IACV,OAGF,MAAMg4B,EAAgBvlF,GAAchpB,EAAQqR,YAAc,aAEpDlG,EAASsD,GACb3C,EACA6C,EACA,EACAg/F,IAGIa,EAAa,CACjBC,aAAgBzuG,EAAQ+qF,OAAe,OACvC2jB,YAAe,oBAEjBtyG,OAAO2C,OACLyvG,EACAP,GAAiBjuG,EAAQ+qF,OAAQ,kBACjC/qF,EAAQ+qF,QAGV,MAAMt/E,EAAIiG,IAAO5F,EAAW,GAAKX,EAAO,IAAMwD,ELlNxB,GKmNhBjD,EAAIgG,IAAOvG,EAAO,GAAKW,EAAW,IAAM6C,ELnNxB,GKoNhBi/F,EAAMn4F,GAAgB+4F,EAAoB,QAAG,QAAU,EAI7D,OAHAA,EAAWZ,EAAM,IAAM,KAAOniG,EAC9B+iG,EAAWZ,EAAM,IAAM,KAAOliG,EAEvB8gG,GACLxsG,EAAQu2E,IACRprE,EACAwiG,GACAY,EACAC,EAEJ,CAaO,SAASG,GAAa3uG,EAAS2O,GACpC,QAAoBzS,IAAhB8D,EAAQu2E,IACV,OAGF,MAAMi4B,EAAa,CACjBL,QAAW,MACXC,QAAWV,GACXK,QAAW,mBACXjB,OAAU,aAGZ,QAAmB5wG,IAAfyS,EAA0B,CAC5B,MAAMigG,EACJ5lF,GAAchpB,EAAQqR,YAAc,aAAaqI,oBAAsB,EACnEwuF,EAAY,MAClBsG,EAAkB,MAAK7/F,EAAaigG,EAAO1G,CAC/C,CAIE,GAFA9rG,OAAO2C,OAAOyvG,EAAYxuG,EAAQ+qF,aAEX7uF,IAAnB8D,EAAQ+qF,aAAgD7uF,IAAxBsyG,EAAkB,MAAiB,CACrE,MAAM3/D,EAAS2/D,EAAmB,OAElC,MADuB92G,MAAMC,QAAQk3C,IAA6B,IAAlBA,EAAOt4C,QAErD,OAEFi4G,EAAkB,MAAI3/D,CAC1B,CAEE,OAAOg8C,GAAa7qF,EAAQu2E,IAAKi4B,EACnC,CCpMA,MAAMK,GAAqB,CACzB,aAAa,EACb,cAAc,EACd,aAAa,EACb,cAAc,GAMVC,GAAwB,CAC5B,sCAAsC,EACtC,wBAAwB,GA0BnB,SAASC,GAA4BC,EAAiBC,GAC3D,IAAKA,EAAY14G,OACf,OAAOy4G,EAIT,MAAMz4B,EAAM,IAAIgC,IAAIy2B,EAAiB,UAErC,GAAIz4B,EAAI24B,SAASr5F,MAAM,KAAKza,SAAS,eAInC,OAHA+zG,GACE,6EAEKH,EAOT,MAAMI,EAAqBH,EACxBpoF,KAAK5I,GAAMgtE,mBAAmBhtE,KAC9BzI,KAAK,KAER+gE,EAAI84B,aAAaC,OAAO,cAAeF,GAGvC,MAAO,GAFSJ,EAAgBn5F,MAAM,KAAK,MACvB05F,mBAAmBh5B,EAAI84B,aAAa5oF,aAE1D,CAQO,SAAS+oF,GAAsBC,EAAOC,EAAWT,GACtD,IAAID,EACAW,EACJ,IAAK,IAAI14G,EAAI,EAAGA,EAAIw4G,EAAMl5G,SAAUU,EAAG,CACrC,MAAM24G,EAAOH,EAAMx4G,GACnB,GAAiB,SAAb24G,EAAKC,IAAgB,CACvB,GAAID,EAAKx1G,OAASs1G,EAAW,CAC3BV,EAAkBY,EAAKp3B,KACvB,KACR,EACUq2B,GAAmBe,EAAKx1G,QAEhBu1G,GAAuBC,EAAKx1G,KAAKmwB,WAAW,aADtDolF,EAAsBC,EAAKp3B,KAInC,CACA,CAEE,IAAKw2B,EAAiB,CACpB,IAAIW,EAGF,MAAM,IAAI5xG,MAAM,8BAFhBixG,EAAkBW,CAIxB,CAME,OAJIV,IACFD,EAAkBD,GAA4BC,EAAiBC,IAG1DD,CACT,CASO,SAASc,GACdL,EACAC,EACAK,EACAd,GAEA,IAAID,EACAW,EAMJ,MAAMK,EAAa,CAAE,EAErB,IAAK,IAAI/4G,EAAI,EAAGA,EAAIw4G,EAAMl5G,SAAUU,EAAG,CACrC,MAAM24G,EAAOH,EAAMx4G,GAEnB,GADA+4G,EAAWJ,EAAKx1G,MAAQw1G,EAAKp3B,KACZ,SAAbo3B,EAAKC,IAAgB,CACvB,GAAID,EAAKx1G,OAASs1G,EAAW,CAC3BV,EAAkBY,EAAKp3B,KACvB,KACR,CACUs2B,GAAsBc,EAAKx1G,QAC7Bu1G,EAAsBC,EAAKp3B,KAEnC,CACA,CAEE,IAAKw2B,GAAmBe,EACtB,IAAK,IAAI94G,EAAI,EAAGA,EAAI84G,EAAoBx5G,SAAUU,EAAG,CACnD,MAAMg5G,EAAqBF,EAAoB94G,GAC/C,GAAI+4G,EAAWC,GAAqB,CAClCjB,EAAkBgB,EAAWC,GAC7B,KACR,CACA,CAGE,IAAKjB,EAAiB,CACpB,IAAIW,EAGF,MAAM,IAAI5xG,MAAM,8BAFhBixG,EAAkBW,CAIxB,CAME,OAJIV,IACFD,EAAkBD,GAA4BC,EAAiBC,IAG1DD,CACT,CASA,SAASkB,GACPC,EACAC,EACApB,EACAqB,GAEA,IAAIh/F,EAAa8+F,EAAW9+F,WAC5B,IAAKA,IAC8B,iBAAtB++F,EAAcE,IACvBj/F,EAAa2X,GAAconF,EAAcE,KAChC,QAASF,EAAcE,MAChCj/F,EAAa2X,GAAconF,EAAcE,IAAIxlB,OAE1Cz5E,GACH,MAAM,IAAItT,MAAM,oBAAoBwvD,KAAKC,UAAU4iD,EAAcE,QAGrE,MAAMC,EAAcH,EAAcG,YAO5BC,IANkBD,EACpBA,EACGr3G,MAAM,EAAG,GACT2tB,KAAKu6B,GAAMA,EAAEhqC,QAAQ,WAAY,KAAKA,QAAQ,WAAY,OAC1D5B,KAAK,IACRnE,EAAWuI,sBACoB2Q,WAAW,MAExCkmF,EAAWL,EAAcM,aAKzBC,EAAe,CAAE,EACvB,IAAK,IAAI15G,EAAI,EAAGA,EAAIw5G,EAASl6G,SAAUU,EAAG,CACxC,MAAM+qG,EAASyO,EAASx5G,GACxB05G,EAAa3O,EAAOv/F,IAAMu/F,CAC9B,CAKE,MAAM4O,EAAc,CAAE,EAKhBxnB,EAAY,GAElB,GAAIinB,EACF,IAAK,IAAIp5G,EAAI,EAAGA,EAAIo5G,EAAoB95G,SAAUU,EAAG,CACnD,MAAM45G,EAAQR,EAAoBp5G,GAC5BwL,EAAKouG,EAAMC,WACjB1nB,EAAU/tF,KAAKoH,GACfmuG,EAAYnuG,GAAMouG,CACxB,MAEI,IAAK,IAAI55G,EAAI,EAAGA,EAAIw5G,EAASl6G,SAAUU,EAAG,CACxC,MAAMwL,EAAKguG,EAASx5G,GAAGwL,GACvB2mF,EAAU/tF,KAAKoH,EACrB,CAGE,MAAMlM,EAAS6yF,EAAU7yF,OACnBkwF,EAAU,IAAI/uF,MAAMnB,GACpB8oC,EAAc,IAAI3nC,MAAMnB,GACxB4wF,EAAQ,IAAIzvF,MAAMnB,GAClBswF,EAAY,IAAInvF,MAAMnB,GACtB4U,EAAS,EAAEsB,KAAWA,IAAUA,IAAUA,KAEhD,IAAK,IAAIxV,EAAI,EAAGA,EAAIV,IAAUU,EAAG,CAC/B,MAAMwL,EAAK2mF,EAAUnyF,GACf+qG,EAAS2O,EAAaluG,GACtBikF,EAASsb,EAAO+O,cAEpBtqB,EAAQxvF,GADNu5G,EACW,CAAC9pB,EAAO,GAAIA,EAAO,IAEnBA,EAEfrnD,EAAYpoC,GAAK+qG,EAAOgP,SACxB7pB,EAAMlwF,GAAK,CAAC+qG,EAAOiP,YAAajP,EAAOkP,cACvCrqB,EAAU5vF,GAAK,CAAC+qG,EAAO9X,UAAW8X,EAAO7X,YACzC,MAAM0mB,EAAQD,EAAYnuG,GAC1B,GAAIouG,EAAO,CACT,MAAMM,EAAenP,EAAOgP,SAAWhP,EAAO9X,UACxC99E,EAAOq6E,EAAQxvF,GAAG,GAAK45G,EAAMO,WAAaD,EAC1C7kG,EAAOm6E,EAAQxvF,GAAG,IAAM45G,EAAMQ,WAAa,GAAKF,EAEhDG,EAAgBtP,EAAOgP,SAAWhP,EAAO7X,WAG/C,IAAI99E,EACAE,EAHyC,eAA1By1F,EAAOuP,gBAKxBllG,EAAOo6E,EAAQxvF,GAAG,GAAK45G,EAAMW,WAAaF,EAC1C/kG,EAAOk6E,EAAQxvF,GAAG,IAAM45G,EAAMY,WAAa,GAAKH,IAEhDjlG,EAAOo6E,EAAQxvF,GAAG,IAAM45G,EAAMY,WAAa,GAAKH,EAChD/kG,EAAOk6E,EAAQxvF,GAAG,GAAK45G,EAAMW,WAAaF,GAG5CI,GAAiBvmG,EAAQ,CAACiB,EAAMC,EAAMC,EAAMC,GAAOpB,EACzD,CACA,CAEE,MAAM8O,EAAW,IAAIusE,GAAS,CAC5BC,QAASA,EACTpnD,YAAaA,EACb8nD,MAAOA,EACPN,UAAWA,EACX17E,OAAQklG,EAAsBllG,OAASjP,IAGnCkJ,EAAU+qG,EAAW/qG,QACrBkoD,EAAO6iD,EAAW55B,IAuCxB,MAAO,CACLo7B,KAAM13F,EACN5I,WAAYA,EACZugG,YAAa5C,EACb6C,YAxCF,SAAyBjwG,EAAWywB,EAAYhhB,GAC9C,IAAKzP,EACH,OAGF,MAAMa,EAAK2mF,EAAUxnF,EAAU,IACzBogG,EAAS2O,EAAaluG,GACtBqvG,EAAuC,eAA1B9P,EAAOuP,eAEpBQ,EAAe,CACnBjB,WAAYruG,EACZuvG,QAASpwG,EAAU,GACnBqwG,QAASH,GAAclwG,EAAU,GAAK,EAAIA,EAAU,IAGtD,GAAIyuG,EAAqB,CACvB,MAAMQ,EAAQD,EAAY5O,EAAOv/F,IACjC,GACEsvG,EAAaC,QAAUnB,EAAMO,YAC7BW,EAAaC,QAAUnB,EAAMQ,YAC7BU,EAAaE,QAAUpB,EAAMW,YAC7BO,EAAaE,QAAUpB,EAAMY,WAE7B,MAER,CAEIr1G,OAAO2C,OAAOgzG,EAAc3sG,GAE5B,MAAMmxE,EAAMy4B,EAAgB53F,QAAQ,eAAe,SAAU1E,EAAG6yC,GAC9D,OAAOwsD,EAAaxsD,EAC1B,IAEI,OAAO+yB,GAAWhrB,EAAMipB,EAC5B,EAQA,CAgEO,SAAS27B,GAAe/B,GAC7B,OAAO/3B,GAAQ+3B,EAAW55B,KAAKttE,MAAK,SAAUkpG,GAC5C,OA3DJ,SAA8BhC,EAAYgC,GACxC,MAAM9B,EAAsB8B,EAAQ9B,oBAEpC,IAAIrB,EAEJ,GAAyB,QAArBmD,EAAQ/N,SACV4K,EAAkBQ,GAChB2C,EAAQ1C,MACRU,EAAWT,UACXS,EAAWlB,iBAER,IAAyB,WAArBkD,EAAQ/N,SAQjB,MAAM,IAAIrmG,MAAM,sDAPhBixG,EAAkBc,GAChBqC,EAAQ1C,MACRU,EAAWT,UACXS,EAAWJ,oBACXI,EAAWlB,YAIjB,CAEE,GAAIkD,EAAQ/B,cACV,OAAOF,GACLC,EACAgC,EAAQ/B,cACRpB,EACAqB,GAIJ,MAAM+B,EAAoBD,EAAQ1C,MAAMxvD,MACrC2vD,GACc,yDAAbA,EAAKC,MAET,IAAKuC,EACH,MAAM,IAAIr0G,MACR,uFAGJ,MAAMs0G,EAA0BD,EAAkB55B,KAGlD,OAAOJ,GADKE,GAAW63B,EAAW55B,IAAK87B,IACnBppG,MAAK,SAAUmnG,GACjC,OAAOF,GACLC,EACAC,EACApB,EACAqB,EAEN,GACA,CAQWiC,CAAqBnC,EAAYgC,EAC5C,GACA,CCvdO,MAAMI,GACX,2GCHF,MAAMC,GACJ,WAAA/8G,GAKEC,KAAK+8G,cAAgB,GAIrB/8G,KAAK0mD,OAAS,EAKd1mD,KAAKunE,QAAU,EAMfvnE,KAAK6kF,SAAQ,IACPm4B,MAAMxtG,KAA4B,CACpCvG,IAAK,CAAC7H,EAAQmD,KACZ,GAEE,mBAD0BiL,KAA4BjL,GAOxD,OADAvE,KAAKi9G,MAAM14G,GACJvE,KAAKk9G,eAAe,EAE7BtzG,IAAK,CAACxI,EAAQmD,EAAUR,KACtB/D,KAAKi9G,MAAM14G,EAAUR,IACd,IAIjB,CAME,KAAAk5G,IAAS19F,GACP,MAAM49F,EAAen9G,KAAK+8G,cACpBn6G,EAAQ5C,KAAK0mD,OAAS1mD,KAAKunE,QAC5B41C,EAAav6G,KAChBu6G,EAAav6G,GAAS,IAExBu6G,EAAav6G,GAAO+C,QAAQ4Z,EAChC,CAOE29F,gBAAkB,IAAI39F,KACpBvf,KAAKi9G,MAAM19F,GACJvf,MAOT,YAAAo9G,CAAapmE,GACXh3C,KAAKi9G,MAAMjmE,EACf,CASE,UAAA1nC,GACE,OAAOtP,KAAK6kF,QAChB,CAKE,IAAAw4B,CAAK3tG,GACH1P,KAAK+8G,cAAcjyG,SAASwyG,IAC1B,IAAK,IAAI/7G,EAAI,EAAG4E,EAAKm3G,EAAoBz8G,OAAQU,EAAI4E,IAAM5E,EAAG,CAC5D,MAAMgD,EAAW+4G,EAAoB/7G,GACrC,GAAwB,mBAAbgD,EAAyB,CAClCA,EAASmL,GACT,QACV,CACQ,MAAM6tG,EAAqBD,IAAsB/7G,GACjD,GAAsD,mBAAzB,EAAUgD,GACpB,EAAUA,MAAag5G,OACnC,CACL,GAAkC,mBAAvBA,EAAmC,CAC3B,EAAUh5G,GAAYg5G,EAAmB7tG,GAC1D,QACZ,CAC2B,EAAUnL,GAAYg5G,CACjD,CACA,IAEA,CAEE,KAAAl5G,GACErE,KAAK+8G,cAAcl8G,OAAS,EAC5Bb,KAAK0mD,OAAS,EACd1mD,KAAKunE,QAAU,CACnB,CAME,MAAAlwD,GACErX,KAAKunE,QAAUvnE,KAAK+8G,cAAcl8G,OAClCb,KAAK0mD,OAAS,CAClB,ECxHA,MAAM82D,WAAsBj2G,EAI1B,WAAAxH,CAAYy5C,GACVv0C,QAMAjF,KAAK07D,OAAQ,EAGb17D,KAAKy9G,wBAA0Bz9G,KAAK09G,mBAAmBx2G,KAAKlH,MAM5DA,KAAK29G,OAASnkE,EAMdx5C,KAAK49G,WAAa,IAAI57G,MAMtBhC,KAAK69G,aArCY,CAsCrB,CAKE,YAAAC,GACE,OAAO99G,KAAK49G,UAChB,CAKE,eAAAG,CAAgBz2G,GACdtH,KAAK49G,WAAWI,QAAQ12G,GACpBtH,KAAK49G,WAAW/8G,OAASb,KAAK69G,eAChC79G,KAAK49G,WAAW/8G,OAASb,KAAK69G,aAEpC,CAQE,WAAA3zD,CAAYjpB,GACV,OAAO74B,GACX,CAME,OAAAiL,CAAQ4tB,GACN,OAAO,IACX,CAQE,YAAA2pB,CAAalqB,GACX,OAAOt4B,GACX,CASE,WAAAyiD,CAAYnqB,EAAYt/B,GACtB,OAAOgH,GACX,CAYE,0BAAA4sE,CACE5+D,EACAsqB,EACAu0C,EACA/8D,EACAu9D,GAGJ,CAKE,QAAAwoC,GACE,OAAOj+G,KAAK29G,MAChB,CAME,kBAAA9gC,GAAqB,CAOrB,kBAAA6gC,CAAmB73G,GACjB,MAAMwM,EAAsDxM,EAAY,OAEtEwM,EAAMzF,aAAe6vB,IACrBpqB,EAAMzF,aAAe6vB,IAErBz8B,KAAKk+G,yBAEX,CASE,SAAAxG,CAAUrlG,GACR,IAAI4pD,EAAa5pD,EAAMzF,WAQvB,OAPIqvD,GAAcx/B,IAAqBw/B,GAAcx/B,IACnDpqB,EAAM/M,iBAAiBzF,EAAkBG,KAAKy9G,yBAE5CxhD,GAAcx/B,KAChBpqB,EAAMxF,OACNovD,EAAa5pD,EAAMzF,YAEdqvD,GAAcx/B,EACzB,CAKE,uBAAAyhF,GACE,MAAM1kE,EAAQx5C,KAAKi+G,WACfzkE,GAASA,EAAM2N,cAA2C,UAA3B3N,EAAM+N,kBACvC/N,EAAM5xC,SAEZ,CAKE,cAAAqjD,CAAevqB,GAAY,CAM3B,eAAAvgC,UACSH,KAAK29G,OACZ14G,MAAM9E,iBACV,ECnKO,MAAM6O,GAAa,GAK1B,IAAImvG,GAAe,KAanB,MAAMC,WAA4BZ,GAIhC,WAAAz9G,CAAYy5C,GACVv0C,MAAMu0C,GAMNx5C,KAAKq2E,UAAY,KAMjBr2E,KAAKq+G,mBAQLr+G,KAAKs+G,ctJtCA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GsJ8CrBt+G,KAAKu+G,etJ9CA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GsJsDrBv+G,KAAK00E,sBtJtDA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GsJ2DrB10E,KAAK0P,QAAU,KAMf1P,KAAKw+G,iBAAmB,KAKxBx+G,KAAKy+G,iBAAkB,EAMvBz+G,KAAK0gC,WAAa,IACtB,CAQE,YAAAluB,CAAaH,EAAOqsG,EAAKC,GAMvB,IAAI78G,EALCq8G,KAnFPA,GAAetvG,GAAsB,EAAG,OAAGrI,EAAW,CACpD8L,oBAAoB,KAqFpB6rG,GAAaxuG,UAAU,EAAG,EAAG,EAAG,GAGhC,IACEwuG,GAAa5rG,UAAUF,EAAOqsG,EAAKC,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD78G,EAAOq8G,GAAa3rG,aAAa,EAAG,EAAG,EAAG,GAAG1Q,IACnD,CAAM,MAEA,OADAq8G,GAAe,KACR,IACb,CACI,OAAOr8G,CACX,CAME,aAAA+kD,CAAcnmB,GAEZ,IAAI8lB,EADUxmD,KAAKi+G,WACIp3D,gBAIvB,MAH0B,mBAAfL,IACTA,EAAaA,EAAW9lB,EAAWsH,UAAU/uB,aAExCutC,QAAchgD,CACzB,CAQE,YAAAo4G,CAAax9G,EAAQ2rB,EAAW8xF,GAC9B,MAAMC,EAAiB9+G,KAAKi+G,WAAWn3D,eACvC,IAAIuvB,EAAW3mE,EACf,GACEtO,GACAA,EAAO62C,YAAc6mE,KACnBD,GACCz9G,GACCA,EAAO0O,MAAM+uG,iBACb38G,EACE4vD,GAAQ1wD,EAAO0O,MAAM+uG,iBACrB/sD,GAAQ+sD,KAEd,CACA,MAAM3vG,EAAS9N,EAAO29G,kBAClB7vG,aAAkBwC,oBACpBhC,EAAUR,EAAOI,WAAW,MAEpC,CAcI,GAbII,GAAWud,GAAWvd,EAAQR,OAAOY,MAAMid,UAAWA,IAExD/sB,KAAKq2E,UAAYj1E,EACjBpB,KAAK0P,QAAUA,EACf1P,KAAKy+G,iBAAkB,GACdz+G,KAAKy+G,iBAEdz+G,KAAKq2E,UAAY,KACjBr2E,KAAK0P,QAAU,KACf1P,KAAKy+G,iBAAkB,GACdz+G,KAAKq2E,YACdr2E,KAAKq2E,UAAUvmE,MAAM+uG,gBAAkB,OAEpC7+G,KAAKq2E,UAAW,CACnBA,EAAYjnE,SAASC,cAAc,OACnCgnE,EAAUp+B,UAAY6mE,EACtB,IAAIhvG,EAAQumE,EAAUvmE,MACtBA,EAAMwjC,SAAW,WACjBxjC,EAAMhB,MAAQ,OACdgB,EAAMf,OAAS,OACfW,EAAUb,KACV,MAAMK,EAASQ,EAAQR,OACvBmnE,EAAU7kE,YAAYtC,GACtBY,EAAQZ,EAAOY,MACfA,EAAMwjC,SAAW,WACjBxjC,EAAM4xC,KAAO,IACb5xC,EAAMkvG,gBAAkB,WACxBh/G,KAAKq2E,UAAYA,EACjBr2E,KAAK0P,QAAUA,CACrB,CAEO1P,KAAKy+G,kBACNI,GACC7+G,KAAKq2E,UAAUvmE,MAAM+uG,kBAEtB7+G,KAAKq2E,UAAUvmE,MAAM+uG,gBAAkBA,EAE7C,CAQE,aAAAI,CAAcvvG,EAASgxB,EAAYjrB,GACjC,MAAMypG,EAAU3mG,GAAW9C,GACrB0pG,EAAW7mG,GAAY7C,GACvB2pG,EAAc/mG,GAAe5C,GAC7B4pG,EAAajnG,GAAc3C,GAEjC0F,GAAeulB,EAAWo0C,2BAA4BoqC,GACtD/jG,GAAeulB,EAAWo0C,2BAA4BqqC,GACtDhkG,GAAeulB,EAAWo0C,2BAA4BsqC,GACtDjkG,GAAeulB,EAAWo0C,2BAA4BuqC,GAEtD,MAAMC,EAAWt/G,KAAK00E,sBACtBv5D,GAAemkG,EAAUJ,GACzB/jG,GAAemkG,EAAUH,GACzBhkG,GAAemkG,EAAUF,GACzBjkG,GAAemkG,EAAUD,GAEzB3vG,EAAQuxD,OACRvxD,EAAQ83E,YACR93E,EAAQ43E,OAAO17E,KAAK+R,MAAMuhG,EAAQ,IAAKtzG,KAAK+R,MAAMuhG,EAAQ,KAC1DxvG,EAAQu2D,OAAOr6D,KAAK+R,MAAMwhG,EAAS,IAAKvzG,KAAK+R,MAAMwhG,EAAS,KAC5DzvG,EAAQu2D,OAAOr6D,KAAK+R,MAAMyhG,EAAY,IAAKxzG,KAAK+R,MAAMyhG,EAAY,KAClE1vG,EAAQu2D,OAAOr6D,KAAK+R,MAAM0hG,EAAW,IAAKzzG,KAAK+R,MAAM0hG,EAAW,KAChE3vG,EAAQo9E,MACZ,CAOE,gBAAAyyB,CAAiB7+E,EAAYt/B,GAC3B,MAAMqU,EAASirB,EAAWjrB,OACpBwD,EAAaynB,EAAWsH,UAAU/uB,WAClCC,EAAWwnB,EAAWsH,UAAU9uB,SAChCyjB,EAAa+D,EAAW/D,WACxB7tB,EAAQlD,KAAK+R,MAAOjF,GAASjD,GAAUwD,EAAc0jB,GACrD5tB,EAASnD,KAAK+R,MAAOhF,GAAUlD,GAAUwD,EAAc0jB,GAE7DhJ,GACE3zB,KAAKu+G,eACL79E,EAAW1tB,KAAK,GAAK,EACrB0tB,EAAW1tB,KAAK,GAAK,EACrB,EAAI2pB,EACJ,EAAIA,EACJzjB,GACCpK,EAAQ,GACRC,EAAS,GAEZ4hB,GAAY3wB,KAAK00E,sBAAuB10E,KAAKu+G,gBAE7C,MAAMiB,EAAkBC,GAAkBz/G,KAAKu+G,gBAG/C,GAFAv+G,KAAK4+G,aAAax9G,EAAQo+G,EAAiBx/G,KAAK6mD,cAAcnmB,KAEzD1gC,KAAKy+G,gBAAiB,CACzB,MAAMvvG,EAASlP,KAAK0P,QAAQR,OACxBA,EAAOJ,OAASA,GAASI,EAAOH,QAAUA,GAC5CG,EAAOJ,MAAQA,EACfI,EAAOH,OAASA,GAEhB/O,KAAK0P,QAAQC,UAAU,EAAG,EAAGb,EAAOC,GAElCywG,IAAoBtwG,EAAOY,MAAMid,YACnC7d,EAAOY,MAAMid,UAAYyyF,EAEjC,CACA,CAQE,oBAAAE,CAAqBh7G,EAAMgL,EAASgxB,GAClC,MAAM8Y,EAAQx5C,KAAKi+G,WACnB,GAAIzkE,EAAM/yC,YAAY/B,GAAO,CAC3B,MAAMmB,EAAQ,IAAI4uE,GAChB/vE,EACA1E,KAAK00E,sBACLh0C,EACAhxB,GAEF8pC,EAAM5zC,cAAcC,EAC1B,CACA,CAOE,SAAA85G,CAAUjwG,EAASgxB,GACjB1gC,KAAK0gC,WAAaA,EACdA,EAAW+yC,WAGfzzE,KAAK0/G,qBAAqBr2D,GAA2B35C,EAASgxB,EAClE,CAOE,UAAAk/E,CAAWlwG,EAASgxB,GACdA,EAAW+yC,WAGfzzE,KAAK0/G,qBAAqBr2D,GAA4B35C,EAASgxB,EACnE,CAKE,sBAAAm/E,CAAuBn/E,GAAY,CAMnC,gBAAAo/E,CAAiBp/E,GAIf,OAHIA,EAAW+yC,YAAczzE,KAAKw+G,mBAChCx+G,KAAKw+G,iBAAmB,IAAI1B,IAEvBp8E,EAAW+yC,UACdzzE,KAAKw+G,iBAAiBlvG,aACtBtP,KAAK0P,OACb,CAME,cAAAu7C,CAAevqB,GACRA,EAAW+yC,YAGhBzzE,KAAK0/G,qBACHr2D,GACArpD,KAAK0P,QACLgxB,GAEEA,EAAW+yC,WAAazzE,KAAKw+G,mBAC/Bx+G,KAAKw+G,iBAAiBnB,KAAKr9G,KAAK0P,SAChC1P,KAAKw+G,iBAAiBn6G,SAExBrE,KAAK6/G,uBAAuBn/E,GAC5B1gC,KAAK0/G,qBACHr2D,GACArpD,KAAK0P,QACLgxB,GAEN,CAcE,kBAAAq/E,CACE/mG,EACAC,EACAC,EACAyjB,EACA7tB,EACAC,EACAi+B,GAEA,MAAM3c,EAAMvhB,EAAQ,EACdwhB,EAAMvhB,EAAS,EACfwhB,EAAKoM,EAAa1jB,EAClBuX,GAAMD,EACNE,GAAOzX,EAAO,GAAKg0B,EACnBtc,GAAO1X,EAAO,GACpB,OAAO2a,GACL3zB,KAAKs+G,cACLjuF,EACAC,EACAC,EACAC,GACCtX,EACDuX,EACAC,EAEN,CAME,eAAAvwB,UACSH,KAAK0gC,WACZz7B,MAAM9E,iBACV,EC3YA,MAAM6/G,WAAiC5B,GAIrC,WAAAr+G,CAAYkgH,GACVh7G,MAAMg7G,GAMNjgH,KAAKqS,MAAQ,IACjB,CAKE,QAAA0qB,GACE,OAAQ/8B,KAAKqS,MAAerS,KAAKqS,MAAM0qB,WAAlB,IACzB,CAQE,YAAA6tB,CAAalqB,GACX,MAAM0oB,EAAa1oB,EAAW2pB,iBAAiB3pB,EAAWg2C,YACpD/5C,EAAa+D,EAAW/D,WACxBqL,EAAYtH,EAAWsH,UACvBk4E,EAAiBl4E,EAAU/uB,WAE3BknG,EAAcngH,KAAKi+G,WAAWtkE,YAE9BrJ,EAAQ5P,EAAWw7C,UAEzB,IAAIkkC,EAAiB1/E,EAAWjrB,OAQhC,QAP0BjP,IAAtB4iD,EAAW3zC,SACb2qG,EAAiBhmG,GACfgmG,EACA5xF,GAAe46B,EAAW3zC,OAAQuyB,EAAUrsB,eAK7C20B,EAAMrI,MACNqI,EAAMrI,MACNzjC,GAAQ47G,GAET,GAAID,EAAa,CACf,MAAMxkG,EAAaqsB,EAAUrsB,WACvBtJ,EAAQ8tG,EAAYpjF,SACxBqjF,EACAF,EACAvjF,EACAhhB,GAEEtJ,IACErS,KAAK03G,UAAUrlG,GACjBrS,KAAKqS,MAAQA,EACJA,EAAMzF,aAAe6vB,KAC9Bz8B,KAAKqS,MAAQ,MAGzB,MACQrS,KAAKqS,MAAQ,KAIjB,QAASrS,KAAKqS,KAClB,CAOE,OAAAgB,CAAQ4tB,GACN,MAAMP,EAAa1gC,KAAK0gC,WACxB,IAAKA,EACH,OAAO,KAGT,MAAM8Y,EAAQx5C,KAAKi+G,WACb7nG,EAAa+E,GACjBulB,EAAWq0C,2BACX9zC,EAAMz9B,SAGFgnD,EAAchR,EAAM39B,YAC1B,GAAI2uC,IACGr0C,GAAmBq0C,EAAap0C,GACnC,OAAO,KAIX,MAAMkhG,EAAct3G,KAAKqS,MAAMwJ,YACzB6hB,EAAM19B,KAAKqS,MAAM0qB,WAEjBsjF,EAAgB3nG,GAAS4+F,GACzBoH,EAAM9yG,KAAKoQ,MACf0hB,EAAI5uB,QAAUsH,EAAW,GAAKkhG,EAAY,IAAM+I,IAElD,GAAI3B,EAAM,GAAKA,GAAOhhF,EAAI5uB,MACxB,OAAO,KAGT,MAAMwxG,EAAiB3nG,GAAU2+F,GAC3BqH,EAAM/yG,KAAKoQ,MACf0hB,EAAI3uB,SAAWuoG,EAAY,GAAKlhG,EAAW,IAAMkqG,IAEnD,OAAI3B,EAAM,GAAKA,GAAOjhF,EAAI3uB,OACjB,KAGF/O,KAAKwS,aAAakrB,EAAKghF,EAAKC,EACvC,CASE,WAAA9zD,CAAYnqB,EAAYt/B,GACtB,MAAMiR,EAAQrS,KAAKqS,MACbilG,EAAcjlG,EAAMwJ,YACpBg7F,EAAkBxkG,EAAM4qB,iBACvBsjF,EAAkBC,GAAoBx+G,MAAMC,QAAQ40G,GACvDA,EACA,CAACA,EAAiBA,GAChB1tB,EAAkB92E,EAAM2qB,gBACxBosB,EAAa1oB,EAAW2pB,iBAAiB3pB,EAAWg2C,YACpD/5C,EAAa+D,EAAW/D,WACxBqL,EAAYtH,EAAWsH,UACvBy4E,EAAaz4E,EAAUhvB,OACvBknG,EAAiBl4E,EAAU/uB,WAC3BgiE,EACHt+C,EAAa4jF,GAAqBL,EAAiB/2B,GAChDjO,EACHv+C,EAAa6jF,GAAqBN,EAAiB/2B,GAEtDnpF,KAAKu/G,iBAAiB7+E,EAAYt/B,GAGlC,MAAM0N,EAAQ9O,KAAK0P,QAAQR,OAAOJ,MAC5BC,EAAS/O,KAAK0P,QAAQR,OAAOH,OAE7BW,EAAU1P,KAAK8/G,iBAAiBp/E,GAGtC,IAAIggF,GAAU,EACV1pE,GAAS,EACb,GAAIoS,EAAW3zC,OAAQ,CACrB,MAAM+0C,EAAch8B,GAClB46B,EAAW3zC,OACXuyB,EAAUrsB,YAEZq7B,EAAS3jB,GAAiBm3B,EAAa9pB,EAAWjrB,QAClDirG,EAAU1pE,IAAW1gC,GAAek0C,EAAa9pB,EAAWjrB,QACxDirG,GACF1gH,KAAKi/G,cAAcvvG,EAASgxB,EAAY8pB,EAEhD,CAEI,MAAM9sB,EAAMrrB,EAAM0qB,WAEZhQ,EAAY4G,GAChB3zB,KAAKs+G,cACLxvG,EAAQ,EACRC,EAAS,EACTksE,EACAC,EACA,EACCiO,GAAmBmuB,EAAY,GAAKmJ,EAAW,IAAOF,EACtDp3B,GAAmBs3B,EAAW,GAAKnJ,EAAY,IAAOkJ,GAGzDxgH,KAAKq+G,mBAAsBmC,EAAmB7jF,EAAcwsD,EAE5D,MAAMw3B,EAAKjjF,EAAI5uB,MAAQie,EAAU,GAC3B6zF,EAAKljF,EAAI3uB,OAASge,EAAU,GAOlC,GALK/sB,KAAKi+G,WAAWtkE,YAAY4iD,mBAC/B7sF,EAAQk+E,uBAAwB,GAGlC5tF,KAAK2/G,UAAUjwG,EAASgxB,GACpBsW,GAAU2pE,GAAM,IAAOC,GAAM,GAAK,CACpC,MAAM3qG,EAAK8W,EAAU,GACf7W,EAAK6W,EAAU,GACf05B,EAAU2C,EAAW3C,QACX,IAAZA,IACF/2C,EAAQuxD,OACRvxD,EAAQwxD,YAAcza,GAExB/2C,EAAQ6C,UAAUmrB,EAAK,EAAG,GAAIA,EAAI5uB,OAAQ4uB,EAAI3uB,OAAQkH,EAAIC,EAAIyqG,EAAIC,GAClD,IAAZn6D,GACF/2C,EAAQ2xD,SAEhB,CAQI,OAPArhE,KAAK4/G,WAAW5/G,KAAK0P,QAASgxB,GAE1BggF,GACFhxG,EAAQ2xD,UAEV3xD,EAAQk+E,uBAAwB,EAEzB5tF,KAAKq2E,SAChB,EC/LA,MAAMwqC,WAAuBv3D,GAI3B,WAAAvpD,CAAYuK,GAEVrF,MADAqF,EAAUA,GAAoB,CAAE,EAEpC,ECnCA,MAAMw2G,WAAmBD,GAIvB,WAAA9gH,CAAYuK,GACVrF,MAAMqF,EACV,CAKE,cAAAghD,GACE,OAAO,IAAI00D,GAAyBhgH,KACxC,CAkBE,OAAAqT,CAAQ4tB,GACN,OAAOh8B,MAAMoO,QAAQ4tB,EACzB,ECfA,SAASq6B,GAAYylD,EAAWj3E,EAAG/zB,EAAGC,GACpC,MAAO,GAAG+qG,KAAavwB,GAAU1mD,EAAG/zB,EAAGC,IACzC,CAaA,SAASgrG,GAAgBC,EAAU55E,EAAMyC,GACvC,KAAMA,KAAKm3E,GAET,OADAA,EAASn3E,GAAK,IAAIwP,IAAI,CAACjS,KAChB,EAET,MAAMz9B,EAAMq3G,EAASn3E,GACfo3E,EAAWt3G,EAAIu3G,IAAI95E,GAIzB,OAHK65E,GACHt3G,EAAI2W,IAAI8mB,IAEF65E,CACV,CASA,SAASE,GAAqBH,EAAU55E,EAAMyC,GAC5C,MAAMlgC,EAAMq3G,EAASn3E,GACrB,QAAIlgC,GACKA,EAAIy3G,OAAOh6E,EAGtB,CAOA,SAASi6E,GAAgB5gF,EAAYjrB,GACnC,MAAM2zC,EAAa1oB,EAAW2pB,iBAAiB3pB,EAAWg2C,YACtDttB,EAAW3zC,SACbA,EAAS2E,GACP3E,EACA+Y,GAAe46B,EAAW3zC,OAAQirB,EAAWsH,UAAUrsB,cAG3D,MAAM5R,EACJq/C,EAAW5P,MAAMuQ,kBAEnB,IAAKhgD,EAAO4rE,WAAY,CACtB,MAAM4rC,EAAax3G,EAChBozF,yBAAyBz8D,EAAWsH,UAAUrsB,YAC9CE,YACC0lG,IACF9rG,EAAS2E,GAAgB3E,EAAQ8rG,GAEvC,CACE,OAAO9rG,CACT,CAcA,MAAM+rG,WAAgCpD,GAKpC,WAAAr+G,CAAY0hH,EAAWn3G,GACrBrF,MAAMw8G,GAENn3G,EAAUA,GAAW,CAAE,EAMvBtK,KAAK0hH,eAAgB,EAMrB1hH,KAAK2hH,gBAAiB,EAMtB3hH,KAAK4hH,gBAAkB,KAMvB5hH,KAAK6hH,mBAML7hH,KAAK8hH,mBAAqB,KAM1B9hH,KAAK+hH,kBAML/hH,KAAKgiH,cAAgB,GAMrBhiH,KAAKiiH,mBAMLjiH,KAAKkiH,wBAMLliH,KAAKgyF,WxKUA,CAACj7E,IAAUA,KAAU,KAAW,KwKJrC/W,KAAKmiH,eAAiB,IAAI5hC,GAAU,EAAG,EAAG,EAAG,GAM7CvgF,KAAKoiH,eAAiBC,GAAgB,EAAG,EAAG,GAE5C,MAAM9wD,OAAkC/qD,IAAtB8D,EAAQinD,UAA0BjnD,EAAQinD,UAAY,IAMxEvxD,KAAKsiH,WAAa,IAAIlzB,GAAS79B,GAE/BvxD,KAAK69G,aAA2B,GAAZtsD,CACxB,CAKE,YAAAgxD,GACE,OAAOviH,KAAKsiH,UAChB,CAYE,eAAAE,CAAgB14E,EAAG/zB,EAAGC,EAAG0qB,GACvB,MAAM+hF,EAAYziH,KAAKsiH,WAEjBI,EADY1iH,KAAKi+G,WACMtkE,YACvBojB,EAAWzB,GAAYonD,EAAWh2G,SAAUo9B,EAAG/zB,EAAGC,GAGxD,IAAIqxB,EAEJ,GAAIo7E,EAAU3yB,YAAY/yB,GACxB11B,EAAOo7E,EAAUx5G,IAAI8zD,OAChB,CAQL,GAPA11B,EAAOq7E,EAAWtlB,QAChBtzD,EACA/zB,EACAC,EACA0qB,EAAW/D,WACX+D,EAAWsH,UAAUrsB,aAElB0rB,EACH,OAAO,KAETo7E,EAAU74G,IAAImzD,EAAU11B,EAC9B,CACI,OAAOA,CACX,CAUE,OAAA+1D,CAAQtzD,EAAG/zB,EAAGC,EAAG0qB,GACf,MAAM2G,EAAOrnC,KAAKwiH,gBAAgB14E,EAAG/zB,EAAGC,EAAG0qB,GAC3C,OAAK2G,GACI,IAGb,CAOE,OAAAh0B,CAAQ4tB,GACN,MAAMP,EAAa1gC,KAAK0gC,WACxB,IAAKA,EACH,OAAO,KAGT,MAAM8Y,EAAQx5C,KAAKi+G,WACb7nG,EAAa+E,GACjBulB,EAAWq0C,2BACX9zC,EAAMz9B,SAGFgnD,EAAchR,EAAM39B,YAC1B,GAAI2uC,IACGr0C,GAAmBq0C,EAAap0C,GACnC,OAAO,KAIX,MAAM4xB,EAAYtH,EAAWsH,UACvBj+B,EAASyvC,EAAMuQ,kBACfxlC,EAAWxa,EAAOozF,yBAAyBn1D,EAAUrsB,YACrDkhF,EAAiB9yF,EAAOuzF,kBAAkB58D,EAAW/D,YAE3D,IACE,IAAImN,EAAIvlB,EAASyuE,kBAAkBhrD,EAAU/uB,YAC7C6wB,GAAKvlB,EAASysB,eACZlH,EACF,CACA,MAAM59B,EAAYqY,EAAS2uE,yBAAyB98E,EAAY0zB,GAC1DzC,EAAOrnC,KAAKo9F,QAAQtzD,EAAG59B,EAAU,GAAIA,EAAU,GAAIw0B,GACzD,IAAK2G,GAAQA,EAAKz6B,aAAenB,EAC/B,SAGF,MAAMk3G,EAAap+F,EAASg+C,UAAUz4B,GAChCunD,EAAWr/B,GAAOztC,EAASouE,YAAY7oD,IACvChC,EAAiBvjB,EAAS0Y,cAAc6M,GAK9C,IAAIz3B,EACJ,GAAIg1B,aAAgB7I,IAAa6I,aAAgB8yD,GAC/C9nF,EAAQg1B,EAAKtK,eACR,MAAIsK,aAAgB30B,IAMzB,SAJA,GADAL,EAAQZ,GAAY41B,EAAKh0B,YACpBhB,EACH,QAIV,CAEM,MAAMqsG,EAAM9yG,KAAKoQ,MACf6gF,IACIzmF,EAAW,GAAKusG,EAAW,IAAM76E,EACjC57B,EAAU,GAAKmlF,EAAS,KAGxBstB,EAAM/yG,KAAKoQ,MACf6gF,IACI8lB,EAAW,GAAKvsG,EAAW,IAAM0xB,EACjC57B,EAAU,GAAKmlF,EAAS,KAGxB7D,EAAS5hF,KAAK+R,MAClBk/E,EAAiB9yF,EAAOkzF,uBAAuBj1D,EAAUrsB,aAG3D,OAAO3b,KAAKwS,aAAaH,EAAOqsG,EAAMlxB,EAAQmxB,EAAMnxB,EAC1D,CAEI,OAAO,IACX,CAQE,YAAA5iC,CAAalqB,GACN1gC,KAAK8hH,mBAECphF,EAAWsH,UAAUrsB,aAAe3b,KAAK8hH,qBAClD9hH,KAAKsiH,WAAWj+G,QAChBrE,KAAK8hH,mBAAqBphF,EAAWsH,UAAUrsB,YAH/C3b,KAAK8hH,mBAAqBphF,EAAWsH,UAAUrsB,WAMjD,MAAM5R,EAAS/J,KAAKi+G,WAAWtkE,YAC/B,IAAK5vC,EACH,OAAO,EAET,MAAM64G,EAAiB74G,EAAOlC,cAS9B,OARK7H,KAAK+hH,kBAEC/hH,KAAK+hH,oBAAsBa,IACpC5iH,KAAK+hH,kBAAoBa,EACrB5iH,KAAKiiH,qBAAuBl4G,EAAO2C,UACrC1M,KAAKsiH,WAAWj+G,SAJlBrE,KAAK+hH,kBAAoBa,GAOpB,CACX,CASE,YAAAC,CAAaniF,EAAYjrB,EAAQqtG,EAAU7B,EAAU8B,GACnD,MAAM/6E,EAAYtH,EAAWsH,UACvBy5E,EAAYzhH,KAAKi+G,WACjByE,EAAajB,EAAU13D,kBACvBxlC,EAAWm+F,EAAWvlB,yBAAyBn1D,EAAUrsB,YAEzDisB,EAAgBr/B,EAAOm6G,GACvB96E,KAAiBlH,EAAWqH,cAChCrH,EAAWqH,YAAYH,GAAiB,CAAE,GAG5C,MAAMG,EAAcrH,EAAWqH,YAAYH,GAErCzW,EAAMswF,EAAUr3D,iBAChB44D,EAAOp3G,KAAKoM,IAChB8qG,EAAWC,EACXx+F,EAASysB,aACTzsB,EAASyuE,kBACPpnF,KAAKmM,IACH0pG,EAAU/wE,mBACVvf,EACIA,EACGkqB,UACAhN,qBAAqBziC,KAAKoM,IAAIypG,EAAUzwE,aAAc,IACzDzsB,EAAS0Y,cAAc,IAE7BylF,EAAW1lB,aAGT9jF,EAAW8uB,EAAU9uB,SACrBo6E,EAAWp6E,EACbS,GACEquB,EAAUhvB,OACVgvB,EAAU/uB,WACVC,EACAwnB,EAAW1tB,WAEbxM,EACJ,IAAK,IAAIsjC,EAAIg5E,EAAUh5E,GAAKk5E,IAAQl5E,EAAG,CACrC,MAAM22C,EAAYl8D,EAASotE,0BACzBl8E,EACAq0B,EACA9pC,KAAKmiH,gBAGDr6E,EAAiBvjB,EAAS0Y,cAAc6M,GAE9C,IAAK,IAAI/zB,EAAI0qE,EAAU/pE,KAAMX,GAAK0qE,EAAU7pE,OAAQb,EAClD,IAAK,IAAIC,EAAIyqE,EAAU9pE,KAAMX,GAAKyqE,EAAU5pE,OAAQb,EAAG,CACrD,GACEkD,IACCqL,EAAS8uE,4BAA4B,CAACvpD,EAAG/zB,EAAGC,GAAIs9E,GAEjD,SAEF,MAAMjsD,EAAOrnC,KAAKo9F,QAAQtzD,EAAG/zB,EAAGC,EAAG0qB,GACnC,IAAK2G,EACH,SAGF,IADc25E,GAAgBC,EAAU55E,EAAMyC,GAE5C,SAGF,MAAMm5E,EAAe57E,EAAK36B,SAG1B,GAFAq7B,EAAYk7E,IAAgB,EAExB57E,EAAKz6B,aAAenB,IACjBi1B,EAAWu7C,UAAU/1C,YAAY+8E,GAAe,CACnD,MAAM/2G,EAAYm2G,GAAgBv4E,EAAG/zB,EAAGC,EAAGhW,KAAKoiH,gBAChD1hF,EAAWu7C,UAAUv2C,QAAQ,CAC3B2B,EACAO,EACArjB,EAASmuE,mBAAmBxmF,GAC5B47B,GAEhB,CAEA,CAEA,CACA,CAUE,cAAAo7E,CAAeh3G,EAAW+0G,GACxB,MAAMwB,EAAYziH,KAAKsiH,WACjBx4E,EAAI59B,EAAU,GACd6J,EAAI7J,EAAU,GACd8J,EAAI9J,EAAU,GACdi3G,EAAYnjH,KAAK89G,eACvB,IAAK,IAAIv8G,EAAI,EAAGA,EAAI4hH,EAAUtiH,SAAUU,EAAG,CACzC,MAAMw7D,EAAWzB,GAAY6nD,EAAU5hH,GAAIuoC,EAAG/zB,EAAGC,GACjD,GAAIysG,EAAU3yB,YAAY/yB,GAAW,CACnC,MAAM11B,EAAOo7E,EAAUlyB,KAAKxzB,GAC5B,GAAI11B,EAAKz6B,aAAenB,EAGtB,OAFA47B,EAAKj6B,cAAc7E,EAAOvI,OAC1BghH,GAAgBC,EAAU55E,EAAMyC,IACzB,CAEjB,CACA,CACI,OAAO,CACX,CAYE,aAAAs5E,CAAc7+F,EAAUrY,EAAWm3G,EAAMpC,GACvC,MAAMxgC,EAAYl8D,EAAS8tE,6BACzBnmF,EACAm3G,EACArjH,KAAKmiH,gBAGP,IAAK1hC,EACH,OAAO,EAGT,IAAI6iC,GAAU,EACd,MAAMb,EAAYziH,KAAKsiH,WAEjBvB,EADS/gH,KAAKi+G,WAAWl0D,kBACNr9C,SACzB,IAAK,IAAIqJ,EAAI0qE,EAAU/pE,KAAMX,GAAK0qE,EAAU7pE,OAAQb,EAClD,IAAK,IAAIC,EAAIyqE,EAAU9pE,KAAMX,GAAKyqE,EAAU5pE,OAAQb,EAAG,CACrD,MAAM+mD,EAAWzB,GAAYylD,EAAWsC,EAAMttG,EAAGC,GACjD,IAAI6nB,GAAS,EACb,GAAI4kF,EAAU3yB,YAAY/yB,GAAW,CACnC,MAAM11B,EAAOo7E,EAAUlyB,KAAKxzB,GACxB11B,EAAKz6B,aAAenB,IACtBu1G,GAAgBC,EAAU55E,EAAMg8E,GAChCxlF,GAAS,EAErB,CACaA,IACHylF,GAAU,EAEpB,CAEI,OAAOA,CACX,CAgBE,WAAAz4D,CAAYnqB,EAAYt/B,GACtBpB,KAAK2hH,gBAAiB,EAQtB,MAAMv4D,EAAa1oB,EAAW2pB,iBAAiB3pB,EAAWg2C,YACpD1uC,EAAYtH,EAAWsH,UACvBrsB,EAAaqsB,EAAUrsB,WACvBukG,EAAiBl4E,EAAU/uB,WAC3BwnG,EAAaz4E,EAAUhvB,OACvB2jB,EAAa+D,EAAW/D,WAExB8kF,EAAYzhH,KAAKi+G,WACjByE,EAAajB,EAAU9nE,YACvBp1B,EAAWm+F,EAAWvlB,yBAAyBxhF,GAC/CmuB,EAAIvlB,EAASyuE,kBAAkBktB,EAAgBwC,EAAW1lB,YAC1Dl1D,EAAiBvjB,EAAS0Y,cAAc6M,GAExCi3E,EAAY2B,EAAWh2G,SACxB1M,KAAKiiH,mBAECjiH,KAAKiiH,qBAAuBlB,IACrC/gH,KAAK+9G,gBAAgB/9G,KAAKiiH,oBAC1BjiH,KAAKiiH,mBAAqBlB,GAH1B/gH,KAAKiiH,mBAAqBlB,EAM5B,IAAIwC,EAAc7iF,EAAWjrB,OAC7B,MAAMonF,EAAiB6lB,EAAWplB,kBAAkB3gE,GAEpD38B,KAAKu/G,iBAAiB7+E,EAAYt/B,GAGlC,MAAM0N,EAAQ9O,KAAK0P,QAAQR,OAAOJ,MAC5BC,EAAS/O,KAAK0P,QAAQR,OAAOH,OAE7By7C,EACJpB,EAAW3zC,QAAU+Y,GAAe46B,EAAW3zC,OAAQkG,GACrD6uC,IACF+4D,EAAcnpG,GACZmpG,EACA/0F,GAAe46B,EAAW3zC,OAAQkG,KAItC,MAAM1F,EAAM6xB,EAAiBh5B,EAAS,EAAI+tF,EACpC3mF,EAAM4xB,EAAiB/4B,EAAU,EAAI8tF,EACrC2mB,EAAe,CACnB/C,EAAW,GAAKxqG,EAChBwqG,EAAW,GAAKvqG,EAChBuqG,EAAW,GAAKxqG,EAChBwqG,EAAW,GAAKvqG,GAMZ+qG,EAAW,CAAE,EAEnBjhH,KAAKgiH,cAAcnhH,OAAS,EAM5B,MAAMkiH,EAAUtB,EAAUgC,aAC1B,GAAI/iF,EAAW48C,WAAY,CACzB,MAAMomC,EAAUn/F,EAASyuE,kBACvBhrD,EAAU+J,eACV2wE,EAAW1lB,YAEP1f,EAAagkC,GAAgB5gF,EAAYA,EAAW48C,YAC1Dt9E,KAAK6iH,aAAaniF,EAAY48C,EAAYomC,EAASzC,EAAU8B,EACnE,CAEI,MAAMY,EAAerC,GAAgB5gF,EAAY6iF,GAcjD,GAbAvjH,KAAK6iH,aAAaniF,EAAYijF,EAAc75E,EAAGm3E,EAAU,GACrD8B,EAAU,GACZr/E,YAAW,KACT1jC,KAAK6iH,aACHniF,EACAijF,EACA75E,EAAI,EACJm3E,EACA8B,EAAU,EACX,GACA,KAGCj5E,KAAKm3E,GACT,OAAOjhH,KAAKq2E,UAOd,MAAMkoB,EAAMh2F,EAAOvI,MACbgN,EAAO0zB,EAAW1zB,KAGxB,IAAK,MAAMq6B,KAAQ45E,EAASn3E,GAAI,CAC9B,MAAM00D,EAAYn3D,EAAKz6B,WACvB,GAAI4xF,IAAc/yF,EAChB,SAEF,MAAMS,EAAYm7B,EAAKn7B,UAEvB,GAAIsyF,IAAc/yF,EAAkB,CAElC,GAAc,IADA47B,EAAKv6B,SAASyxF,EAAKvxF,GAChB,CAEfq6B,EAAKj6B,cAAcmxF,GACnB,QACV,CACA,CACUC,IAAc/yF,IAChBzL,KAAK2hH,gBAAiB,GAIxB,GADqB3hH,KAAKkjH,eAAeh3G,EAAW+0G,GAClC,CAEhBG,GAAqBH,EAAU55E,EAAMyC,GACrCpJ,EAAW4M,SAAU,EACrB,QACR,CAUM,GAP0BttC,KAAKojH,cAC7B7+F,EACArY,EACA49B,EAAI,EACJm3E,GAIA,SAIF,MAAMh1E,EAAU1nB,EAASysB,aACzB,IAAK,IAAI4yE,EAAU95E,EAAI,EAAG85E,GAAW33E,IAAW23E,EAAS,CAQvD,GAPwB5jH,KAAKojH,cAC3B7+F,EACArY,EACA03G,EACA3C,GAIA,KAEV,CACA,CAMI,MAAM4C,EACF/7E,EAAiBo4E,EAAkBvjF,EAAckgE,EAE/CntF,EAAU1P,KAAK8/G,iBAAiBp/E,GAGtC/M,GACE3zB,KAAKs+G,cACLxvG,EAAQ,EACRC,EAAS,EACT80G,EACAA,EACA,GACC/0G,EAAQ,GACRC,EAAS,GAGRq6C,EAAW3zC,QACbzV,KAAKi/G,cAAcvvG,EAASgxB,EAAY8pB,GAGrCk4D,EAAWnmB,mBACd7sF,EAAQk+E,uBAAwB,GAGlC5tF,KAAK2/G,UAAUjwG,EAASgxB,GAGxB,MAAMojF,EAAKp9G,OAAOC,KAAKs6G,GAAU9vF,IAAI0B,QAGrC,IAAIkxF,EAFJD,EAAGjrF,KAAKn4B,GAGR,MAAMsjH,EAAQ,GACRC,EAAS,GACf,IAAK,IAAI1iH,EAAIuiH,EAAGjjH,OAAS,EAAGU,GAAK,IAAKA,EAAG,CACvC,MAAM2iH,EAAWJ,EAAGviH,GACd4iH,EAAuBzB,EAAWnlB,iBACtC2mB,EACAvnF,EACAhhB,GAGIyoG,EADoB7/F,EAAS0Y,cAAcinF,GACRp8E,EACnC7xB,EAAKkuG,EAAqB,GAAKC,EAAeP,EAC9C3tG,EAAKiuG,EAAqB,GAAKC,EAAeP,EAC9CQ,EAAkB9/F,EAAS2uE,yBAC/B36E,GAAWirG,GACXU,GAEII,EAAmB//F,EAAS2tE,mBAAmBmyB,GAC/CrzB,EAAS71E,GAAenb,KAAKs+G,cAAe,CAC/CzhB,GAAkBynB,EAAiB,GAAKd,EAAa,IACpD17E,EACD+0D,GAAkB2mB,EAAa,GAAKc,EAAiB,IACpDx8E,IAEEy8E,EACJ1nB,EAAiB6lB,EAAWzlB,uBAAuBthF,GACrD,IAAK,MAAM0rB,KAAQ45E,EAASiD,GAAW,CACrC,GAAI78E,EAAKz6B,aAAenB,EACtB,SAEF,MAAMS,EAAYm7B,EAAKn7B,UAGjBs4G,EAASH,EAAgB,GAAKn4G,EAAU,GACxCu4G,EAAQ74G,KAAK+R,MAAMqzE,EAAO,IAAMwzB,EAAS,GAAKvuG,GAC9CyuG,EAASL,EAAgB,GAAKn4G,EAAU,GACxCy4G,EAAQ/4G,KAAK+R,MAAMqzE,EAAO,IAAM0zB,EAAS,GAAKxuG,GAC9CH,EAAInK,KAAK+R,MAAMqzE,EAAO,GAAKwzB,EAASvuG,GACpCD,EAAIpK,KAAK+R,MAAMqzE,EAAO,GAAK0zB,EAASxuG,GACpC85B,EAAIy0E,EAAQ1uG,EACZk6B,EAAI00E,EAAQ3uG,EACZ3J,EAA2B,IAAdy3G,EAAGjjH,OAEtB,IAAI+jH,GAAe,EAGnBb,EAAc,CAAChuG,EAAGC,EAAGD,EAAIi6B,EAAGh6B,EAAGD,EAAIi6B,EAAGh6B,EAAIi6B,EAAGl6B,EAAGC,EAAIi6B,GACpD,IAAK,IAAI1uC,EAAI,EAAG4E,EAAK69G,EAAMnjH,OAAQU,EAAI4E,IAAM5E,EAC3C,IAAK8K,GAAc63G,EAAWD,EAAO1iH,GAAI,CACvC,MAAMurF,EAAOk3B,EAAMziH,GAEjB+Y,GACE,CAACvE,EAAGC,EAAGD,EAAIi6B,EAAGh6B,EAAIi6B,GAClB,CAAC68C,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,OAG9B83B,IACHl1G,EAAQuxD,OACR2jD,GAAe,GAEjBl1G,EAAQ83E,YAER93E,EAAQ43E,OAAOy8B,EAAY,GAAIA,EAAY,IAC3Cr0G,EAAQu2D,OAAO89C,EAAY,GAAIA,EAAY,IAC3Cr0G,EAAQu2D,OAAO89C,EAAY,GAAIA,EAAY,IAC3Cr0G,EAAQu2D,OAAO89C,EAAY,GAAIA,EAAY,IAE3Cr0G,EAAQ43E,OAAOwF,EAAK,GAAIA,EAAK,IAC7Bp9E,EAAQu2D,OAAO6mB,EAAK,GAAIA,EAAK,IAC7Bp9E,EAAQu2D,OAAO6mB,EAAK,GAAIA,EAAK,IAC7Bp9E,EAAQu2D,OAAO6mB,EAAK,GAAIA,EAAK,IAC7Bp9E,EAAQo9E,OAEtB,CAEQk3B,EAAMr+G,KAAKo+G,GACXE,EAAOt+G,KAAKu+G,GAEZlkH,KAAK6kH,SAASx9E,EAAM3G,EAAY3qB,EAAGC,EAAGg6B,EAAGC,EAAGs0E,EAAYl4G,GACpDu4G,GACFl1G,EAAQ2xD,UAEVrhE,KAAKgiH,cAAchE,QAAQ32E,GAG3BrnC,KAAK8kH,gBAAgBpkF,EAAWy8C,UAAWulC,EAAYr7E,EAC/D,CACA,CAeI,GAbArnC,KAAKq+G,mBAAqBv2E,EAC1B9nC,KAAK0hH,eACF1hH,KAAK4hH,kBAAoB1/G,GAAOlC,KAAK4hH,gBAAiB4B,GACzDxjH,KAAK4hH,gBAAkB4B,EACvBxjH,KAAK6hH,mBAAqBllF,EAE1B38B,KAAK4/G,WAAW5/G,KAAK0P,QAASgxB,GAE1B0oB,EAAW3zC,QACb/F,EAAQ2xD,UAEV3xD,EAAQk+E,uBAAwB,EAE5B5tF,KAAK2hH,eAAgB,CAKvB,MAAMoD,EAAqB,CAAC5zF,EAAKuP,KAC/B,MAAMkH,EAAgBr/B,EAAOm6G,GACvB36E,EAAcrH,EAAWqH,YAAYH,GACrCo9E,EAAaj9E,EAAcrhC,OAAOC,KAAKohC,GAAalnC,OAAS,EACnEb,KAAKilH,gBAAgBD,GACrBhlH,KAAKsiH,WAAW1yB,aAAa,EAG/BlvD,EAAWs1C,oBAAoBrwE,KAAKo/G,EAC1C,CAEI,OAAO/kH,KAAKq2E,SAChB,CAME,eAAA4uC,CAAgBC,GACdllH,KAAKsiH,WAAWjzB,cAAgBzjF,KAAKoM,IACnChY,KAAKsiH,WAAWjzB,cACJ,EAAZ61B,EAEN,CAaE,QAAAL,CAASx9E,EAAM3G,EAAY3qB,EAAGC,EAAGg6B,EAAGC,EAAGu9C,EAAQnhF,GAC7C,IAAIgG,EACJ,GAAIg1B,aAAgB30B,IAElB,GADAL,EAAQZ,GAAY41B,EAAKh0B,YACpBhB,EACH,MAAM,IAAIhK,MAAM,kDAGlBgK,EAAQrS,KAAKmlH,aACnB,GAGI,IAAK9yG,EACH,OAEF,MAAM3C,EAAU1P,KAAK8/G,iBAAiBp/E,GAChC69D,EAAMh2F,EAAOvI,MACbopD,EAAa1oB,EAAW2pB,iBAAiB3pB,EAAWg2C,YACpD9lB,EACJxH,EAAW3C,SACVp6C,EAAag7B,EAAKv6B,SAASyxF,EAAK79D,EAAW1zB,MAAQ,GAChDo4G,EAAex0D,IAAUlhD,EAAQwxD,YACnCkkD,IACF11G,EAAQuxD,OACRvxD,EAAQwxD,YAActQ,GAExBlhD,EAAQ6C,UACNF,EACAm7E,EACAA,EACAn7E,EAAMvD,MAAQ,EAAI0+E,EAClBn7E,EAAMtD,OAAS,EAAIy+E,EACnBz3E,EACAC,EACAg6B,EACAC,GAGEm1E,GACF11G,EAAQ2xD,UAENzQ,IAAUxH,EAAW3C,QACvB/lB,EAAW4M,SAAU,EACZjhC,GACTg7B,EAAKj6B,cAAcmxF,EAEzB,CAKE,QAAAxhE,GACE,MAAMrtB,EAAU1P,KAAK0P,QACrB,OAAOA,EAAUA,EAAQR,OAAS,IACtC,CAQE,YAAAi2G,CAAa99E,GACX,OAAOA,EAAKtK,UAChB,CAQE,eAAA+nF,CAAgB3nC,EAAWulC,EAAYr7E,GAErC,MAAMO,EAAgBr/B,EAAOm6G,GACvB96E,KAAiBu1C,IACrBA,EAAUv1C,GAAiB,CAAE,GAE/Bu1C,EAAUv1C,GAAeP,EAAK36B,WAAY,CAC9C,ECx8Be,IAAA24G,GACJ,UADIA,GAEe,yBCuD9B,MAAMC,WAAsBh8D,GAI1B,WAAAvpD,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhC,MAAM29C,EAAcvhD,OAAO2C,OAAO,CAAA,EAAIiB,GAEhCinD,EAAYjnD,EAAQinD,iBACnBjnD,EAAQinD,iBAERtJ,EAAY86D,eACZ96D,EAAYs9D,uBACnBtgH,MAAMgjD,GAKNjoD,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAKi7D,WAAa1J,EAElBvxD,KAAKwlH,gBAA+Bh/G,IAApB8D,EAAQy4G,QAAwBz4G,EAAQy4G,QAAU,GAClE/iH,KAAKylH,+BACgCj/G,IAAnC8D,EAAQi7G,wBACJj7G,EAAQi7G,uBAGlB,CAME,YAAAG,GACE,OAAO1lH,KAAKi7D,UAChB,CAQE,UAAAwoD,GACE,OAA8BzjH,KAAKiJ,IAAIo8G,GAC3C,CAQE,UAAAG,CAAWzC,GACT/iH,KAAK4J,IAAIy7G,GAAsBtC,EACnC,CAQE,yBAAA4C,GACE,OACE3lH,KAAKiJ,IAAIo8G,GAEf,CAQE,yBAAAI,CAA0BF,GACxBvlH,KAAK4J,IAAIy7G,GAAyCE,EACtD,CAmBE,OAAAlyG,CAAQ4tB,GACN,OAAOh8B,MAAMoO,QAAQ4tB,EACzB,EChKA,MAAM2kF,WAAkBN,GAItB,WAAAvlH,CAAYuK,GACVrF,MAAMqF,EACV,CAKE,cAAAghD,GACE,OAAO,IAAIk2D,GAAwBxhH,KAAM,CACvCuxD,UAAWvxD,KAAK0lH,gBAEtB,ECGA,SAASG,GAAa5tD,GACpB,OAAO,SAAUn2D,GAEf,MAAMgkH,EAAUhkH,EAAc,QACxBikH,EAAOjkH,EAAW,KAClBkkH,EAAWlkH,EAAe,SAC1BgN,EAAQhN,EAAY,MACpBiN,EAASjN,EAAa,OAEtBmkH,EAAaH,EAAQjlH,OACrBqlH,EAAWJ,EAAQ,GAAG7S,WAE5B,GAAI+S,EAAU,CACZ,MAAMG,EAAS,IAAInkH,MAAMikH,GACzB,IAAK,IAAIjlH,EAAI,EAAGA,EAAIilH,IAAcjlH,EAChCmlH,EAAOnlH,GAAK,IAAIqzG,UACd,IAAItiG,kBAAkB+zG,EAAQ9kH,IAC9B8N,EACAC,GAIJ,OADekpD,EAAUkuD,EAAQJ,GAAMjkH,KACzB8T,MACpB,CAEI,MAAM8P,EAAS,IAAI3T,kBAAkBm0G,GAC/BE,EAAS,IAAIpkH,MAAMikH,GACnBI,EAAS,IAAIrkH,MAAMikH,GACzB,IAAK,IAAIjlH,EAAI,EAAGA,EAAIilH,IAAcjlH,EAChColH,EAAOplH,GAAK,IAAI+Q,kBAAkB+zG,EAAQ9kH,IAC1CqlH,EAAOrlH,GAAK,CAAC,EAAG,EAAG,EAAG,GAExB,IAAK,IAAIO,EAAI,EAAGA,EAAI2kH,EAAU3kH,GAAK,EAAG,CACpC,IAAK,IAAIsb,EAAI,EAAGA,EAAIopG,IAAcppG,EAAG,CACnC,MAAMxS,EAAQ+7G,EAAOvpG,GACrBwpG,EAAOxpG,GAAG,GAAKxS,EAAM9I,GACrB8kH,EAAOxpG,GAAG,GAAKxS,EAAM9I,EAAI,GACzB8kH,EAAOxpG,GAAG,GAAKxS,EAAM9I,EAAI,GACzB8kH,EAAOxpG,GAAG,GAAKxS,EAAM9I,EAAI,EACjC,CACM,MAAM0/B,EAAQg3B,EAAUouD,EAAQN,GAChCrgG,EAAOnkB,GAAK0/B,EAAM,GAClBvb,EAAOnkB,EAAI,GAAK0/B,EAAM,GACtBvb,EAAOnkB,EAAI,GAAK0/B,EAAM,GACtBvb,EAAOnkB,EAAI,GAAK0/B,EAAM,EAC5B,CACI,OAAOvb,EAAO9P,MACf,CACH,CAQA,SAAS0wG,GAAaC,EAAQC,GAC5B,MAIM5U,EAJMlrG,OAAOC,KAAK4/G,EAAOE,KAAO,IAAIt1F,KAAI,SAAU/b,GACtD,MAAO,SAAWA,EAAO,MAAQmxG,EAAOE,IAAIrxG,GAAM2b,WAAa,GACnE,IAEoBwoC,OAAO,CACvB,uBAAyBssD,GAAa90F,WAAa,KACnDw1F,EAAOtuD,UAAUlnC,WACjB,KACA,qDACA,2CACA,yEACA,QAGI21F,EAAS,IAAIC,OACD,oBAATC,KACH,+BACAC,OAAO/sE,KAAK83D,EAAM9xF,KAAK,MAAO,UAAUiR,SAAS,UACjD8xD,IAAIikC,gBAAgB,IAAIF,KAAKhV,EAAO,CAACltG,KAAM,sBAGjD,OADAgiH,EAAOphH,iBAAiB,UAAWkhH,GAC5BE,CACT,CAuDO,MAAMK,WAAkBjnH,EAI7B,WAAAC,CAAYwmH,GAQV,IAAIS,EAPJ/hH,QAMAjF,KAAKinH,YAAcV,EAAOP,SAGxBgB,EADqB,IAAnBT,EAAOS,QACC,EACDhnH,KAAKinH,UACJ,EAEAV,EAAOS,SAAW,EAM9B,MAAME,EAAU,IAAIllH,MAAMglH,GAC1B,GAAIA,EACF,IAAK,IAAIzlH,EAAI,EAAGA,EAAIylH,IAAWzlH,EAC7B2lH,EAAQ3lH,GAAK+kH,GAAaC,EAAQvmH,KAAKmnH,iBAAiBjgH,KAAKlH,KAAMuB,SAGrE2lH,EAAQ,GAxEd,SAA0BX,EAAQC,GAChC,MAAMY,EAASvB,GAAaU,EAAOtuD,WACnC,IAAIovD,GAAa,EACjB,MAAO,CACLC,YAAa,SAAUxlH,GACrB4hC,YAAW,WACL2jF,GAGJb,EAAU,CAAC1kH,KAAM,CAAC8T,OAAQwxG,EAAOtlH,GAAOikH,KAAMjkH,EAAW,OAC1D,GAAE,EACJ,EACDylH,UAAW,WACTF,GAAa,CACd,EAEL,CAwDmBG,CACXjB,EACAvmH,KAAKmnH,iBAAiBjgH,KAAKlH,KAAM,IAOrCA,KAAKynH,SAAWP,EAMhBlnH,KAAK0nH,OAAS,GAMd1nH,KAAK2nH,gBAAkBpB,EAAOqB,OAAS7wG,IAKvC/W,KAAK6nH,SAAW,EAMhB7nH,KAAK8nH,YAAc,CAAE,EAMrB9nH,KAAK+nH,KAAO,IAChB,CAWE,OAAAC,CAAQC,EAAQlC,EAAM7tG,GACpBlY,KAAKkoH,SAAS,CACZD,OAAQA,EACRlC,KAAMA,EACN7tG,SAAUA,IAEZlY,KAAKmoH,WACT,CAME,QAAAD,CAASE,GAEP,IADApoH,KAAK0nH,OAAO/hH,KAAKyiH,GACVpoH,KAAK0nH,OAAO7mH,OAASb,KAAK2nH,iBAC/B3nH,KAAK0nH,OAAOv4G,QAAQ+I,SAAS,KAAM,KAEzC,CAKE,SAAAiwG,GACE,GAAInoH,KAAK6nH,UAAmC,IAAvB7nH,KAAK0nH,OAAO7mH,OAC/B,OAGF,MAAMunH,EAAMpoH,KAAK0nH,OAAOv4G,QACxBnP,KAAK+nH,KAAOK,EACZ,MAAMt5G,EAAQs5G,EAAIH,OAAO,GAAGn5G,MACtBC,EAASq5G,EAAIH,OAAO,GAAGl5G,OACvB+2G,EAAUsC,EAAIH,OAAO92F,KAAI,SAAU1L,GACvC,OAAOA,EAAM3jB,KAAK8T,MACxB,IACUoxG,EAAUhnH,KAAKynH,SAAS5mH,OAE9B,GADAb,KAAK6nH,SAAWb,EACA,IAAZA,EAWF,YAVAhnH,KAAKynH,SAAS,GAAGH,YACf,CACExB,QAASA,EACTC,KAAMqC,EAAIrC,KACVC,SAAUhmH,KAAKinH,UACfn4G,MAAOA,EACPC,OAAQA,GAEV+2G,GAKJ,MAAMjlH,EAASunH,EAAIH,OAAO,GAAGnmH,KAAKjB,OAC5Bi4B,EAAgB,EAAIltB,KAAKgS,KAAK/c,EAAS,EAAImmH,GACjD,IAAK,IAAIzlH,EAAI,EAAGA,EAAIylH,IAAWzlH,EAAG,CAChC,MAAM8V,EAAS9V,EAAIu3B,EACbuvF,EAAS,GACf,IAAK,IAAIxrG,EAAI,EAAG6P,EAAKo5F,EAAQjlH,OAAQgc,EAAI6P,IAAM7P,EAC7CwrG,EAAO1iH,KAAKmgH,EAAQjpG,GAAGrZ,MAAM6T,EAAQA,EAASyhB,IAEhD94B,KAAKynH,SAASlmH,GAAG+lH,YACf,CACExB,QAASuC,EACTtC,KAAMqC,EAAIrC,KACVC,SAAUhmH,KAAKinH,UACfn4G,MAAOA,EACPC,OAAQA,GAEVs5G,EAER,CACA,CAOE,gBAAAlB,CAAiBvkH,EAAOiD,GAClB7F,KAAKC,WAGTD,KAAK8nH,YAAYllH,GAASiD,EAAM/D,OAC9B9B,KAAK6nH,SACe,IAAlB7nH,KAAK6nH,UACP7nH,KAAKsoH,cAEX,CAME,WAAAA,GACE,MAAMF,EAAMpoH,KAAK+nH,KACXf,EAAUhnH,KAAKynH,SAAS5mH,OAC9B,IAAIiB,EAAMikH,EACV,GAAgB,IAAZiB,EACFllH,EAAO,IAAIiQ,kBAAkB/R,KAAK8nH,YAAY,GAAW,QACzD/B,EAAO/lH,KAAK8nH,YAAY,GAAS,SAC5B,CACL,MAAMjnH,EAASunH,EAAIH,OAAO,GAAGnmH,KAAKjB,OAClCiB,EAAO,IAAIiQ,kBAAkBlR,GAC7BklH,EAAO,IAAI/jH,MAAMglH,GACjB,MAAMluF,EAAgB,EAAIltB,KAAKgS,KAAK/c,EAAS,EAAImmH,GACjD,IAAK,IAAIzlH,EAAI,EAAGA,EAAIylH,IAAWzlH,EAAG,CAChC,MAAMqU,EAAS5V,KAAK8nH,YAAYvmH,GAAW,OACrC8V,EAAS9V,EAAIu3B,EACnBh3B,EAAK8H,IAAI,IAAImI,kBAAkB6D,GAASyB,GACxC0uG,EAAKxkH,GAAKvB,KAAK8nH,YAAYvmH,GAAS,IAC5C,CACA,CACIvB,KAAK+nH,KAAO,KACZ/nH,KAAK8nH,YAAc,CAAE,EACrBM,EAAIlwG,SACF,KACA,IAAIm8F,UAAUvyG,EAAMsmH,EAAIH,OAAO,GAAGn5G,MAAOs5G,EAAIH,OAAO,GAAGl5G,QACvDg3G,GAEF/lH,KAAKmoH,WACT,CAME,eAAAhoH,GACE,IAAK,IAAIoB,EAAI,EAAGA,EAAIvB,KAAKynH,SAAS5mH,SAAUU,EAC1CvB,KAAKynH,SAASlmH,GAAGgmH,YAEnBvnH,KAAKynH,SAAS5mH,OAAS,CAC3B,EAyBA,MAAM0nH,GAOc,mBAPdA,GAgBa,kBAiBZ,MAAMC,WAA0BziH,EAOrC,WAAAhG,CAAY2E,EAAMg8B,EAAY5+B,GAC5BmD,MAAMP,GAON1E,KAAKyV,OAASirB,EAAWjrB,OAOzBzV,KAAKiZ,WAAaynB,EAAWsH,UAAU/uB,WAAaynB,EAAW/D,WAQ/D38B,KAAK8B,KAAOA,CAChB,EA6CA,MAAM2mH,WAAqB1S,GAIzB,WAAAh2G,CAAYuK,GACVrF,MAAM,CACJ0W,WAAY,OAMd3b,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAK0oH,WAAa,KAMlB1oH,KAAK2oH,oBACuBniH,IAA1B8D,EAAQs+G,cAA8Bt+G,EAAQs+G,cAAgB,QAMhE5oH,KAAK6oH,cAA+BriH,IAApB8D,EAAQ08G,QAAwB18G,EAAQ08G,QAAU,EAMlEhnH,KAAK8oH,QAiaT,SAAsBv7B,GACpB,MAAMxlF,EAAMwlF,EAAQ1sF,OACds4C,EAAS,IAAIn3C,MAAM+F,GACzB,IAAK,IAAIxG,EAAI,EAAGA,EAAIwG,IAAOxG,EACzB43C,EAAO53C,GAAKwnH,GAAYx7B,EAAQhsF,IAElC,OAAO43C,CACT,CAxamB6vE,CAAa1+G,EAAQijF,SAEpC,MAAM3lF,EAAU5H,KAAK4H,QAAQV,KAAKlH,MAClC,IAAK,IAAIuB,EAAI,EAAG4E,EAAKnG,KAAK8oH,QAAQjoH,OAAQU,EAAI4E,IAAM5E,EAClDvB,KAAK8oH,QAAQvnH,GAAG+D,iBAAiBzF,EAAkB+H,GAkZzD,IAA6BuxC,EA3YzBn5C,KAAKipH,gBAA0C,OAAxB3+G,EAAQq/B,YAM/B3pC,KAAKm5E,WAAa,IAAIxyC,IAAU,WAC9B,OAAO,CACR,GAAE3mC,KAAKkpH,gBAAgBhiH,KAAKlH,OAO7BA,KAAKmpH,qBAOLnpH,KAAKopH,qBAAuB,KAO5BppH,KAAK+hH,kBAML/hH,KAAK+3E,YAAc,CACjBzqC,SAAS,EACTwnC,2B9J9jBG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G8J+jBnBrB,UAAW,KACXh+D,OAAQ,KACR7S,MAAO,EACP8zE,WAAY,EACZrsB,kBAiWuBlR,EAjWen5C,KAAK8oH,QAkWxC3vE,EAAOhoB,KAAI,SAAUqoB,GAC1B,OAAOA,EAAMuN,eACjB,KAnWMpqB,WAAY,EACZo4C,2B9JrkBG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G8JskBnBiB,oBAAqB,GACrBhjE,KAAM,CAAC,EAAG,GACVipE,UAAWj8E,KAAKm5E,WAChBnsE,KAAMmzB,KAAKC,MACX+8C,UAAW,CAAE,EACbn1C,UAAsD,CACpD9uB,SAAU,GAEZgjE,UAAW,GACXn0C,YAAa,CAAE,EACfq1C,MAAO70E,EAAOvI,MACdq9E,cAAe,CAAE,GAGnBr9E,KAAKy8F,iBAAgB,SAAU/7D,GAE7B,MAAMsX,EAAe,GACrB,IAAK,IAAIz2C,EAAI,EAAG8nH,EAAO/+G,EAAQijF,QAAQ1sF,OAAQU,EAAI8nH,IAAQ9nH,EAAG,CAC5D,MAAM+nH,EAAgBh/G,EAAQijF,QAAQhsF,GAChCwI,EACJu/G,aAAyBxtB,GACrBwtB,EACAA,EAAc3vE,YACpB,IAAK5vC,EACH,SAEF,MAAMw/G,EAAqBx/G,EAAO0vC,iBAAP1vC,GAA2B22B,GACpB,iBAAvB6oF,EACTvxE,EAAaryC,KAAK4jH,QACc/iH,IAAvB+iH,GACTvxE,EAAaryC,QAAQ4jH,EAE/B,CACM,OAAOvxE,CACb,SAE8BxxC,IAAtB8D,EAAQ2tD,WACVj4D,KAAKwpH,aAAal/G,EAAQ2tD,UAAW3tD,EAAQm8G,IAEnD,CASE,YAAA+C,CAAavxD,EAAWwuD,GAClBzmH,KAAK0oH,YACP1oH,KAAK0oH,WAAWxoH,UAGlBF,KAAK0oH,WAAa,IAAI3B,GAAU,CAC9B9uD,UAAWA,EACX+tD,SAAkC,UAAxBhmH,KAAK2oH,eACff,MAAO,EACPnB,IAAKA,EACLO,QAAShnH,KAAK6oH,WAEhB7oH,KAAK4H,SACT,CAUE,iBAAA6hH,CAAkBh0G,EAAQwD,EAAY0C,GACpC,MAAM+kB,EACJh6B,OAAO2C,OAAO,GAAIrJ,KAAK+3E,aAGzBr3C,EAAWsH,UACTthC,OAAO2C,OAAO,GAAIq3B,EAAWsH,WAG/B,MAAMhvB,EAASJ,GAAUnD,GAEzBirB,EAAW1tB,KAAK,GAAKpH,KAAKgS,KAAKlF,GAASjD,GAAUwD,GAClDynB,EAAW1tB,KAAK,GAAKpH,KAAKgS,KAAKjF,GAAUlD,GAAUwD,GACnDynB,EAAWjrB,OAAS,CAClBuD,EAAO,GAAM0nB,EAAW1tB,KAAK,GAAKiG,EAAc,EAChDD,EAAO,GAAM0nB,EAAW1tB,KAAK,GAAKiG,EAAc,EAChDD,EAAO,GAAM0nB,EAAW1tB,KAAK,GAAKiG,EAAc,EAChDD,EAAO,GAAM0nB,EAAW1tB,KAAK,GAAKiG,EAAc,GAElDynB,EAAW1zB,KAAOmzB,KAAKC,MAEvB,MAAM4H,EAAYtH,EAAWsH,UAI7B,OAHAA,EAAUhvB,OAASA,EACnBgvB,EAAUrsB,WAAaA,EACvBqsB,EAAU/uB,WAAaA,EAChBynB,CACX,CAOE,gBAAAgpF,GACE,IACI3/G,EADA2xD,GAAQ,EAEZ,IAAK,IAAIn6D,EAAI,EAAG4E,EAAKnG,KAAK8oH,QAAQjoH,OAAQU,EAAI4E,IAAM5E,EAElD,GADAwI,EAAS/J,KAAK8oH,QAAQvnH,GAAGo4C,aACpB5vC,GAAgC,UAAtBA,EAAO6C,WAAwB,CAC5C8uD,GAAQ,EACR,KACR,CAEI,OAAOA,CACX,CAUE,QAAA3+B,CAAStnB,EAAQwD,EAAY0jB,EAAYhhB,GACvC,IAAK3b,KAAK0pH,mBACR,OAAO,KAGT1pH,KAAKm5E,WAAW5xC,cAAc,GAAI,IAElCtuB,EAAajZ,KAAKu2G,sBAAsBt9F,GACxC,MAAMynB,EAAa1gC,KAAKypH,kBAAkBh0G,EAAQwD,EAAY0C,GAI9D,GAHA3b,KAAKmpH,qBAAuBzoF,EAGxB1gC,KAAKopH,qBAAsB,CAC7B,MAAM/K,EAAqBr+G,KAAKopH,qBAAqBnsF,gBAC/CmjF,EAAiBpgH,KAAKopH,qBAAqBvtG,YAE/C5C,IAAeolG,GACdn8G,GAAOw+B,EAAWjrB,OAAQ2qG,KAE3BpgH,KAAKopH,qBAAuB,KAEpC,CAaI,OAVGppH,KAAKopH,sBACNppH,KAAK6H,gBAAkB7H,KAAK+hH,mBAE5B/hH,KAAKkpH,kBAGHxoF,EAAW4M,SACbqC,sBAAsB3vC,KAAK4H,QAAQV,KAAKlH,OAGnCA,KAAKopH,oBAChB,CAME,eAAAF,GACE,MAAMxoF,EAAa1gC,KAAKmpH,qBAClBphH,EAAM/H,KAAK8oH,QAAQjoH,OACnB8oH,EAAa,IAAI3nH,MAAM+F,GAC7B,IAAK,IAAIxG,EAAI,EAAGA,EAAIwG,IAAOxG,EAAG,CAC5Bm/B,EAAWg2C,WAAan1E,EACxBm/B,EAAW28C,cAAgB,CAAE,EAC7B,MAAMjqE,EAAYZ,GAAaxS,KAAK8oH,QAAQvnH,GAAIm/B,GAChD,IAAIttB,EAGF,OAFAu2G,EAAWpoH,GAAK6R,CAIxB,CAEI,MAAMtR,EAAO,CAAE,EACf9B,KAAK4F,cACH,IAAI4iH,GAAkBD,GAAkC7nF,EAAY5+B,IAEtE9B,KAAK0oH,WAAWV,QACd2B,EACA7nH,EACA9B,KAAK4pH,kBAAkB1iH,KAAKlH,KAAM0gC,GAExC,CAUE,iBAAAkpF,CAAkBlpF,EAAY18B,EAAK0hB,EAAQ5jB,GACzC,GAAIkC,IAAQ0hB,EACV,OAIF,MAAMjQ,EAASirB,EAAWjrB,OACpBwD,EAAaynB,EAAWsH,UAAU/uB,WACxC,GACEA,IAAejZ,KAAKmpH,qBAAqBnhF,UAAU/uB,aAClD/W,GAAOuT,EAAQzV,KAAKmpH,qBAAqB1zG,QAE1C,OAGF,IAAI/F,EACJ,GAAI1P,KAAKopH,qBACP15G,EAAU1P,KAAKopH,qBAAqBrsF,WAAWztB,WAAW,UACrD,CAGLI,EAAUb,GAFIjD,KAAK+R,MAAMjF,GAASjD,GAAUwD,GAC7BrN,KAAK+R,MAAMhF,GAAUlD,GAAUwD,IAE9CjZ,KAAKopH,qBAAuB,IAAI/qF,GAC9B5oB,EACAwD,EACA,EACAvJ,EAAQR,OAEhB,CACIQ,EAAQ4kG,aAAa5uF,EAAQ,EAAG,GAE5Bgb,EAAW4M,QACbqC,sBAAsB3vC,KAAK4H,QAAQV,KAAKlH,OAExCA,KAAK4H,UAEP5H,KAAK+hH,kBAAoB/hH,KAAK6H,cAE9B7H,KAAK4F,cACH,IAAI4iH,GAAkBD,GAAiC7nF,EAAY5+B,GAEzE,CAOE,cAAAuvC,CAAe11B,GACb,IAAK3b,KAAKipH,gBACR,OAAO,KAET,IAAIt/E,EAAc1kC,MAAMosC,iBACxB,IAAK1H,EACH,IAAK,IAAIpoC,EAAI,EAAG4E,EAAKnG,KAAK8oH,QAAQjoH,OAAQU,EAAI4E,IAAM5E,EAAG,CAGrD,GADAooC,EADe3pC,KAAK8oH,QAAQvnH,GAAGo4C,YACVtI,eAAe11B,GAChCguB,EACF,KAEV,CAEI,OAAOA,CACX,CAKE,eAAAxpC,GACMH,KAAK0oH,YACP1oH,KAAK0oH,WAAWxoH,UAElB+E,MAAM9E,iBACV,EAQAsoH,GAAallH,UAAUrD,QAOvB,IAAIiS,GAAgB,KAQpB,SAASK,GAAagnC,EAAO9Y,GAC3B,MAAMooC,EAAWtvB,EAAMmR,cACvB,IAAKme,EACH,MAAM,IAAIzgE,MAAM,2BAA6BmxC,GAG/C,IAAKsvB,EAASle,aAAalqB,GACzB,OAAO,KAET,MAAM5xB,EAAQ4xB,EAAW1tB,KAAK,GACxBjE,EAAS2xB,EAAW1tB,KAAK,GAC/B,GAAc,IAAVlE,GAA0B,IAAXC,EACjB,OAAO,KAET,MAAMsnE,EAAYvN,EAASje,YAAYnqB,EAAY,MACnD,IAAIv2B,EACJ,GAAIksE,aAAqB3kE,kBACvBvH,EAAUksE,MACL,CAIL,GAHIA,IACFlsE,EAAUksE,EAAU0oC,qBAEhB50G,aAAmBuH,mBACvB,MAAM,IAAIrJ,MAAM,iCAAmC8B,GAErD,GAAIA,EAAQ2E,QAAUA,GAAS3E,EAAQ4E,SAAWA,EAAQ,CAExD,OADgB5E,EAAQmF,WAAW,MACpBkD,aAAa,EAAG,EAAG1D,EAAOC,EAC/C,CACA,CAEE,GAAKoD,GAIE,CACL,MAAMjD,EAASiD,GAAcjD,OACzBA,EAAOJ,QAAUA,GAASI,EAAOH,SAAWA,EAC9CoD,GAAgBtD,GAAsBC,EAAOC,OAAQvI,EAAW,CAC9D8L,oBAAoB,IAGtBH,GAAcxC,UAAU,EAAG,EAAGb,EAAOC,EAE3C,MAZIoD,GAAgBtD,GAAsBC,EAAOC,OAAQvI,EAAW,CAC9D8L,oBAAoB,IAaxB,OADAH,GAAcI,UAAUpI,EAAS,EAAG,EAAG2E,EAAOC,GACvCoD,GAAcK,aAAa,EAAG,EAAG1D,EAAOC,EACjD,CAgCA,SAASg6G,GAAYc,GAEnB,IAAIrwE,EAUJ,OATIqwE,aAAyB/tB,GACvB+tB,aAAyBltB,GAC3BnjD,EAAQ,IAAIosE,GAAU,CAAC77G,OAAQ8/G,IACtBA,aAAyB9T,KAClCv8D,EAAQ,IAAIsnE,GAAW,CAAC/2G,OAAQ8/G,KAGlCrwE,EAAQqwE,EAEHrwE,CACT,CCn+BA,MAkBMswE,GAAc,CAClBC,eAAkB,CAChBhoH,UAAW,OAEbioH,0BAA6B,CAC3BjoH,UAAW,OAEbkoH,sBAAyB,CACvBloH,UAAW,OAEbmoH,qBAAwB,CACtBnoH,UAAW,OAEbooH,wBAA2B,CACzBpoH,UAAW,OAEbqoH,aAAgB,CACdroH,UAAW,OAEbsoH,oBAAuB,CACrBtoH,UAAW,OAEbuoH,mBAAsB,CACpBvoH,UAAW,OAEbwoH,kBAAqB,CACnBxoH,UAAW,OAEbyoH,kBAAqB,CACnBzoH,UAAW,OAEb0oH,eAAkB,CAChB1oH,UAAW,OAEb2oH,oBAAuB,CACrB3oH,UAAW,OAEb4oH,kBAAqB,CACnB5oH,UAAW,OAEb6oH,SAAY,CACV7oH,UAAW,OAEb8oH,WAAc,CACZ9oH,UAAW,QAOT+oH,GAAiB,CACrBf,eAAkB,CAChB99E,QAAS,EACT8E,QAAS,GACTg6E,QAAQ,GAEVX,aAAgB,CACdn+E,QAAS,EACT8E,QAAS,GACTg6E,QAAQ,GAEVP,kBAAqB,CACnBv+E,QAAS,EACT8E,QAAS,GACTg6E,QAAQ,ICrEL,MAAMC,WAAmB/+G,GAS9B,WAAAlM,CAAYmM,EAAWC,EAAO4xB,EAAKtoB,EAAQw1G,EAAYnpC,GACrD78E,MAAMiH,EAAWC,GAMjBnM,KAAK4+B,KAAOb,EAMZ/9B,KAAKijB,QAAUxN,EAMfzV,KAAKkrH,YAAcD,EAMnBjrH,KAAKmrH,MAAQ,KAMbnrH,KAAKorH,MAAQ,KAMbprH,KAAK6S,MAAQ,KAMb7S,KAAKqrH,OAASvpC,CAClB,CAME,QAAA/kD,GACE,OAAO,IACX,CAOE,OAAA1pB,CAAQ+C,GACN,IAAKpW,KAAKmrH,QAAUnrH,KAAKorH,MACvB,OAAO,KAET,MAAME,GACHl1G,EAAW,GAAKpW,KAAKijB,QAAQ,KAAOjjB,KAAKijB,QAAQ,GAAKjjB,KAAKijB,QAAQ,IAChEsoG,GACHn1G,EAAW,GAAKpW,KAAKijB,QAAQ,KAAOjjB,KAAKijB,QAAQ,GAAKjjB,KAAKijB,QAAQ,IAEhE07F,EAAM3+G,KAAKmrH,MAAMv/G,KAAKoQ,OAAO,EAAIuvG,GAAavrH,KAAKmrH,MAAMtqH,SAE/D,GAAmB,iBAAR89G,EACT,OAAO,KAGT,IAAI57F,EAAO47F,EAAIxoB,WAAWvqF,KAAKoQ,MAAMsvG,EAAY3M,EAAI99G,SACjDkiB,GAAQ,IACVA,IAEEA,GAAQ,IACVA,IAEFA,GAAQ,GAER,IAAIjhB,EAAO,KACX,GAAIihB,KAAQ/iB,KAAKorH,MAAO,CACtB,MAAMr+G,EAAK/M,KAAKorH,MAAMroG,GAEpBjhB,EADE9B,KAAK6S,OAAS9F,KAAM/M,KAAK6S,MACpB7S,KAAK6S,MAAM9F,GAEXA,CAEf,CACI,OAAOjL,CACX,CAUE,mBAAA0pH,CAAoBp1G,EAAY8B,EAAUsgG,GACpCx4G,KAAKmM,OAASV,IAA+B,IAAZ+sG,GACnCx4G,KAAKmM,MAAQV,EACbrE,EAAWpH,KAAMH,GAAmBowB,IAClC/X,EAASlY,KAAKqT,QAAQ+C,GAAY,IAEpCpW,KAAKyrH,kBAEW,IAAZjT,EACF90E,YAAW,KACTxrB,EAASlY,KAAKqT,QAAQ+C,GAAY,GACjC,GAEH8B,EAASlY,KAAKqT,QAAQ+C,GAG9B,CAOE,MAAA1J,GACE,OAAO1M,KAAK4+B,IAChB,CAKE,YAAA8sF,GACE1rH,KAAKmM,MAAQV,EACbzL,KAAK4H,SACT,CAME,WAAA22B,CAAYotF,GACV3rH,KAAKmrH,MAAQQ,EAAW,KACxB3rH,KAAKorH,MAAQO,EAAW,KACxB3rH,KAAK6S,MAAQ84G,EAAW,KAExB3rH,KAAKmM,MAAQV,EACbzL,KAAK4H,SACT,CAKE,aAAA6jH,GACE,GAAIzrH,KAAKmM,OAASV,EAEhB,GADAzL,KAAKmM,MAAQV,EACTzL,KAAKqrH,OACPO,GACE5rH,KAAK4+B,KACL5+B,KAAKu+B,YAAYr3B,KAAKlH,MACtBA,KAAK0rH,aAAaxkH,KAAKlH,WAEpB,CACL,MAAMyiF,EAAS,IAAIxB,eACnBwB,EAAOn9E,iBAAiB,OAAQtF,KAAK6rH,WAAW3kH,KAAKlH,OACrDyiF,EAAOn9E,iBAAiB,QAAStF,KAAK8rH,YAAY5kH,KAAKlH,OACvDyiF,EAAOvB,KAAK,MAAOlhF,KAAK4+B,MACxB6jD,EAAOd,MACf,CAEA,CAME,UAAAkqC,CAAWhmH,GACT,MAAM48E,EAAwC58E,EAAY,OAE1D,IAAK48E,EAAOrB,QAAWqB,EAAOrB,QAAU,KAAOqB,EAAOrB,OAAS,IAAM,CACnE,IAAImB,EACJ,IACEA,EACE1qB,KAAKjE,MAAM6uB,EAAOpB,aAE5B,CAAQ,MAEA,YADArhF,KAAK0rH,cAEb,CACM1rH,KAAKu+B,YAAYgkD,EACvB,MACMviF,KAAK0rH,cAEX,CAME,WAAAI,CAAYjmH,GACV7F,KAAK0rH,cACT,CAKE,IAAA7+G,GACM7M,KAAKkrH,YACPlrH,KAAKyrH,gBAELzrH,KAAKyM,SAAShB,EAEpB,EC9NO,MAAMsgH,GACX,4CAOK,SAASC,GAAgBC,EAAcC,GAC5C,OAAOC,KAAcH,gBAAgBC,EAAcC,EACrD,CAUO,SAASE,GAAkBt7G,EAAMu7G,GACtC,OAAOC,GAAmBx7G,EAAMu7G,EAAqB,IAAIvsG,KAAK,GAChE,CAWO,SAASwsG,GAAmBx7G,EAAMu7G,EAAqBE,GAC5D,GACEz7G,EAAK07G,UAAYC,KAAKC,oBACtB57G,EAAK07G,UAAYC,KAAKE,UAElBN,EACFE,EAAY5mH,KAAK+C,OAAOoI,EAAK87G,WAAWlrG,QAAQ,gBAAiB,KAEjE6qG,EAAY5mH,KAAKmL,EAAK87G,eAEnB,CACL,IAAItrH,EACJ,IAAKA,EAAIwP,EAAKwlE,WAAYh1E,EAAGA,EAAIA,EAAEurH,YACjCP,GAAmBhrH,EAAG+qH,EAAqBE,EAEjD,CACE,OAAOA,CACT,CAMO,SAASO,GAAWxoH,GACzB,MAAO,oBAAqBA,CAC9B,CAQO,SAASyoH,GAAej8G,EAAMm7G,EAAc72G,GACjD,OAAOtE,EAAKi8G,eAAed,EAAc72G,IAAS,EACpD,CAQO,SAASw+C,GAAMo5D,GACpB,OAAO,IAAIC,WAAYC,gBAAgBF,EAAK,kBAC9C,CAUO,SAASG,GAAkBC,EAAarmH,GAC7C,OAAA,SAMY+J,EAAMu8G,GACd,MAAMtpH,EAAQqpH,EAAY3pH,KAAKsD,GAAW/G,KAAM8Q,EAAMu8G,GACtD,QAAc7mH,IAAVzC,EAAqB,CAIvBlC,EAFEwrH,EAAYA,EAAYxsH,OAAS,GAErBkD,EACtB,CAEA,CACA,CAUO,SAASupH,GAAgBF,EAAarmH,GAC3C,OAAA,SAMY+J,EAAMu8G,GACd,MAAMtpH,EAAQqpH,EAAY3pH,KAAKsD,GAAW/G,KAAM8Q,EAAMu8G,GACtD,QAAc7mH,IAAVzC,EAAqB,CAErBspH,EAAYA,EAAYxsH,OAAS,GAE7B8E,KAAK5B,EACnB,CAEA,CACA,CAUO,SAASwpH,GAAaH,EAAarmH,GACxC,OAAA,SAMY+J,EAAMu8G,GACd,MAAMtpH,EAAQqpH,EAAY3pH,KAAKsD,GAAW/G,KAAM8Q,EAAMu8G,QACxC7mH,IAAVzC,IACFspH,EAAYA,EAAYxsH,OAAS,GAAKkD,EAG9C,CACA,CAWO,SAASypH,GAAyBJ,EAAa7oH,EAAUwC,GAC9D,OAAA,SAMY+J,EAAMu8G,GACd,MAAMtpH,EAAQqpH,EAAY3pH,KAAKsD,GAAW/G,KAAM8Q,EAAMu8G,GACtD,QAAc7mH,IAAVzC,EAAqB,CACvB,MAAMO,EACJ+oH,EAAYA,EAAYxsH,OAAS,GAE7BuU,OAAoB5O,IAAbjC,EAAyBA,EAAWuM,EAAK28G,UACtD,IAAIpjH,EACA+K,KAAQ9Q,EACV+F,EAAQ/F,EAAO8Q,IAEf/K,EAAQ,GACR/F,EAAO8Q,GAAQ/K,GAEjBA,EAAM1E,KAAK5B,EACnB,CAEA,CACA,CAUO,SAAS2pH,GAAyBN,EAAa7oH,EAAUwC,GAC9D,OAAA,SAMY+J,EAAMu8G,GACd,MAAMtpH,EAAQqpH,EAAY3pH,KAAKsD,GAAW/G,KAAM8Q,EAAMu8G,GACtD,QAAc7mH,IAAVzC,EAAqB,CAErBspH,EAAYA,EAAYxsH,OAAS,QAET2F,IAAbjC,EAAyBA,EAAWuM,EAAK28G,WACvC1pH,CACvB,CAEA,CACA,CAWO,SAAS4pH,GAAkBC,EAAY7mH,GAC5C,OAAA,SAOY+J,EAAM/M,EAAOspH,GACrBO,EAAWnqH,KAAKsD,GAAW/G,KAAM8Q,EAAM/M,EAAOspH,GAE5CA,EAAYA,EAAYxsH,OAAS,GAETiQ,KACfU,YAAYV,EAE7B,CACA,CAcO,SAAS+8G,GAAoBD,EAAY7mH,GAC9C,IAAI+mH,EAAeC,EACnB,OAAO,SAAUj9G,EAAM/M,EAAOspH,GAC5B,QAAsB7mH,IAAlBsnH,EAA6B,CAC/BA,EAAgB,CAAE,EAClB,MAAME,EAAc,CAAE,EACtBA,EAAYl9G,EAAK28G,WAAaG,EAC9BE,EAAch9G,EAAKm7G,cAAgB+B,EACnCD,EAAcE,GAAsBn9G,EAAK28G,UAC/C,CACIS,GAAUJ,EAAeC,EAAahqH,EAAOspH,EAC9C,CACH,CAeO,SAASY,GAAsBE,EAAeC,GACnD,OAAA,SAOYrqH,EAAOspH,EAAagB,GAC5B,MAGMv9G,EAFJu8G,EAAYA,EAAYxsH,OAAS,GAEdiQ,KACrB,IAAIw9G,EAAWH,OACE3nH,IAAb8nH,IACFA,EAAWD,GAKb,OAAOrC,QADiBxlH,IAAtB4nH,EAAkCA,EAAoBt9G,EAAKm7G,aAC1B,EAEzC,CACA,CASO,MAAMsC,GAA+BN,KAarC,SAASO,GAAalqH,EAAQmqH,GACnC,MAAM5tH,EAAS4tH,EAAY5tH,OACrB6tH,EAAW,IAAI1sH,MAAMnB,GAC3B,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5BmtH,EAASntH,GAAK+C,EAAOmqH,EAAYltH,IAEnC,OAAOmtH,CACT,CAYO,SAASC,GAAgBC,EAAeC,EAAWC,GAExD,IAAIvtH,EAAG4E,EACP,IAFA2oH,OAA8BtoH,IAAhBsoH,EAA4BA,EAAc,CAAE,EAErDvtH,EAAI,EAAG4E,EAAKyoH,EAAc/tH,OAAQU,EAAI4E,IAAM5E,EAC/CutH,EAAYF,EAAcrtH,IAAMstH,EAElC,OAAOC,CACT,CAUO,SAASC,GAAUC,EAAWl+G,EAAMu8G,EAAatmH,GACtD,IAAIzF,EACJ,IAAKA,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAAoB,CAC5D,MAAM/6D,EAAU86D,EAAU1tH,EAAE2qH,cAC5B,QAAgBzlH,IAAZ0tD,EAAuB,CACzB,MAAMD,EAASC,EAAQ5yD,EAAEmsH,gBACVjnH,IAAXytD,GACFA,EAAOxwD,KAAKsD,EAASzF,EAAG+rH,EAEhC,CACA,CACA,CAaO,SAAS6B,GAAgB5qH,EAAQ0qH,EAAWl+G,EAAMu8G,EAAatmH,GAGpE,OAFAsmH,EAAY1nH,KAAKrB,GACjByqH,GAAUC,EAAWl+G,EAAMu8G,EAAatmH,GACfsmH,EAAYxiH,KACvC,CAwBO,SAASqjH,GACdJ,EACAC,EACAjlH,EACAukH,EACA1mH,EACAI,GAEA,MAAMlG,QAAmB2F,IAATG,EAAqBA,EAAOmC,GAAQjI,OACpD,IAAIkD,EAAO+M,EACX,IAAK,IAAIvP,EAAI,EAAGA,EAAIV,IAAUU,EAC5BwC,EAAQ+E,EAAOvH,QACDiF,IAAVzC,IACF+M,EAAOi9G,EAAYtqH,KACjBsD,EACAhD,EACAspH,OACS7mH,IAATG,EAAqBA,EAAKpF,QAAKiF,QAEpBA,IAATsK,GACFg9G,EAAch9G,EAAKm7G,cAAcn7G,EAAK28G,WAAWhqH,KAC/CsD,EACA+J,EACA/M,EACAspH,GAKV,CAyBO,SAAS8B,GACd7qH,EACAwpH,EACAC,EACAjlH,EACAukH,EACA1mH,EACAI,GAIA,OAFAsmH,EAAY1nH,KAAKrB,GACjB4pH,GAAUJ,EAAeC,EAAajlH,EAAQukH,EAAa1mH,EAAMI,GAC9BsmH,EAAYxiH,KACjD,CAEA,IAAIukH,GAuBAC,GAPG,SAASC,KAId,YAHuB9oH,IAAnB4oH,IAAyD,oBAAlBG,gBACzCH,GAAiB,IAAIG,eAEhBH,EACT,CAmBO,SAASjD,KAId,YAHkB3lH,IAAd6oH,IAA+C,oBAAbjgH,WACpCigH,GAAYjgH,SAASogH,eAAeC,eAAe,GAAI,GAAI,OAEtDJ,EACT,CCvQO,SAASxlD,KACd,MAAO,CACL,aAAc,wBACd,eAAgB,UAChB,eAAgB,KAChB,gBAAiB,EACjB,oBAAqB,wBACrB,sBAAuB,KACvB,sBAAuB,UAE3B,CC3SA,MAAM6lD,GACY,EADZA,GAEQ,EAFRA,GAGI,EAHJA,GAIQ,EAJRA,GAKI,EALJA,GAMQ,EANRA,GAOQ,EAPRA,GAQU,EARVA,GASE,EATFA,GAUa,EAVbA,GAWY,GAXZA,GAYc,GAZdA,GAaI,GAMGC,GAAkB,CAACD,IAKnBE,GAAoB,CAACF,IAKrBG,GAAuB,CAACH,IAKxBI,GAAuB,CAACJ,ICXrC,MAAMK,WAAsBhtC,GAO1B,WAAAhjF,CAAY0X,EAAWwxB,EAAWhwB,EAAY0jB,GAC5C13B,QAMAjF,KAAKyX,UAAYA,EAOjBzX,KAAKipC,UAAYA,EAMjBjpC,KAAK28B,WAAaA,EAMlB38B,KAAKgwH,aAAe,EAOpBhwH,KAAKiZ,WAAaA,EAMlBjZ,KAAKiwH,2BAA6B,KAMlCjwH,KAAKkwH,2BAA6B,KAMlClwH,KAAKmwH,mBAAqB,KAM1BnwH,KAAKm9G,aAAe,GAMpBn9G,KAAKwV,YAAc,GAMnBxV,KAAKowH,eAAiB,GAMtBpwH,KAAKqwH,yBAA2B,GAMhCrwH,KAAKmM,MAAK,CAA4D,CAC1E,CAOE,eAAAmkH,CAAgBC,GACd,MAAM5zF,EAAa38B,KAAK28B,WACxB,OAAqB,GAAdA,EACH4zF,EACAA,EAAUp/F,KAAI,SAAUq/F,GACtB,OAAOA,EAAO7zF,CACxB,GACA,CAQE,0BAAA8zF,CAA2Br5G,EAAiBE,GAC1C,MAAM7B,EAASzV,KAAK0wH,uBACdh7C,EAAW11E,KAAKowH,eAChB56G,EAAcxV,KAAKwV,YACzB,IAAIm7G,EAAQn7G,EAAY3U,OACxB,IAAK,IAAIU,EAAI,EAAG4E,EAAKiR,EAAgBvW,OAAQU,EAAI4E,EAAI5E,GAAK+V,EACxDo+D,EAAS,GAAKt+D,EAAgB7V,GAC9Bm0E,EAAS,GAAKt+D,EAAgB7V,EAAI,GAC9B4U,GAAmBV,EAAQigE,KAC7BlgE,EAAYm7G,KAAWj7C,EAAS,GAChClgE,EAAYm7G,KAAWj7C,EAAS,IAGpC,OAAOi7C,CACX,CAYE,yBAAAC,CACEx5G,EACAC,EACA1V,EACA2V,EACAu5G,EACAC,GAEA,MAAMt7G,EAAcxV,KAAKwV,YACzB,IAAIm7G,EAAQn7G,EAAY3U,OACxB,MAAM4U,EAASzV,KAAK0wH,uBAChBI,IACFz5G,GAAUC,GAEZ,IAAIy5G,EAAa35G,EAAgBC,GAC7B25G,EAAa55G,EAAgBC,EAAS,GAC1C,MAAM45G,EAAYjxH,KAAKowH,eACvB,IAEI7uH,EAAG2vH,EAASC,EAFZC,GAAU,EAGd,IAAK7vH,EAAI8V,EAASC,EAAQ/V,EAAII,EAAKJ,GAAK+V,EACtC25G,EAAU,GAAK75G,EAAgB7V,GAC/B0vH,EAAU,GAAK75G,EAAgB7V,EAAI,GACnC4vH,EAAU16G,GAAuBhB,EAAQw7G,GACrCE,IAAYD,GACVE,IACF57G,EAAYm7G,KAAWI,EACvBv7G,EAAYm7G,KAAWK,EACvBI,GAAU,GAEZ57G,EAAYm7G,KAAWM,EAAU,GACjCz7G,EAAYm7G,KAAWM,EAAU,IACxBE,IAAY77G,IACrBE,EAAYm7G,KAAWM,EAAU,GACjCz7G,EAAYm7G,KAAWM,EAAU,GACjCG,GAAU,GAEVA,GAAU,EAEZL,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBC,EAAUC,EAQZ,OAJKN,GAAUO,GAAY7vH,IAAM8V,EAASC,KACxC9B,EAAYm7G,KAAWI,EACvBv7G,EAAYm7G,KAAWK,GAElBL,CACX,CAUE,sBAAAU,CAAuBj6G,EAAiBC,EAAQ8d,EAAM7d,EAAQg6G,GAC5D,IAAK,IAAI/vH,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACXgwH,EAAavxH,KAAK4wH,0BACtBx5G,EACAC,EACA1V,EACA2V,GACA,GACA,GAEFg6G,EAAY3rH,KAAK4rH,GACjBl6G,EAAS1V,CACf,CACI,OAAO0V,CACX,CAUE,UAAA2rE,CAAW1uE,EAAUm1D,EAASX,EAAUE,EAAsBpmE,GAC5D5C,KAAKwxH,cAAcl9G,EAAUm1D,EAAS7mE,GAEtC,MAAM8B,EAAO4P,EAAS8e,UAChB9b,EAAShD,EAASggB,YAClBm9F,EAAezxH,KAAKwV,YAAY3U,OAEtC,IAAIuW,EAAiBm6G,EAAYD,EAAaI,EAC1Cr6G,EAEJ,OAAQ3S,GACN,IAAK,eACH0S,EAC8D,EAE1DgkB,6BACJs2F,EAAe,GACf,MAAMr8F,EACwD,EAE1D6yD,WACJ7wE,EAAS,EACT,IAAK,IAAI9V,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAMowH,EAAS,GACft6G,EAASrX,KAAKqxH,uBACZj6G,EACAC,EACAge,EAAM9zB,GACN+V,EACAq6G,GAEFD,EAAa/rH,KAAKgsH,EAC5B,CACQ3xH,KAAKm9G,aAAax3G,KAAK,CACrBisH,GACAH,EACAC,EACAp9G,EACAw0D,EACAnyC,GACA/zB,IAEF5C,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAH,EACAC,EACAp9G,EACA00D,GAAwBF,EACxBnyC,GACA/zB,IAEF,MACF,IAAK,UACL,IAAK,kBACH0uH,EAAc,GACdl6G,EACU,WAAR1S,EAC2D,EAErD02B,6BACF9mB,EAAS2f,qBACf5c,EAASrX,KAAKqxH,uBACZj6G,EACA,EACuG,EAErGkkB,UACFhkB,EACAg6G,GAEFtxH,KAAKm9G,aAAax3G,KAAK,CACrBisH,GACAH,EACAH,EACAh9G,EACAw0D,EACApyC,GACA9zB,IAEF5C,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAH,EACAH,EACAh9G,EACA00D,GAAwBF,EACxBpyC,GACA9zB,IAEF,MACF,IAAK,aACL,IAAK,SACHwU,EAAkB9C,EAAS2f,qBAC3Bs9F,EAAavxH,KAAK4wH,0BAChBx5G,EACA,EACAA,EAAgBvW,OAChByW,GACA,GACA,GAEFtX,KAAKm9G,aAAax3G,KAAK,CACrBisH,GACAH,EACAF,EACAj9G,EACAw0D,EACAryC,GACA7zB,IAEF5C,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAH,EACAF,EACAj9G,EACA00D,GAAwBF,EACxBryC,GACA7zB,IAEF,MACF,IAAK,aACHwU,EAAkB9C,EAAS2f,qBAC3Bs9F,EAAavxH,KAAKywH,2BAA2Br5G,EAAiBE,GAE1Di6G,EAAaE,IACfzxH,KAAKm9G,aAAax3G,KAAK,CACrBisH,GACAH,EACAF,EACAj9G,EACAw0D,EACAryC,GACA7zB,IAEF5C,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAH,EACAF,EACAj9G,EACA00D,GAAwBF,EACxBryC,GACA7zB,KAGJ,MACF,IAAK,QACHwU,EAAkB9C,EAAS2f,qBAC3Bj0B,KAAKwV,YAAY7P,KAAKyR,EAAgB,GAAIA,EAAgB,IAC1Dm6G,EAAavxH,KAAKwV,YAAY3U,OAE9Bb,KAAKm9G,aAAax3G,KAAK,CACrBisH,GACAH,EACAF,EACAj9G,EACAw0D,OACAtiE,EACA5D,IAEF5C,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAH,EACAF,EACAj9G,EACA00D,GAAwBF,OACxBtiE,EACA5D,IAKN5C,KAAK6xH,YAAYpoD,EACrB,CAQE,aAAA+nD,CAAcl9G,EAAUm1D,EAAS7mE,GAC/B5C,KAAKiwH,2BAA6B,CAChC2B,GACAnoD,EACA,EACAn1D,EACA1R,GAEF5C,KAAKm9G,aAAax3G,KAAK3F,KAAKiwH,4BAC5BjwH,KAAKkwH,2BAA6B,CAChC0B,GACAnoD,EACA,EACAn1D,EACA1R,GAEF5C,KAAKqwH,yBAAyB1qH,KAAK3F,KAAKkwH,2BAC5C,CAKE,MAAA4B,GACE,MAAO,CACL3U,aAAcn9G,KAAKm9G,aACnBkT,yBAA0BrwH,KAAKqwH,yBAC/B76G,YAAaxV,KAAKwV,YAExB,CAKE,+BAAAu8G,GACE,MAAM1B,EAA2BrwH,KAAKqwH,yBAItC,IAAI9uH,EAFJ8uH,EAAyB2B,UAGzB,MAAM1wH,EAAI+uH,EAAyBxvH,OACnC,IAAIoxH,EACAvtH,EACAhD,GAAU,EACd,IAAKH,EAAI,EAAGA,EAAID,IAAKC,EACnB0wH,EAAc5B,EAAyB9uH,GACvCmD,EAA0DutH,EAAY,GAClEvtH,GAAQktH,GACVlwH,EAAQH,EACCmD,GAAQktH,KACjBK,EAAY,GAAK1wH,EACjBE,EAAgBzB,KAAKqwH,yBAA0B3uH,EAAOH,GACtDG,GAAU,EAGlB,CAOE,gBAAAwwH,CACEhzF,EACA/yB,EAA+D,CAAE,GAEjE,GAAI+yB,EAAW,CACb,MAAMypD,EAAiBzpD,EAAUkmC,WACjCj5D,EAAMgmH,iBACJxpC,GAC0B,iBAAnBA,GACP,QAASA,EACL3oF,KAAK28B,WACL,EACNxwB,EAAM+yB,UAAY+9B,GAChB0rB,GAAkCnrB,GAE1C,MACMrxD,EAAM+yB,eAAY14B,EAEpB,OAAO2F,CACX,CAOE,kBAAAimH,CACEptD,EACA74D,EAA+D,CAAE,GAEjE,GAAI64D,EAAa,CACf,MAAM4jB,EAAmB5jB,EAAYI,WACrCj5D,EAAM64D,YAAc/H,GAClB2rB,GAAsC/qB,IAExC,MAAMgrB,EAAqB7jB,EAAYQ,aACvCr5D,EAAM84D,aACmBz+D,IAAvBqiF,EAAmCA,EAAqBprB,GAC1D,MAAMqrB,EAAsB9jB,EAAYK,cACxCl5D,EAAM+4D,SAAW4jB,EACbA,EAAoBtlF,QACpBk6D,GACJ,MAAMqrB,EAA4B/jB,EAAYM,oBAC9Cn5D,EAAMg5D,eAAiB4jB,GvFnaQ,EuFsa/B,MAAMC,EAAsBhkB,EAAYO,cACxCp5D,EAAMi4D,cACoB59D,IAAxBwiF,EACIA,EACArrB,GACN,MAAMsrB,EAAmBjkB,EAAYtsD,WACrCvM,EAAMu0D,eACiBl6D,IAArByiF,EAAiCA,EvFnYT,EuFoY1B,MAAMC,EAAwBlkB,EAAYS,gBAC1Ct5D,EAAMm4D,gBACsB99D,IAA1B0iF,EACIA,EACAtrB,GAEFzxD,EAAMu0D,UAAY1gE,KAAKgwH,eACzBhwH,KAAKgwH,aAAe7jH,EAAMu0D,UAE1B1gE,KAAKmwH,mBAAqB,KAElC,MACMhkH,EAAM64D,iBAAcx+D,EACpB2F,EAAM84D,aAAUz+D,EAChB2F,EAAM+4D,SAAW,KACjB/4D,EAAMg5D,oBAAiB3+D,EACvB2F,EAAMi4D,cAAW59D,EACjB2F,EAAMu0D,eAAYl6D,EAClB2F,EAAMm4D,gBAAa99D,EAErB,OAAO2F,CACX,CAOE,kBAAAi4E,CAAmBllD,EAAW8lC,GAC5B,MAAM74D,EAAQnM,KAAKmM,MACnBnM,KAAKkyH,iBAAiBhzF,EAAW/yB,GACjCnM,KAAKoyH,mBAAmBptD,EAAa74D,EACzC,CAME,UAAAkmH,CAAWlmH,GACT,MAAM+yB,EAAY/yB,EAAM+yB,UAElBywF,EAAkB,CAACiC,GAAkC1yF,GAK3D,MAJyB,iBAAdA,GAETywF,EAAgBhqH,KAAKwG,EAAMgmH,kBAEtBxC,CACX,CAKE,WAAA2C,CAAYnmH,GACVnM,KAAKm9G,aAAax3G,KAAK3F,KAAKuyH,aAAapmH,GAC7C,CAME,YAAAomH,CAAapmH,GACX,MAAO,CACLylH,GACAzlH,EAAM64D,YACN74D,EAAMu0D,UAAY1gE,KAAK28B,WACvBxwB,EAAM84D,QACN94D,EAAMi4D,SACNj4D,EAAMm4D,WACNn4D,EAAM+4D,SAAWllE,KAAKswH,gBAAgBnkH,EAAM+4D,UAAY,KACxD/4D,EAAMg5D,eAAiBnlE,KAAK28B,WAElC,CAME,eAAA61F,CAAgBrmH,EAAOkmH,GACrB,MAAMnzF,EAAY/yB,EAAM+yB,UACC,iBAAdA,GAA0B/yB,EAAMsmH,kBAAoBvzF,SAC3C14B,IAAd04B,GACFl/B,KAAKm9G,aAAax3G,KAAK0sH,EAAW5uH,KAAKzD,KAAMmM,IAE/CA,EAAMsmH,iBAAmBvzF,EAE/B,CAME,iBAAAwzF,CAAkBvmH,EAAOmmH,GACvB,MAAMttD,EAAc74D,EAAM64D,YACpBC,EAAU94D,EAAM84D,QAChBC,EAAW/4D,EAAM+4D,SACjBC,EAAiBh5D,EAAMg5D,eACvBf,EAAWj4D,EAAMi4D,SACjB1D,EAAYv0D,EAAMu0D,UAClB4D,EAAan4D,EAAMm4D,YAEvBn4D,EAAMwmH,oBAAsB3tD,GAC5B74D,EAAMymH,gBAAkB3tD,GACvBC,GAAY/4D,EAAM0mH,kBAChB3wH,EAAOiK,EAAM0mH,gBAAiB3tD,IACjC/4D,EAAM2mH,uBAAyB3tD,GAC/Bh5D,EAAM4mH,iBAAmB3uD,GACzBj4D,EAAM6mH,kBAAoBtyD,GAC1Bv0D,EAAM8mH,mBAAqB3uD,UAEP99D,IAAhBw+D,GACFstD,EAAY7uH,KAAKzD,KAAMmM,GAEzBA,EAAMwmH,mBAAqB3tD,EAC3B74D,EAAMymH,eAAiB3tD,EACvB94D,EAAM0mH,gBAAkB3tD,EACxB/4D,EAAM2mH,sBAAwB3tD,EAC9Bh5D,EAAM4mH,gBAAkB3uD,EACxBj4D,EAAM6mH,iBAAmBtyD,EACzBv0D,EAAM8mH,kBAAoB3uD,EAEhC,CAKE,WAAAutD,CAAYpoD,GACVzpE,KAAKiwH,2BAA2B,GAAKjwH,KAAKm9G,aAAat8G,OACvDb,KAAKiwH,2BAA6B,KAClCjwH,KAAKkwH,2BAA2B,GAAKlwH,KAAKqwH,yBAAyBxvH,OACnEb,KAAKkwH,2BAA6B,KAClC,MAAMgD,EAAyB,CAACtB,GAAgCnoD,GAChEzpE,KAAKm9G,aAAax3G,KAAKutH,GACvBlzH,KAAKqwH,yBAAyB1qH,KAAKutH,EACvC,CASE,oBAAAxC,GACE,IAAK1wH,KAAKmwH,qBACRnwH,KAAKmwH,mBAAqB17G,GAAMzU,KAAKipC,WACjCjpC,KAAKgwH,aAAe,GAAG,CACzB,MAAMlhH,EAAS9O,KAAKiZ,YAAcjZ,KAAKgwH,aAAe,GAAM,EAC5Dp6G,GAAO5V,KAAKmwH,mBAAoBrhH,EAAO9O,KAAKmwH,mBACpD,CAEI,OAAOnwH,KAAKmwH,kBAChB,EClrBA,MAAMgD,WAA2BpD,GAO/B,WAAAhwH,CAAY0X,EAAWwxB,EAAWhwB,EAAY0jB,GAC5C13B,MAAMwS,EAAWwxB,EAAWhwB,EAAY0jB,GAMxC38B,KAAKk8D,mBAAqB,KAM1Bl8D,KAAK88B,OAAS,KAMd98B,KAAKozH,sBAAmB5sH,EAMxBxG,KAAKqzH,cAAW7sH,EAMhBxG,KAAKszH,cAAW9sH,EAMhBxG,KAAKyuG,aAAUjoG,EAMfxG,KAAKuhE,cAAW/6D,EAMhBxG,KAAKuzH,cAAW/sH,EAMhBxG,KAAKwzH,cAAWhtH,EAMhBxG,KAAKwhE,qBAAkBh7D,EAMvBxG,KAAKk7C,eAAY10C,EAMjBxG,KAAK0hE,YAASl7D,EAMdxG,KAAKqoE,YAAS7hE,EAMdxG,KAAK8hE,oBAAiBt7D,EAOtBxG,KAAKyzH,6BAA0BjtH,CACnC,CAQE,SAAAu9E,CAAUC,EAAeva,EAAS7mE,GAChC,IACG5C,KAAK88B,QACL98B,KAAKipC,YACH9yB,GAAmBnW,KAAKipC,UAAW+6C,EAAc/vD,sBAEpD,OAEFj0B,KAAKwxH,cAAcxtC,EAAeva,EAAS7mE,GAC3C,MAAMwU,EAAkB4sE,EAAc/vD,qBAChC3c,EAAS0sE,EAAc1vD,YACvBo/F,EAAU1zH,KAAKwV,YAAY3U,OAC3B8vH,EAAQ3wH,KAAKywH,2BAA2Br5G,EAAiBE,GAC/DtX,KAAKm9G,aAAax3G,KAAK,CACrBisH,GACA8B,EACA/C,EACA3wH,KAAK88B,OAEL98B,KAAKqzH,SAAWrzH,KAAKozH,iBACrBpzH,KAAKszH,SAAWtzH,KAAKozH,iBACrBxnH,KAAKgS,KAAK5d,KAAKyuG,QAAUzuG,KAAKozH,kBAC9BpzH,KAAKuhE,SACLvhE,KAAKuzH,SAAWvzH,KAAKozH,iBACrBpzH,KAAKwzH,SAAWxzH,KAAKozH,iBACrBpzH,KAAKwhE,gBACLxhE,KAAKk7C,UACL,CACGl7C,KAAK0hE,OAAO,GAAK1hE,KAAK28B,WAAc38B,KAAKozH,iBACzCpzH,KAAK0hE,OAAO,GAAK1hE,KAAK28B,WAAc38B,KAAKozH,kBAE5CxnH,KAAKgS,KAAK5d,KAAKqoE,OAASroE,KAAKozH,kBAC7BpzH,KAAK8hE,eACL9hE,KAAKyzH,0BAEPzzH,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACA8B,EACA/C,EACA3wH,KAAKk8D,mBAELl8D,KAAKqzH,SACLrzH,KAAKszH,SACLtzH,KAAKyuG,QACL,EACAzuG,KAAKuzH,SACLvzH,KAAKwzH,SACLxzH,KAAKwhE,gBACLxhE,KAAKk7C,UACLl7C,KAAK0hE,OACL1hE,KAAKqoE,OACLroE,KAAK8hE,eACL9hE,KAAKyzH,0BAEPzzH,KAAK6xH,YAAYpoD,EACrB,CAQE,cAAAka,CAAeC,EAAoBna,EAAS7mE,GAC1C,IAAK5C,KAAK88B,OACR,OAEF98B,KAAKwxH,cAAc5tC,EAAoBna,EAAS7mE,GAChD,MAAMwU,EAAkBwsE,EAAmB3vD,qBACrC0/F,EAA0B,GAChC,IACE,IAAIpyH,EAAI,EAAG4E,EAAKiR,EAAgBvW,OAChCU,EAAI4E,EACJ5E,GAAKqiF,EAAmBtvD,YAGrBt0B,KAAKipC,YACN9yB,GAAmBnW,KAAKipC,UAAW7xB,EAAgB5T,MAAMjC,EAAGA,EAAI,KAEhEoyH,EAAwBhuH,KACtByR,EAAgB7V,GAChB6V,EAAgB7V,EAAI,IAI1B,MAAMmyH,EAAU1zH,KAAKwV,YAAY3U,OAC3B8vH,EAAQ3wH,KAAKywH,2BAA2BkD,EAAyB,GACvE3zH,KAAKm9G,aAAax3G,KAAK,CACrBisH,GACA8B,EACA/C,EACA3wH,KAAK88B,OAEL98B,KAAKqzH,SAAWrzH,KAAKozH,iBACrBpzH,KAAKszH,SAAWtzH,KAAKozH,iBACrBxnH,KAAKgS,KAAK5d,KAAKyuG,QAAUzuG,KAAKozH,kBAC9BpzH,KAAKuhE,SACLvhE,KAAKuzH,SAAWvzH,KAAKozH,iBACrBpzH,KAAKwzH,SAAWxzH,KAAKozH,iBACrBpzH,KAAKwhE,gBACLxhE,KAAKk7C,UACL,CACGl7C,KAAK0hE,OAAO,GAAK1hE,KAAK28B,WAAc38B,KAAKozH,iBACzCpzH,KAAK0hE,OAAO,GAAK1hE,KAAK28B,WAAc38B,KAAKozH,kBAE5CxnH,KAAKgS,KAAK5d,KAAKqoE,OAASroE,KAAKozH,kBAC7BpzH,KAAK8hE,eACL9hE,KAAKyzH,0BAEPzzH,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACA8B,EACA/C,EACA3wH,KAAKk8D,mBAELl8D,KAAKqzH,SACLrzH,KAAKszH,SACLtzH,KAAKyuG,QACL,EACAzuG,KAAKuzH,SACLvzH,KAAKwzH,SACLxzH,KAAKwhE,gBACLxhE,KAAKk7C,UACLl7C,KAAK0hE,OACL1hE,KAAKqoE,OACLroE,KAAK8hE,eACL9hE,KAAKyzH,0BAEPzzH,KAAK6xH,YAAYpoD,EACrB,CAME,MAAAqoD,GAgBE,OAfA9xH,KAAK+xH,kCAEL/xH,KAAKqzH,cAAW7sH,EAChBxG,KAAKszH,cAAW9sH,EAChBxG,KAAKk8D,mBAAqB,KAC1Bl8D,KAAK88B,OAAS,KACd98B,KAAKozH,sBAAmB5sH,EACxBxG,KAAKyuG,aAAUjoG,EACfxG,KAAK0hE,YAASl7D,EACdxG,KAAKuhE,cAAW/6D,EAChBxG,KAAKuzH,cAAW/sH,EAChBxG,KAAKwzH,cAAWhtH,EAChBxG,KAAKwhE,qBAAkBh7D,EACvBxG,KAAKk7C,eAAY10C,EACjBxG,KAAKqoE,YAAS7hE,EACPvB,MAAM6sH,QACjB,CAOE,aAAAztC,CAAcC,EAAYsvC,GACxB,MAAMjiG,EAAS2yD,EAAWjiB,YACpBrvD,EAAOsxE,EAAWnxE,UAClB69E,EAAS1M,EAAW/hB,YAC1BviE,KAAKozH,iBAAmB9uC,EAAWtnD,cAAch9B,KAAK28B,YACtD38B,KAAKqzH,SAAW1hG,EAAO,GACvB3xB,KAAKszH,SAAW3hG,EAAO,GACvB3xB,KAAKk8D,mBAAqBooB,EAAW3nB,uBACrC38D,KAAK88B,OAASwnD,EAAWvnD,SAAS/8B,KAAK28B,YACvC38B,KAAKyuG,QAAUz7F,EAAK,GACpBhT,KAAKuhE,SAAW+iB,EAAWp9B,aAC3BlnD,KAAKuzH,SAAWviC,EAAO,GACvBhxF,KAAKwzH,SAAWxiC,EAAO,GACvBhxF,KAAKwhE,gBAAkB8iB,EAAWriB,oBAClCjiE,KAAKk7C,UAAYopC,EAAWj3C,cAC5BrtC,KAAK0hE,OAAS4iB,EAAWliB,gBACzBpiE,KAAKqoE,OAASr1D,EAAK,GACnBhT,KAAK8hE,eAAiBwiB,EAAWniB,mBACjCniE,KAAKyzH,wBAA0BG,CACnC,EC3RA,MAAMC,WAAgC9D,GAOpC,WAAAhwH,CAAY0X,EAAWwxB,EAAWhwB,EAAY0jB,GAC5C13B,MAAMwS,EAAWwxB,EAAWhwB,EAAY0jB,EAC5C,CAUE,oBAAAm3F,CAAqB18G,EAAiBC,EAAQ1V,EAAK2V,GACjD,MAAMo8G,EAAU1zH,KAAKwV,YAAY3U,OAC3B8vH,EAAQ3wH,KAAK4wH,0BACjBx5G,EACAC,EACA1V,EACA2V,GACA,GACA,GAEIy8G,EAA0B,CAC9BnC,GACA8B,EACA/C,GAIF,OAFA3wH,KAAKm9G,aAAax3G,KAAKouH,GACvB/zH,KAAKqwH,yBAAyB1qH,KAAKouH,GAC5BpyH,CACX,CAQE,cAAA4hF,CAAeC,EAAoB/Z,EAAS7mE,GAC1C,MAAMuJ,EAAQnM,KAAKmM,MACb64D,EAAc74D,EAAM64D,YACpBtE,EAAYv0D,EAAMu0D,UACxB,QAAoBl6D,IAAhBw+D,QAA2Cx+D,IAAdk6D,EAC/B,OAEF1gE,KAAK0yH,kBAAkBvmH,EAAOnM,KAAKsyH,aACnCtyH,KAAKwxH,cAAchuC,EAAoB/Z,EAAS7mE,GAChD5C,KAAKqwH,yBAAyB1qH,KAC5B,CACEisH,GACAzlH,EAAM64D,YACN74D,EAAMu0D,UACNv0D,EAAM84D,QACN94D,EAAMi4D,SACNj4D,EAAMm4D,WACN5G,GzF4C6B,GyFzC/BmyD,IAEF,MAAMz4G,EAAkBosE,EAAmBvvD,qBACrC3c,EAASksE,EAAmBlvD,YAClCt0B,KAAK8zH,qBACH18G,EACA,EACAA,EAAgBvW,OAChByW,GAEFtX,KAAKqwH,yBAAyB1qH,KAAKiqH,IACnC5vH,KAAK6xH,YAAYpoD,EACrB,CAQE,mBAAAga,CAAoBC,EAAyBja,EAAS7mE,GACpD,MAAMuJ,EAAQnM,KAAKmM,MACb64D,EAAc74D,EAAM64D,YACpBtE,EAAYv0D,EAAMu0D,UACxB,QAAoBl6D,IAAhBw+D,QAA2Cx+D,IAAdk6D,EAC/B,OAEF1gE,KAAK0yH,kBAAkBvmH,EAAOnM,KAAKsyH,aACnCtyH,KAAKwxH,cAAc9tC,EAAyBja,EAAS7mE,GACrD5C,KAAKqwH,yBAAyB1qH,KAC5B,CACEisH,GACAzlH,EAAM64D,YACN74D,EAAMu0D,UACNv0D,EAAM84D,QACN94D,EAAMi4D,SACNj4D,EAAMm4D,WACN5G,GzFI6B,GyFD/BmyD,IAEF,MAAM16F,EAAOuuD,EAAwBpoD,UAC/BlkB,EAAkBssE,EAAwBzvD,qBAC1C3c,EAASosE,EAAwBpvD,YACvC,IAAIjd,EAAS,EACb,IAAK,IAAI9V,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAC1C8V,EAASrX,KAAK8zH,qBACZ18G,EACAC,EACuB8d,EAAK5zB,GAC5B+V,GAGJtX,KAAKqwH,yBAAyB1qH,KAAKiqH,IACnC5vH,KAAK6xH,YAAYpoD,EACrB,CAME,MAAAqoD,GACE,MAAM3lH,EAAQnM,KAAKmM,MASnB,OAPsB3F,MAApB2F,EAAM6nH,YACN7nH,EAAM6nH,YAAch0H,KAAKwV,YAAY3U,QAErCb,KAAKm9G,aAAax3G,KAAKiqH,IAEzB5vH,KAAK+xH,kCACL/xH,KAAKmM,MAAQ,KACNlH,MAAM6sH,QACjB,CAME,WAAAQ,CAAYnmH,GAEY3F,MAApB2F,EAAM6nH,YACN7nH,EAAM6nH,YAAch0H,KAAKwV,YAAY3U,SAErCb,KAAKm9G,aAAax3G,KAAKiqH,IACvBzjH,EAAM6nH,WAAah0H,KAAKwV,YAAY3U,QAEtCsL,EAAM6nH,WAAa,EACnB/uH,MAAMqtH,YAAYnmH,GAClBnM,KAAKm9G,aAAax3G,KAAKkqH,GAC3B,ECpJA,MAAMoE,WAA6BlE,GAOjC,WAAAhwH,CAAY0X,EAAWwxB,EAAWhwB,EAAY0jB,GAC5C13B,MAAMwS,EAAWwxB,EAAWhwB,EAAY0jB,EAC5C,CAUE,qBAAAu3F,CAAsB98G,EAAiBC,EAAQ8d,EAAM7d,GACnD,MAAMnL,EAAQnM,KAAKmM,MACb62D,OAA2Bx8D,IAApB2F,EAAM+yB,UACbokC,OAA+B98D,IAAtB2F,EAAM64D,YACfmvD,EAAUh/F,EAAKt0B,OACrBb,KAAKm9G,aAAax3G,KAAKkqH,IACvB7vH,KAAKqwH,yBAAyB1qH,KAAKkqH,IACnC,IAAK,IAAItuH,EAAI,EAAGA,EAAI4yH,IAAW5yH,EAAG,CAChC,MAAMI,EAAMwzB,EAAK5zB,GACXmyH,EAAU1zH,KAAKwV,YAAY3U,OAC3B8vH,EAAQ3wH,KAAK4wH,0BACjBx5G,EACAC,EACA1V,EACA2V,GACA,GACCgsD,GAEGywD,EAA0B,CAC9BnC,GACA8B,EACA/C,GAEF3wH,KAAKm9G,aAAax3G,KAAKouH,GACvB/zH,KAAKqwH,yBAAyB1qH,KAAKouH,GAC/BzwD,IAGFtjE,KAAKm9G,aAAax3G,KAAKmqH,IACvB9vH,KAAKqwH,yBAAyB1qH,KAAKmqH,KAErCz4G,EAAS1V,CACf,CASI,OARIqhE,IACFhjE,KAAKm9G,aAAax3G,KAAKgqH,IACvB3vH,KAAKqwH,yBAAyB1qH,KAAKgqH,KAEjCrsD,IACFtjE,KAAKm9G,aAAax3G,KAAKiqH,IACvB5vH,KAAKqwH,yBAAyB1qH,KAAKiqH,KAE9Bv4G,CACX,CAQE,UAAA6rE,CAAWC,EAAgB1Z,EAAS7mE,GAClC,MAAMuJ,EAAQnM,KAAKmM,MACb+yB,EAAY/yB,EAAM+yB,UAClB8lC,EAAc74D,EAAM64D,YAC1B,QAAkBx+D,IAAd04B,QAA2C14B,IAAhBw+D,EAC7B,OAEFhlE,KAAKo0H,uBACLp0H,KAAKwxH,cAAcruC,EAAgB1Z,EAAS7mE,QACpB4D,IAApB2F,EAAM+yB,WACRl/B,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAp0D,UAGsBh3D,IAAtB2F,EAAM64D,aACRhlE,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAzlH,EAAM64D,YACN74D,EAAMu0D,UACNv0D,EAAM84D,QACN94D,EAAMi4D,SACNj4D,EAAMm4D,WACN5G,G1FO6B,I0FHjC,MAAMtmD,EAAkB+rE,EAAelvD,qBACjC3c,EAAS6rE,EAAe7uD,YACxBo/F,EAAU1zH,KAAKwV,YAAY3U,OACjCb,KAAK4wH,0BACHx5G,EACA,EACAA,EAAgBvW,OAChByW,GACA,GACA,GAEF,MAAM+8G,EAAoB,CAACzC,GAA0B8B,GACrD1zH,KAAKm9G,aAAax3G,KAAKkqH,GAAsBwE,GAC7Cr0H,KAAKqwH,yBAAyB1qH,KAAKkqH,GAAsBwE,QACjC7tH,IAApB2F,EAAM+yB,YACRl/B,KAAKm9G,aAAax3G,KAAKgqH,IACvB3vH,KAAKqwH,yBAAyB1qH,KAAKgqH,UAEXnpH,IAAtB2F,EAAM64D,cACRhlE,KAAKm9G,aAAax3G,KAAKiqH,IACvB5vH,KAAKqwH,yBAAyB1qH,KAAKiqH,KAErC5vH,KAAK6xH,YAAYpoD,EACrB,CAQE,WAAAwa,CAAYC,EAAiBza,EAAS7mE,GACpC,MAAMuJ,EAAQnM,KAAKmM,MACb+yB,EAAY/yB,EAAM+yB,UAClB8lC,EAAc74D,EAAM64D,YAC1B,QAAkBx+D,IAAd04B,QAA2C14B,IAAhBw+D,EAC7B,OAEFhlE,KAAKo0H,uBACLp0H,KAAKwxH,cAActtC,EAAiBza,EAAS7mE,QACrB4D,IAApB2F,EAAM+yB,WACRl/B,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAp0D,UAGsBh3D,IAAtB2F,EAAM64D,aACRhlE,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAzlH,EAAM64D,YACN74D,EAAMu0D,UACNv0D,EAAM84D,QACN94D,EAAMi4D,SACNj4D,EAAMm4D,WACN5G,G1FnD6B,I0FuDjC,MAAMvoC,EAAO+uD,EAAgB5oD,UACvBlkB,EAAkB8sE,EAAgB9oD,6BAClC9jB,EAAS4sE,EAAgB5vD,YAC/Bt0B,KAAKk0H,sBACH98G,EACA,EACN,EACME,GAEFtX,KAAK6xH,YAAYpoD,EACrB,CAQE,gBAAAoa,CAAiBC,EAAsBra,EAAS7mE,GAC9C,MAAMuJ,EAAQnM,KAAKmM,MACb+yB,EAAY/yB,EAAM+yB,UAClB8lC,EAAc74D,EAAM64D,YAC1B,QAAkBx+D,IAAd04B,QAA2C14B,IAAhBw+D,EAC7B,OAEFhlE,KAAKo0H,uBACLp0H,KAAKwxH,cAAc1tC,EAAsBra,EAAS7mE,QAC1B4D,IAApB2F,EAAM+yB,WACRl/B,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAp0D,UAGsBh3D,IAAtB2F,EAAM64D,aACRhlE,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAzlH,EAAM64D,YACN74D,EAAMu0D,UACNv0D,EAAM84D,QACN94D,EAAMi4D,SACNj4D,EAAMm4D,WACN5G,G1FhG6B,I0FoGjC,MAAMroC,EAAQyuD,EAAqBoE,WAC7B9wE,EAAkB0sE,EAAqB1oD,6BACvC9jB,EAASwsE,EAAqBxvD,YACpC,IAAIjd,EAAS,EACb,IAAK,IAAI9V,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAC3C8V,EAASrX,KAAKk0H,sBACZ98G,EACAC,EACAge,EAAM9zB,GACN+V,GAGJtX,KAAK6xH,YAAYpoD,EACrB,CAME,MAAAqoD,GACE9xH,KAAK+xH,kCACL/xH,KAAKmM,MAAQ,KAKb,MAAMsL,EAAYzX,KAAKyX,UACvB,GAAkB,IAAdA,EAAiB,CACnB,MAAMjC,EAAcxV,KAAKwV,YACzB,IAAK,IAAIjU,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EACjDiU,EAAYjU,GAAKg2B,GAAK/hB,EAAYjU,GAAIkW,EAE9C,CACI,OAAOxS,MAAM6sH,QACjB,CAKE,oBAAAsC,GACE,MAAMjoH,EAAQnM,KAAKmM,WAED3F,IADA2F,EAAM+yB,WAEtBl/B,KAAKwyH,gBAAgBrmH,EAAOnM,KAAKqyH,iBAET7rH,IAAtB2F,EAAM64D,aACRhlE,KAAK0yH,kBAAkBvmH,EAAOnM,KAAKsyH,YAEzC,EC7PO,SAASgC,GAAUC,EAAan9G,EAAiBC,EAAQ1V,EAAK2V,GACnE,MAAMgpD,EAAS,GACf,IAAIk0D,EAASn9G,EACTo9G,EAAS,EACTC,EAAet9G,EAAgB5T,MAAM6T,EAAQ,GACjD,KAAOo9G,EAASF,GAAeC,EAASl9G,EAAS3V,GAAK,CACpD,MAAO0X,EAAIC,GAAMo7G,EAAalxH,OAAM,GAC9B+V,EAAKnC,EAAgBo9G,EAASl9G,GAC9BkC,EAAKpC,EAAgBo9G,EAASl9G,EAAS,GACvCwhB,EAAgBltB,KAAK6S,MACxBlF,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAG5C,GADAm7G,GAAU37F,EACN27F,GAAUF,EAAa,CACzB,MAAMv3G,GAAKu3G,EAAcE,EAAS37F,GAAiBA,EAC7C/iB,EAAIwH,GAAKlE,EAAIE,EAAIyD,GACjBhH,EAAIuH,GAAKjE,EAAIE,EAAIwD,GACvB03G,EAAa/uH,KAAKoQ,EAAGC,GACrBsqD,EAAO36D,KAAK+uH,GACZA,EAAe,CAAC3+G,EAAGC,GACfy+G,GAAUF,IACZC,GAAUl9G,GAEZm9G,EAAS,CACf,MAAW,GAAIA,EAASF,EAClBG,EAAa/uH,KACXyR,EAAgBo9G,EAASl9G,GACzBF,EAAgBo9G,EAASl9G,EAAS,IAEpCk9G,GAAUl9G,MACL,CACL,MAAMq9G,EAAU77F,EAAgB27F,EAC1B1+G,EAAIwH,GAAKlE,EAAIE,EAAIo7G,EAAU77F,GAC3B9iB,EAAIuH,GAAKjE,EAAIE,EAAIm7G,EAAU77F,GACjC47F,EAAa/uH,KAAKoQ,EAAGC,GACrBsqD,EAAO36D,KAAK+uH,GACZA,EAAe,CAAC3+G,EAAGC,GACnBy+G,EAAS,EACTD,GAAUl9G,CAChB,CACA,CAIE,OAHIm9G,EAAS,GACXn0D,EAAO36D,KAAK+uH,GAEPp0D,CACT,CC3CO,SAASs0D,GAAc9pD,EAAU1zD,EAAiBC,EAAQ1V,EAAK2V,GACpE,IAKIu9G,EAAMtzH,EAAGuzH,EAAKC,EAAK17G,EAAIC,EAAI07G,EAAKC,EAAKC,EAAKC,EAL1CC,EAAa/9G,EACbg+G,EAAWh+G,EACXo9G,EAAS,EACTz3G,EAAI,EACJ/P,EAAQoK,EAEZ,IAAK9V,EAAI8V,EAAQ9V,EAAII,EAAKJ,GAAK+V,EAAQ,CACrC,MAAMiC,EAAKnC,EAAgB7V,GACrBiY,EAAKpC,EAAgB7V,EAAI,QACpBiF,IAAP6S,IACF67G,EAAM37G,EAAKF,EACX87G,EAAM37G,EAAKF,EACXy7G,EAAMnpH,KAAK6S,KAAKy2G,EAAMA,EAAMC,EAAMA,QACtB3uH,IAARwuH,IACFh4G,GAAK83G,EACLD,EAAOjpH,KAAKipH,MAAMG,EAAME,EAAMD,EAAME,IAAQL,EAAMC,IAC9CF,EAAO/pD,IACL9tD,EAAIy3G,IACNA,EAASz3G,EACTo4G,EAAanoH,EACbooH,EAAW9zH,GAEbyb,EAAI,EACJ/P,EAAQ1L,EAAI+V,IAGhBw9G,EAAMC,EACNC,EAAME,EACND,EAAME,GAER97G,EAAKE,EACLD,EAAKE,CACT,CAEE,OADAwD,GAAK+3G,EACE/3G,EAAIy3G,EAAS,CAACxnH,EAAO1L,GAAK,CAAC6zH,EAAYC,EAChD,CCpBO,MAAMC,GAAa,CACxB5zE,KAAQ,EACR1oC,OAAU,GACVkhB,MAAS,EACTynB,IAAO,EACP4zE,OAAU,GACVC,QAAW,GACXC,WAAc,GACdC,YAAe,GACfzsB,OAAU,GAGZ,MAAM0sB,WAA0B5F,GAO9B,WAAAhwH,CAAY0X,EAAWwxB,EAAWhwB,EAAY0jB,GAC5C13B,MAAMwS,EAAWwxB,EAAWhwB,EAAY0jB,GAMxC38B,KAAK41H,QAAU,KAMf51H,KAAKipE,MAAQ,GAMbjpE,KAAKimF,aAAe,EAMpBjmF,KAAKkmF,aAAe,EAMpBlmF,KAAKmmF,yBAAsB3/E,EAM3BxG,KAAK61H,sBAAmBrvH,EAMxBxG,KAAKomF,cAAgB,EAMrBpmF,KAAKsmF,eAAiB,KAKtBtmF,KAAK81H,WAAa,CAAE,EACpB91H,KAAK81H,WAAWt4D,IAAoB,CAACt+B,UAAWs+B,IAMhDx9D,KAAKumF,iBAAmB,KAKxBvmF,KAAK+1H,aAAe,CAAE,EAMtB/1H,KAAKwmF,WAAU,CAAsD,EAKrExmF,KAAKg2H,WAAa,CAAE,EAMpBh2H,KAAKi2H,SAAW,GAMhBj2H,KAAKk2H,SAAW,GAMhBl2H,KAAKm2H,WAAa,GAMlBn2H,KAAK8hE,oBAAiBt7D,EAOtBxG,KAAKyzH,6BAA0BjtH,CACnC,CAME,MAAAsrH,GACE,MAAM3U,EAAel4G,MAAM6sH,SAI3B,OAHA3U,EAAa6Y,WAAah2H,KAAKg2H,WAC/B7Y,EAAa2Y,WAAa91H,KAAK81H,WAC/B3Y,EAAa4Y,aAAe/1H,KAAK+1H,aAC1B5Y,CACX,CAQE,QAAAh5B,CAAS7vE,EAAUm1D,EAAS7mE,GAC1B,MAAMylF,EAAYroF,KAAKsmF,eACjBiC,EAAcvoF,KAAKumF,iBACnBkC,EAAYzoF,KAAKwmF,WACvB,GAAmB,KAAfxmF,KAAKipE,QAAiBwf,IAAeJ,IAAcE,EACrD,OAGF,MAAM/yE,EAAcxV,KAAKwV,YACzB,IAAI9T,EAAQ8T,EAAY3U,OAExB,MAAM6yD,EAAep/C,EAAS8e,UAC9B,IAAIhc,EAAkB,KAClBE,EAAShD,EAASggB,YAEtB,GAC0B,SAAxBm0D,EAAUzd,WACO,cAAhBtX,GACiB,mBAAhBA,GACgB,WAAhBA,GACgB,gBAAhBA,EAsEG,CACL,IAAI0iE,EAAiB3tC,EAAUvd,SAAW,KAAO,GACjD,OAAQxX,GACN,IAAK,QACL,IAAK,aACHt8C,EAC4D,EAExD6c,qBACJ,MACF,IAAK,aACH7c,EAC4D,EAExDywE,kBACJ,MACF,IAAK,SACHzwE,EACwD,EAEpDwB,YACJ,MACF,IAAK,kBACHxB,EACiE,EAE7D4wE,mBACJ1wE,EAAS,EACT,MACF,IAAK,UACHF,EACyD,EAErDmkB,uBACCktD,EAAUvd,UACbkrD,EAAezwH,KAAKyR,EAAgB,GAAKpX,KAAKiZ,YAEhD3B,EAAS,EACT,MACF,IAAK,eACH,MAAM0hB,EACwD,EAE1DovD,wBACJhxE,EAAkB,GAClB,IAAK,IAAI7V,EAAI,EAAG4E,EAAK6yB,EAAen4B,OAAQU,EAAI4E,EAAI5E,GAAK,EAClDknF,EAAUvd,UACbkrD,EAAezwH,KAAKqzB,EAAez3B,EAAI,GAAKvB,KAAKiZ,YAEnD7B,EAAgBzR,KAAKqzB,EAAez3B,GAAIy3B,EAAez3B,EAAI,IAE7D,GAA+B,IAA3B6V,EAAgBvW,OAClB,OAEFyW,EAAS,EAIb,MAAM3V,EAAM3B,KAAKywH,2BAA2Br5G,EAAiBE,GAC7D,GAAI3V,IAAQD,EACV,OAEF,GACE00H,IACCz0H,EAAMD,GAAS,GAAM0V,EAAgBvW,OAASyW,EAC/C,CACA,IAAI++G,EAAM30H,EAAQ,EAClB00H,EAAiBA,EAAe3mF,QAAO,CAACO,EAAGzuC,KACzC,MAAMsuF,EACJr6E,EAAwB,GAAX6gH,EAAM90H,MAAY6V,EAAgB7V,EAAI+V,IACnD9B,EAAwB,GAAX6gH,EAAM90H,GAAS,KAAO6V,EAAgB7V,EAAI+V,EAAS,GAIlE,OAHKu4E,KACDwmC,EAEGxmC,CAAI,GAErB,CAEM7vF,KAAKs2H,kBAEL,MAAMhrD,EAAiBmd,EAAUnd,eAC7BtrE,KAAKqyH,WAAWryH,KAAKkyH,iBAAiBzpC,EAAUnd,iBAChD,KACEE,EAAmBid,EAAUjd,iBAC/BxrE,KAAKuyH,aAAavyH,KAAKoyH,mBAAmB3pC,EAAUjd,mBACpD,KAEJxrE,KAAKwxH,cAAcl9G,EAAUm1D,EAAS7mE,GAGtC,IAAImpC,EAAU08C,EAAU18C,QACxB,GACEA,GAAWiyB,KACVyqB,EAAUxmE,MAAM,GAAK,GAAKwmE,EAAUxmE,MAAM,GAAK,GAChD,CACA,IAAIs0G,EAAK9tC,EAAU18C,QAAQ,GACvByqF,EAAK/tC,EAAU18C,QAAQ,GACvB0qF,EAAKhuC,EAAU18C,QAAQ,GACvB2qF,EAAKjuC,EAAU18C,QAAQ,GACvB08C,EAAUxmE,MAAM,GAAK,IACvBu0G,GAAMA,EACNE,GAAMA,GAEJjuC,EAAUxmE,MAAM,GAAK,IACvBs0G,GAAMA,EACNE,GAAMA,GAER1qF,EAAU,CAACwqF,EAAIC,EAAIC,EAAIC,EAC/B,CAKM,MAAM/5F,EAAa38B,KAAK28B,WACxB38B,KAAKm9G,aAAax3G,KAAK,CACrBisH,GACAlwH,EACAC,EACA,KACAqwB,IACAA,IACAA,IACA,EACA,EACA,EACAhyB,KAAKmmF,oBACLnmF,KAAKomF,cACL,CAAC,EAAG,GACJp0D,IACAhyB,KAAK8hE,eACL9hE,KAAKyzH,wBACL1nF,GAAWiyB,GACPA,GACAjyB,EAAQ5a,KAAI,SAAU0+B,GACpB,OAAOA,EAAIlzB,CACzB,IACQ2uC,EACAE,EACAxrE,KAAKipE,MACLjpE,KAAKi2H,SACLj2H,KAAKm2H,WACLn2H,KAAKk2H,SACLl2H,KAAKimF,aACLjmF,KAAKkmF,aACLkwC,IAEF,MAAMn0G,EAAQ,EAAI0a,EAEZg6F,EAA6BrrD,EAC/BA,EAAe9nE,MAAM,GACrB,KACAmzH,IACFA,EAA2B,GAAKn5D,IAElCx9D,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAlwH,EACAC,EACA,KACAqwB,IACAA,IACAA,IACA,EACA,EACA,EACAhyB,KAAKmmF,oBACLnmF,KAAKomF,cACL,CAACnkE,EAAOA,GACR+P,IACAhyB,KAAK8hE,eACL9hE,KAAKyzH,wBACL1nF,EACA4qF,EACAnrD,EACAxrE,KAAKipE,MACLjpE,KAAKi2H,SACLj2H,KAAKm2H,WACLn2H,KAAKk2H,SAAW14D,GAAmBx9D,KAAKk2H,SACxCl2H,KAAKimF,aACLjmF,KAAKkmF,aACLkwC,IAGFp2H,KAAK6xH,YAAYpoD,EACvB,KA7PM,CACA,IAAKnvD,GAAWta,KAAKipC,UAAW30B,EAASuH,aACvC,OAEF,IAAIsZ,EAEJ,GADA/d,EAAkB9C,EAAS2f,qBACP,cAAhBy/B,EACFv+B,EAAO,CAAC/d,EAAgBvW,aACnB,GAAoB,mBAAhB6yD,EACTv+B,EAAsE,EAEpEmG,eACG,GAAoB,WAAhBo4B,EACTv+B,EAA8D,EAC3DmG,UACA93B,MAAM,EAAG,QACP,GAAoB,gBAAhBkwD,EAAgC,CACzC,MAAMr+B,EACwD,EAE1D6yD,WACJ/yD,EAAO,GACP,IAAK,IAAI5zB,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAC3C4zB,EAAKxvB,KAAK0vB,EAAM9zB,GAAG,GAE7B,CACMvB,KAAKwxH,cAAcl9G,EAAUm1D,EAAS7mE,GACtC,MAAM8nE,EAAS+d,EAAU/d,OACnBJ,EAAYI,OAASlkE,EAAYiiF,EAAUne,UAEjD,IAAIssD,EAAa,EACjB,IAAK,IAAIz2B,EAAI,EAAG02B,EAAK1hG,EAAKt0B,OAAQs/F,EAAI02B,IAAM12B,EAAG,CAC7C,IAAI7/B,EAEFA,EADEoK,EACO4pD,GACP5pD,EAAS1qE,KAAKiZ,WACd7B,EACAw/G,EACAzhG,EAAKgrE,GACL7oF,GAGO,CAACF,EAAgB5T,MAAMozH,EAAYzhG,EAAKgrE,KAEnD,IAAK,IAAI53E,EAAI,EAAGuuG,EAAKx2D,EAAOz/D,OAAQ0nB,EAAIuuG,IAAMvuG,EAAG,CAC/C,MAAMwuG,EAAQz2D,EAAO/3C,GACrB,IAAIyuG,EAAa,EACb3B,EAAW0B,EAAMl2H,OACrB,GAAiB2F,MAAb8jE,EAAwB,CAC1B,MAAMxsD,EAAQ82G,GACZnsC,EAAU3d,SACVisD,EACA,EACAA,EAAMl2H,OACN,GAEFm2H,EAAal5G,EAAM,GACnBu3G,EAAWv3G,EAAM,EAC7B,CACU,IAAK,IAAIvc,EAAIy1H,EAAYz1H,EAAI8zH,EAAU9zH,GAAK+V,EAC1C9B,EAAY7P,KAAKoxH,EAAMx1H,GAAIw1H,EAAMx1H,EAAI,IAEvC,MAAMI,EAAM6T,EAAY3U,OACxB+1H,EAAazhG,EAAKgrE,GAClBngG,KAAKi3H,WAAWv1H,EAAOC,GACvBD,EAAQC,CAClB,CACA,CACM3B,KAAK6xH,YAAYpoD,EACvB,CAyLA,CAKE,eAAA6sD,GACE,MAAM/tC,EAAcvoF,KAAKumF,iBACnBkC,EAAYzoF,KAAKwmF,WACjB6B,EAAYroF,KAAKsmF,eAEjB4wC,EAAYl3H,KAAKm2H,WACnB5tC,IACI2uC,KAAal3H,KAAK+1H,eACtB/1H,KAAK+1H,aAAamB,GAAa,CAC7BlyD,YAAaujB,EAAYvjB,YACzBC,QAASsjB,EAAYtjB,QACrBE,eAAgBojB,EAAYpjB,eAC5BzE,UAAW6nB,EAAY7nB,UACvB0D,SAAUmkB,EAAYnkB,SACtBE,WAAYikB,EAAYjkB,WACxBY,SAAUqjB,EAAYrjB,YAI5B,MAAMiyD,EAAUn3H,KAAKi2H,SACfkB,KAAWn3H,KAAKg2H,aACpBh2H,KAAKg2H,WAAWmB,GAAW,CACzB/3D,KAAMqpB,EAAUrpB,KAChBkL,UAAWme,EAAUne,WAAaxM,GAClC0M,QAASie,EAAUje,QACnBI,aAAc6d,EAAU7d,cAAgB7M,GACxC97C,MAAOwmE,EAAUxmE,QAGrB,MAAM8hD,EAAU/jE,KAAKk2H,SACjB7tC,IACItkB,KAAW/jE,KAAK81H,aACpB91H,KAAK81H,WAAW/xD,GAAW,CACzB7kC,UAAWmpD,EAAUnpD,YAI/B,CAOE,UAAA+3F,CAAWv1H,EAAOC,GAChB,MAAM4mF,EAAcvoF,KAAKumF,iBACnBkC,EAAYzoF,KAAKwmF,WAEjB0wC,EAAYl3H,KAAKm2H,WACjBgB,EAAUn3H,KAAKi2H,SACflyD,EAAU/jE,KAAKk2H,SACrBl2H,KAAKs2H,kBAEL,MAAM35F,EAAa38B,KAAK28B,WAClBy6F,EAAW9B,GAAW7sC,EAAU7d,cAEhC39B,EAAUjtC,KAAKkmF,aAAevpD,EAC9B4hC,EAAOv+D,KAAKipE,MACZ5E,EAAckkB,EACfA,EAAY7nB,UAAY90D,KAAK8L,IAAI+wE,EAAUxmE,MAAM,IAAO,EACzD,EAEJjiB,KAAKm9G,aAAax3G,KAAK,CACrBisH,GACAlwH,EACAC,EACAy1H,EACA3uC,EAAUvd,SACVnH,EACA0kB,EAAU3d,SACVnuC,EACAsQ,EACAiqF,EACA7yD,EAAc1nC,EACd4hC,EACA44D,EACA,EACAn3H,KAAK8hE,eACL9hE,KAAK61H,mBAEP71H,KAAKqwH,yBAAyB1qH,KAAK,CACjCisH,GACAlwH,EACAC,EACAy1H,EACA3uC,EAAUvd,SACVnH,EAAUvG,GAAmBuG,EAC7B0kB,EAAU3d,SACVnuC,EACAsQ,EACAiqF,EACA7yD,EAAc1nC,EACd4hC,EACA44D,EACA,EAAIx6F,EACJ38B,KAAK8hE,eACL9hE,KAAK61H,kBAEX,CAOE,YAAArxC,CAAaC,EAAWmvC,GACtB,IAAInrC,EAAWJ,EAAWE,EAC1B,GAAK9D,EAEE,CACL,MAAM8E,EAAgB9E,EAAUhhB,UAC3B8lB,GAIHlB,EAAYroF,KAAKsmF,eACZ+B,IACHA,EAA6D,CAAE,EAC/DroF,KAAKsmF,eAAiB+B,GAExBA,EAAUnpD,UAAY+9B,GACpBssB,EAAcnkB,YAAc5H,MAT9B6qB,EAAY,KACZroF,KAAKsmF,eAAiB+B,GAYxB,MAAMoB,EAAkBhF,EAAU7gB,YAClC,GAAK6lB,EAGE,CACLlB,EAAcvoF,KAAKumF,iBACdgC,IACHA,EAAiE,CAAE,EACnEvoF,KAAKumF,iBAAmBgC,GAE1B,MAAMrjB,EAAWukB,EAAgBpkB,cAC3BF,EAAiBskB,EAAgBnkB,oBACjC5E,EAAY+oB,EAAgB/wE,WAC5B4rD,EAAamlB,EAAgBhkB,gBACnC8iB,EAAYtjB,QAAUwkB,EAAgBjkB,cAAgB/H,GACtD8qB,EAAYrjB,SAAWA,EAAWA,EAAS1hE,QAAUk6D,GACrD6qB,EAAYpjB,oBACS3+D,IAAnB2+D,E7Fne2B,E6Fme4BA,EACzDojB,EAAYnkB,SAAWqlB,EAAgBlkB,eAAiB5H,GACxD4qB,EAAY7nB,eACIl6D,IAAdk6D,E7F5bsB,E6F4buBA,EAC/C6nB,EAAYjkB,gBACK99D,IAAf89D,EAA2B1G,GAAoB0G,EACjDikB,EAAYvjB,YAAc/H,GACxBwsB,EAAgBrkB,YAAcvH,GAExC,MAxBQ0qB,EAAc,KACdvoF,KAAKumF,iBAAmBgC,EAyB1BE,EAAYzoF,KAAKwmF,WACjB,MAAMpnB,EAAOqlB,EAAUhZ,WAAalO,GACpCc,GAAae,GACb,MAAMkrB,EAAY7F,EAAUriB,gBAC5BqmB,EAAUvd,SAAWuZ,EAAU5Y,cAC/B4c,EAAUrpB,KAAOA,EACjBqpB,EAAU3d,SAAW2Z,EAAU7Y,cAC/B6c,EAAUzd,UAAYyZ,EAAU/Y,eAChC+c,EAAUne,UAAYma,EAAU1Y,eAChC0c,EAAU/d,OAAS+Z,EAAU9Y,YAC7B8c,EAAUje,QAAUia,EAAUzY,aAC9Byc,EAAU7d,aACR6Z,EAAUxY,mBAAqBlO,GACjC0qB,EAAUnd,eAAiBmZ,EAAUrY,oBACrCqc,EAAUjd,iBAAmBiZ,EAAUpY,sBACvCoc,EAAU18C,QAAU04C,EAAUnY,cAAgBtO,GAC9CyqB,EAAUxmE,WAAsBzb,IAAd8jF,EAA0B,CAAC,EAAG,GAAKA,EAErD,MAAMJ,EAAczF,EAAUvY,aACxBie,EAAc1F,EAAUtY,aACxBie,EAAqB3F,EAAUxiB,oBAC/Bo1D,EAAkB5yC,EAAU3Y,iBAC5Bue,EAAe5F,EAAUp3C,cAC/BrtC,KAAKipE,MAAQwb,EAAUtb,WAAa,GACpCnpE,KAAKimF,kBAA+Bz/E,IAAhB0jF,EAA4B,EAAIA,EACpDlqF,KAAKkmF,kBAA+B1/E,IAAhB2jF,EAA4B,EAAIA,EACpDnqF,KAAKmmF,yBACoB3/E,IAAvB4jF,GAA2CA,EAC7CpqF,KAAK61H,sBACiBrvH,IAApB6wH,GAAuCA,EACzCr3H,KAAKomF,mBAAiC5/E,IAAjB6jF,EAA6B,EAAIA,EAEtDrqF,KAAKm2H,WAAa5tC,GACqB,iBAA3BA,EAAYvjB,YAChBujB,EAAYvjB,YACZz8D,EAAOggF,EAAYvjB,cACvBujB,EAAYtjB,QACZsjB,EAAYpjB,eACZ,IACAojB,EAAY7nB,UACZ6nB,EAAYnkB,SACZmkB,EAAYjkB,WACZ,IACAikB,EAAYrjB,SAASplD,OACrB,IACA,GACJ9f,KAAKi2H,SACHxtC,EAAUrpB,KACVqpB,EAAUxmE,OACTwmE,EAAUne,WAAa,MACvBme,EAAU/d,QAAU,MACpB+d,EAAUje,SAAW,MACrBie,EAAU7d,cAAgB,KAC7B5qE,KAAKk2H,SACH7tC,GAAaA,EAAUnpD,UACW,iBAAvBmpD,EAAUnpD,UACfmpD,EAAUnpD,UACV,IAAM32B,EAAO8/E,EAAUnpD,WACzB,EACZ,MAxGMl/B,KAAKipE,MAAQ,GAyGfjpE,KAAK8hE,eAAiB2iB,EAAUtiB,mBAChCniE,KAAKyzH,wBAA0BG,CACnC,ECnpBA,MAAM0D,GAAqB,CACzBvlD,OAAUwlD,GACVC,QAAWC,GACXppH,MAASqpH,GACTzsC,WAAc0sC,GACd/8F,QAAW28F,GACXttD,KAAQ2tD,IAGV,MAAMC,GAOJ,WAAA93H,CAAY0X,EAAWwxB,EAAWhwB,EAAY0jB,GAK5C38B,KAAK83H,WAAargH,EAMlBzX,KAAK+3H,WAAa9uF,EAMlBjpC,KAAK68B,YAAcF,EAMnB38B,KAAKg4H,YAAc/+G,EAMnBjZ,KAAKi4H,kBAAoB,CAAE,CAC/B,CAKE,MAAAnG,GACE,MAAMoG,EAAsB,CAAE,EAC9B,IAAK,MAAMC,KAAQn4H,KAAKi4H,kBAAmB,CACzCC,EAAoBC,GAAQD,EAAoBC,IAAS,CAAE,EAC3D,MAAMC,EAAWp4H,KAAKi4H,kBAAkBE,GACxC,IAAK,MAAME,KAAcD,EAAU,CACjC,MAAME,EAAqBF,EAASC,GAAYvG,SAChDoG,EAAoBC,GAAME,GAAcC,CAChD,CACA,CACI,OAAOJ,CACX,CAOE,UAAAntC,CAAWrkC,EAAQ6xE,GACjB,MAAMC,OAAuBhyH,IAAXkgD,EAAuBA,EAAO31B,WAAa,IAC7D,IAAI0nG,EAAUz4H,KAAKi4H,kBAAkBO,QACrBhyH,IAAZiyH,IACFA,EAAU,CAAE,EACZz4H,KAAKi4H,kBAAkBO,GAAaC,GAEtC,IAAIC,EAASD,EAAQF,GACrB,QAAe/xH,IAAXkyH,EAAsB,CAExBA,EAAS,IAAIC,EADOrB,GAAmBiB,IAErCv4H,KAAK83H,WACL93H,KAAK+3H,WACL/3H,KAAKg4H,YACLh4H,KAAK68B,aAEP47F,EAAQF,GAAeG,CAC7B,CACI,OAAOA,CACX,EC9EO,SAASE,GACdxhH,EACAC,EACA1V,EACA2V,EACAinD,EACAs6D,EACA/tD,EACA7oD,EACAg+C,EACAb,EACAp5C,EACA9M,EACAkxD,GAAc,GAEd,IAAI7wD,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAC9BgC,EAAK,EACLC,EAAK,EACLwf,EAAgB,EAChBggG,EAAW,EAEf,SAASC,IACP1/G,EAAKE,EACLD,EAAKE,EAELD,EAAKnC,EADLC,GAAUC,GAEVkC,EAAKpC,EAAgBC,EAAS,GAC9ByhH,GAAYhgG,EACZA,EAAgBltB,KAAK6S,MAAMlF,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,GACxE,CACE,GACEy/G,UACO1hH,EAAS1V,EAAM2V,GAAUwhH,EAAWhgG,EAAgB+/F,GAE7D,IAAItsH,EACgB,IAAlBusB,EAAsB,GAAK+/F,EAASC,GAAYhgG,EAClD,MAAMkgG,EAASz7G,GAAKlE,EAAIE,EAAIhN,GACtB0sH,EAAS17G,GAAKjE,EAAIE,EAAIjN,GAEtB2sH,EAAc7hH,EAASC,EACvB6hH,EAAcL,EACdM,EAAOP,EAAS52G,EAAQg+C,EAAyBb,EAAMb,EAAMv4C,GACnE,KAAO3O,EAAS1V,EAAM2V,GAAUwhH,EAAWhgG,EAAgBsgG,GACzDL,IAEFxsH,EAAgC,IAAlBusB,EAAsB,GAAKsgG,EAAON,GAAYhgG,EAC5D,MAAM9d,EAAOuC,GAAKlE,EAAIE,EAAIhN,GACpB0O,EAAOsC,GAAKjE,EAAIE,EAAIjN,GAG1B,IAAIylH,GAAU,EACd,GAAI5nD,EACF,GAAIlxD,EAAU,CACZ,MAAMmgH,EAAO,CAACL,EAAQC,EAAQj+G,EAAMC,GACpC4G,GAAOw3G,EAAM,EAAG,EAAG,EAAGngH,EAAUmgH,EAAMA,GACtCrH,EAAUqH,EAAK,GAAKA,EAAK,EAC/B,MACMrH,EAAUgH,EAASh+G,EAIvB,MAAMmC,EAAKvR,KAAKuR,GACVssB,EAAS,GACT6vF,EAAgBJ,EAAc5hH,IAAWD,EAQ/C,IAAIkiH,EAEJ,GAPAzgG,EAAgB,EAChBggG,EAAWK,EACX5/G,EAAKnC,EAHLC,EAAS6hH,GAIT1/G,EAAKpC,EAAgBC,EAAS,GAI1BiiH,EAAe,CACjBP,IAEAQ,EAAgB3tH,KAAK4S,MAAMhF,EAAKF,EAAIC,EAAKF,GACrC24G,IACFuH,GAAiBA,EAAgB,GAAKp8G,EAAKA,GAE7C,MAAMpH,GAAKiF,EAAOg+G,GAAU,EACtBhjH,GAAKiF,EAAOg+G,GAAU,EAE5B,OADAxvF,EAAO,GAAK,CAAC1zB,EAAGC,GAAIojH,EAAOP,GAAU,EAAGU,EAAeh7D,GAChD90B,CACX,CAKE,IAAK,IAAIloC,EAAI,EAAG4E,GAFhBo4D,EAAOA,EAAK78C,QAAQ,MAAO,MAED7gB,OAAQU,EAAI4E,GAAM,CAC1C4yH,IACA,IAAIj3G,EAAQlW,KAAK4S,MAAMhF,EAAKF,EAAIC,EAAKF,GAIrC,GAHI24G,IACFlwG,GAASA,EAAQ,GAAK3E,EAAKA,QAEP3W,IAAlB+yH,EAA6B,CAC/B,IAAIrsH,EAAQ4U,EAAQy3G,EAEpB,GADArsH,GAASA,EAAQiQ,KAAUA,EAAKjQ,GAASiQ,EAAK,EAAIA,EAAK,EACnDvR,KAAK8L,IAAIxK,GAAS49D,EACpB,OAAO,IAEf,CACIyuD,EAAgBz3G,EAEhB,MAAM03G,EAASj4H,EACf,IAAIk4H,EAAa,EACjB,KAAOl4H,EAAI4E,IAAM5E,EAAG,CAClB,MACMwG,EAAMka,EAAQg+C,EAAyBb,EAAMb,EADrCyzD,EAAU7rH,EAAK5E,EAAI,EAAIA,GAC2BykB,GAChE,GACE3O,EAASC,EAAS3V,GAClBm3H,EAAWhgG,EAAgB+/F,EAASY,EAAa1xH,EAAM,EAEvD,MAEF0xH,GAAc1xH,CACpB,CACI,GAAIxG,IAAMi4H,EACR,SAEF,MAAME,EAAQ1H,EACVzzD,EAAKrtC,UAAU/qB,EAAKqzH,EAAQrzH,EAAK5E,GACjCg9D,EAAKrtC,UAAUsoG,EAAQj4H,GAC3BgL,EACoB,IAAlBusB,EACI,GACC+/F,EAASY,EAAa,EAAIX,GAAYhgG,EAC7C,MAAM/iB,EAAIwH,GAAKlE,EAAIE,EAAIhN,GACjByJ,EAAIuH,GAAKjE,EAAIE,EAAIjN,GACvBk9B,EAAO9jC,KAAK,CAACoQ,EAAGC,EAAGyjH,EAAa,EAAG33G,EAAO43G,IAC1Cb,GAAUY,CACd,CACE,OAAOhwF,CACT,CCtGA,MAAMkwF,G3L6IG,CAAC5iH,IAAUA,KAAU,KAAW,K2L1InCy/G,GAAK,GAELC,GAAK,GAELC,GAAK,GAELkD,GAAK,GAMX,SAASC,GAAgBC,GACvB,OAAOA,EAAuB,GAAGC,YACnC,CAEA,MAAMC,GAAW,IAAI5jF,OAEnB,IACE1tC,OAAO4tF,aAAa,MAAW,IAAM5tF,OAAO4tF,aAAa,MACzD5tF,OAAO4tF,aAAa,OAAW,IAAM5tF,OAAO4tF,aAAa,OACzD5tF,OAAO4tF,aAAa,OAAW,IAAM5tF,OAAO4tF,aAAa,OACzD5tF,OAAO4tF,aAAa,OAAW,IAAM5tF,OAAO4tF,aAAa,OACzD5tF,OAAO4tF,aAAa,QAAW,IAAM5tF,OAAO4tF,aAAa,QAC3D,KASF,SAAS2jC,GAAoB17D,EAAM27D,GAMjC,MALc,UAAVA,EACFA,EAAQF,GAASrsH,KAAK4wD,GAAQ,QAAU,OACrB,QAAV27D,IACTA,EAAQF,GAASrsH,KAAK4wD,GAAQ,OAAS,SAElC+2D,GAAW4E,EACpB,CAQA,SAASC,GAAiBzvC,EAAK0vC,EAAM74H,GAKnC,OAJIA,EAAI,GACNmpF,EAAI/kF,KAAK,KAAM,IAEjB+kF,EAAI/kF,KAAKy0H,EAAM,IACR1vC,CACT,CASA,SAAS2vC,GAAoB5wF,EAAQ6wF,EAAM13H,GAIzC,OAHIA,EAAQ,GAAM,IAChB6mC,GAAU6wF,GAEL7wF,CACT,CAEA,MAAM8wF,GAQJ,WAAAx6H,CACEkZ,EACA0jB,EACAqoE,EACAmY,EACAqd,GAMAx6H,KAAKglG,SAAWA,EAMhBhlG,KAAK28B,WAAaA,EAOlB38B,KAAKiZ,WAAaA,EAMlBjZ,KAAKy6H,mBAMLz6H,KAAKm9G,aAAeA,EAAaA,aAMjCn9G,KAAKwV,YAAc2nG,EAAa3nG,YAMhCxV,KAAK06H,iBAAmB,CAAE,EAM1B16H,KAAK26H,mB7K3JA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G6KiKrB36H,KAAKqwH,yBAA2BlT,EAAakT,yBAM7CrwH,KAAKymF,kBAAoB,KAMzBzmF,KAAK+kF,cAAgB,EAKrB/kF,KAAK81H,WAAa3Y,EAAa2Y,YAAc,CAAE,EAK/C91H,KAAK+1H,aAAe5Y,EAAa4Y,cAAgB,CAAE,EAKnD/1H,KAAKg2H,WAAa7Y,EAAa6Y,YAAc,CAAE,EAM/Ch2H,KAAK46H,QAAU,CAAE,EAMjB56H,KAAK41H,QAAU,CAAE,EAMjB51H,KAAK66H,eAAiBL,EAAoB,IAAI1d,GAAkB,IACpE,CAKE,gBAAAge,GACE,OAAO96H,KAAK66H,cAChB,CASE,WAAAE,CAAYx8D,EAAM44D,EAASpzD,EAASmzD,GAClC,MAAM5vH,EAAMi3D,EAAO44D,EAAUpzD,EAAUmzD,EACvC,GAAIl3H,KAAK41H,QAAQtuH,GACf,OAAOtH,KAAK41H,QAAQtuH,GAEtB,MAAMihF,EAAc2uC,EAAYl3H,KAAK+1H,aAAamB,GAAa,KACzD7uC,EAAYtkB,EAAU/jE,KAAK81H,WAAW/xD,GAAW,KACjD0kB,EAAYzoF,KAAKg2H,WAAWmB,GAC5Bx6F,EAAa38B,KAAK28B,WAClB1a,EAAQ,CACZwmE,EAAUxmE,MAAM,GAAK0a,EACrB8rD,EAAUxmE,MAAM,GAAK0a,GAEjBu9F,EAAQzxC,EAAUje,QACpB8qD,GAAW7sC,EAAUje,SACrByvD,GACEj4H,MAAMC,QAAQs8D,GAAQA,EAAK,GAAKA,EAChCkqB,EAAUne,WAAaxM,IAEvBuG,EACJ6yD,GAAa3uC,EAAY7nB,UAAY6nB,EAAY7nB,UAAY,EAEzDJ,EAASt+D,MAAMC,QAAQs8D,GACzBA,EACA71D,OAAO61D,GAAMp+C,MAAM,MAAM+/C,OAAOi6D,GAAkB,KAEhDrrH,MAACA,EAAKC,OAAEA,EAAMwxD,OAAEA,EAAMC,QAAEA,EAAOC,WAAEA,GAAcL,GACnDqoB,EACAnoB,GAEI06D,EAAclsH,EAAQu1D,EACtBlD,EAAsB,GAEtBnxB,GAAKgrF,EAAc,GAAK/4G,EAAM,GAC9BguB,GAAKlhC,EAASs1D,GAAepiD,EAAM,GAEnCu2B,EAAQ,CACZ1pC,MAAOkhC,EAAI,EAAIpkC,KAAKoQ,MAAMg0B,GAAKpkC,KAAKgS,KAAKoyB,GACzCjhC,OAAQkhC,EAAI,EAAIrkC,KAAKoQ,MAAMi0B,GAAKrkC,KAAKgS,KAAKqyB,GAC1CkxB,oBAAqBA,GAEP,GAAZl/C,EAAM,IAAuB,GAAZA,EAAM,IACzBk/C,EAAoBx7D,KAAK,QAASsc,GAEhCi1G,IACF/1D,EAAoBx7D,KAAK,cAAe4iF,EAAYvjB,aACpD7D,EAAoBx7D,KAAK,YAAa0+D,GACtClD,EAAoBx7D,KAAK,UAAW4iF,EAAYtjB,SAChD9D,EAAoBx7D,KAAK,WAAY4iF,EAAYnkB,UACjDjD,EAAoBx7D,KAAK,aAAc4iF,EAAYjkB,YACnDnD,EAAoBx7D,KAAK,cAAe,CAAC4iF,EAAYrjB,WACrD/D,EAAoBx7D,KAAK,iBAAkB4iF,EAAYpjB,iBAErDpB,GACF5C,EAAoBx7D,KAAK,YAAa0iF,EAAUnpD,WAElDiiC,EAAoBx7D,KAAK,eAAgB,UACzCw7D,EAAoBx7D,KAAK,YAAa,UACtC,MAAMs1H,EAAY,GAAMf,EACxB,IAAInkH,EAAImkH,EAAQc,EAAcC,EAAY52D,EAC1C,MAAM62D,EAAqB,GACrBC,EAAmB,GACzB,IAIIC,EAJA5kF,EAAa,EACb6kF,EAAa,EACbC,EAAmB,EACnBC,EAAiB,EAErB,IAAK,IAAIh6H,EAAI,EAAG4E,EAAKm6D,EAAOz/D,OAAQU,EAAI4E,EAAI5E,GAAK,EAAG,CAClD,MAAMg9D,EAAO+B,EAAO/+D,GACpB,GAAa,OAATg9D,EAAe,CACjB88D,GAAc7kF,EACdA,EAAa,EACbzgC,EAAImkH,EAAQc,EAAcC,EAAY52D,IACpCk3D,EACF,QACR,CACM,MAAMn8D,EAAOkB,EAAO/+D,EAAI,IAAMknF,EAAUrpB,KACpCA,IAASg8D,IACPlE,GACFgE,EAAmBv1H,KAAK,OAAQy5D,GAE9B2E,GACFo3D,EAAiBx1H,KAAK,OAAQy5D,GAEhCg8D,EAAeh8D,GAEjB5oB,EAAa5qC,KAAKoM,IAAIw+B,EAAYgqB,EAAQ86D,IAC1C,MAAME,EAAiB,CACrBj9D,EACAxoD,EACEklH,EAAY16D,EAAO+6D,GACnBpB,GAAS35D,EAAO+6D,GAAoB76D,EAAW86D,IACjD,IAAOl3D,EAAc7tB,GAAc6kF,GAErCtlH,GAAKwqD,EAAO+6D,GACRpE,GACFgE,EAAmBv1H,KAAK,aAAc61H,GAEpCz3D,GACFo3D,EAAiBx1H,KAAK,WAAY61H,KAElCF,CACR,CAII,OAHAt5H,MAAMuB,UAAUoC,KAAK/B,MAAMu9D,EAAqB+5D,GAChDl5H,MAAMuB,UAAUoC,KAAK/B,MAAMu9D,EAAqBg6D,GAChDn7H,KAAK41H,QAAQtuH,GAAOkxC,EACbA,CACX,CAWE,qBAAAijF,CACE/rH,EACA8mH,EACAC,EACAC,EACAkD,EACAjK,EACAC,GAEAlgH,EAAQ83E,YACR93E,EAAQ43E,OAAO1jF,MAAM8L,EAAS8mH,GAC9B9mH,EAAQu2D,OAAOriE,MAAM8L,EAAS+mH,GAC9B/mH,EAAQu2D,OAAOriE,MAAM8L,EAASgnH,GAC9BhnH,EAAQu2D,OAAOriE,MAAM8L,EAASkqH,GAC9BlqH,EAAQu2D,OAAOriE,MAAM8L,EAAS8mH,GAC1B7G,IACF3vH,KAAKy6H,mBAA4C9K,EAAgB,GACjEjgH,EAAQwvB,UAAmCywF,EAAgB,GAC3D3vH,KAAK+iE,MAAMrzD,IAETkgH,IACF5vH,KAAK07H,gBACHhsH,EACR,GAEMA,EAAQ4zD,SAEd,CAsBE,gCAAAq4D,CACEC,EACAC,EACA3oF,EACAC,EACArkC,EACAC,EACA6iB,EACAC,EACAkvC,EACAC,EACA9nD,EACA+I,EACA65G,EACA/vF,EACAgwF,EACAtyD,GAIA,IAAI1zD,EAAIm9B,GAFRthB,GAAW3P,EAAM,IAGbjM,EAAIm9B,GAFRthB,GAAW5P,EAAM,IAIjB,MAAM+tB,EAAIlhC,EAAQiyD,EAAU66D,EAAaA,EAAa76D,EAAUjyD,EAC1DmhC,EAAIlhC,EAASiyD,EAAU66D,EAAcA,EAAc76D,EAAUjyD,EAC7DitH,EAAOjwF,EAAQ,GAAKiE,EAAI/tB,EAAM,GAAK8pB,EAAQ,GAC3CkwF,EAAOlwF,EAAQ,GAAKkE,EAAIhuB,EAAM,GAAK8pB,EAAQ,GAC3CmwF,EAAOnmH,EAAIg2B,EAAQ,GACnBowF,EAAOnmH,EAAI+1B,EAAQ,GAazB,IAAIhf,EAqCJ,OAhDIgvG,GAA2B,IAAb7iH,KAChBs9G,GAAG,GAAK0F,EACRtC,GAAG,GAAKsC,EACR1F,GAAG,GAAK2F,EACR1F,GAAG,GAAK0F,EACR1F,GAAG,GAAKyF,EAAOF,EACftF,GAAG,GAAKD,GAAG,GACXC,GAAG,GAAKyF,EAAOF,EACfrC,GAAG,GAAKlD,GAAG,IAII,IAAbx9G,GACF6T,EAAY4G,G7KjbT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G6KmbjBuf,EACAC,EACA,EACA,EACAj6B,GACCg6B,GACAC,GAGHh4B,GAAe4R,EAAWypG,IAC1Br7G,GAAe4R,EAAW0pG,IAC1Bt7G,GAAe4R,EAAW2pG,IAC1Bv7G,GAAe4R,EAAW6sG,IAC1B5iH,GACEpL,KAAKmM,IAAIy+G,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIkD,GAAG,IACjChuH,KAAKmM,IAAIy+G,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIkD,GAAG,IACjChuH,KAAKoM,IAAIw+G,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIkD,GAAG,IACjChuH,KAAKoM,IAAIw+G,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIkD,GAAG,IACjCD,KAGF3iH,GACEpL,KAAKmM,IAAImkH,EAAMA,EAAOF,GACtBpwH,KAAKmM,IAAIokH,EAAMA,EAAOF,GACtBrwH,KAAKoM,IAAIkkH,EAAMA,EAAOF,GACtBpwH,KAAKoM,IAAImkH,EAAMA,EAAOF,GACtBtC,IAGAmC,IACF/lH,EAAInK,KAAK+R,MAAM5H,GACfC,EAAIpK,KAAK+R,MAAM3H,IAEV,CACLomH,WAAYrmH,EACZsmH,WAAYrmH,EACZsmH,WAAYtsF,EACZusF,WAAYtsF,EACZ8wB,QAASA,EACTC,QAASA,EACT+4D,aAAc,CACZrjH,KAAMijH,GAAU,GAChBhjH,KAAMgjH,GAAU,GAChB/iH,KAAM+iH,GAAU,GAChB9iH,KAAM8iH,GAAU,GAChB51H,MAAO0lE,GAET+1C,gBAAiBzyF,EACjB9K,MAAOA,EAEb,CAaE,mBAAAu6G,CACE9sH,EACA+sH,EACAC,EACA7uG,EACA44B,EACAkpE,EACAC,GAEA,MAAMmM,KAAgBpM,IAAmBC,GAEnC7vC,EAAMlyD,EAAWksG,aACjB4C,EAAgB/M,EACjBA,EAAkB,GAAK/hG,EAAW5L,MAAM,GAAM,EAC/C,EAiCJ,OA/BE89D,EAAIrpE,KAAOimH,GAAiBF,EAAiB,IAC7C18C,EAAInpE,KAAO+lH,GAAiB,GAC5B58C,EAAIppE,KAAOgmH,GAAiBF,EAAiB,IAC7C18C,EAAIlpE,KAAO8lH,GAAiB,IAGxBZ,GACF/7H,KAAKy7H,sBACH/rH,EACA8mH,GACAC,GACAC,GACAkD,GACV,EACA,GAGM/4D,GACEnxD,EACAme,EAAW2xF,gBACX/4D,EACAi2E,EACA7uG,EAAWkzC,QACXlzC,EAAWmzC,QACXnzC,EAAWyuG,WACXzuG,EAAW0uG,WACX1uG,EAAWuuG,WACXvuG,EAAWwuG,WACXxuG,EAAW5L,SAGR,CACX,CAME,KAAA8gD,CAAMrzD,GACJ,MAAMktH,EAAgB58H,KAAKy6H,mBAC3B,GAAImC,EAAe,CACjB,MAAM5rC,EAAS71E,GAAenb,KAAK26H,mBAAoB,CAAC,EAAG,IACrDkC,EAAa,IAAM78H,KAAK28B,WAC9BjtB,EAAQuxD,OACRvxD,EAAQygB,UAAU6gE,EAAO,GAAK6rC,EAAY7rC,EAAO,GAAK6rC,GAChC,IAAlBD,GACFltH,EAAQuS,MAAM26G,EAAeA,GAE/BltH,EAAQmS,OAAO7hB,KAAK+kF,cAC1B,CACIr1E,EAAQszD,OACJ45D,GACFltH,EAAQ2xD,SAEd,CAOE,eAAAq6D,CAAgBhsH,EAASuiH,GACvBviH,EAAQs1D,YACiDitD,EAAY,GACrEviH,EAAQgxD,UAAmCuxD,EAAY,GACvDviH,EAAQu1D,QAAwCgtD,EAAY,GAC5DviH,EAAQ00D,SAA0C6tD,EAAY,GAC9DviH,EAAQ40D,WAAoC2tD,EAAY,GACxDviH,EAAQy1D,eAAwC8sD,EAAY,GAC5DviH,EAAQk2D,YAA0CqsD,EAAY,GAClE,CAUE,4BAAA6K,CAA6Bv+D,EAAM44D,EAASD,EAAWnzD,GACrD,MAAM0kB,EAAYzoF,KAAKg2H,WAAWmB,GAE5B3+E,EAAQx4C,KAAK+6H,YAAYx8D,EAAM44D,EAASpzD,EAASmzD,GAEjD3uC,EAAcvoF,KAAK+1H,aAAamB,GAChCv6F,EAAa38B,KAAK28B,WAClBu9F,EAAQD,GACZj4H,MAAMC,QAAQs8D,GAAQA,EAAK,GAAKA,EAChCkqB,EAAUne,WAAaxM,IAEnBs5D,EAAW9B,GAAW7sC,EAAU7d,cAAgB7M,IAChDsG,EACJkkB,GAAeA,EAAY7nB,UAAY6nB,EAAY7nB,UAAY,EASjE,MAAO,CACLloB,MAAOA,EACP5mB,QAPcsoG,GADF1hF,EAAM1pC,MAAQ6tB,EAAa,EAAI8rD,EAAUxmE,MAAM,IAC7B,GAAK,GAAMi4G,GAAS71D,EAQlDxyC,QANCulG,EAAW5+E,EAAMzpC,OAAU4tB,EAC5B,GAAK,GAAMy6F,GAAY/yD,EAO7B,CAgBE,QAAA04D,CACErtH,EACA+sH,EACA1vG,EACAowF,EACA2e,EACAkB,EACAC,EACAC,GAEA,MAAMC,EAAgBn9H,KAAK66H,eAE3B,IAAIj0C,EACA5mF,KAAKymF,mBAAqBvkF,EAAO6qB,EAAW/sB,KAAK26H,oBACnD/zC,EAAmB5mF,KAAKymF,mBAEnBzmF,KAAKymF,oBACRzmF,KAAKymF,kBAAoB,IAE3BG,EAAmBn1D,GACjBzxB,KAAKwV,YACL,EACAxV,KAAKwV,YAAY3U,OACjB,EACAksB,EACA/sB,KAAKymF,mBAEP22C,GAAsBp9H,KAAK26H,mBAAoB5tG,IAEjD,IAAIxrB,EAAI,EACR,MAAM4E,EAAKg3G,EAAat8G,OACxB,IACI+jE,EACAhzC,EACFC,EAEAkwC,EACAs7D,EACAC,EACAC,EACAC,EACAnrH,EACAksD,EACA44D,EACAD,EACAnzD,EAdEpjD,EAAI,EAeJ88G,EAAc,EACdC,EAAgB,EACpB,MAAMC,EAAkB39H,KAAK06H,iBACvB/1C,EAAe3kF,KAAK+kF,cACpB64C,EACJhyH,KAAK+R,MAAgD,KAA1C/R,KAAK4S,OAAOuO,EAAU,GAAIA,EAAU,KAAc,KAEzD5gB,EAAwD,CAC5DuD,QAASA,EACTitB,WAAY38B,KAAK28B,WACjB1jB,WAAYjZ,KAAKiZ,WACjBC,SAAUyrE,GAKNk5C,EACJ79H,KAAKm9G,cAAgBA,GAAgBn9G,KAAKglG,SAAW,EAAI,IAC3D,IAA0Dv7B,EACtD1zD,EAAGC,EAAG8nH,EACV,KAAOv8H,EAAI4E,GAAI,CACb,MAAM8rH,EAAc9U,EAAa57G,GAIjC,OAFE0wH,EAAY,IAGZ,KAAKL,GACHnoD,EACEwoD,EAAY,GAEd6L,EAAkB7L,EAAY,GACzBxoD,EAAQ70D,mBAGGpO,IAAdy2H,GACC3iH,GAAW2iH,EAAWa,EAAgBjiH,eAIrCta,EAFFA,EAA2B0wH,EAAY,GAAM,EAL7C1wH,EAA2B0wH,EAAY,GASrCkL,IACFA,EAAcz2E,OAASurE,EAAY,IAErC,MACF,KAAKL,GACC6L,EAAcI,IAChB79H,KAAK+iE,MAAMrzD,GACX+tH,EAAc,GAEZC,EAAgBG,IAClBnuH,EAAQ4zD,SACRo6D,EAAgB,GAEbD,GAAgBC,IACnBhuH,EAAQ83E,YACR61C,EAAQrrG,IACRsrG,EAAQtrG,OAERzwB,EACF,MACF,KAAKqwH,GACHjxG,EAA2BsxG,EAAY,GACvC,MAAM54G,EAAKutE,EAAiBjmE,GACtBrH,EAAKstE,EAAiBjmE,EAAI,GAG1B1K,EAFK2wE,EAAiBjmE,EAAI,GAEhBtH,EACVnD,EAFK0wE,EAAiBjmE,EAAI,GAEhBrH,EACVqD,EAAI/Q,KAAK6S,KAAKxI,EAAKA,EAAKC,EAAKA,GACnCxG,EAAQ43E,OAAOjuE,EAAKsD,EAAGrD,GACvB5J,EAAQo2D,IAAIzsD,EAAIC,EAAIqD,EAAG,EAAG,EAAI/Q,KAAKuR,IAAI,KACrC5b,EACF,MACF,KAAKqwH,GACHliH,EAAQw2D,cACN3kE,EACF,MACF,KAAKqwH,GACHjxG,EAA2BsxG,EAAY,GACvCrtD,EAAKqtD,EAAY,GACjB,MAAM39G,EAEF29G,EAAY,GAEVnpD,EAAWmpD,EAAY,GACvB/uH,EAAK+uH,EAAY,GACvB9lH,EAAMmI,SAAWA,EACjBnI,EAAMs9D,QAAUA,EACVloE,KAAKo8H,IACTA,EAAgBp8H,GAAK,IAEvB,MAAMkxC,EAASkrF,EAAgBp8H,GAC3B2B,EACFA,EAAG0jF,EAAkBjmE,EAAGikD,EAAI,EAAGnyB,IAE/BA,EAAO,GAAKm0C,EAAiBjmE,GAC7B8xB,EAAO,GAAKm0C,EAAiBjmE,EAAI,GACjC8xB,EAAO5xC,OAAS,GAEds8H,IACFA,EAAcz2E,OAASurE,EAAY,IAErCnpD,EAASr2B,EAAQtmC,KACf5K,EACF,MACF,KAAKqwH,GACHjxG,EAA2BsxG,EAAY,GACvCrtD,EAA4BqtD,EAAY,GACxC5/G,EAEI4/G,EAAY,GAIhBrgG,EAAiCqgG,EAAY,GAC7CpgG,EAAiCogG,EAAY,GAC7C,IAAIljH,EAAgCkjH,EAAY,GAChD,MAAMxrE,EAAiCwrE,EAAY,GAC7ClxD,EAAiCkxD,EAAY,GAC7CjxD,EAAiCixD,EAAY,GAC7CxwD,EAAyCwwD,EAAY,IAC3D,IAAI/4G,EAAkC+4G,EAAY,IAClD,MAAMhwG,EACJgwG,EAAY,IAEd,IAAInjH,EAA+BmjH,EAAY,IAC/ClwD,EAAgBkwD,EAAY,KAAO,YACnC,MAAM1tC,EAEF0tC,EAAY,IAGhB,IAAK5/G,GAAS4/G,EAAYpxH,QAAU,GAAI,CAEtC09D,EAA8B0zD,EAAY,IAC1CkF,EAAiClF,EAAY,IAC7CiF,EAAmCjF,EAAY,IAC/CluD,EAAiCkuD,EAAY,IAC7C,MAAM8L,EAAkB/9H,KAAK88H,6BAC3Bv+D,EACA44D,EACAD,EACAnzD,GAEF1xD,EAAQ0rH,EAAgBvlF,MACxBy5E,EAAY,GAAK5/G,EACjB,MAAM63E,EAAqC+nC,EAAY,IACvDrgG,GAAWmsG,EAAgBnsG,QAAUs4D,GAAelqF,KAAK28B,WACzDs1F,EAAY,GAAKrgG,EACjB,MAAMu4D,EAAqC8nC,EAAY,IACvDpgG,GAAWksG,EAAgBlsG,QAAUs4D,GAAenqF,KAAK28B,WACzDs1F,EAAY,GAAKpgG,EACjB9iB,EAASsD,EAAMtD,OACfkjH,EAAY,GAAKljH,EACjBD,EAAQuD,EAAMvD,MACdmjH,EAAY,IAAMnjH,CAC9B,CAEU,IAAIsnH,EAKArqF,GAASiyF,GAA2BC,GAJpChM,EAAYpxH,OAAS,KACvBu1H,EAAwCnE,EAAY,KAIlDA,EAAYpxH,OAAS,IACvBkrC,GAAwCkmF,EAAY,IACpD+L,GACE/L,EAAY,IAEdgM,GACEhM,EAAY,MAGdlmF,GAAUiyB,GACVggE,GAA4B,KAC5BC,GAA8B,MAG5Bx8D,GAAkBm8D,EAEpB1kH,GAAYyrE,EACFljB,GAAmBm8D,IAE7B1kH,GAAYyrE,GAEd,IAAIu5C,GAAa,EACjB,KAAOv9G,EAAIikD,EAAIjkD,GAAK,EAAG,CACrB,GACEy1G,GACAA,EAAe8H,MAAgBpvH,EAAQ9O,KAAK28B,WAE5C,SAEF,MAAM9O,EAAa7tB,KAAK27H,iCACtBtpH,EAAMvD,MACNuD,EAAMtD,OACN63E,EAAiBjmE,GACjBimE,EAAiBjmE,EAAI,GACrB7R,EACAC,EACA6iB,EACAC,EACAkvC,EACAC,EACA9nD,EACA+I,EACA65G,EACA/vF,KACEiyF,MAA+BC,GACjCx0D,GAGIlqD,EAAO,CACX7P,EACA+sH,EACApqH,EACAwb,EACA44B,EACAu3E,GACAC,IAEF,GAAIf,EAAe,CACjB,IAAIiB,EAAWC,EAAoBC,EAgB/BC,EAAaC,EAfjB,GAAIh6C,EAAwB,CAC1B,MAAM3hF,EAAQgiE,EAAKjkD,EACnB,IAAK4jE,EAAuB3hF,GAAQ,CAElC2hF,EAAuB3hF,GAAS,CAAC2c,OAAMwiD,iBAEvC,QAClB,CACgB,MAAMy8D,EAAiBj6C,EAAuB3hF,GAC9Cu7H,EAAYK,EAAej/G,KAC3B6+G,EAAqBI,EAAez8D,qBAC7BwiB,EAAuB3hF,GAC9By7H,EAAoBxE,GAAgBsE,EACpD,CAgBc,IAZEA,GACwB,cAAvBC,GACElB,EAAczwE,SAAS4xE,KAE1BC,GAAc,GAGI,cAAlBv8D,GACCm7D,EAAczwE,SAAS5+B,EAAWksG,gBAEnCwE,GAAa,GAGU,cAAvBH,GACkB,cAAlBr8D,EACA,CACA,MAAM/qB,EAASsnF,GAAeC,EAC9BD,EAActnF,EACdunF,EAAavnF,CAC7B,CACkBsnF,IACyB,SAAvBF,GACFlB,EAAcxwE,OAAO2xE,GAEvBr+H,KAAKw8H,oBAAoB54H,MAAM5D,KAAMm+H,IAEnCI,IACoB,SAAlBx8D,GACFm7D,EAAcxwE,OAAO7+B,EAAWksG,cAElC/5H,KAAKw8H,oBAAoB54H,MAAM5D,KAAMuf,GAErD,MACcvf,KAAKw8H,oBAAoB54H,MAAM5D,KAAMuf,EAEnD,GACYhe,EACF,MACF,KAAKqwH,GACH,MAAMlwH,GAA+BuwH,EAAY,GAC3CtwH,GAA6BswH,EAAY,GACzCmF,GAAkCnF,EAAY,GAC9C/mD,GAAkC+mD,EAAY,GACpDluD,EAAiCkuD,EAAY,GAC7C,MAAMnnD,GAAkCmnD,EAAY,GAC9CwM,GAA2CxM,EAAY,GACvDhlF,GAAiCglF,EAAY,GACnDiF,EAAmCjF,EAAY,GAC/C,MAAM5tD,GAAqC4tD,EAAY,IACvD1zD,EAA4C0zD,EAAY,IACpDjwH,MAAMC,QAAQs8D,KAEhBA,EAAOA,EAAK2B,OAAOm6D,GAAqB,KAE1ClD,EAAiClF,EAAY,IAC7C,MAAMyM,GAAkB,CACCzM,EAAY,IACZA,EAAY,KAErClwD,EAAgBkwD,EAAY,KAAO,YAEnC,MAAMoF,GAA0CpF,EAAY,IACtDxpC,GAAYzoF,KAAKg2H,WAAWmB,GAC5B/3D,GAAOqpB,GAAUrpB,KACjBkrB,GAAY,CAChB7B,GAAUxmE,MAAM,GAAKw8G,GACrBh2C,GAAUxmE,MAAM,GAAKw8G,IAGvB,IAAIE,GACAv/D,MAAQp/D,KAAK46H,QACf+D,GAAe3+H,KAAK46H,QAAQx7D,KAE5Bu/D,GAAe,CAAE,EACjB3+H,KAAK46H,QAAQx7D,IAAQu/D,IAGvB,MAAMC,GAAan9B,GAAiB7a,EAAkBllF,GAAOC,GAAK,GAC5Dk9H,GACJjzH,KAAK8L,IAAI4yE,GAAU,IACnBrqB,GAAyBb,GAAMb,EAAMogE,IACvC,GAAIzzD,IAAY2zD,IAAcD,GAAY,CACxC,MAGME,EAAQlG,GACZhyC,EACAllF,GACAC,GACA,EACA48D,GANCqgE,GAAaC,IAAc5E,GAAoB17D,EAFhCv+D,KAAKg2H,WAAWmB,GAAS7sD,WAUzCQ,GACAl/D,KAAK8L,IAAI4yE,GAAU,IACnBrqB,GACAb,GACAu/D,GACAf,EAA4B,EAAI59H,KAAK+kF,cACrCsyC,IAEF0H,EAAW,GAAID,EAAO,CAEpB,MAAMhF,EAAyB,GAC/B,IAAIvxG,EAAGuuG,EAAI4C,EAAOlhF,EAAO8hF,EACzB,GAAIpD,EACF,IAAK3uG,EAAI,EAAGuuG,EAAKgI,EAAMj+H,OAAQ0nB,EAAIuuG,IAAMvuG,EAAG,CAC1C+xG,EAAOwE,EAAMv2G,GACbmxG,EAA+BY,EAAK,GACpC9hF,EAAQx4C,KAAK+6H,YAAYrB,EAAOvC,EAAS,GAAID,GAC7CtlG,EACyB0oG,EAAK,IAC3BhwC,GAAU,GAAK,GAAKjmB,GAAcA,IACrCxyC,EACEulG,GAAW5+E,EAAMzpC,OACG,GAAlB,GAAMqoH,IAAgB/yD,GAAcimB,GAAU,GAC9CA,GAAU,GACZr9C,GACF,MAAMpf,EAAa7tB,KAAK27H,iCACtBnjF,EAAM1pC,MACN0pC,EAAMzpC,OACNurH,EAAK,GACLA,EAAK,GACL9hF,EAAM1pC,MACN0pC,EAAMzpC,OACN6iB,EACAC,EACA,EACA,EACAyoG,EAAK,GACLoE,IACA,EACA1gE,IACA,EACAyL,GAEF,GACEyzD,GACkB,cAAlBn7D,GACAm7D,EAAczwE,SAAS5+B,EAAWksG,cAElC,MAAMgF,EAERjF,EAAuBn0H,KAAK,CAC1B+J,EACA+sH,EACAjkF,EACA3qB,EACA,EACA,KACA,MAEpB,CAEc,GAAIk2C,EACF,IAAKx7C,EAAI,EAAGuuG,EAAKgI,EAAMj+H,OAAQ0nB,EAAIuuG,IAAMvuG,EAAG,CAC1C+xG,EAAOwE,EAAMv2G,GACbmxG,EAA+BY,EAAK,GACpC9hF,EAAQx4C,KAAK+6H,YAAYrB,EAAOvC,EAASpzD,EAAS,IAClDnyC,EAAiC0oG,EAAK,GACtCzoG,EAAUulG,GAAW5+E,EAAMzpC,OAASk+B,GACpC,MAAMpf,EAAa7tB,KAAK27H,iCACtBnjF,EAAM1pC,MACN0pC,EAAMzpC,OACNurH,EAAK,GACLA,EAAK,GACL9hF,EAAM1pC,MACN0pC,EAAMzpC,OACN6iB,EACAC,EACA,EACA,EACAyoG,EAAK,GACLoE,IACA,EACA1gE,IACA,EACAyL,GAEF,GACEyzD,GACkB,cAAlBn7D,GACAm7D,EAAczwE,SAAS5+B,EAAWksG,cAElC,MAAMgF,EAERjF,EAAuBn0H,KAAK,CAC1B+J,EACA+sH,EACAjkF,EACA3qB,EACA,EACA,KACA,MAEpB,CAEkBqvG,GAAmC,SAAlBn7D,GACnBm7D,EAAcrwH,KAAKitH,EAAuB3oG,IAAI0oG,KAEhD,IAAK,IAAIt4H,EAAI,EAAG4E,EAAK2zH,EAAuBj5H,OAAQU,EAAI4E,IAAM5E,EAC5DvB,KAAKw8H,oBAAoB54H,MAAM5D,KAAM85H,EAAuBv4H,GAE5E,CACA,GACYA,EACF,MACF,KAAKqwH,GACH,QAAwBprH,IAApBw2H,EAA+B,CACjCvzD,EACEwoD,EAAY,GAEd,MAAMxoF,EAASuzF,EACbvzD,EACAq0D,EACA/7D,GAEF,GAAIt4B,EACF,OAAOA,CAErB,GACYloC,EACF,MACF,KAAKqwH,GACCiM,EACFJ,IAEAz9H,KAAK+iE,MAAMrzD,KAEXnO,EACF,MACF,KAAKqwH,GAQH,IAPAjxG,EAA2BsxG,EAAY,GACvCrtD,EAA4BqtD,EAAY,GACxCl8G,EAAI6wE,EAAiBjmE,GACrB3K,EAAI4wE,EAAiBjmE,EAAI,GACzBjR,EAAQ43E,OAAOvxE,EAAGC,GAClBqnH,EAAStnH,EAAI,GAAO,EACpBunH,EAAStnH,EAAI,GAAO,EACf2K,GAAK,EAAGA,EAAIikD,EAAIjkD,GAAK,EACxB5K,EAAI6wE,EAAiBjmE,GACrB3K,EAAI4wE,EAAiBjmE,EAAI,GACzB48G,EAAUxnH,EAAI,GAAO,EACrBynH,EAAUxnH,EAAI,GAAO,EACjB2K,GAAKikD,EAAK,GAAK24D,IAAWF,GAASG,IAAWF,IAChD5tH,EAAQu2D,OAAOlwD,EAAGC,GAClBqnH,EAAQE,EACRD,EAAQE,KAGVj8H,EACF,MACF,KAAKqwH,GACH5xH,KAAKy6H,mBAAqBxI,EAAY,GAElCwL,IACFz9H,KAAK+iE,MAAMrzD,GACX+tH,EAAc,EACVC,IACFhuH,EAAQ4zD,SACRo6D,EAAgB,IAKpBhuH,EAAQwvB,UAAY+yF,EAAY,KAC9B1wH,EACF,MACF,KAAKqwH,GACC8L,IACFhuH,EAAQ4zD,SACRo6D,EAAgB,GAElB19H,KAAK07H,gBAAgBhsH,EAAO,KAC1BnO,EACF,MACF,KAAKqwH,GACCiM,EACFH,IAEAhuH,EAAQ4zD,WAER/hE,EACF,MACF,UACIA,EAGZ,CACQk8H,GACFz9H,KAAK+iE,MAAMrzD,GAETguH,GACFhuH,EAAQ4zD,QAGd,CAUE,OAAA07D,CACEtvH,EACA+sH,EACA1vG,EACA43D,EACAm3C,EACAoB,GAEAl9H,KAAK+kF,cAAgBJ,EACrB3kF,KAAK+8H,SACHrtH,EACA+sH,EACA1vG,EACA/sB,KAAKm9G,aACL2e,OACAt1H,OACAA,EACA02H,EAEN,CAYE,mBAAA+B,CACEvvH,EACAqd,EACA43D,EACAq4C,EACAC,GAGA,OADAj9H,KAAK+kF,cAAgBJ,EACd3kF,KAAK+8H,SACVrtH,EACA,CAACA,EAAQR,OAAOJ,MAAOY,EAAQR,OAAOH,QACtCge,EACA/sB,KAAKqwH,0BACL,EACA2M,EACAC,EAEN,EC7wCO,MAAMiC,GAAM,CACjB,UACA,SACA,aACA,QACA,OACA,WAOWC,GAAY,CAAC,QAAS,QAMtBC,GAAgBF,GAAIzvF,QAC9B8oF,IAAiB4G,GAAUz5H,SAAS6yH,KAGvC,MAAM8G,GAcJ,WAAAt/H,CACEkpC,EACAhwB,EACA0jB,EACAqoE,EACAs6B,EACAjsD,EACAmnD,GAMAx6H,KAAK+3H,WAAa9uF,EAMlBjpC,KAAK+kG,UAAYC,EAMjBhlG,KAAK68B,YAAcF,EAMnB38B,KAAKg4H,YAAc/+G,EAMnBjZ,KAAK0zE,cAAgBL,EAMrBrzE,KAAKu/H,mBAAqB,CAAE,EAM5Bv/H,KAAKw/H,qBAAuB,KAM5Bx/H,KAAKy/H,uB9K5EA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G8KkFrBz/H,KAAK0/H,iBAAmB,KAMxB1/H,KAAK2/H,wBAA0B,CAAE,EAEjC3/H,KAAK4/H,iBAAiBN,EAAiB9E,EAC3C,CAME,IAAA1tC,CAAKp9E,EAASqd,GACZ,MAAM8yG,EAAiB7/H,KAAK8/H,cAAc/yG,GAC1Crd,EAAQ83E,YACR93E,EAAQ43E,OAAOu4C,EAAe,GAAIA,EAAe,IACjDnwH,EAAQu2D,OAAO45D,EAAe,GAAIA,EAAe,IACjDnwH,EAAQu2D,OAAO45D,EAAe,GAAIA,EAAe,IACjDnwH,EAAQu2D,OAAO45D,EAAe,GAAIA,EAAe,IACjDnwH,EAAQo9E,MACZ,CAQE,gBAAA8yC,CAAiBN,EAAiB9E,GAChC,IAAK,MAAM9zE,KAAU44E,EAAiB,CACpC,IAAIS,EAAY//H,KAAKu/H,mBAAmB74E,QACtBlgD,IAAdu5H,IACFA,EAAY,CAAE,EACd//H,KAAKu/H,mBAAmB74E,GAAUq5E,GAEpC,MAAMC,EAAsBV,EAAgB54E,GAC5C,IAAK,MAAM6xE,KAAeyH,EAAqB,CAC7C,MAAM7iB,EAAe6iB,EAAoBzH,GACzCwH,EAAUxH,GAAe,IAAIgC,GAC3Bv6H,KAAKg4H,YACLh4H,KAAK68B,YACL78B,KAAK+kG,UACLoY,EACAqd,EAEV,CACA,CACA,CAME,YAAAyF,CAAaF,GACX,IAAK,MAAMr5E,KAAU1mD,KAAKu/H,mBAAoB,CAC5C,MAAMW,EAAalgI,KAAKu/H,mBAAmB74E,GAC3C,IAAK,IAAInlD,EAAI,EAAG4E,EAAK45H,EAAUl/H,OAAQU,EAAI4E,IAAM5E,EAC/C,GAAIw+H,EAAUx+H,KAAM2+H,EAClB,OAAO,CAGjB,CACI,OAAO,CACX,CAYE,0BAAAlrD,CACE5+D,EACA6C,EACAC,EACA+7D,EACA/8D,EACAioH,GAGA,MAAMC,EAA6B,GADnCnrD,EAAerpE,KAAK+R,MAAMs3D,IACa,EACjCloD,EAAY4G,GAChB3zB,KAAKy/H,uBACLxqD,EAAe,GACfA,EAAe,GACf,EAAIh8D,GACJ,EAAKA,GACJC,GACA9C,EAAW,IACXA,EAAW,IAGRiqH,GAAcrgI,KAAKw/H,qBACrBa,IACFrgI,KAAKw/H,qBAAuB3wH,GAC1BuxH,EACAA,IAGJ,MAAM1wH,EAAU1P,KAAKw/H,qBAarB,IAAIvC,EAVFvtH,EAAQR,OAAOJ,QAAUsxH,GACzB1wH,EAAQR,OAAOH,SAAWqxH,GAE1B1wH,EAAQR,OAAOJ,MAAQsxH,EACvB1wH,EAAQR,OAAOH,OAASqxH,GACdC,GACV3wH,EAAQC,UAAU,EAAG,EAAGywH,EAAaA,QAKZ55H,IAAvBxG,KAAK0zE,gBACPupD,E5L1CG,CAAClmH,IAAUA,KAAU,KAAW,K4L2CnCpB,GAAiBsnH,EAAW7mH,GAC5BR,GACEqnH,EACAhkH,GAAcjZ,KAAK0zE,cAAgBuB,GACnCgoD,IAIJ,MAAM/vE,EAAUozE,GAAmBrrD,GAGnC,IAAIsjD,EAQJ,SAASyE,EAAgBvzD,EAASn1D,EAAUytD,GAC1C,MAAM3uD,EAAY1D,EAAQ8C,aACxB,EACA,EACA4tH,EACAA,GACAt+H,KACF,IAAK,IAAIP,EAAI,EAAG4E,EAAK+mD,EAAQrsD,OAAQU,EAAI4E,EAAI5E,IAC3C,GAAI6R,EAAU85C,EAAQ3rD,IAAM,EAAG,CAC7B,IACG4+H,GACiB,SAAlBp+D,GACiB,UAAhBw2D,GAA2C,SAAhBA,GAC5B4H,EAAoBz6H,SAAS+jE,GAC7B,CACA,MAAM82D,GAAOrzE,EAAQ3rD,GAAK,GAAK,EACzBwU,EAAIk/D,EAAgBsrD,EAAMH,EAC1BpqH,EAAIi/D,GAAiBsrD,EAAMH,EAAe,GAC1C32F,EAASvxB,EAASuxD,EAASn1D,EAAUyB,EAAIA,EAAIC,EAAIA,GACvD,GAAIyzB,EACF,OAAOA,CAErB,CACU/5B,EAAQC,UAAU,EAAG,EAAGywH,EAAaA,GACrC,KACV,CAGA,CAGI,MAAMtc,EAAKp9G,OAAOC,KAAK3G,KAAKu/H,oBAAoBpuG,IAAI0B,QAGpD,IAAItxB,EAAGsb,EAAGkjH,EAAWS,EAAU/2F,EAC/B,IAHAq6E,EAAGjrF,KAAKn4B,GAGHa,EAAIuiH,EAAGjjH,OAAS,EAAGU,GAAK,IAAKA,EAAG,CACnC,MAAMi3H,EAAY1U,EAAGviH,GAAGwvB,WAExB,IADAgvG,EAAY//H,KAAKu/H,mBAAmB/G,GAC/B37G,EAAIqiH,GAAIr+H,OAAS,EAAGgc,GAAK,IAAKA,EAGjC,GAFA07G,EAAc2G,GAAIriH,GAClB2jH,EAAWT,EAAUxH,QACJ/xH,IAAbg6H,IACF/2F,EAAS+2F,EAASvB,oBAChBvvH,EACAqd,EACA7T,EACA8jH,EACAC,GAEExzF,GACF,OAAOA,CAInB,CAEA,CAME,aAAAq2F,CAAc/yG,GACZ,MAAMkc,EAAYjpC,KAAK+3H,WACvB,IAAK9uF,EACH,OAAO,KAET,MAAMvyB,EAAOuyB,EAAU,GACjBtyB,EAAOsyB,EAAU,GACjBryB,EAAOqyB,EAAU,GACjBpyB,EAAOoyB,EAAU,GACjB42F,EAAiB,CAACnpH,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,GAElE,OADA8a,GAAYouG,EAAgB,EAAG,EAAG,EAAG9yG,EAAW8yG,GACzCA,CACX,CAKE,OAAAr7H,GACE,OAAOA,EAAQxE,KAAKu/H,mBACxB,CAaE,OAAAP,CACEyB,EACAhE,EACA1vG,EACA43D,EACAm3C,EACA4E,EACAxD,GAEA,MAAMpZ,EAAKp9G,OAAOC,KAAK3G,KAAKu/H,oBAAoBpuG,IAAI0B,QACpDixF,EAAGjrF,KAAKqkG,EAAgBj8H,EAAaP,GAErCggI,EAAeA,GAA8BxB,GAC7C,MAAMyB,EAAkBzB,GAAIr+H,OAC5B,IAAK,IAAIU,EAAI,EAAG4E,EAAK29G,EAAGjjH,OAAQU,EAAI4E,IAAM5E,EAAG,CAC3C,MAAMi3H,EAAY1U,EAAGviH,GAAGwvB,WAClB0nG,EAAUz4H,KAAKu/H,mBAAmB/G,GACxC,IAAK,IAAI37G,EAAI,EAAG6P,EAAKg0G,EAAa7/H,OAAQgc,EAAI6P,IAAM7P,EAAG,CACrD,MAAM07G,EAAcmI,EAAa7jH,GAC3B67G,EAASD,EAAQF,GACvB,QAAe/xH,IAAXkyH,EAAsB,CACxB,MAAMyE,EACc,OAAlBD,OAAyB12H,EAAYkyH,EAAOoC,mBACxCprH,EAAUytH,EACZA,EAAc7tH,aACdmxH,EACEG,EACJ5gI,KAAK+3H,YACW,UAAhBQ,GACgB,SAAhBA,EAmCF,GAlCIqI,IACFlxH,EAAQuxD,OAGRjhE,KAAK8sF,KAAKp9E,EAASqd,IAGlBowG,GACe,SAAhB5E,GACgB,UAAhBA,EAWA4E,EAAc/f,cAAc1tG,GAC1BgpH,EAAOsG,QACLtvH,EACA+sH,EACA1vG,EACA43D,EACAm3C,EACAoB,KAhBJxE,EAAOsG,QACLtvH,EACA+sH,EACA1vG,EACA43D,EACAm3C,EACAoB,GAcA0D,GACFlxH,EAAQ2xD,UAEN87D,EAAe,CACjBA,EAAc9lH,SACd,MAAMzU,EAAQkhH,EAAGviH,GAAKo/H,EAAkB9jH,EACnC7c,KAAK2/H,wBAAwB/8H,KAChC5C,KAAK2/H,wBAAwB/8H,GAAS,IAExC5C,KAAK2/H,wBAAwB/8H,GAAO+C,KAAKw3H,EACrD,CACA,CACA,CACA,CAEIn9H,KAAK0/H,iBAAmBe,CAC5B,CAEE,yBAAAI,GACE,OAAO7gI,KAAK2/H,uBAChB,CAEE,kBAAAmB,GACE,OAAO9gI,KAAK0/H,gBAChB,CAEE,cAAAz0E,GACE,MAAM81E,EAAyB/gI,KAAK2/H,wBAC9B7b,EAAKp9G,OAAOC,KAAKo6H,GAAwB5vG,IAAI0B,QAAQgG,KAAKn4B,GAChE,IAAK,IAAIa,EAAI,EAAG4E,EAAK29G,EAAGjjH,OAAQU,EAAI4E,IAAM5E,EACxCw/H,EAAuBjd,EAAGviH,IAAIuJ,SAASqyH,IACrCA,EAAc9f,KAAKr9G,KAAK0/H,kBACxBvC,EAAc94H,OAAO,IAEvB08H,EAAuBjd,EAAGviH,IAAIV,OAAS,CAE7C,EASA,MAAMmgI,GAA6B,CAAE,EAS9B,SAASV,GAAmBniH,GACjC,QAA2C3X,IAAvCw6H,GAA2B7iH,GAC7B,OAAO6iH,GAA2B7iH,GAGpC,MAAMnL,EAAgB,EAATmL,EAAa,EACpB8iH,EAAgB9iH,EAASA,EACzB+iH,EAAY,IAAIl/H,MAAMi/H,EAAgB,GAC5C,IAAK,IAAI1/H,EAAI,EAAGA,GAAK4c,IAAU5c,EAC7B,IAAK,IAAIsb,EAAI,EAAGA,GAAKsB,IAAUtB,EAAG,CAChC,MAAMg5D,EAAat0E,EAAIA,EAAIsb,EAAIA,EAC/B,GAAIg5D,EAAaorD,EACf,MAEF,IAAIriH,EAAWsiH,EAAUrrD,GACpBj3D,IACHA,EAAW,GACXsiH,EAAUrrD,GAAcj3D,GAE1BA,EAASjZ,KAA4C,IAArCwY,EAAS5c,GAAKyR,GAAQmL,EAAStB,IAAU,GACrDtb,EAAI,GACNqd,EAASjZ,KAA4C,IAArCwY,EAAS5c,GAAKyR,GAAQmL,EAAStB,IAAU,GAEvDA,EAAI,IACN+B,EAASjZ,KAA4C,IAArCwY,EAAS5c,GAAKyR,GAAQmL,EAAStB,IAAU,GACrDtb,EAAI,GACNqd,EAASjZ,KAA4C,IAArCwY,EAAS5c,GAAKyR,GAAQmL,EAAStB,IAAU,GAGnE,CAGE,MAAMskH,EAAa,GACnB,IAAK,IAAI5/H,EAAI,EAAG4E,EAAK+6H,EAAUrgI,OAAQU,EAAI4E,IAAM5E,EAC3C2/H,EAAU3/H,IACZ4/H,EAAWx7H,QAAQu7H,EAAU3/H,IAKjC,OADAy/H,GAA2B7iH,GAAUgjH,EAC9BA,CACT,CC5eO,MAAMC,GAAwB,GAkB9B,SAASC,GACdruH,EACAiT,EACAy0D,EACA/Q,EACAl0D,EACAwD,EACAC,EACAqZ,EACA5W,GAEA,MAAM2lH,EAAa3lH,EAAa4S,GAAa9Y,EAAQkG,GAAclG,EAG7D/F,EAAUb,GAFFmE,EAAK,GAAKouH,GACTpuH,EAAK,GAAKouH,IAEzB1xH,EAAQk+E,uBAAwB,EAChC,MAAM1+E,EAASQ,EAAQR,OACjB45D,EAAW,IAAI4b,GACnBh1E,EACA0xH,GACA3rH,EACA,KACAyD,EACAqZ,EACA5W,EACIgQ,GAA4BuC,KAAqBvS,GACjD,MAEA4lH,EAAe7mD,EAAS75E,OAExB2gI,EAAc51H,KAAKoQ,MAAM,SAAwBulH,GACjDE,EAAmB,CAAE,EAC3B,IAAK,IAAIlgI,EAAI,EAAGA,GAAKggI,IAAgBhgI,EAAG,CACtC,MAAMkoE,EAAUiR,EAASn5E,EAAI,GACvBmgI,EAAuBj4D,EAAQz0D,oBAAsB20D,EAC3D,IAAK+3D,EACH,SAEF,IAAIrsH,EAASqsH,EAAqBj4D,EAASxwD,GAC3C,IAAK5D,EACH,SAEGrT,MAAMC,QAAQoT,KACjBA,EAAS,CAACA,IAEZ,MACMo7C,GADQlvD,EAAIigI,GACEzwG,SAAS,IAAI4wG,SAAS,EAAG,UAC7C,IAAK,IAAI9kH,EAAI,EAAG6P,EAAKrX,EAAOxU,OAAQgc,EAAI6P,IAAM7P,EAAG,CAC/C,MAAM+kH,EAAgBvsH,EAAOwH,GACvBvI,EAAWstH,EAAcr4D,qBAAdq4D,CAAoCn4D,GACrD,IAAKn1D,IAAagG,GAAWgnH,EAAYhtH,EAASuH,aAChD,SAEF,MAAM/L,EAAQ8xH,EAAcntH,QACtBuuD,EAAOlzD,EAAM2zD,UACfT,GACFA,EAAKuD,SAAS9V,GAEhB,MAAM6S,EAASxzD,EAAM8zD,YACjBN,IACFA,EAAOiD,SAAS9V,GAChB6S,EAAOsC,YAAY,OAErB91D,EAAM05D,aAAQhjE,GACd,MAAM6L,EAAQuvH,EAAc7kG,WAC5B,GAAI1qB,EAAO,CACT,MAAMwvH,EAAUxvH,EAAMiwD,eACtB,IAAKu/D,EACH,SAGF,MAAMC,EAAajzH,GACjBgzH,EAAQ,GACRA,EAAQ,QACRr7H,EACA,CAACoqD,OAAO,IAEJlzB,EAAMokG,EAAW5yH,OACvB4yH,EAAW5iG,UAAYuxB,EACvBqxE,EAAW3iG,SAAS,EAAG,EAAGzB,EAAI5uB,MAAO4uB,EAAI3uB,QACzCe,EAAMutB,SACJ,IAAIypC,GAAK,CACPppC,IAAKA,EACL/L,OAAQtf,EAAMgwD,YACd8E,aAAc,SACdE,aAAc,SACdhwD,OAAQhF,EAAMkwD,YACd9b,QAAS,EACTzzC,KAAMX,EAAMc,UACZ8O,MAAO5P,EAAM2vD,WACb9oD,SAAU7G,EAAMg7B,cAChBo0B,eAAgBpvD,EAAM4vD,sBAGlC,CACM,MAAMvb,EAAS52C,EAAMm3C,aAAe,EACpC,IAAI86E,EAAiBN,EAAiB/6E,GACjCq7E,IACHA,EAAiB,CAAE,EACnBN,EAAiB/6E,GAAUq7E,EAC3BA,EAAwB,QAAI,GAC5BA,EAAuB,OAAI,GAC3BA,EAA2B,WAAI,GAC/BA,EAAsB,MAAI,IAE5B,MAAMr9H,EAAO4P,EAAS8e,UACtB,GAAa,uBAAT1uB,EAA+B,CACjC,MAAMgjF,EAC8D,EAEhEyZ,8BACJ,IAAK,IAAI5/F,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAAG,CACnD,MAAM+S,EAAWozE,EAAWnmF,GAC5BwgI,EAAeztH,EAAS8e,UAAU1R,QAAQ,QAAS,KAAK/b,KACtD2O,EACAxE,EAEZ,CACA,MACQiyH,EAAer9H,EAAKgd,QAAQ,QAAS,KAAK/b,KAAK2O,EAAUxE,EAEjE,CACA,CAEE,MAAMkyH,EAAat7H,OAAOC,KAAK86H,GAAkBtwG,IAAI0B,QAAQgG,KAAKn4B,GAClE,IAAK,IAAIa,EAAI,EAAG4E,EAAK67H,EAAWnhI,OAAQU,EAAI4E,IAAM5E,EAAG,CACnD,MAAMwgI,EAAiBN,EAAiBO,EAAWzgI,IACnD,IAAK,MAAMmD,KAAQq9H,EAAgB,CACjC,MAAME,EAAeF,EAAer9H,GACpC,IAAK,IAAImY,EAAI,EAAG6P,EAAKu1G,EAAaphI,OAAQgc,EAAI6P,EAAI7P,GAAK,EAAG,CACxDisD,EAASh0D,SAASmtH,EAAaplH,EAAI,IACnC,IAAK,IAAIE,EAAI,EAAGmlH,EAAKj8G,EAAWplB,OAAQkc,EAAImlH,IAAMnlH,EAChD+rD,EAAS2e,aAAaxhE,EAAWlJ,IACjC+rD,EAASma,aAAag/C,EAAaplH,GAE7C,CACA,CACA,CACE,OAAOnN,EAAQ8C,aAAa,EAAG,EAAGtD,EAAOJ,MAAOI,EAAOH,OACzD,CAYO,SAASozH,GAAUlhG,EAAOy5C,EAAUtnE,GAEzC,MAAMgvH,EAAiB,GACvB,GAAIhvH,EAAW,CACb,MAAM2C,EAAInK,KAAKoQ,MAAMpQ,KAAK+R,MAAMsjB,EAAM,IAAMmgG,IACtCprH,EAAIpK,KAAKoQ,MAAMpQ,KAAK+R,MAAMsjB,EAAM,IAAMmgG,IAItCx+H,EAGJ,GAFCwZ,GAAMrG,EAAG,EAAG3C,EAAUtE,MAAQ,GAC7BsN,GAAMpG,EAAG,EAAG5C,EAAUrE,OAAS,GAAKqE,EAAUtE,OAE5C6N,EAAIvJ,EAAUtR,KAAKc,GACnB+uD,EAAIv+C,EAAUtR,KAAKc,EAAQ,GAE3BrB,EADI6R,EAAUtR,KAAKc,EAAQ,GACnB,KAAO+uD,EAAI,IAAMh1C,GACzB6kH,EAAc51H,KAAKoQ,MAAM,SAAwB0+D,EAAS75E,QAC5DU,GAAKA,EAAIigI,GAAgB,GAC3BY,EAAez8H,KAAK+0E,EAASn5E,EAAIigI,EAAc,GAErD,CACE,OAAOY,CACT,CC/JA,MAAMC,WAAkCjkB,GAItC,WAAAr+G,CAAYuiI,GACVr9H,MAAMq9H,GAGNtiI,KAAKuiI,6BAA+BviI,KAAKwiI,wBAAwBt7H,KAAKlH,MAMtEA,KAAKyiI,wBAMLziI,KAAK0iI,uBAAyB,KAM9B1iI,KAAK2iI,UAAW,EAMhB3iI,KAAK4iI,kBAAoB,KAMzB5iI,KAAK+hH,mBAAsB,EAM3B/hH,KAAK6iI,oBAAsB7wG,IAM3BhyB,KAAK4hH,gB9LiGA,CAAC7qG,IAAUA,KAAU,KAAW,K8L3FrC/W,KAAK8iI,uB9L2FA,CAAC/rH,IAAUA,KAAU,KAAW,K8LrFrC/W,KAAK+iI,kBAML/iI,KAAKgjI,gBAAkB,KAMvBhjI,KAAKijI,oBAAsB,KAM3BjjI,KAAKkjI,oBAAsB,EAM3BljI,KAAKmjI,qBAAuB,KAM5BnjI,KAAKojI,wBAMLpjI,KAAKqjI,aAAe,KAMpBrjI,KAAKsjI,oBAAqB,EAM1BtjI,KAAKujI,UAAW,EAMhBvjI,KAAKwjI,eAAiB,KAMtBxjI,KAAKuhE,SAAW,CACpB,CAQE,YAAAkiE,CAAaC,EAAehjG,EAAYijG,GACtC,MAAMluH,EAASirB,EAAWjrB,OACpBuyB,EAAYtH,EAAWsH,UACvBhvB,EAASgvB,EAAUhvB,OACnBC,EAAa+uB,EAAU/uB,WACvB0C,EAAaqsB,EAAUrsB,WACvBzC,EAAW8uB,EAAU9uB,SACrB0C,EAAmBD,EAAWE,YAC9B+nH,EAAe5jI,KAAKi+G,WAAWtkE,YAC/B85B,EAAYzzE,KAAKi+G,WAAWlzD,eAC5BpuB,EAAa+D,EAAW/D,WACxBu/C,EAAYx7C,EAAWw7C,UACvB4/C,IACJ5/C,EAAUj0C,KAAuBi0C,EAAUj0C,KAEvCv4B,EAAU1P,KAAK0P,QACfZ,EAAQlD,KAAK+R,MAAOjF,GAASjD,GAAUwD,EAAc0jB,GACrD5tB,EAASnD,KAAK+R,MAAOhF,GAAUlD,GAAUwD,EAAc0jB,GAEvDzgB,EAAa0nH,EAAajuD,YAAch6D,EAAWG,WACnDC,EAAaG,EAAaxD,GAASkD,GAAoB,KACvDioH,EAAW3nH,EACbtQ,KAAKgS,MAAMnI,EAAO,GAAKmG,EAAiB,IAAMG,GAAc,EAC5D,EACJ,IAAI+nH,EAAQ5nH,EACRtQ,KAAKoQ,OAAOvG,EAAO,GAAKmG,EAAiB,IAAMG,GAC/C,EACJ,EAAG,CACD,IAAIgR,EAAY/sB,KAAK+/G,mBACnB/mG,EACAC,EACA,EACA0jB,EACA7tB,EACAC,EACA+0H,EAAQ/nH,GAEN2kB,EAAW+yC,YACb1mD,EAAYA,EAAUvpB,MAAM,IAE9BkgI,EAAc1E,QACZtvH,EACA,CAACA,EAAQR,OAAOJ,MAAOY,EAAQR,OAAOH,QACtCge,EACA7T,EACA4iH,OACkBt1H,IAAlBm9H,EACIzE,GACAyE,EACExE,GACAC,GACNuE,EACIlwD,GAAa/yC,EAAW+yC,UAAUA,QAClCjtE,EAEZ,SAAes9H,EAAQD,EACvB,CAKE,eAAAE,GACwB,IAAlB/jI,KAAKuhE,WACPvhE,KAAKwjI,eAAiBxjI,KAAK0P,QAC3B1P,KAAK0P,QAAUb,GACb7O,KAAK0P,QAAQR,OAAOJ,MACpB9O,KAAK0P,QAAQR,OAAOH,OACpBC,IAGR,CAKE,iBAAAg1H,GACE,GAAsB,IAAlBhkI,KAAKuhE,SAAgB,CACvB,MAAM3Q,EAAQ5wD,KAAKwjI,eAAetiE,YAClClhE,KAAKwjI,eAAetiE,YAAclhE,KAAKuhE,SACvCvhE,KAAKwjI,eAAejxH,UAAUvS,KAAK0P,QAAQR,OAAQ,EAAG,GACtDlP,KAAKwjI,eAAetiE,YAActQ,EAClCnhD,GAAczP,KAAK0P,SACnBV,GAAWrJ,KAAK3F,KAAK0P,QAAQR,QAC7BlP,KAAK0P,QAAU1P,KAAKwjI,eACpBxjI,KAAKwjI,eAAiB,IAC5B,CACA,CAME,eAAAx4E,CAAgBtqB,GACT1gC,KAAKqjI,cAAiBrjI,KAAKi+G,WAAWlzD,gBAG3C/qD,KAAKyjI,aAAazjI,KAAKqjI,aAAc3iG,GAAY,EACrD,CAOE,sBAAAm/E,CAAuBn/E,GAChB1gC,KAAKqjI,eAGVrjI,KAAKqjI,aAAap4E,iBACdjrD,KAAK2iI,UACP3iI,KAAK0P,QAAQ2xD,UAEfrhE,KAAKgkI,oBACT,CASE,WAAAn5E,CAAYnqB,EAAYt/B,GACtB,MAAMgoD,EAAa1oB,EAAW2pB,iBAAiB3pB,EAAWg2C,YAC1D12E,KAAKuhE,SAAWnY,EAAW3C,QAC3B,MAAMze,EAAYtH,EAAWsH,UAE7BhoC,KAAKu/G,iBAAiB7+E,EAAYt/B,GAClC,MAAMsO,EAAU1P,KAAK0P,QAEf+7E,EAAczrF,KAAKqjI,aACzB,IAAIrsF,EAASy0C,IAAgBA,EAAYjnF,UACzC,IAAKwyC,EAAQ,CAIX,KAFEh3C,KAAKi+G,WAAWx3G,YAAY4iD,KAC5BrpD,KAAKi+G,WAAWx3G,YAAY4iD,KAE5B,OAAOrpD,KAAKq2E,SAEpB,CAEIr2E,KAAK+jI,kBAEL/jI,KAAK2/G,UAAUjwG,EAASgxB,GAExB,MAAM/kB,EAAaqsB,EAAUrsB,WAI7B,GADA3b,KAAK2iI,UAAW,EACZ3rF,GAAUoS,EAAW3zC,QAAUzV,KAAKujI,SAAU,CAChD,MAAM/4E,EAAch8B,GAAe46B,EAAW3zC,OAAQkG,GACtDq7B,EAAS3jB,GAAiBm3B,EAAa9pB,EAAWjrB,QAClDzV,KAAK2iI,SAAW3rF,IAAW1gC,GAAek0C,EAAa9pB,EAAWjrB,QAC9DzV,KAAK2iI,UACP3iI,KAAKi/G,cAAcvvG,EAASgxB,EAAY8pB,EAEhD,CAuBI,OArBIxT,GACFh3C,KAAKyjI,aACHh4C,EACA/qD,GACA1gC,KAAKi+G,WAAWlzD,qBAAyBvkD,IAIxCk6B,EAAW+yC,WAAazzE,KAAK2iI,UAChCjzH,EAAQ2xD,UAGVrhE,KAAK4/G,WAAWlwG,EAASgxB,GAErB1gC,KAAK+iI,oBAAsB/6F,EAAU9uB,WACvClZ,KAAK+iI,kBAAoB/6F,EAAU9uB,SACnClZ,KAAK0iI,uBAAyB,MAE3BhiG,EAAW+yC,WACdzzE,KAAKgkI,oBAEAhkI,KAAKq2E,SAChB,CASE,WAAAnsB,CAAYjpB,GACV,OAAO,IAAIh9B,SAASE,IAClB,GACEnE,KAAK0gC,aACJ1gC,KAAK0iI,yBACL1iI,KAAKyiI,wBACN,CACA,MAAMzvH,EAAOhT,KAAK0gC,WAAW1tB,KAAKxP,QAC5BwV,EAAShZ,KAAKgjI,gBACd/pH,EAAajZ,KAAK6iI,oBAClB3pH,EAAWlZ,KAAK+iI,kBAChBpnH,EAAa3b,KAAKijI,oBAClBxtH,EAASzV,KAAK8iI,uBACdtpF,EAAQx5C,KAAKi+G,WACbh4F,EAAa,GACbnX,EAAQkE,EAAK,GAAKouH,GAClBryH,EAASiE,EAAK,GAAKouH,GACzBn7G,EAAWtgB,KACT3F,KAAK+/G,mBACH/mG,EACAC,EACAC,EACAkoH,GACAtyH,EACAC,EACA,GACAvL,SAEJ,MAAMuG,EAASyvC,EAAMG,YACf/9B,EAAmBD,EAAWE,YACpC,GACE9R,EAAO4rE,YACPh6D,EAAWG,aACVxF,GAAesF,EAAkBnG,GAClC,CACA,IAAIqF,EAASrF,EAAO,GACpB,MAAMsG,EAAarD,GAASkD,GAC5B,IACIoxB,EADA82F,EAAQ,EAEZ,KAAOhpH,EAASc,EAAiB,MAC7BkoH,EACF92F,EAAUjxB,EAAa+nH,EACvB79G,EAAWtgB,KACT3F,KAAK+/G,mBACH/mG,EACAC,EACAC,EACAkoH,GACAtyH,EACAC,EACAi+B,GACAxpC,SAEJsX,GAAUiB,EAIZ,IAFA+nH,EAAQ,EACRhpH,EAASrF,EAAO,GACTqF,EAASc,EAAiB,MAC7BkoH,EACF92F,EAAUjxB,EAAa+nH,EACvB79G,EAAWtgB,KACT3F,KAAK+/G,mBACH/mG,EACAC,EACAC,EACAkoH,GACAtyH,EACAC,EACAi+B,GACAxpC,SAEJsX,GAAUiB,CAEtB,CACQ,MAAMiS,EAAiBE,KACvBluB,KAAK0iI,uBAAyBrB,GAC5BruH,EACAiT,EACAjmB,KAAK4iI,kBACLppF,EAAMxkC,mBACNS,EACAwD,EACAC,EACA+qH,GAA0BhrH,EAAYjZ,KAAKkjI,qBAC3Cl1G,EAAiBrS,EAAa,KAExC,CACMxX,EACEg+H,GAAUlhG,EAAOjhC,KAAK4iI,kBAAmB5iI,KAAK0iI,wBAC/C,GAEP,CAYE,0BAAA1tD,CACE5+D,EACAsqB,EACAu0C,EACA/8D,EACAu9D,GAEA,IAAKz1E,KAAKqjI,aACR,OAEF,MAAMpqH,EAAaynB,EAAWsH,UAAU/uB,WAClCC,EAAWwnB,EAAWsH,UAAU9uB,SAChCsgC,EAAQx5C,KAAKi+G,WAGbvjC,EAAW,CAAE,EAqCbjH,EAAYzzE,KAAKi+G,WAAWlzD,eAClC,OAAO/qD,KAAKqjI,aAAaruD,2BACvB5+D,EACA6C,EACAC,EACA+7D,GAlCsB,SAAUxL,EAASn1D,EAAUuhE,GACnD,MAAMvuE,EAAMiB,EAAOkhE,GACbx/C,EAAQywD,EAASpzE,GACvB,GAAK2iB,GAcE,IAAc,IAAVA,GAAkB4rD,EAAa5rD,EAAM4rD,WAAY,CAC1D,GAAmB,IAAfA,EAGF,OAFA6E,EAASpzE,IAAO,EAChBmuE,EAAQ5uE,OAAO4uE,EAAQyuD,YAAYj6G,GAAQ,GACpC/R,EAASuxD,EAASjwB,EAAOllC,GAElC2V,EAAM3V,SAAWA,EACjB2V,EAAM4rD,WAAaA,CAC3B,MAtBkB,CACV,GAAmB,IAAfA,EAEF,OADA6E,EAASpzE,IAAO,EACT4Q,EAASuxD,EAASjwB,EAAOllC,GAElCmhE,EAAQ9vE,KACL+0E,EAASpzE,GAAO,CACfmiE,QAASA,EACTjwB,MAAOA,EACPllC,SAAUA,EACVuhE,WAAYA,EACZ39D,SAAUA,GAGf,CAUF,GASCu7D,EACI/yC,EAAW+yC,YAAYA,IAAYx5B,MAAM9oB,KAAKlmB,GAASA,EAAKlH,QAC5D,KAEV,CAME,kBAAA84E,GACE,MAAMrjC,EAAQx5C,KAAKi+G,WACfzkE,EAAM2N,cAAgBnnD,KAAKqjI,cAC7B7pF,EAAM5xC,SAEZ,CAOE,uBAAA46H,CAAwB38H,GACtB7F,KAAKk+G,yBACT,CAQE,YAAAtzD,CAAalqB,GACX,MAAM4hG,EAActiI,KAAKi+G,WACnB2lB,EAAetB,EAAY3oF,YACjC,IAAKiqF,EACH,OAAO,EAGT,MAAMO,EAAYzjG,EAAWw7C,UAAUj0C,IACjCm8F,EAAc1jG,EAAWw7C,UAAUj0C,IACnCqrC,EAAuBgvD,EAAYvuD,0BACnCR,EAAyB+uD,EAAYtuD,4BAE3C,GACGh0E,KAAK07D,QAAU4X,GAAwB6wD,IACtC5wD,GAA0B6wD,EAG5B,OADApkI,KAAKyiI,yBAA0B,GACxB,EAETziI,KAAKyiI,yBAA0B,EAE/B,MAAM4B,EAAmB3jG,EAAWjrB,OAC9BuyB,EAAYtH,EAAWsH,UACvBrsB,EAAaqsB,EAAUrsB,WACvB1C,EAAa+uB,EAAU/uB,WACvB0jB,EAAa+D,EAAW/D,WACxB2nG,EAAsBhC,EAAYz6H,cAClC08H,EAA0BjC,EAAYzuD,kBAC5C,IAAI2wD,EAAyBlC,EAAYxuD,sBAEVttE,IAA3Bg+H,IACFA,EAAyBC,IAG3B,MAAMzrH,EAASgvB,EAAUhvB,OAAOxV,QAC1BiS,EAASG,GACbyuH,EACAE,EAA0BtrH,GAEtBmnG,EAAiB3qG,EAAOjS,QACxBkhI,EAAc,CAACjvH,EAAOjS,SACtBoY,EAAmBD,EAAWE,YAEpC,GACE+nH,EAAajuD,YACbh6D,EAAWG,aACVxF,GAAesF,EAAkB8kB,EAAWjrB,QAC7C,CAMA,MAAMsG,EAAarD,GAASkD,GACtB4xE,EAAS5hF,KAAKoM,IAAIU,GAASjD,GAAU,EAAGsG,GAC9CtG,EAAO,GAAKmG,EAAiB,GAAK4xE,EAClC/3E,EAAO,GAAKmG,EAAiB,GAAK4xE,EAClCm3C,GAAgB3rH,EAAQ2C,GACxB,MAAMipH,EAAaC,GAAYH,EAAY,GAAI/oH,GAG7CipH,EAAW,GAAKhpH,EAAiB,IACjCgpH,EAAW,GAAKhpH,EAAiB,GAEjC8oH,EAAY/+H,KAAK,CACfi/H,EAAW,GAAK7oH,EAChB6oH,EAAW,GACXA,EAAW,GAAK7oH,EAChB6oH,EAAW,KAGbA,EAAW,GAAKhpH,EAAiB,IACjCgpH,EAAW,GAAKhpH,EAAiB,IAEjC8oH,EAAY/+H,KAAK,CACfi/H,EAAW,GAAK7oH,EAChB6oH,EAAW,GACXA,EAAW,GAAK7oH,EAChB6oH,EAAW,IAGrB,CAEI,GACE5kI,KAAK07D,OACL17D,KAAK6iI,qBAAuB5pH,GAC5BjZ,KAAK+hH,mBAAqBuiB,GAC1BtkI,KAAKmjI,sBAAwBqB,GAC7BxkI,KAAKojI,4BAA8B1iG,EAAW+yC,WAC9Cn9D,GAAetW,KAAK8iI,uBAAwBrtH,GAQ5C,OANKvT,EAAOlC,KAAK4hH,gBAAiBxB,KAChCpgH,KAAK0iI,uBAAyB,KAC9B1iI,KAAK4hH,gBAAkBxB,GAEzBpgH,KAAKgjI,gBAAkBhqH,EACvBhZ,KAAKsjI,oBAAqB,GACnB,EAGTtjI,KAAKqjI,aAAe,KAEpB,MAAM53C,EAAc,IAAIq5C,GACtBC,GAAmB9rH,EAAY0jB,GAC/BlnB,EACAwD,EACA0jB,GAGI3O,EAAiBE,KACvB,IAAI02D,EACJ,GAAI52D,EAAgB,CAClB,IAAK,IAAIzsB,EAAI,EAAG4E,EAAKu+H,EAAY7jI,OAAQU,EAAI4E,IAAM5E,EAAG,CACpD,MACM+/H,EAAa/yG,GADJm2G,EAAYnjI,GACaoa,GACxCioH,EAAaz7B,aACXm5B,EACA7yG,GAAiBxV,EAAY0C,GAC7BqS,EAEV,CACM42D,EAAgBj5D,GAA4BqC,EAAgBrS,EAClE,MACM,IAAK,IAAIpa,EAAI,EAAG4E,EAAKu+H,EAAY7jI,OAAQU,EAAI4E,IAAM5E,EACjDqiI,EAAaz7B,aAAau8B,EAAYnjI,GAAI0X,EAAY0C,GAI1D,MAAM4W,EAAmB0xG,GAA0BhrH,EAAY0jB,GAC/D,IAAI++B,GAAQ,EACZ,MAAM1kB,EAKJ,CAACyyB,EAAS7mE,KACR,IAAIyS,EACJ,MAAMs0D,EACJF,EAAQz0D,oBAAsBstH,EAAYttH,mBAI5C,GAHI20D,IACFt0D,EAASs0D,EAAcF,EAASxwD,IAE9B5D,EAAQ,CACV,MAAM2vH,EAAQhlI,KAAKksF,cACjBziB,EACAl3C,EACAld,EACAo2E,EACA7G,EACA5kF,KAAKi+G,WAAWlzD,eAChBnoD,GAEF84D,EAAQA,IAAUspE,CAC5B,GAGU1D,EAAa/yG,GAAa9Y,EAAQkG,GAElC++D,EAAWkpD,EAAav8B,oBAAoBi6B,GAC9CkD,GACF9pD,EAAS7hD,KAAK2rG,GAEhB,IAAK,IAAIjjI,EAAI,EAAG4E,EAAKu0E,EAAS75E,OAAQU,EAAI4E,IAAM5E,EAC9Cy1C,EAAO0jC,EAASn5E,GAAIA,GAEtBvB,KAAK4iI,kBAAoBloD,EACzB16E,KAAK07D,MAAQA,EAEb,MAAMupE,EAA0Bx5C,EAAYqmC,SACtC4R,EAAgB,IAAIrE,GACxB5pH,EACAwD,EACA0jB,EACAinG,EAAa97B,cACbm9B,EACA3C,EAAYzuD,oBACVnzC,EAAW+yC,WAgBf,OAbAzzE,KAAK6iI,oBAAsB5pH,EAC3BjZ,KAAK+hH,kBAAoBuiB,EACzBtkI,KAAKmjI,qBAAuBqB,EAC5BxkI,KAAKojI,0BAA4B1iG,EAAW+yC,UAC5CzzE,KAAK4hH,gBAAkBxB,EACvBpgH,KAAK8iI,uBAAyBrtH,EAC9BzV,KAAKgjI,gBAAkBhqH,EACvBhZ,KAAKijI,oBAAsBtnH,EAC3B3b,KAAKkjI,oBAAsBvmG,EAC3B38B,KAAKqjI,aAAeK,EACpB1jI,KAAK0iI,uBAAyB,KAE9B1iI,KAAKsjI,oBAAqB,GACnB,CACX,CAYE,aAAAp3C,CACEziB,EACAl3C,EACAld,EACAu1E,EACA79D,EACA0mD,EACA7wE,GAEA,IAAKyS,EACH,OAAO,EAET,IAAImuD,GAAU,EACd,GAAIxhE,MAAMC,QAAQoT,GAChB,IAAK,IAAI9T,EAAI,EAAG4E,EAAKkP,EAAOxU,OAAQU,EAAI4E,IAAM5E,EAC5CiiE,EACE0oB,GACEtB,EACAnhB,EACAp0D,EAAO9T,GACPgxB,EACAvyB,KAAKuiI,6BACLx1G,EACA0mD,EACA7wE,IACG4gE,OAGTA,EAAU0oB,GACRtB,EACAnhB,EACAp0D,EACAkd,EACAvyB,KAAKuiI,6BACLx1G,EACA0mD,EACA7wE,GAGJ,OAAO4gE,CACX,ECrxBA,MAAM0hE,WAAuCllB,GAI3C,WAAAjgH,CAAYy5C,GACVv0C,MAAMu0C,GAMNx5C,KAAKmlI,gBAAkB,IAAI9C,GAA0B7oF,GAMrDx5C,KAAKolI,iBAAmB5rF,EAAM6rF,gBAM9BrlI,KAAKslI,kCjLPA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GiLarBtlI,KAAKulI,oCAAsC,IAC/C,CAME,eAAAplI,GACEH,KAAKmlI,gBAAgBjlI,UACrB+E,MAAM9E,iBACV,CAQE,WAAA+pD,CAAYjpB,GACV,IAAKjhC,KAAKmlI,gBACR,OAAOlhI,QAAQE,QAAQ,IAEzB,MAAMqhI,EAAc5hI,GAClB5D,KAAKslI,kCACL1hI,GAAM5D,KAAKulI,oCAAqCtkG,EAAMz9B,UAExD,OAAOxD,KAAKmlI,gBAAgBj7E,YAAYs7E,EAC5C,CAME,kBAAA3oD,GACE78E,KAAKmlI,gBAAgBtoD,oBACzB,CAQE,YAAAjyB,CAAalqB,GACX,MAAM/D,EAAa+D,EAAW/D,WACxBqL,EAAYtH,EAAWsH,UACvBk4E,EAAiBl4E,EAAU/uB,WAE3Bq3B,EAAQ5P,EAAWw7C,UACnBupD,EAAiBzlI,KAAKmlI,gBAC5B,IAAI/kB,EAAiB1/E,EAAWjrB,OACF,IAA1BzV,KAAKolI,mBACPhlB,EAAiBA,EAAe58G,MAAM,GACtCgX,GAAgB4lG,EAAgBpgH,KAAKolI,mBAEvC,MAAMt2H,EAAQ4J,GAAS0nG,GAAkBF,EACnCnxG,EAAS4J,GAAUynG,GAAkBF,EAE3C,IACG5vE,EAAMrI,MACNqI,EAAMrI,MACNzjC,GAAQ47G,GACT,CACAqlB,EAAe7mB,aAAa,KAAM,MAClC,MAAMlvG,EAAU+1H,EAAe/1H,QACzB05C,EAAa1oB,EAAW2pB,iBAAiB3pB,EAAWg2C,YACpDgvD,EAAkBh/H,OAAO2C,OAAO,CAAA,EAAI+/C,EAAY,CAAC3C,QAAS,IAC1Dk/E,EACJj/H,OAAO2C,OAAO,CAAE,EAAEq3B,EAAY,CAC5BjrB,OAAQ2qG,EACRptG,KAAM,CAAClE,EAAOC,GACdi5B,UACEthC,OAAO2C,OAAO,GAAIq3B,EAAWsH,UAAW,CACtC9uB,SAAU,IAGdmxC,iBAAkB,CAACq7E,GACnBhvD,WAAY,EACZjD,UAAW,OAGTA,EAAYzzE,KAAKi+G,WAAWlzD,eAC9B0oB,IACFkyD,EAAgBlyD,UAAY,CAC1BA,CAACA,GAAY,IAAIS,GAAM,KAG3B,MAAM7hE,EAAQ,IAAIgsB,GAChB+hF,EACAF,EACAvjF,EACAjtB,EAAQR,QACR,SAAUgJ,GAENutH,EAAe76E,aAAa+6E,IAC5BF,EAAenC,qBAEfmC,EAAelC,UAAW,EAC1BkC,EAAe56E,YAAY86E,EAAiB,MAC5CF,EAAez6E,gBAAgB26E,GAC/BF,EAAex6E,eAAe06E,GAC9BztH,IAEH,IAGH7F,EAAM/M,iBAAiBzF,GAAkB,KACvC,GAAIwS,EAAMzF,aAAe6vB,GACvB,OAEFz8B,KAAKqS,MAAQA,EACb,MAAM82E,EAAkB92E,EAAM2qB,gBACxBqhF,EACHlvB,GAAmB98E,EAAM4qB,iBAAmBN,EAC7CwsD,EACFnpF,KAAKq+G,mBAAqBA,EAC1Br+G,KAAKslI,kCAAoCl1G,GACvCpwB,KAAKslI,kCACLx2H,EAAQ,EACRC,EAAS,EACT,EAAIsvG,GACJ,EAAKA,EACL,GACCr2E,EAAUhvB,OAAO,IACjBgvB,EAAUhvB,OAAO,GACnB,IAEH3G,EAAMxF,MACZ,CAOI,OALI7M,KAAKqS,QACPrS,KAAKulI,oCACH7kG,EAAWq0C,2BAA2BvxE,UAGlCxD,KAAKi+G,WAAWtkE,YAAY6pB,WAAaxjE,KAAKqS,KAC1D,CAKE,SAAAstG,GAAY,CAKZ,UAAAC,GAAa,CAIb,eAAA50D,GAAkB,CAYlB,0BAAAgqB,CACE5+D,EACAsqB,EACAu0C,EACA/8D,EACAu9D,GAEA,OAAIz1E,KAAKmlI,gBACAnlI,KAAKmlI,gBAAgBnwD,2BAC1B5+D,EACAsqB,EACAu0C,EACA/8D,EACAu9D,GAGGxwE,MAAM+vE,2BACX5+D,EACAsqB,EACAu0C,EACA/8D,EACAu9D,EAEN,ECzNA,IAAImwD,GAAa,KA2BV,SAASC,GAASC,GACvBF,GAAaE,EAEb,MAAMC,EAAYr/H,OAAOC,KAAKm/H,EAAME,MAC9Bj+H,EAAMg+H,EAAUllI,OACtB,IAAIU,EAAGsb,EACP,IAAKtb,EAAI,EAAGA,EAAIwG,IAAOxG,EAAG,CACxB,MAAMwhB,EAAOgjH,EAAUxkI,GACvB,IAAK0kI,GAAoBljH,GAAO,CAC9B,MAAMmjH,EAAMJ,EAAME,KAAKjjH,GACvB,IAAIqC,EAAmD8gH,EAAS,MAC3D9gH,GAA0B,YAAjB8gH,EAAIC,WAChB/gH,EAAQ,WAEV8F,GACE,IAAIrI,GAAW,CACbE,KAAMA,EACNM,gBAAiB6iH,EAAIE,KACrBviH,cAAeqiH,EAAIG,SACnBjhH,UAGV,CACA,CACE,IAAK7jB,EAAI,EAAGA,EAAIwG,IAAOxG,EAAG,CACxB,MAAM+kI,EAAQP,EAAUxkI,GAClBglI,EAAQN,GAAoBK,GAClC,IAAKzpH,EAAI,EAAGA,EAAI9U,IAAO8U,EAAG,CACxB,MAAM2pH,EAAQT,EAAUlpH,GAClB4pH,EAAQR,GAAoBO,GAClC,IAAK14G,GAAaw4G,EAAOE,GACvB,GAAIV,EAAME,KAAKM,KAAWR,EAAME,KAAKQ,GACnC36G,GAAyB,CAAC06G,EAAOE,QAC5B,CACL,MAAM15G,EAAY+4G,EAAMQ,EAAOE,GAC/B75G,GACE45G,EACAE,EACA33G,GAA8By3G,EAAOE,EAAO15G,EAAUxC,SACtDuE,GAA8B23G,EAAOF,EAAOx5G,EAAUvC,SAElE,CAEA,CACA,CACA,CAMA,IAAIk8G,GAAavkD,eAAgBp/D,GAC/B,MAAMw/D,QAAiBokD,MAAM,mBAAmB5jH,WAChD,IAAKw/D,EAASqkD,GACZ,MAAM,IAAIv+H,MAAM,qCAAqCk6E,EAASnB,UAEhE,OAAOmB,EAAShkB,MAClB,ECvFA,SAAS67D,GAAK7tH,EAAawgB,EAAWwF,GAKpC,MAAMnb,EAAkB,GAExB,IAAIyvH,EAAOt6H,EAAY,GACnBu6H,EAAOv6H,EAAY,GAEnBxL,EAAIgsB,EAAU85G,GACd7lI,EAAI+rB,EAAU+5G,GAGlB,MAAMC,EAAW,CAACD,EAAMD,GAElB7vG,EAAQ,CAACh2B,EAAGD,GAEZimI,EAAgB,CAAC,EAAG,GAGpBC,EAAY,CAAE,EAEpB,IACIC,EAAMlqH,EAAGmqH,EAAOC,EAAOC,EAAO//H,EAD9BggI,EAAgB,IAGpB,OAASA,EAAgB,GAAKN,EAAcnmI,OAAS,GAEnDsmI,EAAQH,EAAcn8H,MACtBg8H,EAAOE,EAASl8H,MAChB9J,EAAIi2B,EAAMnsB,MAEVvD,EAAM6/H,EAAMp2G,WACNzpB,KAAO2/H,IACX7vH,EAAgBzR,KAAK5E,EAAE,GAAIA,EAAE,IAC7BkmI,EAAU3/H,IAAO,GAGnB8/H,EAAQJ,EAAcn8H,MACtBi8H,EAAOC,EAASl8H,MAChB7J,EAAIg2B,EAAMnsB,MAEVw8H,GAASF,EAAQC,GAAS,EAC1BF,EAAO36H,EAAY86H,GACnBrqH,EAAI+P,EAAUm6G,GAEZ7qH,GAAuBW,EAAE,GAAIA,EAAE,GAAIjc,EAAE,GAAIA,EAAE,GAAIC,EAAE,GAAIA,EAAE,IACvDuxB,GAKAnb,EAAgBzR,KAAK3E,EAAE,GAAIA,EAAE,IAC7BsG,EAAM8/H,EAAMr2G,WACZk2G,EAAU3/H,IAAO,IAIjB0/H,EAAcrhI,KAAKyhI,EAAOC,EAAOA,EAAOF,GACxCnwG,EAAMrxB,KAAK3E,EAAGgc,EAAGA,EAAGjc,GACpBgmI,EAASphI,KAAKmhI,EAAMI,EAAMA,EAAML,IAIpC,OAAOzvH,CACT,CAoEO,SAASmwH,GAASv6G,EAAK5O,EAAMC,EAAM1C,EAAY4W,GAEpD,OAAO6nG,IAKL,SAAUoN,GACR,MAAO,CAACx6G,EAAK5O,GAAQC,EAAOD,GAAQopH,EACrC,GACD15G,GATyBwF,GAAc,aASN3X,GACjC4W,EAEJ,CAWO,SAASk1G,GAASzoH,EAAKF,EAAM4oH,EAAM/rH,EAAY4W,GAEpD,OAAO6nG,IAKL,SAAUoN,GACR,MAAO,CAAC1oH,GAAQ4oH,EAAO5oH,GAAQ0oH,EAAMxoH,EACtC,GACD8O,GATyBwF,GAAc,aASN3X,GACjC4W,EAEJ,CC9GA,MAAMo1G,WAAoBv0D,GAIxB,WAAArzE,CAAYuK,GACVrF,MAAMqF,EACV,CAKE,cAAAghD,GACE,OAAO,IAAI+2E,GAA0BriI,KACzC,EC5CA,MAAM4nI,GAAuB,IAAI7/D,GAAO,CACtCtX,MAAO,oBAOHo3E,GAAY,CAChB,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GAAK,GACL,GAAK,GACL,EAAI,GACJ,EAAI,GACJ,EAAI,GACJ,GAAK,KACL,GAAK,KACL,GAAK,KACL,EAAI,KACJ,EAAI,KACJ,EAAI,MCpDC,MAAM18B,GAAe,MAUf28B,GAAuB,MA0D9BC,GAAc,CAAC,qBAAsB,QAAS,YAAa,aCrE1D,MAAMC,GD2Bc,MCN3B,MAAMC,GAMJ,WAAAloI,CAAY2E,EAAMwjI,GAKhBloI,KAAKyK,OAAS,KAMdzK,KAAKyjG,MAAQ/+F,EAEbiP,GACEjP,IAASymG,IAAgBzmG,IAASojI,GAClC,wFAOF9nI,KAAKmoI,YAAmB3hI,IAAV0hI,EAAsBA,EAAQF,EAChD,CAOE,MAAAI,CAAOp1H,GAEL,OADAhT,KAAKyK,OAAS,IAAK49H,GAAqBroI,KAAKyjG,OAA/B,CAAuCzwF,GAC9ChT,IACX,CAOE,SAAAsoI,CAAUj+H,GAER,OADArK,KAAKyK,OAAS49H,GAAqBroI,KAAKyjG,OAAO3pD,KAAKzvC,GAC7CrK,IACX,CAQE,eAAAuoI,CAAgB3yH,GAEd,OADA5V,KAAKyK,OAAS,IAAK49H,GAAqBroI,KAAKyjG,OAA/B,CAAuC7tF,GAC9C5V,IACX,CAKE,OAAAozB,GACE,OAAOpzB,KAAKyjG,KAChB,CAME,QAAAz4F,GACE,OAAOhL,KAAKyK,MAChB,CAKE,QAAA+9H,CAASn+H,GACP,MAAMo+H,EAAYJ,GAAqBroI,KAAKyjG,OAC5C,KAAMp5F,aAAiBo+H,GACrB,MAAM,IAAIpgI,MAAM,YAAYogI,KAE9BzoI,KAAKyK,OAASJ,CAClB,CAKE,QAAAq+H,GACE,OAAO1oI,KAAKmoI,MAChB,CAME,OAAAh1H,GACE,OAAOnT,KAAKyK,OAASzK,KAAKyK,OAAO5J,OAAS,CAC9C,EAQO,SAASwnI,GAAqB3jI,GACnC,OAAQA,GACN,KAAKymG,GACH,OAAOn5F,aACT,KAAK81H,GACH,OAAOa,YACT,QACE,OAAO32H,aAEb,CCrJe,IAAA42H,GACP,mBADOA,GAEH,uBC2FZ,MAAMC,GAIJ,WAAA9oI,CAAYuK,GAIVtK,KAAKsqG,IAAMhgG,EAAQw+H,aACnB,MAAMz+B,EAAKrqG,KAAKsqG,IAKhBtqG,KAAK+oI,YAAcz+H,EAAQ0+H,YAAc,EAMzChpI,KAAKipI,qBAAuB5+B,EAAGwE,gBAM/B7uG,KAAKkpI,yBAA2B,KAKhClpI,KAAKmpI,aAAe9+B,EAAGmF,oBAIvBxvG,KAAKopI,aAAe/+B,EAAGg/B,qBAIvB,MAAM37B,EAAerD,EAAG2C,aAAa3C,EAAGsD,eACxCtD,EAAG6C,aACDQ,EACApjG,EAAQojG,cAxIgB,8TA0I1BrD,EAAG8C,cAAcO,GACjB,MAAME,EAAiBvD,EAAG2C,aAAa3C,EAAGwD,iBAC1CxD,EAAG6C,aACDU,EACAtjG,EAAQsjG,gBA9HkB,oNAgI5BvD,EAAG8C,cAAcS,GAIjB5tG,KAAKspI,qBAAuBj/B,EAAGG,gBAC/BH,EAAGyD,aAAa9tG,KAAKspI,qBAAsB57B,GAC3CrD,EAAGyD,aAAa9tG,KAAKspI,qBAAsB17B,GAC3CvD,EAAG0D,YAAY/tG,KAAKspI,sBAMpBtpI,KAAKupI,4BAA8Bl/B,EAAGY,eAEtCZ,EAAGa,WAAWb,EAAGc,aAAcnrG,KAAKupI,6BACpCl/B,EAAGgB,WACDhB,EAAGc,aACH,IAAIn5F,aAJgB,EAAC,GAAI,EAAI,GAAG,GAAI,EAAI,EAAG,GAAG,EAAI,EAAG,GAAG,EAAI,IAK5Dq4F,EAAGiB,aAMLtrG,KAAKwpI,4BAA8Bn/B,EAAGK,kBACpC1qG,KAAKspI,qBACL,cAKFtpI,KAAKypI,6BAA+Bp/B,EAAGQ,mBACrC7qG,KAAKspI,qBACL,gBAKFtpI,KAAK0pI,6BAA+Br/B,EAAGQ,mBACrC7qG,KAAKspI,qBACL,aAKFtpI,KAAK2pI,6BAA+Bt/B,EAAGQ,mBACrC7qG,KAAKspI,qBACL,WAQFtpI,KAAK4pI,UAAY,GACjBt/H,EAAQu/H,UACNnjI,OAAOC,KAAK2D,EAAQu/H,UAAU/+H,SAASsK,IACrCpV,KAAK4pI,UAAUjkI,KAAK,CAClB5B,MAAOuG,EAAQu/H,SAASz0H,GACxB00H,SAAUz/B,EAAGQ,mBAAmB7qG,KAAKspI,qBAAsBl0H,IAC3D,GAEV,CAEE,sBAAA20H,GACE,OAAO/pI,KAAKipI,oBAChB,CAME,KAAAe,GACE,OAAOhqI,KAAKsqG,GAChB,CAQE,IAAA2/B,CAAKvpG,GACH,MAAM2pE,EAAKrqG,KAAKgqI,QACVp1B,EAAc,CAClBvK,EAAG6/B,mBAAqBlqI,KAAK+oI,YAC7B1+B,EAAG8/B,oBAAsBnqI,KAAK+oI,aAShC,GALA1+B,EAAGoF,gBAAgBpF,EAAGqF,YAAa1vG,KAAKoqI,kBACxC//B,EAAGggC,iBAAiBhgC,EAAGigC,aAActqI,KAAKuqI,kBAC1ClgC,EAAG/W,SAAS,EAAG,EAAGshB,EAAY,GAAIA,EAAY,KAI3C50G,KAAKkpI,0BACNlpI,KAAKkpI,yBAAyB,KAAOt0B,EAAY,IACjD50G,KAAKkpI,yBAAyB,KAAOt0B,EAAY,GACjD,CACA50G,KAAKkpI,yBAA2Bt0B,EAGhC,MAAMt1F,EAAQ,EACRkrH,EAAiBngC,EAAGkF,KACpBxvC,EAAS,EACTv+C,EAAS6oF,EAAGkF,KACZ7qG,EAAO2lG,EAAGwJ,cACV/xG,EAAO,KACbuoG,EAAG2B,YAAY3B,EAAG4B,WAAYjsG,KAAKipI,sBACnC5+B,EAAGiF,WACDjF,EAAG4B,WACH3sF,EACAkrH,EACA51B,EAAY,GACZA,EAAY,GACZ70C,EACAv+C,EACA9c,EACA5C,GAGFuoG,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoB7E,EAAG8E,QAC1D9E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG0E,eAAgB1E,EAAG2E,eACtD3E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG4E,eAAgB5E,EAAG2E,eAGtD3E,EAAGsF,qBACDtF,EAAGqF,YACHrF,EAAGuF,kBACHvF,EAAG4B,WACHjsG,KAAKipI,qBACL,GAGF5+B,EAAGogC,oBACDpgC,EAAGigC,aACHjgC,EAAGqgC,kBACH91B,EAAY,GACZA,EAAY,IAEdvK,EAAGsgC,wBACDtgC,EAAGqF,YACHrF,EAAGugC,iBACHvgC,EAAGigC,aACHtqI,KAAKopI,aAEb,CACA,CASE,KAAAxlI,CAAM88B,EAAYmqG,EAAUC,EAAYC,GACtC,MAAM1gC,EAAKrqG,KAAKgqI,QACVh3H,EAAO0tB,EAAW1tB,KASxB,GAPAq3F,EAAGoF,gBACDpF,EAAGqF,YACHm7B,EAAWA,EAAST,iBAAmB,MAEzC//B,EAAG2gC,cAAc3gC,EAAG4gC,UACpB5gC,EAAG2B,YAAY3B,EAAG4B,WAAYjsG,KAAKipI,uBAE9B4B,EAAU,CAGb,MAAMK,EAAW3iI,EAAO8hG,EAAGn7F,QAC3B,IAAKwxB,EAAW28C,cAAc6tD,GAAW,CACvC,MAAMC,EAAa9gC,EAAG+gC,uBAClBD,GAAcA,EAAWE,wBAC3BhhC,EAAGihC,WAAW,EAAK,EAAK,EAAK,GAC7BjhC,EAAGkhC,WAAW,GACdlhC,EAAGhmG,MAAMgmG,EAAGgE,iBAAmBhE,EAAGiE,mBAGpC5tE,EAAW28C,cAAc6tD,IAAY,CAC7C,CACA,CAEI7gC,EAAGt/E,QAAQs/E,EAAGmhC,YACdnhC,EAAGuG,OAAOvG,EAAGohC,OACbphC,EAAGqhC,UAAUrhC,EAAGshC,IAAKthC,EAAGuhC,qBACxBvhC,EAAG/W,SAAS,EAAG,EAAG+W,EAAG6/B,mBAAoB7/B,EAAG8/B,qBAE5C9/B,EAAGa,WAAWb,EAAGc,aAAcnrG,KAAKupI,6BAEpCl/B,EAAG6B,WAAWlsG,KAAKspI,sBACnBj/B,EAAG8B,wBAAwBnsG,KAAKwpI,6BAChCn/B,EAAG+B,oBACDpsG,KAAKwpI,4BACL,EACAn/B,EAAGgC,OACH,EACA,EACA,GAEFhC,EAAGwhC,UAAU7rI,KAAKypI,6BAA8Bz2H,EAAK,GAAIA,EAAK,IAC9Dq3F,EAAGwC,UAAU7sG,KAAK2pI,6BAA8B,GAEhD,MAAMljF,EAAU/lB,EAAW2pB,iBAAiB3pB,EAAWg2C,YAAYjwB,QACnE4jD,EAAGyhC,UAAU9rI,KAAK0pI,6BAA8BjjF,GAEhDzmD,KAAK+rI,cAAcrrG,GAEfoqG,GACFA,EAAWzgC,EAAI3pE,GAEjB2pE,EAAGyC,WAAWzC,EAAG0C,UAAW,EAAG,GAC3Bg+B,GACFA,EAAY1gC,EAAI3pE,EAEtB,CAKE,cAAA0pG,GACE,OAAOpqI,KAAKmpI,YAChB,CAKE,cAAAoB,GACE,OAAOvqI,KAAKopI,YAChB,CAOE,aAAA2C,CAAcrrG,GACZ,MAAM2pE,EAAKrqG,KAAKgqI,QAEhB,IAAIjmI,EACAioI,EAAc,EAClBhsI,KAAK4pI,UAAU9+H,SAAQ,SAAUmhI,GAO/B,GANAloI,EAC2B,mBAAlBkoI,EAAQloI,MACXkoI,EAAQloI,MAAM28B,GACdurG,EAAQloI,MAGVA,aAAiB2N,mBAAqB3N,aAAiBswG,UAEpD43B,EAAQn8B,UACXm8B,EAAQn8B,QAAUzF,EAAGwE,iBAEvBxE,EAAG2gC,cAAc3gC,EAAG,UAAU2hC,MAC9B3hC,EAAG2B,YAAY3B,EAAG4B,WAAYggC,EAAQn8B,SACtCzF,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoB7E,EAAG8E,QAC1D9E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG0E,eAAgB1E,EAAG2E,eACtD3E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG4E,eAAgB5E,EAAG2E,eAElDjrG,aAAiBswG,UACnBhK,EAAGiF,WACDjF,EAAG4B,WACH,EACA5B,EAAGkF,KACHlF,EAAGkF,KACHxrG,EAAM+K,MACN/K,EAAMgL,OACN,EACAs7F,EAAGwJ,cACH,IAAI/hG,WAAW/N,EAAMjC,OAGvBuoG,EAAGiF,WACDjF,EAAG4B,WACH,EACA5B,EAAGkF,KACHlF,EAAGkF,KACHlF,EAAGwJ,cACH9vG,GAKJsmG,EAAGwC,UAAUo/B,EAAQnC,SAAUkC,UAC1B,GAAIhqI,MAAMC,QAAQ8B,GACvB,OAAQA,EAAMlD,QACZ,KAAK,EAEH,YADAwpG,EAAGwhC,UAAUI,EAAQnC,SAAU/lI,EAAM,GAAIA,EAAM,IAEjD,KAAK,EAEH,YADAsmG,EAAG6hC,UAAUD,EAAQnC,SAAU/lI,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAE3D,KAAK,EAQH,YAPAsmG,EAAG8hC,UACDF,EAAQnC,SACR/lI,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IAGV,QACE,WAEsB,iBAAVA,GAChBsmG,EAAGyhC,UAAUG,EAAQnC,SAAU/lI,EAEvC,GACA,ECpaO,MAAMqoI,GAAiB,CAC5BC,kBAAmB,qBACnBC,uBAAwB,wBACxBC,KAAM,SACNC,KAAM,SACNpkG,WAAY,eACZC,SAAU,aACVokG,iBAAkB,mBAClBC,YAAa,eACbC,cAAe,kBAQJC,GJAgB,KIAhBA,GJMiB,KINjBA,GJYe,KIZfA,GJkBQ,KI4CfC,GAAc,CAAE,EAMtB,SAASC,GAAwBxlI,GAC/B,MAAO,UAAYA,CACrB,CAEA,IAAIylI,GAA4B,EAehC,SAASC,GAAmB1lI,GAC1B,IAAI2lI,EAAYJ,GAAYvlI,GAC5B,IAAK2lI,EAAW,CACd,MAAM/9H,EAASE,SAASC,cAAc,UACtCH,EAAOJ,MAAQ,EACfI,EAAOH,OAAS,EAChBG,EAAOY,MAAMwjC,SAAW,WACxBpkC,EAAOY,MAAM4xC,KAAO,IACpB,MAAMhyC,EJ5DH,SAAoBR,EAAQi8H,GACjCA,EAAazkI,OAAO2C,OAClB,CACEgiI,uBAAuB,EACvB53B,WAAW/lG,IAEby9H,GAEF,MAAMhlI,EAAK4hI,GAAYlnI,OACvB,IAAK,IAAIU,EAAI,EAAGA,EAAI4E,IAAM5E,EACxB,IACE,MAAMmO,EAAUR,EAAOI,WAAWy4H,GAAYxmI,GAAI4pI,GAClD,GAAIz7H,EACF,QAER,CAAM,MAEN,CAEE,OAAO,IACT,CIwCoBJ,CAAWJ,GAC3B+9H,EAAY,CAACC,MAAO,EAAGx9H,WACvBm9H,GAAYvlI,GAAO2lI,CACvB,CAGE,OADAA,EAAUC,OAAS,EACZD,EAAUv9H,OACnB,CAwJA,MAAMy9H,WAAoBrtI,EAIxB,WAAAC,CAAYuK,GACVrF,QACAqF,EAAUA,GAAW,CAAE,EAGvBtK,KAAKotI,6BAA+BptI,KAAKqtI,uBAAuBnmI,KAAKlH,MAGrEA,KAAKstI,iCACHttI,KAAKutI,2BAA2BrmI,KAAKlH,MAMvCA,KAAKwtI,gBAAkBljI,EAAQmjI,eAC3BX,GAAwBxiI,EAAQmjI,gBArMxC,WACE,MAAMnmI,EAAM,UAAYylI,GAExB,OADAA,IAA6B,EACtBzlI,CACT,CAkMQomI,GAMJ1tI,KAAKsqG,IAAM0iC,GAAmBhtI,KAAKwtI,iBAMnCxtI,KAAK2tI,aAAe,CAAE,EAMtB3tI,KAAK4tI,gBAAkB,CAAE,EAMzB5tI,KAAK6tI,gBAAkB,KAMvB7tI,KAAK8tI,qBAAsB,EAE3B,MAAM5+H,EAASlP,KAAKsqG,IAAIp7F,OAExBA,EAAO5J,iBACLsjI,GACA5oI,KAAKotI,8BAEPl+H,EAAO5J,iBACLsjI,GACA5oI,KAAKstI,kCAOPttI,KAAK+tI,oB1LzVA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G0L+VrB/tI,KAAKguI,mB1L/VA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G0LqWrBhuI,KAAKiuI,SpD9XA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GoDoYnDjuI,KAAKkuI,2BAA6B,CAAE,EAMpCluI,KAAKmuI,0BAA4B,CAAE,EAQnCnuI,KAAK4pI,UAAY,GACbt/H,EAAQu/H,UACV7pI,KAAKouI,YAAY9jI,EAAQu/H,UAU3B7pI,KAAKquI,mBAAqB/jI,EAAQgkI,cAC9BhkI,EAAQgkI,cAAcn9G,KACnB7mB,GACC,IAAIu+H,GAAwB,CAC1BC,aAAc9oI,KAAKsqG,IACnB0+B,WAAY1+H,EAAQ0+H,WACpBt7B,aAAcpjG,EAAQojG,aACtBE,eAAgBtjG,EAAQsjG,eACxBi8B,SAAUv/H,EAAQu/H,aAGxB,CAAC,IAAIhB,GAAwB,CAACC,aAAc9oI,KAAKsqG,OAMrDtqG,KAAKuuI,qBAAuB,KAM5BvuI,KAAK8jD,WAAa3jB,KAAKC,KAC3B,CAKE,WAAAguG,CAAYvE,GACV7pI,KAAK4pI,UAAY,GACjB5pI,KAAKwuI,YAAY3E,EACrB,CAKE,WAAA2E,CAAY3E,GACV,IAAK,MAAMz0H,KAAQy0H,EACjB7pI,KAAK4pI,UAAUjkI,KAAK,CAClByP,KAAMA,EACNrR,MAAO8lI,EAASz0H,IAGxB,CAME,qBAAAq5H,CAAsBhB,GACpB,OAAOztI,KAAKwtI,kBAAoBV,GAAwBW,EAC5D,CAQE,YAAA75B,CAAax+F,GACX,GAAIA,KAAQpV,KAAK4tI,gBACf,OAAO5tI,KAAK4tI,gBAAgBx4H,GAE9B,MAAMrT,EAAY/B,KAAKsqG,IAAIsJ,aAAax+F,GAExC,OADApV,KAAK4tI,gBAAgBx4H,GAAQrT,EACtBA,CACX,CAQE,UAAAmpG,CAAWt1F,GACT,MAAMy0F,EAAKrqG,KAAKsqG,IACVokC,EAAYnmI,EAAOqN,GACzB,IAAI+4H,EAAc3uI,KAAK2tI,aAAae,GACpC,IAAKC,EAAa,CAEhBA,EAAc,CACZ/4H,OAAQA,EACRg5H,YAHkBvkC,EAAGY,gBAKvBjrG,KAAK2tI,aAAae,GAAaC,CACrC,CACItkC,EAAGa,WAAWt1F,EAAOwd,UAAWu7G,EAAYC,YAChD,CAOE,eAAAC,CAAgBj5H,GACd,MAAMy0F,EAAKrqG,KAAKsqG,IAChBtqG,KAAKkrG,WAAWt1F,GAChBy0F,EAAGgB,WAAWz1F,EAAOwd,UAAWxd,EAAO5K,WAAY4K,EAAO8yH,WAC9D,CAKE,YAAAoG,CAAaC,GACX,MAAML,EAAYnmI,EAAOwmI,UAElB/uI,KAAK2tI,aAAae,EAC7B,CAME,eAAAvuI,GACE,MAAM+O,EAASlP,KAAKsqG,IAAIp7F,OACxBA,EAAO5I,oBACLsiI,GACA5oI,KAAKotI,8BAEPl+H,EAAO5I,oBACLsiI,GACA5oI,KAAKstI,kCA7XX,SAAuBhmI,GACrB,MAAM2lI,EAAYJ,GAAYvlI,GAC9B,IAAK2lI,EACH,OAIF,GADAA,EAAUC,OAAS,EACfD,EAAUC,MAAQ,EACpB,OAGF,MAAM7iC,EAAK4iC,EAAUv9H,QACf3N,EAAYsoG,EAAGuJ,aAAa,sBAC9B7xG,GACFA,EAAUitI,cAEZ,MAAM9/H,EAASm7F,EAAGn7F,OAClBA,EAAOJ,MAAQ,EACfI,EAAOH,OAAS,SAET89H,GAAYvlI,EACrB,CA2WImI,CAAczP,KAAKwtI,wBAEZxtI,KAAKsqG,GAChB,CAUE,WAAA2kC,CAAYvuG,EAAYwuG,EAAmBC,GACzC,MAAM9kC,EAAKrqG,KAAKsqG,IACVp7F,EAASlP,KAAKovI,YACdp8H,EAAO0tB,EAAW1tB,KAClB2pB,EAAa+D,EAAW/D,WAG5BztB,EAAOJ,QAAUkE,EAAK,GAAK2pB,GAC3BztB,EAAOH,SAAWiE,EAAK,GAAK2pB,IAE5BztB,EAAOJ,MAAQkE,EAAK,GAAK2pB,EACzBztB,EAAOH,OAASiE,EAAK,GAAK2pB,EAC1BztB,EAAOY,MAAMhB,MAAQkE,EAAK,GAAK,KAC/B9D,EAAOY,MAAMf,OAASiE,EAAK,GAAK,MAIlC,IAAK,IAAIzR,EAAIvB,KAAKquI,mBAAmBxtI,OAAS,EAAGU,GAAK,EAAGA,IACvDvB,KAAKquI,mBAAmB9sI,GAAG0oI,KAAKvpG,GAGlC2pE,EAAG2B,YAAY3B,EAAG4B,WAAY,MAE9B5B,EAAGihC,WAAW,EAAK,EAAK,EAAK,GAC7BjhC,EAAGglC,WAAW,EAAK,GACnBhlC,EAAGkhC,WAAW,GACdlhC,EAAGhmG,MAAMgmG,EAAGgE,iBAAmBhE,EAAGiE,kBAElCjE,EAAGuG,OAAOvG,EAAGohC,OACbphC,EAAGqhC,UAAUrhC,EAAGshC,IAAKuD,EAAoB7kC,EAAGilC,KAAOjlC,EAAGuhC,qBAClDuD,GACF9kC,EAAGuG,OAAOvG,EAAGmhC,YACbnhC,EAAGklC,UAAUllC,EAAGmlC,SAEhBnlC,EAAGt/E,QAAQs/E,EAAGmhC,WAEpB,CAME,eAAAiE,CAAgBC,EAAa5/B,GAC3B,MAAMzF,EAAKrqG,KAAKgqI,QAChB3/B,EAAGoF,gBAAgBpF,EAAGqF,YAAaggC,GAC/B5/B,GACFzF,EAAGsF,qBACDtF,EAAGqF,YACHrF,EAAGuF,kBACHvF,EAAG4B,WACH6D,EACA,EAGR,CAKE,sBAAA6/B,GACE,MAAMtlC,EAAKrqG,KAAKgqI,QACV0F,EAAc1vI,KAAKquI,mBAAmB,GAAGjE,iBAC/C//B,EAAGoF,gBAAgBpF,EAAGqF,YAAaggC,GACnC,MAAM5/B,EAAU9vG,KAAKquI,mBAAmB,GAAGtE,yBAC3C1/B,EAAGsF,qBACDtF,EAAGqF,YACHrF,EAAGuF,kBACHvF,EAAG4B,WACH6D,EACA,EAEN,CAQE,WAAA9D,CAAY8D,EAAS8/B,EAAMC,GACzB,MAAMxlC,EAAKrqG,KAAKsqG,IAChBD,EAAG2gC,cAAc3gC,EAAG4gC,SAAW2E,GAC/BvlC,EAAG2B,YAAY3B,EAAG4B,WAAY6D,GAC9BzF,EAAGwC,UAAU7sG,KAAK6qG,mBAAmBglC,GAAcD,EACvD,CAQE,aAAAE,CAAcl6H,EAAQm6H,EAAe/8H,GACnC,MAAMq3F,EAAKrqG,KAAKgqI,QAChBhqI,KAAKkrG,WAAWt1F,GAChB,MAAMhT,EAAQ5C,KAAKgwI,qBAAqBD,GACxC1lC,EAAG8B,wBAAwBvpG,GAC3BynG,EAAG+B,oBAAoBxpG,EAAOoQ,EAAMq3F,EAAGgC,OAAO,EAAO,EAAG,EAC5D,CAWE,yBAAA4jC,CACEvvG,EACAwvG,EACAhB,EACAC,GAEA,MAAM9kC,EAAKrqG,KAAKsqG,IACVt3F,EAAOk9H,EAAa/8H,UAE1Bk3F,EAAGoF,gBAAgBpF,EAAGqF,YAAawgC,EAAaC,kBAChD9lC,EAAGggC,iBAAiBhgC,EAAGigC,aAAc4F,EAAaE,kBAClD/lC,EAAG/W,SAAS,EAAG,EAAGtgF,EAAK,GAAIA,EAAK,IAChCq3F,EAAG2B,YAAY3B,EAAG4B,WAAYikC,EAAaG,cAC3ChmC,EAAGihC,WAAW,EAAK,EAAK,EAAK,GAC7BjhC,EAAGglC,WAAW,EAAK,GACnBhlC,EAAGkhC,WAAW,GACdlhC,EAAGhmG,MAAMgmG,EAAGgE,iBAAmBhE,EAAGiE,kBAClCjE,EAAGuG,OAAOvG,EAAGohC,OACbphC,EAAGqhC,UAAUrhC,EAAGshC,IAAKuD,EAAoB7kC,EAAGilC,KAAOjlC,EAAGuhC,qBAClDuD,GACF9kC,EAAGuG,OAAOvG,EAAGmhC,YACbnhC,EAAGklC,UAAUllC,EAAGmlC,SAEhBnlC,EAAGt/E,QAAQs/E,EAAGmhC,WAEpB,CAOE,YAAA8E,CAAarjI,EAAOtL,GAClB,MAAM0oG,EAAKrqG,KAAKsqG,IAChBtqG,KAAK4zG,aAAa,0BAElB,MAAM28B,EAAclmC,EAAGmmC,aAGjBC,EAAW9uI,EAAMsL,EACjByjI,EAHc,EAGEzjI,EACtBo9F,EAAGimC,aAAajmC,EAAG0C,UAAW0jC,EAAUF,EAAaG,EACzD,CAQE,YAAAC,CAAajwG,EAAYoqG,EAAYC,GAEnC,IAAK,IAAIxpI,EAAI,EAAG4E,EAAKnG,KAAKquI,mBAAmBxtI,OAAQU,EAAI4E,EAAI5E,IACvDA,IAAM4E,EAAK,EACbnG,KAAKquI,mBAAmB9sI,GAAGqC,MACzB88B,EACA,KACAoqG,EACAC,GAGF/qI,KAAKquI,mBAAmB9sI,GAAGqC,MACzB88B,EACA1gC,KAAKquI,mBAAmB9sI,EAAI,GAItC,CAKE,SAAA6tI,GACE,OAAyCpvI,KAAKsqG,IAAU,MAC5D,CAME,KAAA0/B,GACE,OAAOhqI,KAAKsqG,GAChB,CAME,eAAAsmC,CAAgBlwG,GACd,MAAM1tB,EAAO0tB,EAAW1tB,KAClBkG,EAAWwnB,EAAWsH,UAAU9uB,SAChCyjB,EAAa+D,EAAW/D,WAE9B38B,KAAK6wI,qBACHzE,GAAeG,KACkB,MAAhCpsG,KAAKC,MAAQpgC,KAAK8jD,aAErB9jD,KAAK6wI,qBAAqBzE,GAAeI,KAAM9rG,EAAWsH,UAAU2E,MACpE3sC,KAAK6wI,qBACHzE,GAAehkG,WACf1H,EAAWsH,UAAU/uB,YAEvBjZ,KAAK6wI,qBAAqBzE,GAAeM,YAAa/vG,GACtD38B,KAAK8wI,oBAAoB1E,GAAeK,iBAAkB,CACxDz5H,EAAK,GACLA,EAAK,KAEPhT,KAAK6wI,qBAAqBzE,GAAe/jG,SAAUnvB,EACvD,CAME,wBAAA63H,CAAyB5/F,GACvB,MAAM6/F,EAAMhxI,KAAK6qG,mBAAmBuhC,GAAeO,eACnD3sI,KAAKgqI,QAAQn9B,UAAUmkC,EAAK7/F,EAAU,EAAI,GAGtCA,GACFnxC,KAAK6wI,qBAAqBzE,GAAeM,YAAa,GAE5D,CAME,aAAAX,CAAcrrG,GACZ,MAAM2pE,EAAKrqG,KAAKsqG,IAEhB,IAAIvmG,EACAioI,EAAc,EAClBhsI,KAAK4pI,UAAU9+H,SAASmhI,IAOtB,GANAloI,EAC2B,mBAAlBkoI,EAAQloI,MACXkoI,EAAQloI,MAAM28B,GACdurG,EAAQloI,MAIZA,aAAiB2N,mBACjB3N,aAAiBo5B,kBACjBp5B,aAAiBswG,WACjBtwG,aAAiBktI,aACjB,CAEIltI,aAAiBktI,eAAiBhF,EAAQn8B,SAC5Cm8B,EAAQiF,eAAY1qI,EACpBylI,EAAQn8B,QAAU/rG,GACRkoI,EAAQn8B,UAClBm8B,EAAQiF,eAAY1qI,EACpBylI,EAAQn8B,QAAUzF,EAAGwE,iBAEvB7uG,KAAKgsG,YAAYigC,EAAQn8B,QAASk8B,EAAaC,EAAQ72H,MACvDi1F,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoB7E,EAAG8E,QAC1D9E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG0E,eAAgB1E,EAAG2E,eACtD3E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG4E,eAAgB5E,EAAG2E,eAEtD,MAAMmiC,IACFptI,aAAiBo5B,mBACa,EAAQiB,SAEtCr6B,aAAiBktI,eACnBE,GACAlF,EAAQiF,YAAcntI,IAEtBkoI,EAAQiF,UAAYntI,EACpBsmG,EAAGiF,WACDjF,EAAG4B,WACH,EACA5B,EAAGkF,KACHlF,EAAGkF,KACHlF,EAAGwJ,cACH9vG,IAGJioI,GACR,MAAa,GAAIhqI,MAAMC,QAAQ8B,IAA2B,IAAjBA,EAAMlD,OACvCb,KAAKoxI,sBACHnF,EAAQ72H,KACR0zF,GAAc9oG,KAAKiuI,SAAUlqI,SAE1B,GAAI/B,MAAMC,QAAQ8B,IAAUA,EAAMlD,QAAU,EACjD,OAAQkD,EAAMlD,QACZ,KAAK,EAMH,YALAwpG,EAAGwhC,UACD7rI,KAAK6qG,mBAAmBohC,EAAQ72H,MAChCrR,EAAM,GACNA,EAAM,IAGV,KAAK,EAOH,YANAsmG,EAAG6hC,UACDlsI,KAAK6qG,mBAAmBohC,EAAQ72H,MAChCrR,EAAM,GACNA,EAAM,GACNA,EAAM,IAGV,KAAK,EAQH,YAPAsmG,EAAG8hC,UACDnsI,KAAK6qG,mBAAmBohC,EAAQ72H,MAChCrR,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IAGV,QACE,WAEsB,iBAAVA,GAChBsmG,EAAGyhC,UAAU9rI,KAAK6qG,mBAAmBohC,EAAQ72H,MAAOrR,EAC5D,GAEA,CAQE,UAAAmoG,CAAWuB,EAAS/sE,GACP1gC,KAAKsqG,IACb4B,WAAWuB,GACdztG,KAAK6tI,gBAAkBpgC,EACnB/sE,IACF1gC,KAAK4wI,gBAAgBlwG,GACrB1gC,KAAK+rI,cAAcrrG,GAEzB,CAWE,aAAAysE,CAAcpjG,EAAQrF,GACpB,MAAM2lG,EAAKrqG,KAAKsqG,IACV2C,EAAS5C,EAAG2C,aAAatoG,GAG/B,OAFA2lG,EAAG6C,aAAaD,EAAQljG,GACxBsgG,EAAG8C,cAAcF,GACVA,CACX,CAQE,UAAAokC,CAAWC,EAAsBC,GAC/B,MAAMlnC,EAAKrqG,KAAKsqG,IAEVsD,EAAiB5tG,KAAKmtG,cAC1BmkC,EACAjnC,EAAGwD,iBAGCH,EAAe1tG,KAAKmtG,cACxBokC,EACAlnC,EAAGsD,eAGCF,EAAUpD,EAAGG,gBAKnB,GAJAH,EAAGyD,aAAaL,EAASG,GACzBvD,EAAGyD,aAAaL,EAASC,GACzBrD,EAAG0D,YAAYN,IAEVpD,EAAG+C,mBAAmBQ,EAAgBvD,EAAGgD,gBAAiB,CAC7D,MAAM7wE,EAAU,uCAAuC6tE,EAAGiD,iBACxDM,KAEF,MAAM,IAAIvlG,MAAMm0B,EACtB,CAGI,GAFA6tE,EAAGmnC,aAAa5jC,IAEXvD,EAAG+C,mBAAmBM,EAAcrD,EAAGgD,gBAAiB,CAC3D,MAAM7wE,EAAU,qCAAqC6tE,EAAGiD,iBACtDI,KAEF,MAAM,IAAIrlG,MAAMm0B,EACtB,CAGI,GAFA6tE,EAAGmnC,aAAa9jC,IAEXrD,EAAG2D,oBAAoBP,EAASpD,EAAG4D,aAAc,CACpD,MAAMzxE,EAAU,8BAA8B6tE,EAAG6D,kBAC/CT,KAEF,MAAM,IAAIplG,MAAMm0B,EACtB,CAEI,OAAOixE,CACX,CAOE,kBAAA5C,CAAmBz1F,GACjB,MAAMq8H,EAAalpI,EAAOvI,KAAK6tI,iBAQ/B,YAPoDrnI,IAAhDxG,KAAKkuI,2BAA2BuD,KAClCzxI,KAAKkuI,2BAA2BuD,GAAc,CAAE,QAEQjrI,IAAtDxG,KAAKkuI,2BAA2BuD,GAAYr8H,KAC9CpV,KAAKkuI,2BAA2BuD,GAAYr8H,GAC1CpV,KAAKsqG,IAAIO,mBAAmB7qG,KAAK6tI,gBAAiBz4H,IAE/CpV,KAAKkuI,2BAA2BuD,GAAYr8H,EACvD,CAOE,oBAAA46H,CAAqB56H,GACnB,MAAMq8H,EAAalpI,EAAOvI,KAAK6tI,iBAQ/B,YAPmDrnI,IAA/CxG,KAAKmuI,0BAA0BsD,KACjCzxI,KAAKmuI,0BAA0BsD,GAAc,CAAE,QAEQjrI,IAArDxG,KAAKmuI,0BAA0BsD,GAAYr8H,KAC7CpV,KAAKmuI,0BAA0BsD,GAAYr8H,GACzCpV,KAAKsqG,IAAII,kBAAkB1qG,KAAK6tI,gBAAiBz4H,IAE9CpV,KAAKmuI,0BAA0BsD,GAAYr8H,EACtD,CASE,uBAAAs8H,CAAwBhxG,EAAY3T,GAClC,MAAM/Z,EAAO0tB,EAAW1tB,KAClBkG,EAAWwnB,EAAWsH,UAAU9uB,SAChCD,EAAaynB,EAAWsH,UAAU/uB,WAClCD,EAAS0nB,EAAWsH,UAAUhvB,OAWpC,OAVA2a,GACE5G,EACA,EACA,EACA,GAAK9T,EAAajG,EAAK,IACvB,GAAKiG,EAAajG,EAAK,KACtBkG,GACAF,EAAO,IACPA,EAAO,IAEH+T,CACX,CAOE,oBAAA8jH,CAAqB5E,EAASloI,GAC5B/D,KAAKsqG,IAAIwhC,UAAU9rI,KAAK6qG,mBAAmBohC,GAAUloI,EACzD,CAOE,mBAAA+sI,CAAoB7E,EAASloI,GAC3B/D,KAAKsqG,IAAIqnC,WAAW3xI,KAAK6qG,mBAAmBohC,GAAUloI,EAC1D,CAOE,mBAAA6tI,CAAoB3F,EAASloI,GAC3B/D,KAAKsqG,IAAIqH,WAAW3xG,KAAK6qG,mBAAmBohC,GAAUloI,EAC1D,CAOE,qBAAAqtI,CAAsBnF,EAASloI,GAC7B/D,KAAKsqG,IAAIoC,iBAAiB1sG,KAAK6qG,mBAAmBohC,IAAU,EAAOloI,EACvE,CAYE,qBAAA8tI,CAAsBC,EAAY9+H,EAAMtO,EAAM4S,EAAQD,GACpD,MAAMyyH,EAAW9pI,KAAKgwI,qBAAqB8B,GAEvChI,EAAW,IAGf9pI,KAAKsqG,IAAI6B,wBAAwB29B,GACjC9pI,KAAKsqG,IAAI8B,oBAAoB09B,EAAU92H,EAAMtO,GAAM,EAAO4S,EAAQD,GACtE,CAQE,gBAAA06H,CAAiB5G,GACf,MAAM7zH,EA4GH,SAAiC6zH,GACtC,IAAI7zH,EAAS,EACb,IAAK,IAAI/V,EAAI,EAAGA,EAAI4pI,EAAWtqI,OAAQU,IAAK,CAC1C,MAAMywI,EAAO7G,EAAW5pI,GACxB+V,GAAU06H,EAAKh/H,KAAOi/H,GAAoBD,EAAKttI,KACnD,CACE,OAAO4S,CACT,CAnHmB46H,CAAwB/G,GACvC,IAAI9zH,EAAS,EACb,IAAK,IAAI9V,EAAI,EAAGA,EAAI4pI,EAAWtqI,OAAQU,IAAK,CAC1C,MAAMywI,EAAO7G,EAAW5pI,GACxBvB,KAAK6xI,sBACHG,EAAK58H,KACL48H,EAAKh/H,KACLg/H,EAAKttI,MJjgCQ,KIkgCb4S,EACAD,GAEFA,GAAU26H,EAAKh/H,KAAOi/H,GAAoBD,EAAKttI,KACrD,CACA,CAOE,sBAAA2oI,CAAuBxnI,GACrBxB,EAAMrE,KAAK2tI,cACX3tI,KAAK6tI,gBAAkB,KAEvBhoI,EAAMhB,gBACV,CAME,0BAAA0oI,GACEvtI,KAAK8tI,qBAAsB,CAC/B,CAME,kBAAAqE,GACE,OAAOnyI,KAAK8tI,mBAChB,CAaE,aAAAj/B,CAAc77F,EAAMlR,EAAMguG,EAAS59D,GACjC,MAAMm4D,EAAKrqG,KAAKsqG,IAChBwF,EAAUA,GAAWzF,EAAGwE,gBACxB,MAAMp/D,EAASyC,EAAUm4D,EAAGgF,QAAUhF,EAAG8E,OAEzC9E,EAAG2B,YAAY3B,EAAG4B,WAAY6D,GAE9BzF,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoBz/D,GACvD46D,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG+E,mBAAoB3/D,GACvD46D,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG0E,eAAgB1E,EAAG2E,eACtD3E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG4E,eAAgB5E,EAAG2E,eAEtD,MACMw7B,EAAiBngC,EAAGkF,KAEpB/tF,EAAS6oF,EAAGkF,KACZ7qG,EAAO2lG,EAAGwJ,cA6BhB,OA3BI/xG,aAAgBgQ,WAClBu4F,EAAGiF,WACDjF,EAAG4B,WARO,EAUVu+B,EACAx3H,EAAK,GACLA,EAAK,GAVM,EAYXwO,EACA9c,EACA5C,GAEOA,EACTuoG,EAAGiF,WAAWjF,EAAG4B,WAnBL,EAmBwBu+B,EAAgBhpH,EAAQ9c,EAAM5C,GAElEuoG,EAAGiF,WACDjF,EAAG4B,WAtBO,EAwBVu+B,EACAx3H,EAAK,GACLA,EAAK,GAxBM,EA0BXwO,EACA9c,EACA,MAGGorG,CACX,EAsBA,SAASmiC,GAAoBvtI,GAC3B,OAAQA,GACN,KAAKkoI,GACH,OAAO96H,WAAWghG,kBACpB,KAAK85B,GACH,OAAOwF,YAAYt/B,kBACrB,KAAK85B,GACH,OAAOjE,YAAY71B,kBAErB,QACE,OAAO9gG,aAAa8gG,kBAE1B,CCzqCA,MAAMu/B,WAA2B70B,GAK/B,WAAAz9G,CAAYy5C,EAAOlvC,GACjBrF,MAAMu0C,GAENlvC,EAAUA,GAAW,CAAE,EAQvBtK,KAAKsyI,uB3LhBA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G2LqBrBtyI,KAAKuyI,eAAiBjoI,EAAQgkI,cAK9BtuI,KAAK4pI,UAAYt/H,EAAQu/H,SAMzB7pI,KAAKwyI,OAELxyI,KAAKyyI,cAAgB,KACnBzyI,KAAK0yI,aACL1yI,KAAK2yI,cAAc,EAGrBn5F,EAAM9vC,kBAAkB28C,GAAmBrmD,KAAKyyI,eAEhDzyI,KAAK4yI,wBAA0B5yI,KAAK4yI,wBAAwB1rI,KAAKlH,MACjEA,KAAK6yI,yBAA2B7yI,KAAK6yI,yBAAyB3rI,KAAKlH,KACvE,CAOE,uBAAA4yI,CAAwBljI,EAASgxB,GAC/B,MAAM8Y,EAAQx5C,KAAKi+G,WACnB,GAAIzkE,EAAM/yC,YAAY4iD,IAA6B,CACjD,MAAMxjD,EAAQ,IAAI4uE,GAChBprB,QACA7iD,EACAk6B,EACAhxB,GAEF8pC,EAAM5zC,cAAcC,EAC1B,CACA,CAOE,wBAAAgtI,CAAyBnjI,EAASgxB,GAChC,MAAM8Y,EAAQx5C,KAAKi+G,WACnB,GAAIzkE,EAAM/yC,YAAY4iD,IAA8B,CAClD,MAAMxjD,EAAQ,IAAI4uE,GAChBprB,QACA7iD,EACAk6B,EACAhxB,GAEF8pC,EAAM5zC,cAAcC,EAC1B,CACA,CAME,KAAAitI,CAAMxoI,GACJtK,KAAK4pI,UAAYt/H,EAAQu/H,SACrB7pI,KAAKwyI,QACPxyI,KAAKwyI,OAAOpE,YAAYpuI,KAAK4pI,UAEnC,CAKE,YAAA+I,GACM3yI,KAAKwyI,SACPxyI,KAAKwyI,OAAOtyI,iBACLF,KAAKwyI,OAElB,CAQE,YAAA5nF,CAAalqB,GACX,GAAI1gC,KAAKi+G,WAAWl0D,kBAAmB,CACrC,IAEI9R,EAFA86F,GAAiB,EACjBC,GAAgB,EAEpB,IAAK,IAAIzxI,EAAI,EAAG4E,EAAKu6B,EAAW2pB,iBAAiBxpD,OAAQU,EAAI4E,EAAI5E,IAAK,CACpE,MAAMi4C,EAAQ9Y,EAAW2pB,iBAAiB9oD,GAAGi4C,MACvCsvB,EAAWtvB,EAAMmR,cACvB,KAAMme,aAAoBupE,IAAqB,CAC7CU,GAAiB,EACjB,QACV,CACQ,MAAMj0B,EAAiBtlE,EAAMsN,eAM7B,IALIisF,GAAkBj0B,IAAmB7mE,KACvC+6F,GAAe,EACfD,GAAiB,GAEnB96F,EAAY6mE,EACRh2C,IAAa9oE,KACf,KAEV,CAEM,MAAMytI,EACJ,OAAS/sG,EAAW08C,MAAQ,UAAY41D,EAGvChzI,KAAKwyI,QACLxyI,KAAKwyI,OAAO/D,sBAAsBhB,KACnCztI,KAAKwyI,OAAOL,uBAEZnyI,KAAK2yI,eAEL3yI,KAAKwyI,OAAS,IAAIrF,GAAY,CAC5BmB,cAAetuI,KAAKuyI,eACpB1I,SAAU7pI,KAAK4pI,UACf6D,eAAgBA,IAGdx1F,IACFj4C,KAAKwyI,OAAOpD,YAAYn3F,UAAYA,GAGtCj4C,KAAKizI,qBAEb,CAEI,OAAOjzI,KAAKkzI,qBAAqBxyG,EACrC,CAKE,kBAAAuyG,GAAqB,CAQrB,oBAAAC,CAAqBxyG,GACnB,OAAO,CACX,CAKE,UAAAgyG,GAAa,CAMb,eAAAvyI,GACEH,KAAK0yI,aACL1yI,KAAK2yI,eACL3yI,KAAKi+G,YAAYt0G,qBACf08C,GACArmD,KAAKyyI,eAEPxtI,MAAM9E,iBACV,CAQE,oBAAAu/G,CAAqBh7G,EAAMgL,EAASgxB,GAClC,MAAM8Y,EAAQx5C,KAAKi+G,WACnB,GAAIzkE,EAAM/yC,YAAY/B,GAAO,CAC3BivB,GACE3zB,KAAKsyI,uBACL,EACA,EACA5xG,EAAW/D,YACV+D,EAAW/D,WACZ,EACA,GACC+D,EAAW1tB,KAAK,IAGnB,MAAMnN,EAAQ,IAAI4uE,GAChB/vE,EACA1E,KAAKsyI,uBACL5xG,EACAhxB,GAEF8pC,EAAM5zC,cAAcC,EAC1B,CACA,CAOE,SAAA85G,CAAUjwG,EAASgxB,GACjB1gC,KAAK0/G,qBAAqBr2D,GAA2B35C,EAASgxB,EAClE,CAOE,UAAAk/E,CAAWlwG,EAASgxB,GAClB1gC,KAAK0/G,qBAAqBr2D,GAA4B35C,EAASgxB,EACnE,EC3PO,MAAMyyG,GAES,iBAFTA,GAGU,sBAHVA,GAIW,uBCtBxB,MAAMC,GAKJ,WAAArzI,CAAYqV,EAAMtT,GAChB9B,KAAKoV,KAAOA,EACZpV,KAAK8B,KAAOA,EAMZ9B,KAAKqzI,SAAW,IACpB,CAME,UAAAhD,CAAWhmC,GACT,IAAKrqG,KAAKqzI,SAAU,CAClB,MAAMvjC,EAAUzF,EAAGwE,gBACnBxE,EAAG2B,YAAY3B,EAAG4B,WAAY6D,GAC9BzF,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG0E,eAAgB1E,EAAG2E,eACtD3E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG4E,eAAgB5E,EAAG2E,eACtD3E,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG6E,mBAAoB7E,EAAGgF,SAC1DhF,EAAGyE,cAAczE,EAAG4B,WAAY5B,EAAG+E,mBAAoB/E,EAAGgF,SAC1DhF,EAAGiF,WACDjF,EAAG4B,WACH,EACA5B,EAAGkF,KACHvvG,KAAK8B,KAAKjB,OAAS,EACnB,EACA,EACAwpG,EAAGkF,KACHlF,EAAGwJ,cACH7zG,KAAK8B,MAEP9B,KAAKqzI,SAAWvjC,CACtB,CACI,OAAO9vG,KAAKqzI,QAChB,CAKE,OAAOhpC,GACDrqG,KAAKqzI,UACPhpC,EAAGipC,cAActzI,KAAKqzI,UAExBrzI,KAAKqzI,SAAW,IACpB,ECtBO,SAASE,GAAa9hF,GAC3B,MAAM/F,EAAI+F,EAAE1gC,WACZ,OAAO26B,EAAEhmD,SAAS,KAAOgmD,EAAIA,EAAI,IACnC,CAOO,SAAS8nF,GAAYnpI,GAC1B,GAAIA,EAAMxJ,OAAS,GAAKwJ,EAAMxJ,OAAS,EACrC,MAAM,IAAIwH,MACR,kEAGJ,MAAO,MAAMgC,EAAMxJ,UAAUwJ,EAAM8mB,IAAIoiH,IAAczzH,KAAK,QAC5D,CASO,SAAS2zH,GAAYhjF,GAC1B,MAAMpmD,EAAQynD,GAAQrB,GAChBG,EAAQvmD,EAAMxJ,OAAS,EAAIwJ,EAAM,GAAK,EAC5C,OAAOmpI,GAAY,CAACnpI,EAAM,GAAK,IAAKA,EAAM,GAAK,IAAKA,EAAM,GAAK,IAAKumD,GACtE,CAOO,SAAS8iF,GAAW1gI,GAEzB,OAAOwgI,GADOxhF,GAAOh/C,GAEvB,CAGA,MAAM2gI,GAAmB,CAAE,EAC3B,IAAIC,GAAuB,EAOpB,SAASC,GAA0BC,GAIxC,OAHMA,KAAUH,KACdA,GAAiBG,GAAUF,MAEtBD,GAAiBG,EAC1B,CASO,SAASC,GAAaD,GAC3B,OAAOP,GAAaM,GAA0BC,GAChD,CAOO,SAASE,GAAuBC,GACrC,MAAO,SAAWA,CACpB,CAwCO,SAASC,KACd,MAAO,CACL1gF,UAAW,CAAE,EACbh/C,WAAY,CAAE,EACd2/H,UAAW,CAAE,EACbjhC,UAAW,EACXz/C,WAAW,EACXC,cAAc,EAElB,CAEA,MAAM0gF,GAAsB,eAEfC,GAAwB,oBAExBC,GAA2B,YAC3BC,GAA8B,eAK9BC,IAA+B,QAkBrC,SAASx7E,GACdnF,EACAnvD,EACA6oE,EACAknE,GAGA,OAAOC,GADY9gF,GAAMC,EAASnvD,EAAM6oE,GACb7oE,EAAM+vI,EACnC,CAMA,SAASE,GAAejvH,GACtB,MAAO,CAAChW,EAAS+oD,EAAY/zD,KAC3B,MAAM7D,EAAS43D,EAAWl5C,KAAK1e,OACzB0e,EAAO,IAAIvd,MAAMnB,GACvB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,IAAUU,EAC5Bge,EAAKhe,GAAKmzI,GAAQj8E,EAAWl5C,KAAKhe,GAAImD,EAAMgL,GAE9C,OAAOgW,EAAOnG,EAAM7P,EAAQ,CAEhC,CAKA,MAAMklI,GAAY,CAChB,CAACxgF,GAAIC,KAAM,CAAC3kD,EAAS+oD,KACnB,MACMo8E,EAD6Cp8E,EAAWl5C,KAAK,GACb,MAQtD,OAPmBs1H,KAAYnlI,EAAQ8E,aAErC9E,EAAQ8E,WAAWqgI,GAAY,CAC7Bz/H,KAAMy/H,EACNnwI,KAAM+zD,EAAW/zD,OAGd,UAAYmwI,CAAQ,EAE7B,CAACzgF,GAAIuC,IAAMjnD,IACTA,EAAQ+jD,WAAY,EACb,KAAO6gF,IAEhB,CAAClgF,GAAII,cAAgB9kD,IACnBA,EAAQgkD,cAAe,EAChB,KAAO6gF,IAEhB,CAACngF,GAAIK,YAAa,IAAM,oBACxB,CAACL,GAAIE,KAAM,CAAC5kD,EAAS+oD,KACnB,MACMq8E,EAD6Cr8E,EAAWl5C,KAAK,GACd,MAQrD,OAPmBu1H,KAAWplI,EAAQ8jD,YAEpC9jD,EAAQ8jD,UAAUshF,GAAW,CAC3B1/H,KAAM0/H,EACNpwI,KAAM+zD,EAAW/zD,OAGdsvI,GAAuBc,EAAQ,EAExC,CAAC1gF,GAAI2C,KAAM,CAACrnD,EAAS+oD,KACnB,MACMo8E,EAD6Cp8E,EAAWl5C,KAAK,GACb,MAQtD,OAPmBs1H,KAAYnlI,EAAQ8E,aAErC9E,EAAQ8E,WAAWqgI,GAAY,CAC7Bz/H,KAAMy/H,EACNnwI,KAAM+zD,EAAW/zD,OAGd,WAAWmwI,QAAetB,GAAaiB,MAAwB,EAExE,CAACpgF,GAAIS,YAAa,IAAM,eACxB,CAACT,GAAI7Y,MAAO,IAAM,SAClB,CAAC6Y,GAAIU,MAAO,IAAM,SAClB,CAACV,GAAIM,KAAMigF,IAAgBI,GAAiB,IAAIA,EAAaj1H,KAAK,aAClE,CAACs0C,GAAIO,KAAMggF,IAAgBI,GAAiB,IAAIA,EAAaj1H,KAAK,aAClE,CAACs0C,GAAIQ,KAAM+/E,IAAe,EAAE5wI,KAAW,KAAKA,OAC5C,CAACqwD,GAAIW,OAAQ4/E,IACX,EAAEK,EAAYC,KAAiB,IAAID,QAAiBC,OAEtD,CAAC7gF,GAAIY,UAAW2/E,IACd,EAAEK,EAAYC,KAAiB,IAAID,QAAiBC,OAEtD,CAAC7gF,GAAIa,aAAc0/E,IACjB,EAAEK,EAAYC,KAAiB,IAAID,OAAgBC,OAErD,CAAC7gF,GAAIc,sBAAuBy/E,IAC1B,EAAEK,EAAYC,KAAiB,IAAID,QAAiBC,OAEtD,CAAC7gF,GAAIe,UAAWw/E,IACd,EAAEK,EAAYC,KAAiB,IAAID,OAAgBC,OAErD,CAAC7gF,GAAIgB,mBAAoBu/E,IACvB,EAAEK,EAAYC,KAAiB,IAAID,QAAiBC,OAEtD,CAAC7gF,GAAIiB,UAAWs/E,IACbI,GAAiB,IAAIA,EAAaj1H,KAAK,YAE1C,CAACs0C,GAAIkB,QAASq/E,IACZ,EAAEK,EAAYC,KAAiB,IAAID,OAAgBC,OAErD,CAAC7gF,GAAImB,KAAMo/E,IAAgBI,GAAiB,IAAIA,EAAaj1H,KAAK,YAClE,CAACs0C,GAAIoB,UAAWm/E,IACd,EAAEK,EAAYC,KAAiB,IAAID,OAAgBC,OAErD,CAAC7gF,GAAIqB,OAAQk/E,IACX,EAAE5wI,EAAOgU,EAAKC,KAAS,SAASjU,MAAUgU,MAAQC,OAEpD,CAACo8C,GAAIsB,KAAMi/E,IAAe,EAAE5wI,EAAOuZ,KAAY,OAAOvZ,MAAUuZ,OAChE,CAAC82C,GAAIuB,KAAMg/E,IAAe,EAAE5wI,EAAOimC,KAAW,OAAOjmC,MAAUimC,OAC/D,CAACoqB,GAAIwB,KAAM++E,IAAe,EAAE5wI,KAAW,OAAOA,OAC9C,CAACqwD,GAAIyB,OAAQ8+E,IAAe,EAAE5wI,KAAW,SAASA,OAClD,CAACqwD,GAAI0B,MAAO6+E,IAAe,EAAE5wI,KAAW,QAAQA,OAChD,CAACqwD,GAAI2B,OAAQ4+E,IAAe,EAAE5wI,KAAW,SAASA,aAClD,CAACqwD,GAAI4B,KAAM2+E,IAAe,EAAE5wI,KAAW,OAAOA,OAC9C,CAACqwD,GAAI6B,KAAM0+E,IAAe,EAAE5wI,KAAW,OAAOA,OAC9C,CAACqwD,GAAI8B,MAAOy+E,IAAe,EAAEK,EAAYC,UAChBzuI,IAAhByuI,EACH,QAAQD,MAAeC,KACvB,QAAQD,OAEd,CAAC5gF,GAAI+B,MAAOw+E,IAAe,EAAE5wI,KAAW,QAAQA,OAChD,CAACqwD,GAAIgC,OAAQu+E,IAAgBI,IAC3B,MAAMtvH,EAAQsvH,EAAa,GACrBr9E,EAAWq9E,EAAaA,EAAal0I,OAAS,GACpD,IAAI4oC,EAAS,KACb,IAAK,IAAIloC,EAAIwzI,EAAal0I,OAAS,EAAGU,GAAK,EAAGA,GAAK,EAAG,CAGpDkoC,EAAS,IAAIhkB,QAFCsvH,EAAaxzI,QACZwzI,EAAaxzI,EAAI,QACgBkoC,GAAUiuB,IAChE,CACI,OAAOjuB,CAAM,IAEf,CAAC2qB,GAAIiC,SAAUs+E,IACb,EAAE5wI,EAAOgU,EAAKC,KAAS,IAAIjU,QAAYgU,QAAUhU,QAAYiU,OAE/D,CAACo8C,GAAIkC,aAAcq+E,IAAe,EAAEO,EAAUzvH,KAAUsvH,MACtD,IAAItrG,EAAS,GACb,IAAK,IAAIloC,EAAI,EAAGA,EAAIwzI,EAAal0I,OAAS,EAAGU,GAAK,EAAG,CACnD,MAAM4zI,EAAQJ,EAAaxzI,GACrB+4D,EAAU7wB,GAAUsrG,EAAaxzI,EAAI,GACrC6zI,EAAQL,EAAaxzI,EAAI,GACzBi5D,EAAUu6E,EAAaxzI,EAAI,GACjC,IAAIwnC,EAEFA,EADEmsG,IAAa3B,GAAa,GACpB,IAAI9tH,OAAW0vH,SAAaC,OAAWD,KAEvC,QAAQD,OAAczvH,OAAW0vH,qBAAyBD,OAAcE,OAAWD,aAE7F1rG,EAAS,OAAO6wB,MAAYE,YAAkBzxB,eACpD,CACI,OAAOU,CAAM,IAEf,CAAC2qB,GAAIoC,MAAOm+E,IAAgBI,IAC1B,MAAMr9E,EAAWq9E,EAAaA,EAAal0I,OAAS,GACpD,IAAI4oC,EAAS,KACb,IAAK,IAAIloC,EAAIwzI,EAAal0I,OAAS,EAAGU,GAAK,EAAGA,GAAK,EAAG,CAGpDkoC,EAAS,IAFSsrG,EAAaxzI,QAChBwzI,EAAaxzI,EAAI,QACQkoC,GAAUiuB,IACxD,CACI,OAAOjuB,CAAM,IAEf,CAAC2qB,GAAIqC,IAAKk+E,IAAe,EAAEr0I,KAAWD,GAAWqP,KAC/C,MAAM2lI,EA3UV,SAAqC/hF,EAAU5jD,GAC7C,MAAO,YAAY4jD,KAAY5sD,OAAOC,KAAK+I,EAAQykI,WAAWtzI,QAChE,CAyUqBy0I,CAA4B,KAAM5lI,GAC7C6lI,EAAQ,GACd,IAAK,IAAIh0I,EAAI,EAAGA,EAAIlB,EAASQ,OAAQU,GAAK,EACxCg0I,EAAM5vI,KAAK,uBAAuBtF,EAASkB,wBAM7C,OAJAmO,EAAQykI,UAAUkB,GAAY,QAAQA,0BACxCE,EAAMz1H,KAAK,4BAGF,GAAGu1H,KAAY/0I,IAAS,IAEjC,CAAC8zD,GAAIpyD,OAAQ2yI,IACVp1H,GAAS,MAAMA,EAAK1e,UAAU0e,EAAKO,KAAK,WAE3C,CAACs0C,GAAIsC,OAAQi+E,IAAgBI,IAC3B,GAA4B,IAAxBA,EAAal0I,OAEf,MAAO,aAAak0I,EAAa,oBAEnC,GAA4B,IAAxBA,EAAal0I,OAEf,MAAO,aAAak0I,EAAa,gBAAgBA,EAAa,MAEhE,MAAMpkF,EAAMokF,EAAavxI,MAAM,EAAG,GAAG2tB,KAAKs/B,GAAU,GAAGA,cACvD,GAA4B,IAAxBskF,EAAal0I,OACf,MAAO,QAAQ8vD,EAAI7wC,KAAK,cAE1B,MAAM8wC,EAAQmkF,EAAa,GAC3B,MAAO,QAAQpkF,EAAI7wC,KAAK,UAAU8wC,IAAQ,IAE5C,CAACwD,GAAIwC,MAAO+9E,IAAe,EAAEa,EAAMC,EAASC,GAAUhmI,KACpD,KAAM0kI,MAAuB1kI,EAAQykI,WAAY,CAC/C,IAAIwB,EAAW,GACf,MAAMziC,EAAYxjG,EAAQwjG,WAAa,EACvC,IAAK,IAAI3xG,EAAI,EAAGA,EAAI2xG,EAAW3xG,IAAK,CAClC,MAAMq0I,EAAahqI,KAAKoQ,MAAMza,EAAI,GAClC,IAAIs0I,EAAYt0I,EAAI,EAChBA,IAAM2xG,EAAY,GAAmB,IAAd2iC,IAEzBA,EAAY,GAGdF,GAAY,iBAAiBp0I,EAAI,gCADb,GAAG4xI,MAA+ByC,wCAEQC,YAGtE,CAEMnmI,EAAQykI,UAAUC,IAChB,0FACiBjB,+BACAA,QACvBwC,MAEF,CAEI,MAAO,GAAGvB,MAAuBoB,MAASC,GAAW,UACnDC,GAAW,QACV,IAEL,CAACthF,GAAIyC,SAAU,CAACnnD,EAAS+oD,KACvB,MAAO71D,KAAUy1D,GAAUI,EAAWl5C,KAChCu2H,EAAYz9E,EAAOx3D,OACnBk1I,EAAU,IAAIjkI,WAAuB,EAAZgkI,GAC/B,IAAK,IAAIv0I,EAAI,EAAGA,EAAI82D,EAAOx3D,OAAQU,IAAK,CACtC,MAGMkvD,EAAQqB,GAFsBuG,EAAO92D,GAC1C,OAEK8V,EAAa,EAAJ9V,EACfw0I,EAAQ1+H,GAAUo5C,EAAM,GACxBslF,EAAQ1+H,EAAS,GAAKo5C,EAAM,GAC5BslF,EAAQ1+H,EAAS,GAAKo5C,EAAM,GAC5BslF,EAAQ1+H,EAAS,GAAgB,IAAXo5C,EAAM,EAClC,CACS/gD,EAAQsmI,kBACXtmI,EAAQsmI,gBAAkB,IAE5B,MAAMC,EAAc,GAAG5B,MAAyB3kI,EAAQsmI,gBAAgBn1I,UAClEq1I,EAAiB,IAAI9C,GAAe6C,EAAaF,GACvDrmI,EAAQsmI,gBAAgBrwI,KAAKuwI,GAE7B,MAAO,aAAaD,YADEvB,GAAQ9xI,EAAOuvD,GAAYziD,eACmBomI,YAAoB,GAgB5F,SAASpB,GAAQj8E,EAAYzE,EAAYtkD,GAEvC,GAAI+oD,aAAsBpF,GAAgB,CACxC,MAAM8iF,EAAWvB,GAAUn8E,EAAWnF,UACtC,QAAiB9sD,IAAb2vI,EACF,MAAM,IAAI9tI,MACR,0CAA0CwvD,KAAKC,UAC7CW,EAAWnF,aAIjB,OAAO6iF,EAASzmI,EAAS+oD,EAAYzE,EACzC,CAEE,IAAKyE,EAAW/zD,KAAOytD,IAAc,EACnC,OAAOohF,GAAoC96E,EAAgB,OAG7D,IAAKA,EAAW/zD,KAAOwtD,IAAe,EACpC,OAAOuG,EAAW10D,MAAMgtB,WAG1B,IAAK0nC,EAAW/zD,KAAO0tD,IAAc,EACnC,OAAO2hF,GAAat7E,EAAW10D,MAAMgtB,YAGvC,IAAK0nC,EAAW/zD,KAAO2tD,IAAa,EAClC,OAAOohF,GACkCh7E,EAAgB,OAI3D,IAAKA,EAAW/zD,KAAO4tD,IAAmB,EACxC,OAAOkhF,GAA0C/6E,EAAgB,OAGnE,IAAKA,EAAW/zD,KAAO6tD,IAAY,EACjC,OAAOmhF,GAC4Cj7E,EAAgB,OAIrE,MAAM,IAAIpwD,MACR,yBAAyBowD,EAAW10D,wBAAwB4uD,GAC1DqB,MAGN,CC7eO,MCAMoiF,GAAgB,woBAwBvBC,G9ByQG,CACL,aAAc,wBACd,eAAgB,UAChB,eAAgB,KAChB,gBAAiB,EACjB,oBAAqB,wBACrB,sBAAuB,KACvB,sBAAuB,W8BnPpB,MAAMC,GACX,WAAAv2I,GAMEC,KAAK4pI,UAAY,GAOjB5pI,KAAKu2I,YAAc,GAMnBv2I,KAAKw2I,YAAa,EAMlBx2I,KAAKy2I,sBAAwB,QAAQlD,GACnC8C,GAAc,uBACT9C,GAAoD,GAAvC8C,GAAc,2BAMlCr2I,KAAK02I,0BAA4B,MAMjC12I,KAAK22I,wBAA0B,YAM/B32I,KAAK42I,uBAAyBnD,GACL4C,GAAc,sBAOvCr2I,KAAK62I,oBAAsB,2BAM3B72I,KAAK82I,mBAAqB,QAM1B92I,KAAK+2I,uBAAwB,EAM7B/2I,KAAKg3I,YAAa,EAMlBh3I,KAAKi3I,uBAAyB1D,GAAa8C,GAAc,iBAMzDr2I,KAAKk3I,uBAAyBzD,GACL4C,GAAc,iBAMvCr2I,KAAKm3I,wBAA0B,KAK/Bn3I,KAAKo3I,qBAAuBrD,GAAa,SAKzC/zI,KAAKq3I,sBAAwBtD,GAAa,SAK1C/zI,KAAKs3I,4BAA8B,MAKnCt3I,KAAKu3I,+BAAiC,SAMtCv3I,KAAKw3I,UAAW,EAMhBx3I,KAAKy3I,qBAAuBhE,GACH4C,GAAc,eAOvCr2I,KAAK03I,uBAAyB,GAM9B13I,KAAK23I,yBAA2B,EACpC,CAQE,UAAAC,CAAWxiI,GAET,OADApV,KAAK4pI,UAAUjkI,KAAKyP,GACbpV,IACX,CAcE,YAAA63I,CAAaziI,EAAM1Q,EAAMqoB,EAAW+qH,GAQlC,OAPA93I,KAAKu2I,YAAY5wI,KAAK,CACpByP,OACA1Q,OACAqzI,YAAa3iI,EAAKsM,QAAQ,MAAO,MACjCs2H,YAAaF,GAAmBpzI,EAChCuzI,kBAAmBlrH,GAAa3X,IAE3BpV,IACX,CASE,uBAAAk4I,CAAwBz/E,GAGtB,OAFAz4D,KAAKw2I,YAAa,EAClBx2I,KAAKy2I,sBAAwBh+E,EACtBz4D,IACX,CAKE,uBAAAm4I,GACE,OAAOn4I,KAAKy2I,qBAChB,CASE,2BAAA2B,CAA4B3/E,GAE1B,OADAz4D,KAAK02I,0BAA4Bj+E,EAC1Bz4D,IACX,CASE,yBAAAq4I,CAA0B5/E,GAExB,OADAz4D,KAAK22I,wBAA0Bl+E,EACxBz4D,IACX,CAKE,yBAAAs4I,GACE,OAAOt4I,KAAK22I,uBAChB,CASE,wBAAA4B,CAAyB9/E,GAGvB,OAFAz4D,KAAKw2I,YAAa,EAClBx2I,KAAK42I,uBAAyBn+E,EACvBz4D,IACX,CAKE,wBAAAw4I,GACE,OAAOx4I,KAAK42I,sBAChB,CASE,8BAAA6B,CAA+BhgF,GAE7B,OADAz4D,KAAK62I,oBAAsBp+E,EACpBz4D,IACX,CAWE,4BAAA04I,CAA6BjgF,GAE3B,OADAz4D,KAAK82I,mBAAqBr+E,EACnBz4D,IACX,CAKE,4BAAA24I,GACE,OAAO34I,KAAK82I,kBAChB,CAQE,uBAAA8B,CAAwBn3E,GAEtB,OADAzhE,KAAK+2I,sBAAwBt1E,EACtBzhE,IACX,CAME,wBAAA64I,CAAyBpgF,GAGvB,OAFAz4D,KAAKg3I,YAAa,EAClBh3I,KAAKi3I,uBAAyBx+E,EACvBz4D,IACX,CAME,wBAAA84I,CAAyBrgF,GAGvB,OAFAz4D,KAAKg3I,YAAa,EAClBh3I,KAAKk3I,uBAAyBz+E,EACvBz4D,IACX,CAKE,wBAAA+4I,GACE,OAAO/4I,KAAKk3I,sBAChB,CAME,yBAAA8B,CAA0BvgF,GAExB,OADAz4D,KAAKm3I,wBAA0B1+E,EACxBz4D,IACX,CAME,sBAAAi5I,CAAuBxgF,GAErB,OADAz4D,KAAKo3I,qBAAuB3+E,EACrBz4D,IACX,CAME,uBAAAk5I,CAAwBzgF,GAEtB,OADAz4D,KAAKq3I,sBAAwB5+E,EACtBz4D,IACX,CAME,6BAAAm5I,CAA8B1gF,GAE5B,OADAz4D,KAAKs3I,4BAA8B7+E,EAC5Bz4D,IACX,CAOE,gCAAAo5I,CAAiC3gF,GAE/B,OADAz4D,KAAKu3I,+BAAiC9+E,EAC/Bz4D,IACX,CAME,sBAAAq5I,CAAuB5gF,GAGrB,OAFAz4D,KAAKw3I,UAAW,EAChBx3I,KAAKy3I,qBAAuBh/E,EACrBz4D,IACX,CAKE,sBAAAs5I,GACE,OAAOt5I,KAAKy3I,oBAChB,CAEE,uBAAA8B,CAAwBx2H,GACtB,OAAI/iB,KAAK03I,uBAAuBhyI,SAASqd,IAGzC/iB,KAAK03I,uBAAuB/xI,KAAKod,GAFxB/iB,IAIb,CACE,yBAAAw5I,CAA0Bz2H,GACxB,OAAI/iB,KAAK23I,yBAAyBjyI,SAASqd,IAG3C/iB,KAAK23I,yBAAyBhyI,KAAKod,GAF1B/iB,IAIb,CAME,qBAAAy5I,GACE,OAAKz5I,KAAKw2I,WAIH,GAAGJ,OACZp2I,KAAK4pI,UAAUz4G,KAAK86G,GAAY,WAAWA,OAAYnsH,KAAK,6PAY5D9f,KAAKu2I,YACJplH,KACEuoH,GAAc,aAAaA,EAAUh1I,QAAQg1I,EAAUtkI,kBAClDskI,EAAU1B,eAAe0B,EAAU3B,iBAE1Cj4H,KAAK,UACN9f,KAAK03I,uBAAuB53H,KAAK,2PAWhB9f,KAAKy2I,4FAEEz2I,KAAK22I,8UAWb32I,KAAK02I,iCACnB12I,KAAK+2I,sBAAwB,uBAAyB,wSAMtC/2I,KAAK62I,gdAUvB72I,KAAKu2I,YACJplH,KACEuoH,GACC,KAAKA,EAAU3B,iBAAiB2B,EAAUzB,uBAE7Cn4H,KAAK,WApEK,IAsEb,CAME,uBAAA65H,GACE,OAAK35I,KAAKw2I,WAIH,GAAGJ,OACZp2I,KAAK4pI,UAAUz4G,KAAK86G,GAAY,WAAWA,OAAYnsH,KAAK,4IAM5D9f,KAAKu2I,YACJplH,KACEuoH,GAAc,WAAWA,EAAU1B,eAAe0B,EAAU3B,iBAE9Dj4H,KAAK,UACN9f,KAAK23I,yBAAyB73H,KAAK,+BAGnC9f,KAAKu2I,YACJplH,KACEuoH,GACC,KAAKA,EAAU1B,eAAe0B,EAAUtkI,UAAUskI,EAAU3B,sDAE/Dj4H,KAAK,gBACA9f,KAAK82I,wRAKM92I,KAAK42I,oLA7BX,IAoCb,CAME,qBAAAgD,GACE,OAAK55I,KAAKg3I,WAIH,GAAGZ,OACZp2I,KAAK4pI,UAAUz4G,KAAK86G,GAAY,WAAWA,OAAYnsH,KAAK,qgBAoB5D9f,KAAKu2I,YACJplH,KACEuoH,GAAc,aAAaA,EAAUh1I,QAAQg1I,EAAUtkI,kBAClDskI,EAAU1B,eAAe0B,EAAU3B,iBAE1Cj4H,KAAK,UACN9f,KAAK03I,uBAAuB53H,KAAK,gkDAyCb9f,KAAKi3I,mDACFj3I,KAAKm3I,k+CAgC5Bn3I,KAAKu2I,YACJplH,KACEuoH,GACC,KAAKA,EAAU3B,iBAAiB2B,EAAUzB,uBAE7Cn4H,KAAK,WA7GK,IA+Gb,CAOE,uBAAA+5H,GACE,OAAK75I,KAAKg3I,WAIH,GAAGZ,OACZp2I,KAAK4pI,UAAUz4G,KAAK86G,GAAY,WAAWA,OAAYnsH,KAAK,6QAU5D9f,KAAKu2I,YACJplH,KACEuoH,GAAc,WAAWA,EAAU1B,eAAe0B,EAAU3B,iBAE9Dj4H,KAAK,UACN9f,KAAK23I,yBAAyB73H,KAAK,49DAqDd9f,KAAKs3I,2QAQRvD,GAAa,4FAEPA,GAAa,iRAOnBA,GAAa,0GAENA,GAAa,+zBAsBtC/zI,KAAKu2I,YACJplH,KACEuoH,GACC,KAAKA,EAAU1B,eAAe0B,EAAUtkI,UAAUskI,EAAU3B,sDAE/Dj4H,KAAK,slCA2BA9f,KAAK82I,yDAEO92I,KAAKo3I,6CACJp3I,KAAKq3I,ygBAOar3I,KAAKu3I,sDAE3Bv3I,KAAKk3I,oSA7JT,IAuKb,CAOE,mBAAA4C,GACE,OAAK95I,KAAKw3I,SAIH,GAAGpB,OACZp2I,KAAK4pI,UAAUz4G,KAAK86G,GAAY,WAAWA,OAAYnsH,KAAK,gGAM5D9f,KAAKu2I,YACJplH,KACEuoH,GAAc,aAAaA,EAAUh1I,QAAQg1I,EAAUtkI,kBAClDskI,EAAU1B,eAAe0B,EAAU3B,iBAE1Cj4H,KAAK,UACN9f,KAAK03I,uBAAuB53H,KAAK,+HAIjC9f,KAAKu2I,YACJplH,KACEuoH,GACC,KAAKA,EAAU3B,iBAAiB2B,EAAUzB,uBAE7Cn4H,KAAK,WAzBK,IA2Bb,CAME,qBAAAi6H,GACE,OAAK/5I,KAAKw3I,SAIH,GAAGpB,OACZp2I,KAAK4pI,UAAUz4G,KAAK86G,GAAY,WAAWA,OAAYnsH,KAAK,oCAE5D9f,KAAKu2I,YACJplH,KACEuoH,GAAc,WAAWA,EAAU1B,eAAe0B,EAAU3B,iBAE9Dj4H,KAAK,UACN9f,KAAK23I,yBAAyB73H,KAAK,8VAYnC9f,KAAKu2I,YACJplH,KACEuoH,GACC,KAAKA,EAAU1B,eAAe0B,EAAUtkI,UAAUskI,EAAU3B,sDAE/Dj4H,KAAK,4cAgBA9f,KAAK82I,sDACM92I,KAAKy3I,qNA7CX,IAqDb,EC76BO,SAASuC,GAAiBvF,EAAoB1wI,EAAO+vD,GAE1D,OAAOkF,GACLj1D,EACA+vD,EAHqBP,KAKrBkhF,EAEJ,CAOO,SAASwF,GAAUxpF,GACxB,MAAMpmD,EAAQynD,GAAQrB,GAKtB,MAAO,CAJc,IAAXpmD,EAAM,GACNA,EAAM,GACK,IAAXA,EAAM,GACNuB,KAAK+R,MAAiB,IAAXtT,EAAM,IAE7B,CAeO,SAAS6vI,GAAoBx1I,GAClC,OAAIA,IAAS2tD,IAAa3tD,IAAS6tD,GAC1B,EAEL7tD,IAAS4tD,GACJ,EAEF,CACT,CAMO,SAAS6nF,GAAoBz1I,GAClC,MAAMsO,EAAOknI,GAAoBx1I,GACjC,OAAIsO,EAAO,QACyCA,IAE7C,OACT,CAQO,SAASonI,GAAsBC,EAAS3qI,GAE7C,IAAK,MAAMolI,KAAWplI,EAAQ8jD,UAAW,CACvC,MAAM8mF,EAAW5qI,EAAQ8jD,UAAUshF,GAC7BjF,EAAcmE,GAAuBsG,EAASllI,MACpD,IAAImlI,EAAWJ,GAAoBG,EAAS51I,MACxC41I,EAAS51I,OAAS2tD,KAEpBkoF,EAAW,QAEbF,EAAQzC,WAAW,GAAG2C,KAAY1K,IACtC,CAIE,IAAK,MAAMgF,KAAYnlI,EAAQ8E,WAAY,CACzC,MAAMjQ,EAAWmL,EAAQ8E,WAAWqgI,GAC9B0F,EAAWJ,GAAoB51I,EAASG,MACxCqrI,EAAgB,UAAUxrI,EAAS6Q,OACrC7Q,EAASG,OAAS2tD,IACpBgoF,EAAQxC,aACN9H,EACAwK,EACA,eAAexK,KACf,QAEFsK,EAAQd,wBAnEiB,+OAqEzBc,EAAQxC,aAAa9H,EAAewK,EAE1C,CAGE,IAAK,MAAMC,KAAgB9qI,EAAQykI,UACjCkG,EAAQd,wBAAwB7pI,EAAQykI,UAAUqG,IAClDH,EAAQb,0BAA0B9pI,EAAQykI,UAAUqG,GAExD,CASO,SAASC,GAA4B/qI,EAAS8jD,GAEnD,MAAMq2E,EAAW,CAAE,EAGnB,IAAK,MAAMiL,KAAWplI,EAAQ8jD,UAAW,CACvC,MAAM8mF,EAAW5qI,EAAQ8jD,UAAUshF,GAGnCjL,EAFoBmK,GAAuBsG,EAASllI,OAE5B,KACtB,MAAMrR,EAAQyvD,EAAU8mF,EAASllI,MACjC,MAAqB,iBAAVrR,EACFA,EAEY,kBAAVA,EACFA,EAAQ,EAAI,EAEjBu2I,EAAS51I,OAAS2tD,GACbP,GAAQ/tD,GAAS,QAEL,iBAAVA,EACF8vI,GAA0B9vI,GAE5BA,CAAK,CAElB,CAEE,OAAO8lI,CACT,CAQO,SAAS6Q,GAA8BhrI,GAI5C,MAAMy7H,EAAa,CAAE,EAGrB,IAAK,MAAM0J,KAAYnlI,EAAQ8E,WAAY,CACzC,MAAMjQ,EAAWmL,EAAQ8E,WAAWqgI,GAC9B38H,EAAYuxD,IAChB,MAAM1lE,EAAQ0lE,EAAQxgE,IAAI1E,EAAS6Q,MACnC,OAAI7Q,EAASG,OAAS2tD,GACb4nF,GAAU,IAAInoF,GAAQ/tD,GAAS,UAEnB,iBAAVA,EACF8vI,GAA0B9vI,GAEd,kBAAVA,EACFA,EAAQ,EAAI,EAEdA,CAAK,EAGdonI,EAAW,QAAQ5mI,EAAS6Q,QAAU,CACpCpC,KAAMknI,GAAoB31I,EAASG,MACnCwT,WAEN,CACE,OAAOizH,CACT,CCnIA,MAAMwP,GACJ,WAAA56I,GAIEC,KAAK46I,eAAiB,EAOtB56I,KAAK66I,cAAgB,IAAIC,IAOzB96I,KAAK+6I,UAAY,IAAID,IAQrB96I,KAAKg7I,eAAiB,GAKtBh7I,KAAKi7I,aAAe,CAClBC,QAAS,CAAE,EACXC,gBAAiB,EACjBC,cAAe,EACfC,WAAY,GAMdr7I,KAAKs7I,WAAa,CAChBJ,QAAS,CAAE,EACXC,gBAAiB,GAMnBn7I,KAAKu7I,gBAAkB,CACrBL,QAAS,CAAE,EACXC,gBAAiB,EACjBC,cAAe,EAErB,CAME,WAAAv5D,CAAYnH,EAAU8gE,GACpB,IAAK,IAAIj6I,EAAI,EAAGA,EAAIm5E,EAAS75E,OAAQU,IACnCvB,KAAKgmG,WAAWtrB,EAASn5E,GAAIi6I,EAEnC,CAME,UAAAx1C,CAAWv8B,EAAS+xE,GAClB,IAAIlnI,EAAWm1D,EAAQ70D,cAClBN,IAGDknI,IACFlnI,EAAWA,EAASG,QACpBH,EAAS6G,eAAeqgI,IAE1Bx7I,KAAKy7I,aAAannI,EAAUm1D,GAChC,CAOE,8BAAAiyE,CAA+BjyE,GAC7B,MAAMkyE,EAAapzI,EAAOkhE,GACpBkmB,EAAQ3vF,KAAKs7I,WAAWJ,QAAQS,GACtC,GAAKhsD,EAKL,OAFA3vF,KAAKs7I,WAAWH,iBAAmBxrD,EAAMisD,YAAY/6I,cAC9Cb,KAAKs7I,WAAWJ,QAAQS,GACxBhsD,CACX,CAOE,mCAAAksD,CAAoCpyE,GAClC,MAAMkyE,EAAapzI,EAAOkhE,GACpBkmB,EAAQ3vF,KAAKu7I,gBAAgBL,QAAQS,GAC3C,GAAKhsD,EAML,OAHA3vF,KAAKu7I,gBAAgBH,eAAiBzrD,EAAMyrD,cAC5Cp7I,KAAKu7I,gBAAgBJ,iBAAmBxrD,EAAMisD,YAAY/6I,cACnDb,KAAKu7I,gBAAgBL,QAAQS,GAC7BhsD,CACX,CAOE,gCAAAmsD,CAAiCryE,GAC/B,MAAMkyE,EAAapzI,EAAOkhE,GACpBkmB,EAAQ3vF,KAAKi7I,aAAaC,QAAQS,GACxC,GAAKhsD,EAOL,OAJA3vF,KAAKi7I,aAAaG,eAAiBzrD,EAAMyrD,cACzCp7I,KAAKi7I,aAAaI,YAAc1rD,EAAM0rD,WACtCr7I,KAAKi7I,aAAaE,iBAAmBxrD,EAAMisD,YAAY/6I,cAChDb,KAAKi7I,aAAaC,QAAQS,GAC1BhsD,CACX,CAOE,YAAA8rD,CAAannI,EAAUm1D,GACrB,MAAM/kE,EAAO4P,EAAS8e,UACtB,OAAQ1uB,GACN,IAAK,qBAAsB,CACzB,MAAMgjF,EACsD,EAExDC,qBACJ,IAAK,MAAMrzE,KAAYozE,EACrB1nF,KAAKy7I,aAAannI,EAAUm1D,GAE9B,KACR,CACM,IAAK,eAAgB,CACnB,MAAMsyE,EACd,EACQ/7I,KAAKg8I,gBACHt3I,EACAq3I,EAAiB9nH,qBACjB8nH,EAAiB7zD,WACjBze,EACAlhE,EAAOkhE,GACPsyE,EAAiBznH,aAEnB,KACR,CACM,IAAK,kBAAmB,CACtB,MAAM2nH,EACd,EAGQj8I,KAAKg8I,gBACHt3I,EACAu3I,EAAchoH,qBACdgoH,EAAc3gH,UACdmuC,EACAlhE,EAAOkhE,GACPwyE,EAAc3nH,aAEhB,KACR,CACM,IAAK,aAAc,CACjB,MAAM4nH,EACd,EAGQl8I,KAAKg8I,gBACHt3I,EACAw3I,EAAejoH,qBACf,KACAw1C,EACAlhE,EAAOkhE,GACPyyE,EAAe5nH,aAEjB,KACR,CACM,IAAK,UAAW,CACd,MAAM6nH,EACd,EAGQn8I,KAAKg8I,gBACHt3I,EACAy3I,EAAYloH,qBACZkoH,EAAY7gH,UACZmuC,EACAlhE,EAAOkhE,GACP0yE,EAAY7nH,aAEd,KACR,CACM,IAAK,QAAS,CACZ,MAAM8nH,EAAS,EAGfp8I,KAAKg8I,gBACHt3I,EACA03I,EAAUnoH,qBACV,KACAw1C,EACAlhE,EAAOkhE,GACP2yE,EAAU9nH,aAEZ,KACR,CACM,IAAK,aACL,IAAK,aAAc,CACjB,MAAM+nH,EAAQ,EAIR/kI,EAAS+kI,EAAS/nH,YAExBt0B,KAAKg8I,gBACHt3I,EACA23I,EAASpoH,qBACT,KACAw1C,EACAlhE,EAAOkhE,GACPnyD,EACA+kI,EAASloH,eAEX,KACR,EAIA,CAYE,eAAA6nH,CAAgBt3I,EAAM43I,EAAYnnH,EAAMs0C,EAASkyE,EAAYrkI,EAAQwc,GAEnE,IAAIsnH,EACJ,OAAQ12I,GACN,IAAK,eAAgB,CACnB,MAAM63I,EAAyD,EAC/D,IAAK,IAAIh7I,EAAI,EAAG4E,EAAKo2I,EAAkB17I,OAAQU,EAAI4E,EAAI5E,IAAK,CAC1D,IAAIi7I,EAAcD,EAAkBh7I,GACpC,MAAMk7I,EAAkBl7I,EAAI,EAAIg7I,EAAkBh7I,EAAI,GAAK,KACrD8kC,EAAao2G,EACfA,EAAgBA,EAAgB57I,OAAS,GACzC,EACE67I,EAAWF,EAAYA,EAAY37I,OAAS,GAClD27I,EACEn2G,EAAa,EACTm2G,EAAYrrH,KAAKxvB,GAAQA,EAAM0kC,IAC/Bm2G,EACNx8I,KAAKg8I,gBACH,UACAM,EAAW94I,MAAM6iC,EAAYq2G,GAC7BF,EACA/yE,EACAkyE,EACArkI,EACAwc,EAEZ,CACQ,KACR,CACM,IAAK,kBAAmB,CACtB,MAAM6oH,EAA8C,EACpD,IAAK,IAAIp7I,EAAI,EAAG4E,EAAKw2I,EAAc97I,OAAQU,EAAI4E,EAAI5E,IAAK,CACtD,MAAM8kC,EAAa9kC,EAAI,EAAIo7I,EAAcp7I,EAAI,GAAK,EAClDvB,KAAKg8I,gBACH,aACAM,EAAW94I,MAAM6iC,EAAYs2G,EAAcp7I,IAC3C,KACAkoE,EACAkyE,EACArkI,EACAwc,EAEZ,CACQ,KACR,CACM,IAAK,aACH,IAAK,IAAIvyB,EAAI,EAAG4E,EAAKm2I,EAAWz7I,OAAQU,EAAI4E,EAAI5E,GAAK+V,EACnDtX,KAAKg8I,gBACH,QACAM,EAAW94I,MAAMjC,EAAGA,EAAI,GACxB,KACAkoE,EACAkyE,EACA,KACA,MAGJ,MACF,IAAK,UAAW,CACd,MAAMa,EAA4C,EAClD,GAAI/yE,aAAmB+5B,GAAe,CACpC,MAAMo5C,EAAmBpiH,GAAY8hH,EAAYE,GACjD,GAAII,EAAiB/7I,OAAS,EAU5B,YATAb,KAAKg8I,gBACH,eACAM,EACAM,EACAnzE,EACAkyE,EACArkI,EACAwc,EAId,CACa9zB,KAAKi7I,aAAaC,QAAQS,KAC7B37I,KAAKi7I,aAAaC,QAAQS,GAAc37I,KAAK68I,eAC3ClB,EACA,CACElyE,QAASA,EACTmyE,YAAa,GACbR,cAAe,EACfC,WAAY,EACZyB,oBAAqB,MAI3B1B,EAAgBkB,EAAWz7I,OAASyW,EACpC,MAAM+jI,EAAalmH,EAAKt0B,OAClBk8I,EAAqB5nH,EAAKhE,KAAI,CAACxvB,EAAKq7I,EAAK77I,IAC7C67I,EAAM,GAAKr7I,EAAMR,EAAI67I,EAAM,IAAM1lI,EAAS3V,EAAM2V,IAElDtX,KAAKi7I,aAAaG,eAAiBA,EACnCp7I,KAAKi7I,aAAaI,YAAcA,EAChCr7I,KAAKi7I,aAAaE,kBAClBn7I,KAAKi7I,aAAaC,QAAQS,GAAYC,YAAYj2I,KAuL1D,SAA8B22I,EAAYhlI,GACxC,GAAe,IAAXA,EACF,OAAOglI,EAET,OAAOA,EAAW7sG,QAAO,CAACgiB,EAAGlwD,IAAMA,EAAI+V,EAAS,GAClD,CA3LU2lI,CAAqBX,EAAYhlI,IAEnCtX,KAAKi7I,aAAaC,QAAQS,GAAYmB,oBAAoBn3I,KACxDo3I,GAEF/8I,KAAKi7I,aAAaC,QAAQS,GAAYP,eAAiBA,EACvDp7I,KAAKi7I,aAAaC,QAAQS,GAAYN,YAAcA,EACpD,IAAK,IAAI95I,EAAI,EAAG4E,EAAKq2I,EAAY37I,OAAQU,EAAI4E,EAAI5E,IAAK,CACpD,MAAM8kC,EAAa9kC,EAAI,EAAIi7I,EAAYj7I,EAAI,GAAK,EAChDvB,KAAKg8I,gBACH,aACAM,EAAW94I,MAAM6iC,EAAYm2G,EAAYj7I,IACzC,KACAkoE,EACAkyE,EACArkI,EACAwc,EAEZ,CACQ,KACR,CACM,IAAK,QACE9zB,KAAKs7I,WAAWJ,QAAQS,KAC3B37I,KAAKs7I,WAAWJ,QAAQS,GAAc37I,KAAK68I,eACzClB,EACA,CACElyE,QAASA,EACTmyE,YAAa,MAInB57I,KAAKs7I,WAAWH,kBAChBn7I,KAAKs7I,WAAWJ,QAAQS,GAAYC,YAAYj2I,KAAK22I,GACrD,MACF,IAAK,aACL,IAAK,aACEt8I,KAAKu7I,gBAAgBL,QAAQS,KAChC37I,KAAKu7I,gBAAgBL,QAAQS,GAAc37I,KAAK68I,eAC9ClB,EACA,CACElyE,QAASA,EACTmyE,YAAa,GACbR,cAAe,KAIrBA,EAAgBkB,EAAWz7I,OAASyW,EACpCtX,KAAKu7I,gBAAgBH,eAAiBA,EACtCp7I,KAAKu7I,gBAAgBJ,kBACrBn7I,KAAKu7I,gBAAgBL,QAAQS,GAAYC,YAAYj2I,KAkJ7D,SAA+B22I,EAAYhlI,EAAQwc,GACjD,GAAe,IAAXxc,GAA2B,QAAXwc,EAClB,OAAOwoH,EAGT,GAAe,IAAXhlI,EACF,OAAOglI,EAAW7sG,QAAO,CAACgiB,EAAGlwD,IAAMA,EAAI+V,GAAW,IAGpD,GAAe,IAAXA,EACF,OAAOglI,EAAWnrH,KAAI,CAACsgC,EAAGlwD,IAAOA,EAAI+V,GAAW,EAAIm6C,EAAI,IAG1D,OAAO,IAAIzvD,MAA0B,IAApBs6I,EAAWz7I,QACzBmiE,KAAK,GACL7xC,KAAI,CAACsgC,EAAGlwD,IAAOA,EAAI,GAAM,EAAI,EAAI+6I,EAAW1wI,KAAK+R,MAAMpc,EAAI,OAChE,CAjKU27I,CAAsBZ,EAAYhlI,EAAQwc,IAE5C9zB,KAAKu7I,gBAAgBL,QAAQS,GAAYP,eAAiBA,EAKlE,CAQE,cAAAyB,CAAelB,EAAYhsD,GACzB,MAAMwtD,EAAan9I,KAAK+6I,UAAU9xI,IAAI0yI,GAGhCyB,EACJD,GAAcn9I,KAAKg7I,eAAenwI,SAAW7K,KAAK46I,eAMpD,OALAjrD,EAAMytD,IAAMA,EACPD,IACHn9I,KAAK66I,cAAcjxI,IAAIwzI,EAAKztD,EAAMlmB,SAClCzpE,KAAK+6I,UAAUnxI,IAAI+xI,EAAYyB,IAE1BztD,CACX,CAQE,UAAA0tD,CAAWD,EAAKzB,GACd,IAAKyB,EACH,MAAM,IAAI/0I,MAAM,4BAA8BszI,GAEhD37I,KAAK66I,cAAcx5B,OAAO+7B,GAC1Bp9I,KAAK+6I,UAAU15B,OAAOs6B,GACtB37I,KAAKg7I,eAAer1I,KAAKy3I,EAC7B,CAKE,aAAAE,CAAc7zE,GAEZ,IAAKzpE,KAAK+6I,UAAU9xI,IAAIV,EAAOkhE,IAC7B,OAEFzpE,KAAK2mG,cAAcl9B,GACnB,MAAMn1D,EAAWm1D,EAAQ70D,cACpBN,GAGLtU,KAAKy7I,aAAannI,EAAUm1D,EAChC,CAKE,aAAAk9B,CAAcl9B,GACZ,IAAIkmB,EAAQ3vF,KAAK07I,+BAA+BjyE,GAChDkmB,EAAQ3vF,KAAK87I,iCAAiCryE,IAAYkmB,EAC1DA,EAAQ3vF,KAAK67I,oCAAoCpyE,IAAYkmB,EACzDA,GACF3vF,KAAKq9I,WAAW1tD,EAAMytD,IAAK70I,EAAOonF,EAAMlmB,SAE9C,CAEE,KAAAplE,GACErE,KAAKi7I,aAAaC,QAAU,CAAE,EAC9Bl7I,KAAKi7I,aAAaE,gBAAkB,EACpCn7I,KAAKi7I,aAAaG,cAAgB,EAClCp7I,KAAKi7I,aAAaI,WAAa,EAC/Br7I,KAAKu7I,gBAAgBL,QAAU,CAAE,EACjCl7I,KAAKu7I,gBAAgBJ,gBAAkB,EACvCn7I,KAAKu7I,gBAAgBH,cAAgB,EACrCp7I,KAAKs7I,WAAWJ,QAAU,CAAE,EAC5Bl7I,KAAKs7I,WAAWH,gBAAkB,EAClCn7I,KAAK46I,eAAiB,EACtB56I,KAAKg7I,eAAiB,GACtBh7I,KAAK66I,cAAcx2I,QACnBrE,KAAK+6I,UAAU12I,OACnB,CAOE,iBAAAk5I,CAAkBH,GAChB,OAAOp9I,KAAK66I,cAAc5xI,IAAIm0I,EAClC,CAEE,OAAA54I,GACE,OAA+B,IAAxBxE,KAAK46I,cAChB,CAQE,MAAAnrG,CAAO+tG,GACL,MAAMC,EAAW,IAAI9C,GACrB8C,EAAS7C,eAAiB56I,KAAK46I,eAC/B6C,EAAS1C,UAAY/6I,KAAK+6I,UAC1B0C,EAAS5C,cAAgB76I,KAAK66I,cAC9B,IAAI1oE,GAAQ,EACZ,IAAK,MAAM1I,KAAWzpE,KAAK66I,cAAc/xI,SACnC00I,EAAc/zE,KAChBg0E,EAASz3C,WAAWv8B,GACpB0I,GAAQ,GAIZ,OAAIA,EACK,IAAIwoE,GAEN8C,CACX,EChlBO,MAAMC,GACe,2BADfA,GAEa,yBAFbA,GAGmB,+BCIhC,SAASC,GACPC,EACAC,EACAC,EACAC,GAEA,IAAI5uI,EAAQ,EACZ,IAAK,MAAM7H,KAAOu2I,EAAkB,CAClC,MAAM7L,EAAO6L,EAAiBv2I,GACxBvD,EAAQiuI,EAAK95H,SAASzU,KAAKq6I,EAAYA,EAAWr0E,SACxD,IAAIvyC,EAAQnzB,IAAQ,IAAMA,EACtBmzB,IAAUs9G,IACZh1H,QAAQJ,KAAK,yDAED5Y,IAAV0wB,EACFA,EAAQs9G,GACW,OAAVt9G,IACTA,EAAQ,GAEV0mH,EAAmBG,EAAe5uI,KAAW+nB,EACxC86G,EAAKh/H,MAAsB,IAAdg/H,EAAKh/H,OAGvB4qI,EAAmBG,EAAe5uI,KAAWpL,EAAM,GAC/CiuI,EAAKh/H,KAAO,IAGhB4qI,EAAmBG,EAAe5uI,KAAWpL,EAAM,GAC/CiuI,EAAKh/H,KAAO,IAGhB4qI,EAAmBG,EAAe5uI,KAAWpL,EAAM,KACvD,CACE,OAAOoL,CACT,CAMO,SAAS6uI,GAAwBH,GACtC,OAAOn3I,OAAOC,KAAKk3I,GAAkB39E,QACnC,CAAC50D,EAAM60D,IAAS70D,GAAQuyI,EAAiB19E,GAAMntD,MAAQ,IACvD,EAEJ,CCvBO,SAASirI,GAAYx4H,GAI1B,OAHaoyC,KAAKC,UAAUryC,GACzBtF,MAAM,IACN+/C,QAAO,CAAC50D,EAAM60D,KAAU70D,GAAQ,GAAKA,EAAO60D,EAAKg2B,WAAW,IAAI,KAClD,GAAGplE,UACtB,CAQA,SAASmtH,GAA4BpuI,EAAOuqI,EAAS8D,EAAatvE,GAChE,GAAI,GAAGA,YAAkB/+D,GAAoB,UAAX++D,EAAoB,CACpD,IAAI1wD,EAAS67H,GACXmE,EACAruI,EAAM,GAAG++D,WACT1c,IAEF,GAAI,GAAG0c,aAAmB/+D,EAAO,CAM/BqO,EAAS,OAAOA,MALA67H,GACdmE,EACAruI,EAAM,GAAG++D,YACT1c,MAGR,CACQ,GAAG0c,kBAAwB/+D,IAC7BqO,EAAS,IAAIA,OAAY67H,GACvBmE,EACAruI,EAAM,GAAG++D,iBACT1c,cAGJkoF,EAAQnC,wBAAwB,QAAQ/5H,gBAC5C,CACE,GAAI,GAAG0wD,WAAiB/+D,EAAO,CAC7B,MAAMmS,EAAQ+3H,GACZmE,EACAruI,EAAM,GAAG++D,UACTtc,IAEF8nF,EAAQnC,wBACN,GAAGmC,EAAQlC,+BAA+Bl2H,IAEhD,CACM,GAAG4sD,kBAAwB/+D,GAC7BuqI,EAAQhC,0BACN2B,GACEmE,EACAruI,EAAM,GAAG++D,iBACTvc,KAIF,GAAGuc,cAAoB/+D,GACzBuqI,EAAQjC,4BACN4B,GAAiBmE,EAAaruI,EAAM,GAAG++D,aAAmB1c,KAG1D,GAAG0c,sBAA4B/+D,GACjCuqI,EAAQzB,0BAA0B9oI,EAAM,GAAG++D,qBAE/C,CAUA,SAASuvE,GACPC,EACAC,EACAC,EACAl6E,EACA5d,GAEA,IAAIgK,EAAQ,WAIZ,GAHkB,OAAd6tF,IACF7tF,EAAQ6tF,GAEU,OAAhBC,GAAwC,OAAhBl6E,EAAsB,CAEhD5T,EAAQ,OAAO8tF,MAAgB9tF,MADP,eAAe4T,cAAwBA,aAAuBg6E,OAE1F,CAEE,IAAI50G,EAAS,GAAGgnB,2BADK,kCAAkC4tF,SAKvD,OAHgB,OAAZ53F,IACFhd,EAAS,GAAGA,2BAAgCgd,MAEvChd,CACT,CAYA,SAAS+0G,GAAqB1uI,EAAOuqI,EAASxQ,EAAUh7D,EAAQ4vE,GAC9D,MAAMpsI,EAAQ,IAAIhE,MAClBgE,EAAMosB,iBAC+Bj4B,IAAnCsJ,EAAM,GAAG++D,iBACL,YACA/+D,EAAM,GAAG++D,iBACfl7D,GACmC,iBAA1B7D,EAAM,GAAG++D,QAChB,mDAAmDA,uBAErDx8D,EAAM0rB,IAA6BjuB,EAAM,GAAG++D,QAG5Cg7D,EAAS,YAAY4U,UAAoB,IAChCpsI,EAAM+rB,SAAW,CAAC/rB,EAAMvD,MAAOuD,EAAMtD,QAAU,CAAC,EAAG,GAE5DsrI,EAAQzC,WAAW,iBAAiB6G,UACpC,MAAMzrI,EAAO,YAAYyrI,SAIzB,OAFA5U,EAAS,YAAY4U,KAAepsI,EACpCgoI,EAAQzC,WAAW,sBAAsB6G,KAClCzrI,CACT,CAWA,SAAS0rI,GACP5uI,EACA++D,EACAn/D,EACAk4D,EACA+2E,GAEA,IAAIC,EAAmB5E,GACrBtqI,EACAI,EAAM,GAAG++D,WACTvc,IAEF,GAAI,GAAGuc,mBAAyB/+D,EAC9B,OAAQA,EAAM,GAAG++D,mBACf,IAAK,YACH+vE,EAAmB,QAAQh3E,cAAsB+2E,uBAAgCC,oBACjF,MACF,IAAK,cACHA,EAAmB,YAAYh3E,UAAkB+2E,uBAAgCC,oBACjF,MACF,IAAK,eACHA,EAAmB,GAAGh3E,OAAe+2E,OAAgBC,IAK3D,OAAOA,CACT,CA2iBO,SAASC,GAAkB/uI,EAAO0jD,EAAW/jB,GAClD,MAAM//B,EPhmBC,CACL8jD,UAAW,CAAE,EACbh/C,WAAY,CAAE,EACd2/H,UAAW,CAAE,EACbjhC,UAAW,EACXz/C,WAAW,EACXC,cAAc,GO4lBV2mF,EAAU,IAAI/D,GAGdzM,EAAW,CAAE,EAcnB,GAZI,aAAc/5H,EArWpB,SAA6BA,EAAOuqI,EAASxQ,EAAUn6H,GAErD,IAAI+gD,EAAQ,YACR,eAAgB3gD,IAClB2gD,EAAQupF,GAAiBtqI,EAASI,EAAM,cAAeuiD,KAIrD,iBAAkBviD,IACpB2gD,EAAQ,GAAGA,2BAA+BupF,GACxCtqI,EACAI,EAAM,gBACNqiD,QAKJ,MAAMssF,EAAYR,GAAYnuI,EAAM,aAC9BgvI,EAAiBN,GACrB1uI,EACAuqI,EACAxQ,EACA,QACA4U,GAoBF,GAlBApE,EACG9B,yBACC,GAAG9nF,0BAA8BguF,kBAElCvG,wBAAwB4G,GAGvB,eAAgBhvI,GAAS,gBAAiBA,GAC5CuqI,EAAQnC,wBACN,QAAQ8B,GACNtqI,EACAI,EAAM,cACNqiD,QACI6nF,GAAiBtqI,EAASI,EAAM,eAAgBqiD,QAKtD,gBAAiBriD,GAAS,cAAeA,EAAO,CAClD,MAAM6uI,EAAa3E,GACjBtqI,EACAI,EAAM,aACNwiD,IAEIysF,EAAW1E,EAAQlC,0BACzBkC,EAAQnC,wBAAwByG,GAChC,MAAMtnI,EAASqnI,GACb5uI,EACA,QACAJ,EACA,eACAivI,GAEFtE,EAAQ5B,+BACN,UAAUphI,2BAAgCsnI,UAAmBI,UAEnE,CAIE,GAFAb,GAA4BpuI,EAAOuqI,EAAS3qI,EAAS,SAEjD,gBAAiBI,EAAO,CAC1B,MAAM6hB,EAASqoH,GACbtqI,EACAI,EAAM,eACNwiD,IAEF,IAII0sF,EAJA/8H,EAAQ,MACR,eAAgBnS,IAClBmS,EAAQ+3H,GAAiBtqI,EAASI,EAAM,cAAeyiD,KAOvDysF,EAHiC,WAAjClvI,EAAM,wBAC2B,WAAjCA,EAAM,uBAEI,GAAG6hB,OAAY1P,IACiB,WAAjCnS,EAAM,uBACL,GAAG6hB,iBAAsB1P,wBACO,WAAjCnS,EAAM,uBACL,GAAG6hB,iCAAsC1P,QAEzC,GAAG0P,mBAGf,IAAIstH,EAAW,oCAAoCD,oBACnD,GAAI,uBAAwBlvI,EAC1B,OAAQA,EAAM,uBACZ,IAAK,YACHmvI,EAAW,yBAAyBD,IACpC,MACF,IAAK,cACHC,EAAW,wBAAwBD,IACnC,MACF,IAAK,eACHC,EAAW,oCAAoCD,oBAKrD3E,EAAQhC,0BACN,GAAGgC,EAAQ/B,iCAAiC2G,IAElD,CACA,CA0PIC,CAAoBpvI,EAAOuqI,EAASxQ,EAAUn6H,GACrC,iBAAkBI,EAle/B,SAA8BA,EAAOuqI,EAASxQ,EAAUn6H,GACtDA,EAAQykI,UAAiB,MAAI,qEAO7BzkI,EAAQykI,UAA6B,kBACnC,s2BAeFzkI,EAAQykI,UAAgC,qBACtC,kxBAeF+J,GAA4BpuI,EAAOuqI,EAAS3qI,EAAS,UAGrD,IAAI+2C,EAAU,KACV,kBAAmB32C,IACrB22C,EAAUuzF,GAAiBtqI,EAASI,EAAM,iBAAkBqiD,KAI9D,IAAIgtF,EAAe,WACf,gBAAiBrvI,IAEnBqvI,EAAe,cADDnF,GAAiBtqI,EAASI,EAAM,eAAgByiD,OAKhE,IAAI+rF,EAAY,KACZ,qBAAsBxuI,IACxBwuI,EAAYtE,GAAiBtqI,EAASI,EAAM,oBAAqBuiD,KAInE,IAAIksF,EAAc,KACd,uBAAwBzuI,IAC1ByuI,EAAcvE,GACZtqI,EACAI,EAAM,sBACNuiD,KAKJ,IAAIgS,EAAc,KACd,uBAAwBv0D,IAC1Bu0D,EAAc21E,GACZtqI,EACAI,EAAM,sBACNqiD,KAKJ,MAAMitF,EAAYpF,GAChBtqI,EACAI,EAAM,gBACNqiD,IAEF,IAIIktF,EAJAv9H,EAAQ,KACR,gBAAiBhS,IACnBgS,EAAQk4H,GAAiBtqI,EAASI,EAAM,eAAgBqiD,KAG1D,IAAIh0C,EAAS67H,GAAiBtqI,EAASI,EAAM,gBAAiBqiD,IAI9D,GAHoB,OAAhBkS,IACFlmD,EAAS,GAAGA,OAAYkmD,WAEtB,kBAAmBv0D,EAAO,CAC5B,IAAIszD,EAAU42E,GAAiBtqI,EAASI,EAAM,iBAAkBqiD,IAC5C,OAAhBkS,IACFjB,EAAU,GAAGA,OAAaiB,WAE5Bg7E,EAAa,qBAAqBF,MAAiBC,MAAcjhI,MAAWilD,MAAYthD,IAC5F,MACIu9H,EAAa,wBAAwBF,MAAiBC,MAAcjhI,MAAW2D,KAIjF,MAAMw9H,EAAkBlB,GACtBiB,EACAf,EACAC,EACAl6E,EACA5d,GAEF4zF,EAAQ9B,yBAAyB+G,EACnC,CAgXIC,CAAqBzvI,EAAOuqI,EAASxQ,EAAUn6H,GACtC,kBAAmBI,GA/iBhC,SAA+BA,EAAOuqI,EAASxQ,EAAUn6H,GAGvDA,EAAQykI,UAA+B,oBACrC,6FAIF+J,GAA4BpuI,EAAOuqI,EAAS3qI,EAAS,WAGrD,IAAI+2C,EAAU,KACV,mBAAoB32C,IACtB22C,EAAUuzF,GAAiBtqI,EAASI,EAAM,kBAAmBqiD,KAI/D,IAAIgtF,EAAe,WACf,iBAAkBrvI,IAEpBqvI,EAAe,cADDnF,GAAiBtqI,EAASI,EAAM,gBAAiByiD,OAKjE,IAAI+rF,EAAY,KACZ,sBAAuBxuI,IACzBwuI,EAAYtE,GACVtqI,EACAI,EAAM,qBACNuiD,KAKJ,IAAIksF,EAAc,KACd,wBAAyBzuI,IAC3ByuI,EAAcvE,GACZtqI,EACAI,EAAM,uBACNuiD,KAKJ,IAAIl0C,EAAS67H,GAAiBtqI,EAASI,EAAM,iBAAkBqiD,IAG3DkS,EAAc,KACd,wBAAyBv0D,IAC3Bu0D,EAAc21E,GACZtqI,EACAI,EAAM,uBACNqiD,IAEFh0C,EAAS,IAAIA,OAAYkmD,YAI3B,MACMi7E,EAAkBlB,GADF,uBAAuBe,MAAiBhhI,KAG5DmgI,EACAC,EACAl6E,EACA5d,GAEF4zF,EAAQ9B,yBAAyB+G,EACnC,CA6eIE,CAAsB1vI,EAAOuqI,EAASxQ,EAAUn6H,GAtPpD,SAA+BI,EAAOuqI,EAASxQ,EAAUn6H,GAMvD,GALI,iBAAkBI,GACpBuqI,EAAQvB,yBACNkB,GAAiBtqI,EAASI,EAAM,gBAAiBuiD,KAGjD,uBAAwBviD,EAAO,CACjC,MAAM2uI,EAAYR,GAAYnuI,EAAM,uBAC9BgvI,EAAiBN,GACrB1uI,EACAuqI,EACAxQ,EACA,kBACA4U,GAEF,IAAIgB,EAAuBX,EACvBF,EAAmB,WACnB,0BAA2B9uI,GAAS,wBAAyBA,IAC/D2vI,EAAuBzF,GACrBtqI,EACAI,EAAM,uBACNwiD,IAEFssF,EAAmBF,GACjB5uI,EACA,kBACAJ,EACAovI,EACAW,IAGJ,IAAIC,EAAoB,KACpB,2BAA4B5vI,IAC9B4vI,EAAoB1F,GAClBtqI,EACAI,EAAM,0BACNqiD,KAGJziD,EAAQykI,UAA+B,oBACrC,ovBAUF,MAAMwL,EAAc,YAAYlB,IAChC,IAAImB,EAAiB,KACjB,iBAAkB9vI,IACpB8vI,EAAiBvF,EAAQtB,4BAE3BsB,EAAQvB,yBACN,GAAG8G,2BAAwCD,MAAgBb,MAAmBF,MAAqBa,MAAyBC,mDAElI,CAgCE,GA9BI,iBAAkB5vI,GACpBuqI,EAAQxB,yBACNmB,GAAiBtqI,EAASI,EAAM,gBAAiBqiD,KAIjD,kBAAmBriD,GACrBuqI,EAAQrB,0BACNgB,GAAiBtqI,EAASI,EAAM,iBAAkBqiD,KAIlD,oBAAqBriD,GACvBuqI,EAAQpB,uBACNe,GAAiBtqI,EAASI,EAAM,mBAAoBsiD,KAIpD,qBAAsBtiD,GACxBuqI,EAAQnB,wBACNc,GAAiBtqI,EAASI,EAAM,oBAAqBsiD,KAIrD,uBAAwBtiD,GAC1BuqI,EAAQlB,8BACNa,GAAiBtqI,EAASI,EAAM,sBAAuBqiD,KAIvD,qBAAsBriD,EAAO,CAC/BJ,EAAQykI,UAAiC,sBACvC,mZAIaJ,GAAa,kFAENA,GAAa,2KAMnC,IAAI8L,EAAc/vI,EAAM,oBAAoBqhB,KAAKsgC,GAC/CuoF,GAAiBtqI,EAAS+hD,EAAGU,MAG3B0tF,EAAYh/I,OAAS,GAAM,IAC7Bg/I,EAAc,IAAIA,KAAgBA,IAGpC,IAAIjB,EAAmB,KACnB,4BAA6B9uI,IAC/B8uI,EAAmB5E,GACjBtqI,EACAI,EAAM,2BACNqiD,KAKJ,MACM2tF,EAAmB,qBADH7B,GAAYnuI,EAAM,uBAGlCiwI,EAAiBF,EAAY1uH,KACjC,CAACsgC,EAAGlwD,IAAM,mBAAmBA,OAAOkwD,OAEhCuuF,EAAiBH,EACpB1uH,KAAI,CAACsgC,EAAGlwD,IAAM,aAAaA,MAC3Bue,KAAK,OACR,IAAImgI,EAAoB,KACpBC,EAAqB,2CAA2CD,uDACpE,IAAK,IAAI1+I,EAAI,EAAGA,EAAIs+I,EAAYh/I,OAAQU,GAAK,EAC3C0+I,EAAoB,GAAGA,iBACrB1+I,EAAI,iBACUA,EAAI,IACpB2+I,EAAqB,OAAOA,8CAA+DD,gBAAgC1+I,2CAG7HmO,EAAQykI,UAAU2L,GAChB,SAASA,wEACXC,EAAejgI,KAAK,sCACIkgI,gBACjBE,QAEP7F,EAAQjB,iCACN,GAAG0G,uBAAsClB,wCAE/C,CACA,CAkGEuB,CAAsBrwI,EAAOuqI,EAASxQ,EAAUn6H,GA1FlD,SAA6BI,EAAOuqI,EAASxQ,EAAUn6H,GAMrD,GALI,eAAgBI,GAClBuqI,EAAQhB,uBACNW,GAAiBtqI,EAASI,EAAM,cAAeuiD,KAG/C,qBAAsBviD,EAAO,CAC/B,MAAM2uI,EAAYR,GAAYnuI,EAAM,qBAC9BgvI,EAAiBN,GACrB1uI,EACAuqI,EACAxQ,EACA,gBACA4U,GAEF,IAAIgB,EAAuBX,EACvBF,EAAmB,WACnB,wBAAyB9uI,GAAS,sBAAuBA,IAC3D2vI,EAAuBzF,GACrBtqI,EACAI,EAAM,qBACNwiD,IAEFssF,EAAmBF,GACjB5uI,EACA,gBACAJ,EACAovI,EACAW,IAGJ/vI,EAAQykI,UAA6B,kBACnC,y8BAYF,MAAMwL,EAAc,YAAYlB,IAChC,IAAImB,EAAiB,KACjB,eAAgB9vI,IAClB8vI,EAAiBvF,EAAQf,0BAE3Be,EAAQhB,uBACN,GAAGuG,yBAAsCD,MAAgBb,MAAmBF,MAAqBa,sBAEvG,CACA,CAsCEW,CAAoBtwI,EAAOuqI,EAASxQ,EAAUn6H,GAI1C+/B,EAAQ,CACV,MAAM4wG,EAAerG,GAAiBtqI,EAAS+/B,EAAQyiB,IACvDmoF,EAAQ3B,6BAA6B,IAAI2H,IAC7C,CAKE,MAAMlV,EAAa,CAAE,EAGrB,SAASmV,EAAmBC,EAAiBC,EAAc97I,EAAMwT,GAC/D,IAAKxI,EAAQ6wI,GACX,OAEF,MAAMhG,EAAWJ,GAAoBz1I,GAC/B+7I,EAAWvG,GAAoBx1I,GACrC21I,EAAQxC,aAAa,KAAK2I,IAAgBjG,GAE1CpP,EAAWqV,GAAgB,CACzBxtI,KAAMytI,EACNvoI,WAEN,CAoBE,OAnBAooI,EACE,eACA/L,GACAniF,IACCqX,GACCoqE,GAA0Bh7E,GAAoB4Q,EAAQ70D,kBAE1D0rI,EACE,YACAhM,GACAliF,GAAaD,IACZsX,IACC,MAAM18D,EAAK08D,EAAQ10D,SAAW,KAC9B,MAAqB,iBAAPhI,EAAkB8mI,GAA0B9mI,GAAMA,CAAE,IAItEqtI,GAAsBC,EAAS3qI,GAExB,CACL2qI,UACAlP,WAAY,IAAIA,KAAeuP,GAA8BhrI,IAC7Dm6H,SAAU,IACLA,KACA4Q,GAA4B/qI,EAAS8jD,IAG9C,CClyBA,MAAMktF,GAAW,GAEjB,IAAIC,GACJ,SAASC,KAIP,OAHKD,KACHA,GC/BW,WACL,MAAM52I,EAAS,kuTACf,OAAO,IAAI48G,OAAuB,oBAATC,KACrB,sCAAwCC,OAAO/sE,KAAK/vC,EAAQ,UAAUgnB,SAAS,UAC/E8xD,IAAIikC,gBAAgB,IAAIF,KAAK,CAAC78G,GAAS,CAACrF,KAAM,4BAC5D,CD0BmBm8I,IAEVF,EACT,CACA,IAAIG,GAAuB,EAOpB,MAAMC,GACD,aADCA,GAEJ,UAFIA,GAGI,iBAHJA,GAIE,eAJFA,GAKI,iBALJA,GAME,eANFA,GAOC,eAPDA,GAQE,eARFA,GASD,aAsEZ,MAAMC,GAQJ,WAAAjhJ,CAAYkhJ,EAAgBztF,EAAWg/E,EAAQ0O,EAAoBzxG,GAKjEzvC,KAAKmhJ,QAKLnhJ,KAAKohJ,uBAAyBF,EAE9B,IAAIG,EAAsC,EAE1C,KADkB,YAAaJ,GACf,CACd,MAAMK,EAAgC,EAChCC,EAAc1C,GAClByC,EAAOxxI,MACP0jD,EACA8tF,EAAO7xG,QAET4xG,EAAY,CACVhH,QAASkH,EAAYlH,QACrBlP,WAAYoW,EAAYpW,WACxBtB,SAAU0X,EAAY1X,SAE9B,CAMI7pI,KAAKwhJ,aAMLxhJ,KAAKyhJ,eAMLzhJ,KAAK0hJ,eAML1hJ,KAAKw3I,WAAa6J,EAAUhH,QAAQP,sBAChC95I,KAAKw3I,WAIPx3I,KAAK2hJ,kBAAoBN,EAAUhH,QAAQP,sBAI3C95I,KAAK4hJ,oBAAsBP,EAAUhH,QAAQN,yBAO/C/5I,KAAKg3I,aAAeqK,EAAUhH,QAAQT,wBAClC55I,KAAKg3I,aAIPh3I,KAAK6hJ,oBAAsBR,EAAUhH,QAAQT,wBAI7C55I,KAAK8hJ,sBAAwBT,EAAUhH,QAAQR,2BAOjD75I,KAAKw2I,aAAe6K,EAAUhH,QAAQZ,wBAClCz5I,KAAKw2I,aAIPx2I,KAAK+hJ,oBAAsBV,EAAUhH,QAAQZ,wBAI7Cz5I,KAAKgiJ,sBAAwBX,EAAUhH,QAAQV,2BAOjD35I,KAAKiiJ,eAAiB,KAClBxyG,IACFzvC,KAAKiiJ,eAAiBjiJ,KAAKkiJ,qBAAqBzyG,IAGlD,MAAM0yG,EAAyBniJ,KAAKohJ,qBAChC,CACEgB,SAAU,CACR,QAAAlqI,GACE,OEjOP,SAAuBnL,EAAI1C,GAEhC,MAAMg4I,EAAQ,IACRC,EAASD,IAKf,OAPAh4I,EAAQA,GAAS,IAGX,GAAKuB,KAAKoQ,MAAMjP,EAAKs1I,EAAQA,EAAQA,GAASC,EACpDj4I,EAAM,GAAMuB,KAAKoQ,MAAMjP,EAAKs1I,EAAQA,GAASA,EAASC,EACtDj4I,EAAM,GAAMuB,KAAKoQ,MAAMjP,EAAKs1I,GAASA,EAASC,EAC9Cj4I,EAAM,GAAM0C,EAAKs1I,EAASC,EACnBj4I,CACT,CFwNqBk4I,CAAcviJ,KAAKo9I,IAAKsD,GAChC,EACD1tI,KAAM,IAGV,CAAE,EAKNhT,KAAKwiJ,kBAAoB97I,OAAO2C,OAC9B,CAAE,EACF84I,EACAd,EAAUlW,YAKZnrI,KAAK4pI,UAAYyX,EAAUxX,SAE3B,MAAM4Y,EAAuB/7I,OAAOw0I,QAAQl7I,KAAKwiJ,mBAAmBrxH,KAClE,EAAE/b,EAAMrR,MAAY,CAClBqR,KAAM,KAAKA,IACXpC,KAAMjP,EAAMiP,MAAQ,EACpBtO,KAAMkoI,OAOV5sI,KAAK0iJ,uBAAyB,CAC5B,CACEttI,KAAM2rI,GACN/tI,KAAM,EACNtO,KAAMkoI,OAEL6V,GAMLziJ,KAAK2iJ,0BAA4B,CAC/B,CACEvtI,KAAM2rI,GACN/tI,KAAM,EACNtO,KAAMkoI,IAER,CACEx3H,KAAM2rI,GACN/tI,KAAM,EACNtO,KAAMkoI,IAER,CACEx3H,KAAM2rI,GACN/tI,KAAM,EACNtO,KAAMkoI,IAER,CACEx3H,KAAM2rI,GACN/tI,KAAM,EACNtO,KAAMkoI,IAER,CACEx3H,KAAM2rI,GACN/tI,KAAM,EACNtO,KAAMkoI,IAER,CACEx3H,KAAM2rI,GACN/tI,KAAM,EACNtO,KAAMkoI,IAER,CACEx3H,KAAM2rI,GACN/tI,KAAM,EACNtO,KAAMkoI,OAEL6V,GAMLziJ,KAAK4iJ,qBAAuB,CAC1B,CACExtI,KAAM2rI,GACN/tI,KAAM,EACNtO,KAAMkoI,IAER,CACEx3H,KAAM2rI,GACN/tI,KAAM,EACNtO,KAAMkoI,OAEL6V,GAGLziJ,KAAK6iJ,UAAUrQ,EACnB,CAQE,oBAAA0P,CAAqBzyG,GACnB,MAAM89B,EAAiBha,KAIvB,IAAIuvF,EACJ,IACEA,EAAW9pF,GAAgBvpB,EAAQyiB,GAAaqb,EACtD,CAAM,MAEA,OAAO,IACb,CAGI,GAAIA,EAAe5Z,UAAY4Z,EAAe/Z,UAAUxgD,KAAO,EAC7D,OAAO,KAGT,MAAM+vI,E7HzUD,CACLvvF,UAAW,CAAE,EACbh/C,WAAY,CAAE,EACdyE,WAAY+Y,IACZyhC,UAAW,KACXC,aAAc,I6HqUd,OAAQ+V,IAEN,GADAs5E,EAAYvuI,WAAai1D,EAAQngE,wBAC7BikE,EAAe9Z,UAAW,CAC5B,MAAM1mD,EAAK08D,EAAQ10D,QAEjBguI,EAAYtvF,eADHjtD,IAAPuG,EACsBA,EAEA,IAElC,CAEM,OADAg2I,EAAYrvF,aAAemF,GAAoB4Q,EAAQ70D,eACxBkuI,EAASC,EAAY,CAE1D,CAOE,qBAAMC,CAAgBC,EAAel2H,GACnC,IAAIm2H,EAAgBD,EACpB,GAAIjjJ,KAAKiiJ,iBACPiB,EAAgBA,EAAczzG,OAAOzvC,KAAKiiJ,gBACtCiB,EAAc1+I,WAChB,OAAO,KAGX,MAAMo5I,EAAqB59I,KAAKmjJ,4BAC9BD,EACAn2H,IAEKq2H,EAAgBC,EAAmBC,SAAsBr/I,QAAQg2C,IACtE,CACEj6C,KAAKujJ,wBACH3F,EAAmB4F,oBACnB,UACAz2H,GAEF/sB,KAAKujJ,wBACH3F,EAAmB6F,uBACnB,aACA12H,GAEF/sB,KAAKujJ,wBACH3F,EAAmB8F,kBACnB,QACA32H,KASN,MAAO,CACLq2H,eAAgBA,EAChBC,kBAAmBA,EACnBC,aAAcA,EACdK,wBAR8BC,GtM7X3B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GsM+XnB72H,GAQN,CAQE,2BAAAo2H,CAA4BF,EAAel2H,GACzC,MAAMy2H,EAAsBxjJ,KAAKw3I,SFzP9B,SACLqM,EACAjG,EACAC,EACA9wH,GAOA,MAAM+2H,EACJ,EAAID,EAAMzI,eACT,EAAI4C,GAAwBH,IAAqBgG,EAAM1I,gBACxD0I,EAAMxI,WAELuC,GACDA,EAAmB/8I,SAAWijJ,IAE9BlG,EAAqB,IAAI5rI,aAAa8xI,IAIxC,MAAMxH,EAAa,GACnB,IAAIyH,EAAc,EAClB,IAAK,MAAMpI,KAAckI,EAAM3I,QAAS,CACtC,MAAM4C,EAAa+F,EAAM3I,QAAQS,GACjC,IAAK,IAAIp6I,EAAI,EAAG4E,EAAK23I,EAAWlC,YAAY/6I,OAAQU,EAAI4E,EAAI5E,IAAK,CAC/D+6I,EAAWz7I,OAASi9I,EAAWlC,YAAYr6I,GAAGV,OAC9C4wB,GACEqsH,EAAWlC,YAAYr6I,GACvB,EACA+6I,EAAWz7I,OACX,EACAksB,EACAuvH,GAEFyH,GAAepG,GACbC,EACAC,EACAC,EACAiG,GAIFnG,EAAmBmG,KACjBjG,EAAWhB,oBAAoBv7I,GAAGV,OAGpC,IACE,IAAIgc,EAAI,EAAG6P,EAAKoxH,EAAWhB,oBAAoBv7I,GAAGV,OAClDgc,EAAI6P,EACJ7P,IAEA+gI,EAAmBmG,KACjBjG,EAAWhB,oBAAoBv7I,GAAGsb,GAItC,IAAK,IAAIA,EAAI,EAAG6P,EAAK4vH,EAAWz7I,OAAQgc,EAAI6P,EAAI7P,GAAK,EACnD+gI,EAAmBmG,KAAiBzH,EAAWz/H,GAC/C+gI,EAAmBmG,KAAiBzH,EAAWz/H,EAAI,EAE3D,CACA,CACE,OAAO+gI,CACT,CEwLQoG,CACEf,EAAchI,aACd,IAAIjpI,aAAa,GACjBhS,KAAKwiJ,kBACLz1H,GAEF,KACE02H,EAAyBzjJ,KAAKg3I,WFnUjC,SACL6M,EACAjG,EACAC,EACA9wH,GAMA,MAAM+2H,EACJ,EAAID,EAAMzI,eACT,EAAI4C,GAAwBH,IAAqBgG,EAAM1I,gBAEvDyC,GACDA,EAAmB/8I,SAAWijJ,IAE9BlG,EAAqB,IAAI5rI,aAAa8xI,IAIxC,MAAMxH,EAAa,GACnB,IAAIyH,EAAc,EAClB,IAAK,MAAMpI,KAAckI,EAAM3I,QAAS,CACtC,MAAM4C,EAAa+F,EAAM3I,QAAQS,GACjC,IAAK,IAAIp6I,EAAI,EAAG4E,EAAK23I,EAAWlC,YAAY/6I,OAAQU,EAAI4E,EAAI5E,IAAK,CAC/D+6I,EAAWz7I,OAASi9I,EAAWlC,YAAYr6I,GAAGV,OAC9C4wB,GACEqsH,EAAWlC,YAAYr6I,GACvB,EACA+6I,EAAWz7I,OACX,EACAksB,EACAuvH,EACA,GAEFyH,GAAepG,GACbC,EACAC,EACAC,EACAiG,GAIFnG,EAAmBmG,KAAiBzH,EAAWz7I,OAAS,EAGxD,IAAK,IAAIgc,EAAI,EAAG6P,EAAK4vH,EAAWz7I,OAAQgc,EAAI6P,EAAI7P,GAAK,EACnD+gI,EAAmBmG,KAAiBzH,EAAWz/H,GAC/C+gI,EAAmBmG,KAAiBzH,EAAWz/H,EAAI,GACnD+gI,EAAmBmG,KAAiBzH,EAAWz/H,EAAI,EAE3D,CACA,CACE,OAAO+gI,CACT,CE6QQqG,CACEhB,EAAc1H,gBACd,IAAIvpI,aAAa,GACjBhS,KAAKwiJ,kBACLz1H,GAEF,KACE22H,EAAoB1jJ,KAAKw2I,WF7X5B,SACLqN,EACAjG,EACAC,EACA9wH,GAKA,MAAM+2H,GACH,EAAI9F,GAAwBH,IAAqBgG,EAAM1I,gBAEvDyC,GACDA,EAAmB/8I,SAAWijJ,IAE9BlG,EAAqB,IAAI5rI,aAAa8xI,IAIxC,MAAMI,EAAY,GAClB,IAAIH,EAAc,EAClB,IAAK,MAAMpI,KAAckI,EAAM3I,QAAS,CACtC,MAAM4C,EAAa+F,EAAM3I,QAAQS,GACjC,IAAK,IAAIp6I,EAAI,EAAG4E,EAAK23I,EAAWlC,YAAY/6I,OAAQU,EAAI4E,EAAI5E,IAC1D2iJ,EAAU,GAAKpG,EAAWlC,YAAYr6I,GAAG,GACzC2iJ,EAAU,GAAKpG,EAAWlC,YAAYr6I,GAAG,GACzC4Z,GAAe4R,EAAWm3H,GAE1BtG,EAAmBmG,KAAiBG,EAAU,GAC9CtG,EAAmBmG,KAAiBG,EAAU,GAC9CH,GAAepG,GACbC,EACAC,EACAC,EACAiG,EAGR,CACE,OAAOnG,CACT,CEuVQuG,CACElB,EAAc3H,WACd,IAAItpI,aAAa,GACjBhS,KAAKwiJ,kBACLz1H,GAEF,KAEJ,MAAO,CACLy2H,sBACAC,yBACAC,oBAEN,CASE,uBAAAH,CAAwB3F,EAAoBlqF,EAAc3mC,GACxD,GAA2B,OAAvB6wH,EACF,OAAO,KAGT,MAAMwG,EAAYtD,KAClB,IAAIuD,EACJ,OAAQ3wF,GACN,IAAK,UACH2wF,EAAc3G,GACd,MACF,IAAK,aACH2G,EAAc3G,GACd,MACF,IAAK,QACH2G,EAAc3G,GAOlB,MAAMlhH,EAAU,CACdzvB,GAAIq3I,EACJ1/I,KAAM2/I,EACNzG,mBAAoBA,EAAmBhoI,OACvC0uI,4BAA6Bv3H,EAC7Bw3H,qBAAsBvG,GAAwBh+I,KAAKwiJ,oBAE/C7B,EAAeC,KAMrB,OALAD,EAAar5B,YAAY9qF,EAAS,CAACohH,EAAmBhoI,SAGtDgoI,EAAqB,KAEd,IAAI35I,SAASE,IAIlB,MAAMqgJ,EAAiB3+I,IACrB,MAAM4+I,EAAW5+I,EAAM/D,KAGvB,GAAI2iJ,EAAS13I,KAAOq3I,EAClB,OAOF,GAHAzD,EAAar6I,oBAAoB,UAAWk+I,IAGvCxkJ,KAAKmhJ,QAAQnX,QAChB,OAIF,MAAM0a,EAAiB,IAAIzc,GACzB98B,GhB/dkB,OgBielBo9B,gBAAgBkc,EAASE,cACrBC,EAAgB,IAAI3c,GACxBH,GhBnekB,OgBqelBS,gBAAgBkc,EAASI,aAC3B7kJ,KAAKmhJ,QAAQtS,gBAAgB6V,GAC7B1kJ,KAAKmhJ,QAAQtS,gBAAgB+V,GAE7BzgJ,EAAQ,CAACygJ,EAAeF,GAAgB,EAG1C/D,EAAar7I,iBAAiB,UAAWk/I,EAAc,GAE7D,CAQE,MAAAxtG,CAAO8uE,EAASplF,EAAYokH,GAC1B9kJ,KAAKw3I,UACHx3I,KAAK+kJ,gBACHj/B,EAAQs9B,eAAe,GACvBt9B,EAAQs9B,eAAe,GACvBpjJ,KAAKwhJ,aACLxhJ,KAAK0iJ,uBACLhiH,EACAokH,GAEJ9kJ,KAAKg3I,YACHh3I,KAAK+kJ,gBACHj/B,EAAQu9B,kBAAkB,GAC1Bv9B,EAAQu9B,kBAAkB,GAC1BrjJ,KAAKyhJ,eACLzhJ,KAAK2iJ,0BACLjiH,EACAokH,GAEJ9kJ,KAAKw2I,YACHx2I,KAAK+kJ,gBACHj/B,EAAQw9B,aAAa,GACrBx9B,EAAQw9B,aAAa,GACrBtjJ,KAAK0hJ,eACL1hJ,KAAK4iJ,qBACLliH,EACAokH,EAER,CAWE,eAAAC,CACEH,EACAF,EACAj3C,EACA09B,EACAzqG,EACAokH,GAEA,MAAME,EAAcJ,EAAczxI,UACd,IAAhB6xI,IAGJhlJ,KAAKmhJ,QAAQj1C,WAAWuB,EAAS/sE,GACjC1gC,KAAKmhJ,QAAQj2C,WAAWw5C,GACxB1kJ,KAAKmhJ,QAAQj2C,WAAW05C,GACxB5kJ,KAAKmhJ,QAAQpP,iBAAiB5G,GAC9B2Z,IACA9kJ,KAAKmhJ,QAAQ7Q,aAAa,EAAG0U,GACjC,CAME,SAAAnC,CAAUrQ,EAAQ1sB,EAAU,MAC1B9lH,KAAKmhJ,QAAU3O,EAEXxyI,KAAKw3I,WACPx3I,KAAKwhJ,aAAexhJ,KAAKmhJ,QAAQ9P,WAC/BrxI,KAAK4hJ,oBACL5hJ,KAAK2hJ,oBAGL3hJ,KAAKg3I,aACPh3I,KAAKyhJ,eAAiBzhJ,KAAKmhJ,QAAQ9P,WACjCrxI,KAAK8hJ,sBACL9hJ,KAAK6hJ,sBAGL7hJ,KAAKw2I,aACPx2I,KAAK0hJ,eAAiB1hJ,KAAKmhJ,QAAQ9P,WACjCrxI,KAAKgiJ,sBACLhiJ,KAAK+hJ,sBAGT/hJ,KAAKmhJ,QAAQ3S,YAAYxuI,KAAK4pI,WAE1B9jB,IACEA,EAAQs9B,iBACVpjJ,KAAKmhJ,QAAQtS,gBAAgB/oB,EAAQs9B,eAAe,IACpDpjJ,KAAKmhJ,QAAQtS,gBAAgB/oB,EAAQs9B,eAAe,KAElDt9B,EAAQu9B,oBACVrjJ,KAAKmhJ,QAAQtS,gBAAgB/oB,EAAQu9B,kBAAkB,IACvDrjJ,KAAKmhJ,QAAQtS,gBAAgB/oB,EAAQu9B,kBAAkB,KAErDv9B,EAAQw9B,eACVtjJ,KAAKmhJ,QAAQtS,gBAAgB/oB,EAAQw9B,aAAa,IAClDtjJ,KAAKmhJ,QAAQtS,gBAAgB/oB,EAAQw9B,aAAa,KAG1D,EGvoBA,MAAM2B,GAAY,IAAInzI,WAAW,GAOjC,MAAMozI,GAKJ,WAAAnlJ,CAAYyyI,EAAQx/H,GAKlBhT,KAAKmhJ,QAAU3O,EACf,MAAMnoC,EAAKmoC,EAAOxI,QAMlBhqI,KAAKqzI,SAAWhpC,EAAGwE,gBAMnB7uG,KAAKmlJ,aAAe96C,EAAGmF,oBAMvBxvG,KAAKolJ,aAAe/6C,EAAGg/B,qBAMvBrpI,KAAK+S,MAAQC,GAAQ,CAAC,EAAG,GAMzBhT,KAAK6S,MAAQ,IAAIf,WAAW,GAM5B9R,KAAKqlJ,iBAAkB,EAEvBrlJ,KAAKslJ,aACT,CAOE,OAAA1pF,CAAQ5oD,GACF9Q,EAAO8Q,EAAMhT,KAAK+S,SAGtB/S,KAAK+S,MAAM,GAAKC,EAAK,GACrBhT,KAAK+S,MAAM,GAAKC,EAAK,GACrBhT,KAAKslJ,cACT,CAME,OAAAnyI,GACE,OAAOnT,KAAK+S,KAChB,CAOE,eAAAwyI,GACEvlJ,KAAKqlJ,iBAAkB,CAC3B,CAOE,OAAAG,GACE,GAAIxlJ,KAAKqlJ,gBAAiB,CACxB,MAAMryI,EAAOhT,KAAK+S,MACZs3F,EAAKrqG,KAAKmhJ,QAAQnX,QAExB3/B,EAAGoF,gBAAgBpF,EAAGqF,YAAa1vG,KAAKmlJ,cACxC96C,EAAG8J,WACD,EACA,EACAnhG,EAAK,GACLA,EAAK,GACLq3F,EAAGkF,KACHlF,EAAGwJ,cACH7zG,KAAK6S,OAEP7S,KAAKqlJ,iBAAkB,CAC7B,CACI,OAAOrlJ,KAAK6S,KAChB,CAUE,SAAA4yI,CAAU1vI,EAAGC,GACX,GAAID,EAAI,GAAKC,EAAI,GAAKD,EAAI/V,KAAK+S,MAAM,IAAMiD,GAAKhW,KAAK+S,MAAM,GAKzD,OAJAkyI,GAAU,GAAK,EACfA,GAAU,GAAK,EACfA,GAAU,GAAK,EACfA,GAAU,GAAK,EACRA,GAGTjlJ,KAAKwlJ,UACL,MAAM5iJ,EACJgJ,KAAKoQ,MAAMjG,IAAM/V,KAAK+S,MAAM,GAAKnH,KAAKoQ,MAAMhG,GAAK,GAAKhW,KAAK+S,MAAM,GAKnE,OAJAkyI,GAAU,GAAKjlJ,KAAK6S,MAAc,EAARjQ,GAC1BqiJ,GAAU,GAAKjlJ,KAAK6S,MAAc,EAARjQ,EAAY,GACtCqiJ,GAAU,GAAKjlJ,KAAK6S,MAAc,EAARjQ,EAAY,GACtCqiJ,GAAU,GAAKjlJ,KAAK6S,MAAc,EAARjQ,EAAY,GAC/BqiJ,EACX,CAKE,UAAA5U,GACE,OAAOrwI,KAAKqzI,QAChB,CAKE,cAAAlD,GACE,OAAOnwI,KAAKmlJ,YAChB,CAKE,cAAA/U,GACE,OAAOpwI,KAAKolJ,YAChB,CAKE,WAAAE,GACE,MAAMtyI,EAAOhT,KAAK+S,MACZs3F,EAAKrqG,KAAKmhJ,QAAQnX,QAExBhqI,KAAKqzI,SAAWrzI,KAAKmhJ,QAAQtyC,cAAc77F,EAAM,KAAMhT,KAAKqzI,UAE5DhpC,EAAGoF,gBAAgBpF,EAAGqF,YAAa1vG,KAAKmlJ,cACxC96C,EAAG/W,SAAS,EAAG,EAAGtgF,EAAK,GAAIA,EAAK,IAChCq3F,EAAGsF,qBACDtF,EAAGqF,YACHrF,EAAGuF,kBACHvF,EAAG4B,WACHjsG,KAAKqzI,SACL,GAGFhpC,EAAGggC,iBAAiBhgC,EAAGigC,aAActqI,KAAKolJ,cAC1C/6C,EAAGogC,oBACDpgC,EAAGigC,aACHjgC,EAAGqgC,kBACH13H,EAAK,GACLA,EAAK,IAEPq3F,EAAGsgC,wBACDtgC,EAAGqF,YACHrF,EAAGugC,iBACHvgC,EAAGigC,aACHtqI,KAAKolJ,cAGPplJ,KAAK6S,MAAQ,IAAIf,WAAWkB,EAAK,GAAKA,EAAK,GAAK,EACpD,ECxKO,MAAMmgI,GAAW,IACnB/G,GACHsZ,cAAe,iBACfC,eAAgB,kBAChBC,aAAc,iBAsChB,MAAMC,WAAiCxT,GAKrC,WAAAtyI,CAAYy5C,EAAOlvC,GAOjBrF,MAAMu0C,EAAO,CACXqwF,SAPe,CACf,CAACsJ,GAASuS,eAAgB,CAAC,EAAG,EAAG,EAAG,GACpC,CAACvS,GAASwS,gBAAiB,CAAC,EAAG,GAC/B,CAACxS,GAASyS,cAAe,GAKzBtX,cAAehkI,EAAQgkI,gBAOzBtuI,KAAKohJ,sBAAwB92I,EAAQw7I,oBAMrC9lJ,KAAK+lJ,iBAKL/lJ,KAAKgmJ,iBAAoB,EAKzBhmJ,KAAKg4E,gBxNiFA,CAACjhE,IAAUA,KAAU,KAAW,KwNxErC/W,KAAKimJ,kB1MzFA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G0M8FrBjmJ,KAAKkmJ,WAAa,CAAC,EAAG,GAItBlmJ,KAAKmmJ,c1MlGA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G0MsGrBnmJ,KAAKiuI,SpE/HA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GoEqInDjuI,KAAKomJ,4B1M5GA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G0MkHrBpmJ,KAAKqmJ,gBAAkB,CAAE,EAMzBrmJ,KAAKsmJ,QAAU,GAMftmJ,KAAKumJ,gBAAkB,GAMvBvmJ,KAAKwmJ,SAAW,GAEhBxmJ,KAAKsrC,cAAchhC,GAKnBtK,KAAKymJ,OAAS,IAAI9L,GAMlB36I,KAAK0mJ,uBAAwB,EAM7B1mJ,KAAK2mJ,kBAAoB,IAC7B,CAME,mBAAAC,CAAoBlmH,GAClB,MAAM32B,EAAS/J,KAAKi+G,WAAWtkE,YACzB3rB,EAAiBE,KACvB,IAAIstH,EACAxtH,IACFwtH,EAAsB7vH,GACpBqC,EACA0S,EAAWsH,UAAUrsB,aAGzB3b,KAAKymJ,OAAO5kE,YAAY93E,EAAOmgD,cAAesxF,GAC9Cx7I,KAAK2mJ,kBAAoB,CACvB7/I,EACEiD,EACA46F,GACA3kG,KAAK6mJ,0BAA0B3/I,KAAKlH,KAAMw7I,IAE5C10I,EACEiD,EACA46F,GACA3kG,KAAK8mJ,4BACL9mJ,MAEF8G,EACEiD,EACA46F,GACA3kG,KAAK+mJ,2BACL/mJ,MAEF8G,EACEiD,EACA46F,GACA3kG,KAAKgnJ,0BACLhnJ,MAGR,CAME,aAAAsrC,CAAchhC,GACZtK,KAAKqmJ,gBAAkB/7I,EAAQkpD,UAC/BxzD,KAAKsmJ,QL+lBF,SAA4Bx2I,GAOjC,MAAMgiD,EAAU9vD,MAAMC,QAAQ6N,GAASA,EAAQ,CAACA,GAGhD,GAAI,UAAWgiD,EAAQ,GAAI,CAEzB,MAAMz8C,EAAS,GACTi4D,EAAK,EAGL25E,EAAkB,GACxB,IAAK,MAAMh5E,KAAQX,EAAO,CACxB,MAAM45E,EAAallJ,MAAMC,QAAQgsE,EAAKn+D,OAASm+D,EAAKn+D,MAAQ,CAACm+D,EAAKn+D,OAElE,IAAIq3I,EAAgBl5E,EAAKx+B,OACrBw+B,EAAKI,MAAQ44E,EAAgBpmJ,SAC/BsmJ,EAAgB,CACd,SACGF,EAAgB91H,KAAKse,GAAW,CAAC,IAAKA,MAEvCw+B,EAAKx+B,QACP03G,EAAcxhJ,KAAKsoE,EAAKx+B,QAEtB03G,EAActmJ,OAAS,IACzBsmJ,EAAgBA,EAAc,KAG9Bl5E,EAAKx+B,QACPw3G,EAAgBthJ,KAAKsoE,EAAKx+B,QAG5B,MAAM23G,EAAoBF,EAAW/1H,KAAKrhB,IAAW,CACnDA,WACIq3I,GAAiB,CAAC13G,OAAQ03G,OAEhC9xI,EAAO1P,QAAQyhJ,EACrB,CACI,OAAO/xI,CACX,CAGE,MAAI,YAAay8C,EAAQ,KAIlBA,EAAQ3gC,KACZrhB,IAC6B,CAC1BA,WAGR,CKxpBmBu3I,CAAmB/8I,EAAQwF,MAC9C,CAKE,gBAAAw3I,GACEtnJ,KAAKwmJ,SAAW,GAChBxmJ,KAAKumJ,gBAAkBvmJ,KAAKsmJ,QAAQn1H,KACjCrhB,GACC,IAAIkxI,GACFlxI,EACA9P,KAAKqmJ,gBACLrmJ,KAAKwyI,OACLxyI,KAAKohJ,qBACL,WAAYtxI,EAAQA,EAAM2/B,OAAS,OAG7C,CAKE,KAAAqjG,CAAMxoI,GACJtK,KAAKsrC,cAAchhC,GACftK,KAAKwyI,QACPxyI,KAAKsnJ,mBAEPriJ,MAAM6tI,MAAMxoI,EAChB,CAKE,kBAAA2oI,GACMjzI,KAAKumJ,gBAAgB1lJ,OAEvBb,KAAKumJ,gBAAgBz7I,SAAQ,CAACg+D,EAAUvnE,IACtCunE,EAAS+5E,UAAU7iJ,KAAKwyI,OAAQxyI,KAAKwmJ,SAASjlJ,MAGhDvB,KAAKsnJ,mBAGHtnJ,KAAKohJ,uBACPphJ,KAAK+lJ,iBAAmB,IAAIb,GAAkBllJ,KAAKwyI,QAEzD,CAOE,yBAAAqU,CAA0BrL,EAAqB31I,GAC7C,MAAM4jE,EAAU5jE,EAAM4jE,QACtBzpE,KAAKymJ,OAAOzgD,WAAWv8B,EAAS+xE,EACpC,CAME,2BAAAsL,CAA4BjhJ,GAC1B,MAAM4jE,EAAU5jE,EAAM4jE,QACtBzpE,KAAKymJ,OAAOnJ,cAAc7zE,EAC9B,CAME,0BAAAs9E,CAA2BlhJ,GACzB,MAAM4jE,EAAU5jE,EAAM4jE,QACtBzpE,KAAKymJ,OAAO9/C,cAAcl9B,EAC9B,CAKE,yBAAAu9E,GACEhnJ,KAAKymJ,OAAOpiJ,OAChB,CAME,cAAAkjJ,CAAeC,GAEbC,GAAiBznJ,KAAKmmJ,cAAenmJ,KAAKomJ,6BAC1C35D,GAAkBzsF,KAAKmmJ,cAAeqB,GACtCxnJ,KAAKwyI,OAAOpB,sBACV+B,GAAS9G,kBACTqb,GAAkB1nJ,KAAKiuI,SAAUjuI,KAAKmmJ,gBAIxCvC,GAAqB5jJ,KAAKmmJ,cAAenmJ,KAAKmmJ,eAC9CnmJ,KAAKwyI,OAAOpB,sBACV+B,GAAS7G,uBACTob,GAAkB1nJ,KAAKiuI,SAAUjuI,KAAKmmJ,gBAIxCnmJ,KAAKkmJ,WAAW,GAAK,EACrBlmJ,KAAKkmJ,WAAW,GAAK,EACrBtC,GAAqB5jJ,KAAKmmJ,cAAeqB,GACzCrsI,GAAenb,KAAKmmJ,cAAenmJ,KAAKkmJ,YACxClmJ,KAAKwyI,OAAO1B,oBAAoBqC,GAASwS,eAAgB3lJ,KAAKkmJ,WAClE,CAQE,WAAAr7F,CAAYnqB,GACV,MAAM2pE,EAAKrqG,KAAKwyI,OAAOxI,QACvBhqI,KAAK2/G,UAAUtV,EAAI3pE,GAEnB,MAAOinH,EAAY9jB,EAAU9nH,GC/V1B,SAA4B2kB,EAAY8Y,GAC7C,MAAM79B,EAAa+kB,EAAWsH,UAAUrsB,WAGlCO,EADes9B,EAAMG,YACKg8B,YAAch6D,EAAWG,WACnDF,EAAmBD,EAAWE,YAE9BpG,EAASirB,EAAWjrB,OACpBsG,EAAaG,EAAaxD,GAASkD,GAAoB,KACvDioH,EAAW3nH,EACbtQ,KAAKgS,MAAMnI,EAAO,GAAKmG,EAAiB,IAAMG,GAAc,EAC5D,EAMJ,MAAO,CAJYG,EACftQ,KAAKoQ,OAAOvG,EAAO,GAAKmG,EAAiB,IAAMG,GAC/C,EAEgB8nH,EAAU9nH,EAChC,CD6U+C6rI,CACzClnH,EACA1gC,KAAKi+G,YAIPj+G,KAAKwyI,OAAOvD,YAAYvuG,GACxB1gC,KAAKyjI,aAAa/iG,GAAY,EAAOinH,EAAY9jB,EAAU9nH,GAC3D/b,KAAKwyI,OAAO7B,aACVjwG,EACA1gC,KAAK4yI,wBACL5yI,KAAK6yI,0BAGP,MAAM3jI,EAASlP,KAAKwyI,OAAOpD,YAS3B,OAPIpvI,KAAKohJ,uBACPphJ,KAAKyjI,aAAa/iG,GAAY,EAAMinH,EAAY9jB,EAAU9nH,GAC1D/b,KAAK+lJ,iBAAiBR,mBAGxBvlJ,KAAK4/G,WAAWvV,EAAI3pE,GAEbxxB,CACX,CAQE,oBAAAgkI,CAAqBxyG,GACd1gC,KAAK0mJ,wBACR1mJ,KAAK4mJ,oBAAoBlmH,GACzB1gC,KAAK0mJ,uBAAwB,GAG/B,MAAMltG,EAAQx5C,KAAKi+G,WACb2lB,EAAepqF,EAAMG,YACrB3R,EAAYtH,EAAWsH,UACvB6/G,GACHnnH,EAAWw7C,UAAUj0C,MACrBvH,EAAWw7C,UAAUj0C,IAClBy5E,GAAiBx/G,GAAOlC,KAAKg4E,gBAAiBt3C,EAAWjrB,QACzDqyI,EAAgB9nJ,KAAKgmJ,gBAAkBpiB,EAAa/7H,cAM1D,GAJIigJ,IACF9nJ,KAAKgmJ,gBAAkBpiB,EAAa/7H,eAGlCggJ,IAAkBnmC,GAAiBomC,GAAgB,CACrD,MAAMnsI,EAAaqsB,EAAUrsB,WACvB1C,EAAa+uB,EAAU/uB,WAEvBo6D,EACJ75B,aAAiBuuG,GAAavuG,EAAMq6B,kBAAoB,EACpDp+D,EAASG,GAAO8qB,EAAWjrB,OAAQ49D,EAAep6D,GAElD+U,EAAiBE,KACnBF,EACF41G,EAAaz7B,aACX55E,GAAa9Y,EAAQuY,GACrBS,GAAiBxV,EAAY0C,GAC7BqS,GAGF41G,EAAaz7B,aAAa1yF,EAAQwD,EAAY0C,GAGhD3b,KAAK07D,OAAQ,EAEb,MAAM3uC,EAAY/sB,KAAKwyI,OAAOd,wBAC5BhxG,E1M7YC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,I0MiZbsnH,EAAmBhoJ,KAAKumJ,gBAAgBp1H,KAAI,CAAC23C,EAAUvnE,IAC3DunE,EAASk6E,gBAAgBhjJ,KAAKymJ,OAAQ15H,GAAWxZ,MAAMuyG,IACjD9lH,KAAKwmJ,SAASjlJ,IAChBvB,KAAKioJ,eAAejoJ,KAAKwmJ,SAASjlJ,IAEpCvB,KAAKwmJ,SAASjlJ,GAAKukH,CAAO,MAG9B7hH,QAAQg2C,IAAI+tG,GAAkBz0I,MAAK,KACjCvT,KAAK07D,OAAQ,EACb17D,KAAKi+G,WAAWr2G,SAAS,IAG3B5H,KAAKg4E,gBAAkBt3C,EAAWjrB,OAAOjS,OAC/C,CAEI,OAAO,CACX,CAUE,YAAAigI,CAAa/iG,EAAYwnH,EAAiBP,EAAY9jB,EAAU9nH,GAC9D,IAAI+nH,EAAQ6jB,EAERO,IACFloJ,KAAK+lJ,iBAAiBnqF,QAAQ,CAC5BhwD,KAAKoQ,MAAM0kB,EAAW1tB,KAAK,GAAK,GAChCpH,KAAKoQ,MAAM0kB,EAAW1tB,KAAK,GAAK,KAElChT,KAAKwyI,OAAOvC,0BACVvvG,EACA1gC,KAAK+lJ,kBACL,IAIJ,EAAG,CACD/lJ,KAAKwyI,OAAOd,wBACVhxG,EACA1gC,KAAKomJ,6BAEP+B,GACEnoJ,KAAKomJ,4BACLtiB,EAAQ/nH,EACR,GAEF,IAAK,IAAIxa,EAAI,EAAG4E,EAAKnG,KAAKumJ,gBAAgB1lJ,OAAQU,EAAI4E,EAAI5E,IAAK,CAC7D,MAAMunE,EAAW9oE,KAAKumJ,gBAAgBhlJ,GAChCukH,EAAU9lH,KAAKwmJ,SAASjlJ,GACzBukH,GAGLh9C,EAAS9xB,OAAO8uE,EAASplF,GAAY,KACnC1gC,KAAKunJ,eAAezhC,EAAQ69B,yBAC5B3jJ,KAAKwyI,OAAOzB,yBAAyBmX,EAAgB,GAE/D,CACA,SAAepkB,EAAQD,EACvB,CAYE,0BAAA7uD,CACE5+D,EACAsqB,EACAu0C,EACA/8D,EACAu9D,GAMA,GAJA9hE,GACE3T,KAAKohJ,qBACL,4JAEGphJ,KAAKumJ,gBAAgB1lJ,SAAWb,KAAKohJ,qBACxC,OAGF,MAAMngH,EAAQ9lB,GACZulB,EAAWo0C,2BACX1+D,EAAW5S,SAGP1B,EAAO9B,KAAK+lJ,iBAAiBN,UAAUxkH,EAAM,GAAK,EAAGA,EAAM,GAAK,GAEhEm8G,EFzfH,SAAuB3sF,GAC5B,IAAI1jD,EAAK,EACT,MAAMs1I,EAAQ,IACR+F,EAAO/F,IAKb,OAJAt1I,GAAMnB,KAAK+R,MAAM8yC,EAAM,GAAK4xF,EAAQA,EAAQA,EAAQ+F,GACpDr7I,GAAMnB,KAAK+R,MAAM8yC,EAAM,GAAK4xF,EAAQA,EAAQ+F,GAC5Cr7I,GAAMnB,KAAK+R,MAAM8yC,EAAM,GAAK4xF,EAAQ+F,GACpCr7I,GAAMnB,KAAK+R,MAAM8yC,EAAM,GAAK23F,GACrBr7I,CACT,CEgfgBs7I,CADE,CAACvmJ,EAAK,GAAK,IAAKA,EAAK,GAAK,IAAKA,EAAK,GAAK,IAAKA,EAAK,GAAK,MAEhE2nE,EAAUzpE,KAAKymJ,OAAOlJ,kBAAkBH,GAC9C,OAAI3zE,EACKvxD,EAASuxD,EAASzpE,KAAKi+G,WAAY,WAD5C,CAIJ,CAME,cAAAgqC,CAAeniC,GAIb,MAAMwiC,EAAwBC,IAC5B,IAAK,MAAM3yI,KAAU2yI,EACf3yI,GACF5V,KAAKwyI,OAAO1D,aAAal5H,EAEnC,EAEQkwG,EAAQw9B,cACVgF,EAAqBxiC,EAAQw9B,cAE3Bx9B,EAAQu9B,mBACViF,EAAqBxiC,EAAQu9B,mBAE3Bv9B,EAAQs9B,gBACVkF,EAAqBxiC,EAAQs9B,eAEnC,CAME,eAAAjjJ,GACEH,KAAKwmJ,SAAS17I,SAASg7G,IACjBA,GACF9lH,KAAKioJ,eAAeniC,EAC5B,IAEQ9lH,KAAK2mJ,oBACP3mJ,KAAK2mJ,kBAAkB77I,SAAQ,SAAUxD,GACvCD,EAAcC,EACtB,IACMtH,KAAK2mJ,kBAAoB,MAE3B1hJ,MAAM9E,iBACV,CAEE,eAAA6qD,GAAkB,EE9gBpB,MAAM/gD,GACE,OADFA,GAEM,WAFNA,GAGI,SAOJu+I,GAAmB,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QC3C1D,MAAMC,GAMU,cAQT,MAAMC,WAAyB3iJ,EAOpC,WAAAhG,CAAY2E,EAAMikJ,EAAMjuE,EAAU/+D,GAChC1W,MAAMP,GAON1E,KAAK06E,SAAWA,EAOhB16E,KAAK2oJ,KAAOA,EAOZ3oJ,KAAK2b,WAAaA,CACtB,ECgGA,MAAMitI,GAMO,YANPA,GAYK,UAZLA,GAkBO,YAQN,MAAMC,WAAkB9iJ,EAK7B,WAAAhG,CAAY2E,EAAM+kE,GAChBxkE,MAAMP,GAON1E,KAAKypE,QAAUA,CACnB,EA4BA,SAASq/E,GAAmB/nJ,EAAGC,GAC7B,OAAOsb,GAAgBvb,EAAE,GAAIA,EAAE,GAAIC,EAAE,GAAIA,EAAE,GAC7C,CAOA,SAAS+nJ,GAAcvzI,EAAa5S,GAClC,MAAMwjC,EAAQ5wB,EAAY3U,OAC1B,OAAI+B,EAAQ,EACH4S,EAAY5S,EAAQwjC,GAEzBxjC,GAASwjC,EACJ5wB,EAAY5S,EAAQwjC,GAEtB5wB,EAAY5S,EACrB,CAWA,SAASomJ,GAA6BxzI,EAAa6wB,EAAYq2G,GAC7D,IAAIuM,EAAUC,EACV7iH,EAAaq2G,GACfuM,EAAW5iH,EACX6iH,EAAYxM,IAEZuM,EAAWvM,EACXwM,EAAY7iH,GAEd,MAAM8iH,EAAgBv9I,KAAKgS,KAAKqrI,GAC1BG,EAAiBx9I,KAAKoQ,MAAMktI,GAElC,GAAIC,EAAgBC,EAAgB,CAIlC,OAAON,GAFOO,GAAsB7zI,EAAayzI,GACrCI,GAAsB7zI,EAAa0zI,GAEnD,CAEE,IAAIv9F,EAAK,EAET,GAAIs9F,EAAWE,EAAe,CAG5Bx9F,GAAMm9F,GAFQO,GAAsB7zI,EAAayzI,GACrCF,GAAcvzI,EAAa2zI,GAE3C,CAEE,GAAIC,EAAiBF,EAAW,CAG9Bv9F,GAAMm9F,GAFQC,GAAcvzI,EAAa4zI,GAC7BC,GAAsB7zI,EAAa0zI,GAEnD,CAEE,IAAK,IAAI3nJ,EAAI4nJ,EAAe5nJ,EAAI6nJ,EAAiB,IAAK7nJ,EAAG,CAGvDoqD,GAAMm9F,GAFQC,GAAcvzI,EAAajU,GAC7BwnJ,GAAcvzI,EAAajU,EAAI,GAE/C,CAEE,OAAOoqD,CACT,CAOA,SAAS29F,GAA2BlzI,EAAY9B,EAAUi1I,GACxD,GAAIj1I,aAAoB22E,GACtBu+D,GAAkBpzI,EAAY9B,EAASyf,kBAAkB,EAAOw1H,QAGlE,GAAIj1I,aAAoBg3E,GAAxB,CACE,MAAM91E,EAAclB,EAASyf,iBAC7B,IAAK,IAAIxyB,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EACjDioJ,GAAkBpzI,EAAYZ,EAAYjU,IAAI,EAAOgoJ,EAG3D,MACE,GAAIj1I,aAAoBsmB,GAAxB,CACE,MAAMplB,EAAclB,EAASyf,iBAC7B,IAAK,IAAIxyB,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EACjDioJ,GAAkBpzI,EAAYZ,EAAYjU,IAAI,EAAMgoJ,EAG1D,MACE,GAAIj1I,aAAoBi3E,GAAxB,CACE,MAAMk+D,EAAQn1I,EAASyf,iBACvB,IAAK,IAAIxyB,EAAI,EAAG4E,EAAKsjJ,EAAM5oJ,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAMiU,EAAci0I,EAAMloJ,GAC1B,IAAK,IAAIsb,EAAI,EAAG6P,EAAKlX,EAAY3U,OAAQgc,EAAI6P,IAAM7P,EACjD2sI,GAAkBpzI,EAAYZ,EAAYqH,IAAI,EAAM0sI,EAE5D,CAEA,MACE,GAAIj1I,aAAoBk3E,GAAxB,CACE,MAAM9D,EAAapzE,EAASwkD,gBAC5B,IAAK,IAAIv3D,EAAI,EAAGA,EAAImmF,EAAW7mF,SAAUU,EACvC+nJ,GAA2BlzI,EAAYsxE,EAAWnmF,GAAIgoJ,EAG5D,MAEA,CAWA,MAAMG,GAAmB,CAAC9mJ,SAAW85I,SAAU1qH,KA6H/C,SAASw3H,GAAkBpzI,EAAYZ,EAAam0I,EAAMJ,GACxD,MAAMxzI,EAAIK,EAAW,GACfJ,EAAII,EAAW,GACrB,IAAK,IAAI7U,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAS,EAAGU,EAAI4E,IAAM5E,EAAG,CACxD,MAEM44G,EAAMyvC,GAA4B7zI,EAAGC,EAF7BR,EAAYjU,GACdiU,EAAYjU,EAAI,IAE5B,GAA4B,IAAxB44G,EAAI79F,gBAAuB,CAC7B,MAAM1Z,EAAQrB,EAAI44G,EAAIr5F,MAOtB,YANAyoI,EAAQ5jJ,KAAK,CACX6P,YAAaA,EACbm0I,KAAMA,EACNtjH,WAAYzjC,EACZ85I,SAAU95I,GAGlB,CACA,CACA,CAWA,MAAMinJ,GAAY,CAAC/oI,MAAO,EAAGxE,gBAAiB,GAU9C,SAASstI,GAA4B7zI,EAAGC,EAAG/I,EAAOtL,GAChD,MAAM0X,EAAKpM,EAAM,GACXqM,EAAKrM,EAAM,GAGXgJ,EAFKtU,EAAI,GAEC0X,EACVnD,EAFKvU,EAAI,GAEC2X,EAChB,IAAIwH,EAAQ,EACR2gC,EAAKpoC,EACLywI,EAAKxwI,EAST,OARW,IAAPrD,GAAmB,IAAPC,IACd4K,EAAQ1E,KAAQrG,EAAIsD,GAAMpD,GAAMD,EAAIsD,GAAMpD,IAAOD,EAAKA,EAAKC,EAAKA,GAAK,EAAG,GACxEurC,GAAMxrC,EAAK6K,EACXgpI,GAAM5zI,EAAK4K,GAGb+oI,GAAU/oI,MAAQA,EAClB+oI,GAAUvtI,gBAAkBkB,GAAQlB,GAAgBvG,EAAGC,EAAGyrC,EAAIqoG,GAAK,IAC5DD,EACT,CAOA,SAASR,GAAsB7zI,EAAa5S,GAC1C,MAAMwjC,EAAQ5wB,EAAY3U,OAE1B,IAAIwlC,EAAaz6B,KAAKoQ,MAAMpZ,GAC5B,MAAMke,EAAQle,EAAQyjC,EAClBA,GAAcD,EAChBC,GAAcD,EACLC,EAAa,IACtBA,GAAcD,GAGhB,IAAIs2G,EAAWr2G,EAAa,EACxBq2G,GAAYt2G,IACds2G,GAAYt2G,GAGd,MAAMn5B,EAAQuI,EAAY6wB,GACpBltB,EAAKlM,EAAM,GACXmM,EAAKnM,EAAM,GACXtL,EAAM6T,EAAYknI,GAIxB,MAAO,CAACvjI,GAHGxX,EAAI,GAAKwX,GAGF2H,EAAO1H,GAFdzX,EAAI,GAAKyX,GAEe0H,EACrC,CAswCA,SAASipI,KACP,MAAM10I,EAASy0D,KACf,OAAO,SAAUL,EAASxwD,GACxB,OAAO5D,EAAOo0D,EAAQ70D,cAAcwe,UACrC,CACH,CC5xDA,MAAM42H,GAMW,gBAQV,MAAMC,WAAoBlkJ,EAI/B,WAAAhG,CAAY0V,GACVxQ,MAAM+kJ,IAONhqJ,KAAKyV,OAASA,CAClB,EA6ZA,SAASy0I,KACP,MAAMp6I,EAAQg6D,KACd,OAAO,SAAUL,EAASxwD,GACxB,OAAOnJ,EAAe,OACvB,CACH,CAOA,SAASq6I,KACP,MAAMr6I,EAAQg6D,KACd,OAAO,SAAUL,EAASxwD,GACxB,OAAOnJ,EAAa,KACrB,CACH,CAMA,SAASs6I,GAAgBC,GACvB,OAAO,SAAUhlI,GACf,OAAO9P,GAAe,CAAC80I,EAAYhlI,GACpC,CACH,CAOA,SAASilI,GAAeC,EAASC,GAC/B,OAAID,EAAQ,IAAMC,EAAQ,GACjB,SAAUnlI,GACf,OAAO9P,GAAe,CAACg1I,EAAS,CAACllI,EAAM,GAAImlI,EAAQ,KACpD,EAECD,EAAQ,IAAMC,EAAQ,GACjB,SAAUnlI,GACf,OAAO9P,GAAe,CAACg1I,EAAS,CAACC,EAAQ,GAAInlI,EAAM,KACpD,EAEI,IACT,CC9fA,SAASolI,GAAW3W,GAClB,OAAO1iH,WAAW0iH,EACpB,CAMA,SAAS4W,GAAYhrI,GACnB,OAjBF,SAAaA,GACX,OAAOlC,GAAQkC,EAAQ,EACzB,CAeSirI,CAAIjrI,GAAQqR,UACrB,CAOA,SAAS65H,GAAgB7pJ,EAAGC,GAC1B,OAAIkyB,MAAMnyB,IAGHA,IAAM0pJ,GAAWC,GAAY1pJ,GACtC,CCOA,MASMgxF,GAAa,CAAC,EAAG,EAAG,EAAG,GACvB64D,GAAc,GAKdC,GAMS,cANTA,GAYO,YAkEN,MAAMC,WAAoBhlJ,EAQ/B,WAAAhG,CAAY2E,EAAMg2E,EAAU79B,GAC1B53C,MAAMP,GAON1E,KAAK06E,SAAWA,EAOhB16E,KAAK68C,gBAAkBA,CAC3B,EAkhDA,SAASmuG,GAAejqJ,EAAGC,GACzB,OAAOD,EAAE6B,MAAQ5B,EAAE4B,KACrB,CAYA,SAASqoJ,GACPC,EACAC,EACAxvI,GAEA,MAAMrH,EAAW62I,EAAY72I,SAE7B,GAA2B,WAAvBA,EAAS8e,UAAwB,CACnC,IAAI+vD,EAAc,EAIlB,GA1pD+B,IA0pD3BgoE,EAAYvoJ,MAAsC,CACpD,MAAMorB,EAAiBE,KACnBF,IACFm1D,EAAiBA,EACd1uE,QACAsY,UAAUiB,EAAgBrS,IAE/B,MAAMyvI,EAA0BC,GAC9BloE,EAAevqE,YACfyV,GAAmB68H,EAAkBvvI,IAEjC2vI,EACJ1/I,KAAK6S,KAAK2sI,GAA2BjoE,EAAeziE,YACtD,OAAO4qI,EAA0BA,CACvC,CACA,CAEE,MAAMl1I,EAAaiY,GAAmB68H,EAAkBvvI,GAGxD,OAFAkvI,GAAY,GAAKx8H,GAAmB88H,EAAYtqI,QAAQ,GAAIlF,GAC5DkvI,GAAY,GAAKx8H,GAAmB88H,EAAYtqI,QAAQ,GAAIlF,GACrDyG,GAAyBhM,EAAYy0I,GAC9C,CAYA,SAASU,GAAqBL,EAAkBC,EAAaxvI,GAC3D,MAAMrH,EAAW62I,EAAY72I,SAE7B,GACyB,WAAvBA,EAAS8e,WA/rDsB,IAgsD/B+3H,EAAYvoJ,MACZ,CACA,IAAIugF,EAAc,EAGlB,MAAMn1D,EAAiBE,KAMvB,OALIF,IACFm1D,EAAiBA,EACd1uE,QACAsY,UAAUiB,EAAgBrS,IAExBwS,GACLg1D,EAAepwD,gBACb1E,GAAmB68H,EAAkBvvI,IAEvCA,EAEN,CACE,MAAMvF,EAAaiY,GAAmB68H,EAAkBvvI,GAGxD,OAFAkvI,GAAY,GAAKx8H,GAAmB88H,EAAYtqI,QAAQ,GAAIlF,GAC5DkvI,GAAY,GAAKx8H,GAAmB88H,EAAYtqI,QAAQ,GAAIlF,GACrDwS,GACLvN,GAAiBxK,EAAYy0I,IAC7BlvI,EAEJ,CAKA,SAASouI,KACP,MAAMj6I,EAAQg6D,KACd,OAAO,SAAUL,EAASxwD,GACxB,OAAOnJ,EAAa,KACrB,CACH,CCzwDA,MAAM07I,GAMI,SAsEH,MAAMC,WAAoB1lJ,EAQ/B,WAAAhG,CAAY2E,EAAMgnJ,EAAUC,EAAY9uG,GACtC53C,MAAMP,GAON1E,KAAK0rJ,SAAWA,EAOhB1rJ,KAAK2rJ,WAAaA,EAOlB3rJ,KAAK68C,gBAAkBA,CAC3B,EAOA,MAAM+uG,GAAwB,CAAE,EAyBhC,MAAMC,WAAenvG,GAInB,WAAA38C,CAAYuK,GA0FV,IAAI6qE,EACJ,GA1FAlwE,QAKAjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAEL4C,EAAUA,GAAoB,CAAE,EAKhCtK,KAAK8rJ,iBAAmB9rJ,KAAK+rJ,YAAY7kJ,KAAKlH,MAK9CA,KAAKgsJ,oBAAsBhsJ,KAAKisJ,eAAe/kJ,KAAKlH,MAMpDA,KAAKwgD,WAAal2C,EAAQi2C,UAAYj2C,EAAQi2C,UAAY9B,GAM1Dz+C,KAAKksJ,cAAgB5hJ,EAAQ6hJ,aAAe7hJ,EAAQ6hJ,aAAe3tG,GAMnEx+C,KAAKosJ,iBAAmB9hJ,EAAQ+hJ,gBAC5B/hJ,EAAQ+hJ,gBACR7tG,GAMJx+C,KAAKssJ,iBAAmBhiJ,EAAQiiJ,gBAC5BjiJ,EAAQiiJ,gBACR3tG,GAMJ5+C,KAAKwsJ,SAASliJ,EAAQmiJ,OAAQniJ,EAAQmiJ,MAMtCzsJ,KAAK0sJ,QAAUpiJ,EAAQmlC,OAASnlC,EAAQmlC,OAAS3sC,EAMjD9C,KAAK2sJ,cAAgBriJ,EAAQ2qE,aAAe3qE,EAAQ2qE,aAAe,EAMnEj1E,KAAKkU,YACe1N,IAAlB8D,EAAQwF,MAAsBxF,EAAQwF,MA+U5C,WACE,MAAMuF,EAASy0D,KAIf,OAHAjoE,EAAOwT,EAAgB,QAAGA,EAAmB,YAC7CxT,EAAOwT,EAA2B,mBAAGA,EAAmB,YAEjD,SAAUo0D,GACf,OAAKA,EAAQ70D,cAGNS,EAAOo0D,EAAQ70D,cAAcwe,WAF3B,IAGV,CACH,CA1VoD22H,GAMhD/pJ,KAAK4sJ,UAAYtiJ,EAAQowE,UAAY,IAAItwE,EAIrCE,EAAQ6uC,OACV,GAA8B,mBAAnB7uC,EAAQ6uC,OACjBg8B,EAAc7qE,EAAQ6uC,WACjB,CACL,MAAMA,EAAS7uC,EAAQ6uC,OACvBg8B,EAAc,SAAU37B,GACtB,OAAOL,EAAOzzC,SAAS8zC,EACxB,CACT,MAEM27B,EAAcryE,EAOhB9C,KAAK6sJ,aAAe13E,EAQpBn1E,KAAK8sJ,yBAA2B,CAAE,CACtC,CAOE,2BAAAC,CAA4BtjF,EAASjwB,GACnCx5C,KAAK8sJ,yBAAyBvkJ,EAAOkhE,IAAYjwB,CACrD,CAOE,WAAA0Q,GACE,OAAOlqD,KAAK4sJ,SAChB,CAOE,eAAAI,GACE,OAAOhtJ,KAAK2sJ,aAChB,CASE,QAAA1uC,CAASx0C,GACP,OACEzpE,KAAK8sJ,yBAAyBvkJ,EAAOkhE,GAE3C,CAQE,eAAAwjF,CAAgBh4E,GACdj1E,KAAK2sJ,cAAgB13E,CACzB,CASE,MAAA99B,CAAOhmB,GACcnxB,KAAKk3C,UACNl3C,KAAKkU,QACrBlU,KAAK4sJ,UAAU9hJ,QAAQ9K,KAAKktJ,sBAAsBhmJ,KAAKlH,OAEzDiF,MAAMkyC,OAAOhmB,GACTA,GACFnxB,KAAK4sJ,UAAUtnJ,iBACb3F,EACAK,KAAK8rJ,kBAEP9rJ,KAAK4sJ,UAAUtnJ,iBACb3F,EACAK,KAAKgsJ,qBAGHhsJ,KAAKkU,QACPlU,KAAK4sJ,UAAU9hJ,QAAQ9K,KAAKmtJ,oBAAoBjmJ,KAAKlH,SAGvDA,KAAK4sJ,UAAUtmJ,oBACb3G,EACAK,KAAK8rJ,kBAEP9rJ,KAAK4sJ,UAAUtmJ,oBACb3G,EACAK,KAAKgsJ,qBAGb,CAME,WAAAD,CAAYhnJ,GACV,MAAM0kE,EAAU1kE,EAAIoF,QAIpB,GAHInK,KAAKkU,QACPlU,KAAKmtJ,oBAAoB1jF,IAEtBzpE,KAAKi+G,SAASx0C,GAAU,CAC3B,MAAMjwB,EACJx5C,KAAKk3C,SACFkC,eACAmR,MAAK,SAAU/Q,GACd,GACEA,aAAiBmuF,IACjBnuF,EAAMG,aACNH,EAAMG,YAAYuuD,WAAWz+B,GAE7B,OAAOjwB,CAEV,IAEDA,GACFx5C,KAAK+sJ,4BAA4BtjF,EAASjwB,EAElD,CACA,CAME,cAAAyyG,CAAelnJ,GACT/E,KAAKkU,QACPlU,KAAKktJ,sBAAsBnoJ,EAAIoF,QAErC,CAKE,QAAA0K,GACE,OAAO7U,KAAKkU,MAChB,CAME,mBAAAi5I,CAAoB1jF,GAClB,MAAMniE,EAAMiB,EAAOkhE,GACbniE,KAAOskJ,KACXA,GAAsBtkJ,GAAOmiE,EAAQ50D,YAEvC40D,EAAQ30D,SAAS9U,KAAKkU,OAC1B,CAME,qBAAAg5I,CAAsBzjF,GACpB,MAAM/jB,EAAe1lD,KAAKk3C,SAAS+iC,kBAAkBjvE,WACrD,IAAK,IAAIzJ,EAAImkD,EAAa7kD,OAAS,EAAGU,GAAK,IAAKA,EAAG,CACjD,MAAMs4E,EAAcn0B,EAAankD,GACjC,GACEs4E,IAAgB75E,MAChB65E,aAAuBgyE,IACvBhyE,EAAYhlE,aACkD,IAA9DglE,EAAY3vB,cAAcl/C,WAAWk5H,YAAYz6D,GAGjD,YADAA,EAAQ30D,SAAS+kE,EAAYhlE,WAGrC,CAEI,MAAMvN,EAAMiB,EAAOkhE,GACnBA,EAAQ30D,SAAS82I,GAAsBtkJ,WAChCskJ,GAAsBtkJ,EACjC,CAME,8BAAA8lJ,CAA+B3jF,UACtBzpE,KAAK8sJ,yBAAyBvkJ,EAAOkhE,GAChD,CASE,WAAArjE,CAAYy2C,GACV,IAAK78C,KAAKwgD,WAAW3D,GACnB,OAAO,EAET,MAAMt8B,EAAMvgB,KAAKksJ,cAAcrvG,GACzBxxC,EAASrL,KAAKosJ,iBAAiBvvG,GAC/BtC,EAASv6C,KAAKssJ,iBAAiBzvG,GAC/BjzC,GAAO2W,IAAQlV,IAAWkvC,EAC1BppB,EAAM0rB,EAAgB1rB,IACtBupD,EAAW16E,KAAKkqD,cAKhByhG,EAAa,GAKbD,EAAW,GAEjB,GAAI9hJ,EAAK,CAIPvF,EAAMrE,KAAK8sJ,0BACX37H,EAAIqpD,sBACF39B,EAAgB5b,OAMhB,CAACwoC,EAASjwB,KACR,GAAMiwB,aAAmB31D,IAAa9T,KAAK0sJ,QAAQjjF,EAASjwB,GAK5D,OAFAx5C,KAAK+sJ,4BAA4BtjF,EAASjwB,GAC1CkyG,EAAS/lJ,KAAK8jE,IACNzpE,KAAKwsJ,MAAM,GAErB,CACEr3E,YAAan1E,KAAK6sJ,aAClB53E,aAAcj1E,KAAK2sJ,gBAGvB,IAAK,IAAIprJ,EAAIm5E,EAAS9vE,YAAc,EAAGrJ,GAAK,IAAKA,EAAG,CAClD,MAAMkoE,EAAUiR,EAASzvE,KAAK1J,GACxBqB,EAAQ8oJ,EAAS9kJ,QAAQ6iE,GAC3B7mE,GAAQ,EAEV8oJ,EAAS7kJ,OAAOjE,EAAO,IAEvB83E,EAASrvE,OAAOo+D,GAChBkiF,EAAWhmJ,KAAK8jE,GAE1B,CAC8B,IAApBiiF,EAAS7qJ,QACX65E,EAAS74E,OAAO6pJ,EAExB,KAAW,CAELv6H,EAAIqpD,sBACF39B,EAAgB5b,OAMhB,CAACwoC,EAASjwB,KACR,GAAMiwB,aAAmB31D,IAAa9T,KAAK0sJ,QAAQjjF,EAASjwB,GAa5D,OAVKj5B,IAAOg6B,GAAYmgC,EAAS1vE,WAAWtF,SAAS+jE,IAIlDp+D,GAAUkvC,IACXmgC,EAAS1vE,WAAWtF,SAAS+jE,KAE7BkiF,EAAWhmJ,KAAK8jE,GAChBzpE,KAAKotJ,+BAA+B3jF,KAPpCzpE,KAAK+sJ,4BAA4BtjF,EAASjwB,GAC1CkyG,EAAS/lJ,KAAK8jE,KAQRzpE,KAAKwsJ,MAAM,GAErB,CACEr3E,YAAan1E,KAAK6sJ,aAClB53E,aAAcj1E,KAAK2sJ,gBAGvB,IAAK,IAAI9vI,EAAI8uI,EAAW9qJ,OAAS,EAAGgc,GAAK,IAAKA,EAC5C69D,EAASrvE,OAAOsgJ,EAAW9uI,IAE7B69D,EAAS74E,OAAO6pJ,EACtB,CAWI,OAVIA,EAAS7qJ,OAAS,GAAK8qJ,EAAW9qJ,OAAS,IAC7Cb,KAAK4F,cACH,IAAI6lJ,GACFD,GACAE,EACAC,EACA9uG,KAIC,CACX,ECpjBO,MAAMwwG,GAML,OANKA,GAOH,SAOH,MAAMC,WAAkBvnJ,EAS7B,WAAAhG,CAAY2E,EAAM4F,GAChBrF,MAAMP,GAMN1E,KAAKutJ,OAASjjJ,EAAQijJ,OAMtBvtJ,KAAKwtJ,YAAcljJ,EAAQkjJ,YAM3BxtJ,KAAKypE,QAAUn/D,EAAQm/D,QAMvBzpE,KAAK6gB,QAAUvW,EAAQuW,OAC3B,EC0CA,MAAM4sI,GAAsB,CAM1B,MAAA17E,CAAOz9D,EAAUqH,GACf,IAAIwnE,EAAiB7uE,EACrB,MAAM0Z,EAAiBE,KACnBF,IACFm1D,EAAiBA,EACd1uE,QACAsY,UAAUiB,EAAgBrS,IAE/B,MAAMwf,EAAUc,GAAWknD,GAI3B,OAHIn1D,GACFmN,EAAQpO,UAAUpR,EAAYqS,GAEzBy/H,GAAoB7yH,QAAQO,EACpC,EAOD,kBAAAqwD,CAAmBl3E,EAAUqH,GAE3B,MAAM+xI,EAAW,GACXhmE,EAAapzE,EAASqzE,qBAC5B,IAAK,IAAIpmF,EAAI,EAAGA,EAAImmF,EAAW7mF,SAAUU,EAAG,CAC1C,MAAMosJ,EAAYF,GAAoB/lE,EAAWnmF,GAAG6xB,WAChDu6H,GACFD,EAAS/nJ,KAAKgoJ,EAAUjmE,EAAWnmF,GAAIoa,GAE/C,CACI,OAAO+xI,EAASr0B,MACjB,EAMD,UAAApuC,CAAW32E,GAET,MAAMo5I,EAAW,GACXl4I,EAAclB,EAAS2f,qBACvB3c,EAAShD,EAASggB,YACxB,IAAK,IAAI/yB,EAAI,EAAG4E,EAAKqP,EAAY3U,OAASyW,EAAQ/V,EAAI4E,EAAI5E,GAAK+V,EAC7Do2I,EAAS/nJ,KAAK,CACZ6P,EAAYhS,MAAMjC,EAAGA,EAAI,GACzBiU,EAAYhS,MAAMjC,EAAI+V,EAAQ/V,EAAI+V,EAAS,KAG/C,OAAOo2I,CACR,EAMD,eAAApiE,CAAgBh3E,GAEd,MAAMo5I,EAAW,GACXl4I,EAAclB,EAAS2f,qBACvB3c,EAAShD,EAASggB,YAClBa,EAAO7gB,EAASgnB,UACtB,IAAIjkB,EAAS,EACb,IAAK,IAAI9V,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACjB,IAAK,IAAIsb,EAAIxF,EAAQqV,EAAK/qB,EAAM2V,EAAQuF,EAAI6P,EAAI7P,GAAKvF,EACnDo2I,EAAS/nJ,KAAK,CACZ6P,EAAYhS,MAAMqZ,EAAGA,EAAI,GACzBrH,EAAYhS,MAAMqZ,EAAIvF,EAAQuF,EAAIvF,EAAS,KAG/CD,EAAS1V,CACf,CACI,OAAO+rJ,CACR,EAMD,UAAAtiE,CAAW92E,GAET,MAAMo5I,EAAW,GACXl4I,EAAclB,EAAS2f,qBACvB3c,EAAShD,EAASggB,YACxB,IAAK,IAAI/yB,EAAI,EAAG4E,EAAKqP,EAAY3U,OAASyW,EAAQ/V,EAAI4E,EAAI5E,GAAK+V,EAC7Do2I,EAAS/nJ,KAAK,CAAC6P,EAAYhS,MAAMjC,EAAGA,EAAI,KAE1C,OAAOmsJ,CACR,EAMD,YAAAniE,CAAaj3E,GAEX,MAAMo5I,EAAW,GACXl4I,EAAclB,EAAS2f,qBACvB3c,EAAShD,EAASggB,YAClBe,EAAQ/gB,EAAS4zE,WACvB,IAAI7wE,EAAS,EACb,IAAK,IAAI9V,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GACnB,IAAK,IAAIsb,EAAI,EAAG6P,EAAKyI,EAAKt0B,OAAQgc,EAAI6P,IAAM7P,EAAG,CAC7C,MAAMlb,EAAMwzB,EAAKtY,GACjB,IAAK,IAAIE,EAAI1F,EAAQ6qH,EAAKvgI,EAAM2V,EAAQyF,EAAImlH,EAAInlH,GAAKzF,EACnDo2I,EAAS/nJ,KAAK,CACZ6P,EAAYhS,MAAMuZ,EAAGA,EAAI,GACzBvH,EAAYhS,MAAMuZ,EAAIzF,EAAQyF,EAAIzF,EAAS,KAG/CD,EAAS1V,CACjB,CACA,CACI,OAAO+rJ,CACR,EAMD11H,MAAM1jB,GACG,CAAC,CAACA,EAAS2f,qBAAqBzwB,MAAM,EAAG,KAOlD,OAAAo3B,CAAQtmB,GAEN,MAAMo5I,EAAW,GACXl4I,EAAclB,EAAS2f,qBACvB3c,EAAShD,EAASggB,YAClBa,EAAO7gB,EAASgnB,UACtB,IAAIjkB,EAAS,EACb,IAAK,IAAI9V,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC7C,MAAMI,EAAMwzB,EAAK5zB,GACjB,IAAK,IAAIsb,EAAIxF,EAAQqV,EAAK/qB,EAAM2V,EAAQuF,EAAI6P,EAAI7P,GAAKvF,EACnDo2I,EAAS/nJ,KAAK,CACZ6P,EAAYhS,MAAMqZ,EAAGA,EAAI,GACzBrH,EAAYhS,MAAMqZ,EAAIvF,EAAQuF,EAAIvF,EAAS,KAG/CD,EAAS1V,CACf,CACI,OAAO+rJ,CACR,GAOH,SAASE,GAAoB7oJ,GAC3B,OACiE,EAAM0kE,QAEC,EACnEA,QAGwF,EAEzFt/D,QAEgG,EAEhGA,QAEG,IACT,CAEA,MAAM0gJ,GAAc,GAEdgD,GAAc,GAEdC,GAAkB,GC3QxB,MAAMC,GAMY,iBANZA,GAYS,cAZTA,GAkBU,eAqCT,MAAMC,WAAuBjoJ,EAQlC,WAAAhG,CAAY2E,EAAMg2E,EAAUtkE,EAAY63I,EAAiBpxG,GACvD53C,MAAMP,GAON1E,KAAK06E,SAAWA,EAQhB16E,KAAKoW,WAAaA,EAQlBpW,KAAKiuJ,gBAAkBA,EAOvBjuJ,KAAK68C,gBAAkBA,CAC3B,ECjGO,SAASqxG,GAAO92I,EAAiBC,EAAQ1V,EAAK2V,EAAQzB,EAAMs4I,QACpD3nJ,IAATqP,EAEFs4I,OAA4B3nJ,IAAf2nJ,EAA2BA,EAAa,GAErDt4I,EAAO,GACPs4I,EAAa,GAEf,IAAItxI,EAAIxF,EACR,KAAOwF,EAAIlb,GAAK,CACd,MAAMoU,EAAIqB,EAAgByF,KAC1BhH,EAAKs4I,KAAgB/2I,EAAgByF,KACrChH,EAAKs4I,KAAgBp4I,EACrB,IAAK,IAAIgH,EAAI,EAAGA,EAAIzF,IAAUyF,EAC5BlH,EAAKs4I,KAAgB/2I,EAAgByF,IAE3C,CAEE,OADAhH,EAAKhV,OAASstJ,EACPt4I,CACT,CCuFA,MAAMu4I,GACJ,WAAAruJ,GAKEC,KAAK4hF,oBAAiBp7E,EAMtBxG,KAAKquJ,8BAA2B7nJ,EAMhCxG,KAAKsuJ,aAAY,GAQjBtuJ,KAAKq6G,oBAAsB,IAC/B,CASE,cAAAk0C,CAAexkJ,EAAQO,GACrB,GAAIA,EAAS,CACX,IAAIs3E,EAAiBt3E,EAAQs3E,eACzBtuD,GAAchpB,EAAQs3E,gBACtB5hF,KAAKyhF,eAAe13E,GAEtBO,EAAQmL,QACRmsE,GAC8B,gBAA9BA,EAAe79D,aAEf69D,EAAiBtuD,GAAcsuD,GAC/BA,EAAen9D,eAAena,EAAQmL,SAExCnL,EAAU,CACRs3E,eAAgBA,EAChBJ,kBAAmBl3E,EAAQk3E,kBAEnC,CACI,OAAOxhF,KAAKwuJ,aAAalkJ,EAC7B,CAWE,YAAAkkJ,CAAalkJ,GACX,OAAO5D,OAAO2C,OACZ,CACEu4E,eAAgB5hF,KAAK4hF,eACrBJ,kBAAmBxhF,KAAKquJ,yBACxBC,aAActuJ,KAAKsuJ,cAErBhkJ,EAEN,CAME,OAAA8oB,GACE,OAAOhrB,GACX,CAUE,WAAAqmJ,CAAY1kJ,EAAQO,GAClB,OAAOlC,GACX,CAUE,YAAAm5E,CAAax3E,EAAQO,GACnB,OAAOlC,GACX,CAUE,YAAAsmJ,CAAa3kJ,EAAQO,GACnB,OAAOlC,GACX,CASE,cAAAq5E,CAAe13E,GACb,OAAO3B,GACX,CAUE,YAAAumJ,CAAallF,EAASn/D,GACpB,OAAOlC,GACX,CAUE,aAAAwmJ,CAAcl0E,EAAUpwE,GACtB,OAAOlC,GACX,CAUE,aAAAymJ,CAAcv6I,EAAUhK,GACtB,OAAOlC,GACX,EAYO,SAAS0mJ,GAA6Bx6I,EAAUy6I,EAAOzkJ,GAC5D,MAAMk3E,EAAoBl3E,EACtBgpB,GAAchpB,EAAQk3E,mBACtB,KACEI,EAAiBt3E,EAAUgpB,GAAchpB,EAAQs3E,gBAAkB,KAEzE,IAAI7yD,EAAcza,EAClB,GACEktE,GACAI,IACCotE,GAAqBxtE,EAAmBI,GACzC,CACImtE,IACFhgI,EAAgCza,EAASG,SAE3C,MAAMw6I,EAAiBF,EAAQvtE,EAAoBI,EAC7CstE,EAAeH,EAAQntE,EAAiBJ,EACZ,gBAA9BytE,EAAelrI,WACjBgL,EAAYhC,UAAUkiI,EAAgBC,GAEtCngI,EAAY5T,eAAe2S,GAAamhI,EAAgBC,GAE9D,CACE,GACEH,GACAzkJ,QACmD9D,IAAvB,EAAUiX,SACtC,CACA,MAAMusB,EAAQp+B,KAAKC,IAAI,GAAgC,EAAU4R,UAM3DsP,EAAY,SAAUvX,GAC1B,IAAK,IAAIjU,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EACjDiU,EAAYjU,GAAKqK,KAAK+R,MAAMnI,EAAYjU,GAAKyoC,GAASA,EAExD,OAAOx0B,CACR,EACGuZ,IAAgBza,IAClBya,EAAgCza,EAASG,SAE3Csa,EAAY5T,eAAe4R,EAC/B,CACE,OAAOgC,CACT,CAOO,SAASogI,GAA2B15I,EAAQnL,GACjD,MAAMk3E,EAAoBl3E,EACtBgpB,GAAchpB,EAAQk3E,mBACtB,KACEI,EAAiBt3E,EAAUgpB,GAAchpB,EAAQs3E,gBAAkB,KAEzE,OACEJ,GACAI,IACCotE,GAAqBxtE,EAAmBI,GAElC7zD,GAAgBtY,EAAQmsE,EAAgBJ,GAE1C/rE,CACT,CAEA,MAAM25I,GAAsB,CAC1Bp3H,MAAOA,GACPizD,WAAYA,GACZrwD,QAASA,GACTwwD,WAAYA,GACZE,gBAAiBA,GACjBC,aAAcA,IAwBT,SAAS8jE,GAAoB/qJ,EAAQgG,GAC1C,MAAMgK,EAAWhQ,EAAOgQ,SACxB,IAAKA,EACH,MAAO,GAET,GAAItS,MAAMC,QAAQqS,GAChB,OAAOA,EACJ6c,KAAK7c,GAAa+6I,GAAoB,IAAI/qJ,EAAQgQ,eAClD+kH,OAGL,MAAM3lE,EACc,iBAAlBp/C,EAAS5P,KAA0B,UAAY4P,EAAS5P,KAC1D,GAAqB,uBAAjBgvD,GAA0D,WAAjBA,EAC3C,MAAM,IAAIrrD,MAAM,8BAAgCqrD,GAGlD,MAAMp8C,EAAShD,EAASwf,OAAOjzB,OAC/B,OAAOiuJ,GACL,IAAItrD,GACF9vC,EACiB,YAAjBA,EA1CN,SAA+Bt8C,EAAiB+d,EAAM7d,GACpD,OAAItV,MAAMC,QAAQkzB,EAAK,KAEhBiF,GAAwBhjB,EAAiB,EAAG+d,EAAM7d,IAErDijB,GADAnjB,EAAkBA,EAAgB5T,QACM,EAAG2xB,EAAM7d,GAE5CF,IAEJ6iB,GAAuB7iB,EAAiB,EAAG+d,EAAM7d,IAEpD+iB,GADAjjB,EAAkBA,EAAgB5T,QACC,EAAG2xB,EAAM7d,GAEvCF,EACT,CA6BUk4I,CAAsBh7I,EAAS8C,gBAAiB9C,EAAS6gB,KAAM7d,GAC/DhD,EAAS8C,gBACb9C,EAAS6gB,MAAMkkG,OACf/hH,EACAhT,EAAOkQ,YAAc,CAAE,EACvBlQ,EAAOyI,IACPi3F,6BACF,EACA15F,EAEJ,CAOO,SAASilJ,GAAejrJ,EAAQgG,GACrC,IAAKhG,EACH,OAAO,KAET,GAAItC,MAAMC,QAAQqC,GAAS,CACzB,MAAMojF,EAAapjF,EAAO6sB,KAAK7c,GAC7Bi7I,GAAej7I,EAAUhK,KAE3B,OAAO,IAAIkhF,GAAmB9D,EAClC,CAEE,OAAOonE,GACL,IAAI78H,EAFWm9H,GAAoB9qJ,EAAOI,OAE7BJ,EAAO8S,gBAAiB9S,EAAOwvB,QAAU,KAAMxvB,EAAO6wB,OACnE,EACA7qB,EAEJ,CCnbA,MAAMklJ,WAAmBpB,GACvB,WAAAruJ,GACEkF,QAMAjF,KAAKovH,eAAiBE,IAC1B,CAME,OAAAl8F,GACE,MAAO,KACX,CAWE,WAAAq7H,CAAY1kJ,EAAQO,GAClB,IAAKP,EACH,OAAO,KAET,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClB,OAAO/J,KAAKyvJ,wBAAwBvrH,EAAK55B,EAC/C,CACI,OAAIwiH,GAAW/iH,GACN/J,KAAKyvJ,wBAClB,EACQnlJ,GAGGtK,KAAK0vJ,sBAAqDplJ,EACrE,CAOE,uBAAAmlJ,CAAwBvrH,EAAK55B,GAC3B,MAAMowE,EAAW16E,KAAK2vJ,yBAAyBzrH,EAAK55B,GACpD,OAAIowE,EAAS75E,OAAS,EACb65E,EAAS,GAEX,IACX,CAOE,mBAAAg1E,CAAoB5+I,EAAMxG,GACxB,OAAO,IACX,CAWE,YAAAi3E,CAAax3E,EAAQO,GACnB,IAAKP,EACH,MAAO,GAET,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClB,OAAO/J,KAAK2vJ,yBAAyBzrH,EAAK55B,EAChD,CACI,OAAIwiH,GAAW/iH,GACN/J,KAAK2vJ,yBAClB,EACQrlJ,GAGGtK,KAAK4vJ,uBAAsDtlJ,EACtE,CAQE,wBAAAqlJ,CAAyBzrH,EAAK55B,GAE5B,MAAMowE,EAAW,GACjB,IAAK,IAAIp5E,EAAI4iC,EAAIoyC,WAAYh1E,EAAGA,EAAIA,EAAEurH,YAChCvrH,EAAEkrH,UAAYC,KAAKojC,cACrBhuJ,EACE64E,EACA16E,KAAK4vJ,uBAAiDtlJ,IAI5D,OAAOowE,CACX,CASE,oBAAAk1E,CAAqB9+I,EAAMxG,GACzB,OAAOlC,GACX,CAUE,YAAAsmJ,CAAa3kJ,EAAQO,GACnB,IAAKP,EACH,OAAO,KAET,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClB,OAAO/J,KAAK8vJ,yBAAyB5rH,EAAK55B,EAChD,CACI,OAAIwiH,GAAW/iH,GACN/J,KAAK8vJ,yBAClB,EACQxlJ,GAGGtK,KAAK+vJ,uBAAsDzlJ,EACtE,CAQE,wBAAAwlJ,CAAyB5rH,EAAK55B,GAC5B,OAAO,IACX,CAQE,oBAAAylJ,CAAqBj/I,EAAMxG,GACzB,OAAO,IACX,CAUE,cAAAm3E,CAAe13E,GACb,IAAKA,EACH,OAAO,KAET,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClB,OAAO/J,KAAKgwJ,2BAA2B9rH,EAC7C,CACI,OAAI4oF,GAAW/iH,GACN/J,KAAKgwJ,2BAA0B,GAEjChwJ,KAAKiwJ,uBAAsB,EACtC,CAOE,0BAAAD,CAA2B9rH,GACzB,OAAOlkC,KAAK4hF,cAChB,CAOE,sBAAAquE,CAAuBn/I,GACrB,OAAO9Q,KAAK4hF,cAChB,CAUE,YAAA+sE,CAAallF,EAASn/D,GACpB,MAAMwG,EAAO9Q,KAAKkwJ,iBAAiBzmF,EAASn/D,GAC5C,OAAOtK,KAAKovH,eAAe+gC,kBAAkBr/I,EACjD,CAQE,gBAAAo/I,CAAiBzmF,EAASn/D,GACxB,OAAO,IACX,CAWE,aAAAskJ,CAAcl0E,EAAUpwE,GACtB,MAAMwG,EAAO9Q,KAAKowJ,kBAAkB11E,EAAUpwE,GAC9C,OAAOtK,KAAKovH,eAAe+gC,kBAAkBr/I,EACjD,CAOE,iBAAAs/I,CAAkB11E,EAAUpwE,GAC1B,OAAO,IACX,CAUE,aAAAukJ,CAAcv6I,EAAUhK,GACtB,MAAMwG,EAAO9Q,KAAKqwJ,kBAAkB/7I,EAAUhK,GAC9C,OAAOtK,KAAKovH,eAAe+gC,kBAAkBr/I,EACjD,CAOE,iBAAAu/I,CAAkB/7I,EAAUhK,GAC1B,OAAO,IACX,ECzRO,SAASgmJ,GAAYx/I,GAE1B,OAAOy/I,GADGnkC,GAAkBt7G,GAAM,GAEpC,CAMO,SAASy/I,GAAkBzc,GAChC,MAAM92H,EAAI,6BAA6Bi5E,KAAK69C,GAC5C,GAAI92H,EACF,YAAgBxW,IAATwW,EAAE,KAAoB,CAGjC,CAMO,SAASwzI,GAAa1/I,GAC3B,MAAM46C,EAAI0gE,GAAkBt7G,GAAM,GAC5B2/I,EAAWtwH,KAAKyzB,MAAMlI,GAC5B,OAAOx4B,MAAMu9H,QAAYjqJ,EAAYiqJ,EAAW,GAClD,CAMO,SAASC,GAAY5/I,GAE1B,OAAO6/I,GADGvkC,GAAkBt7G,GAAM,GAEpC,CAMO,SAAS6/I,GAAkB7c,GAEhC,MAAM92H,EAAI,4CAA4Ci5E,KAAK69C,GAC3D,GAAI92H,EACF,OAAOoU,WAAWpU,EAAE,GAGxB,CAMO,SAAS4zI,GAAoB9/I,GAElC,OAAO+/I,GADGzkC,GAAkBt7G,GAAM,GAEpC,CAMO,SAAS+/I,GAA6B/c,GAC3C,MAAM92H,EAAI,gBAAgBi5E,KAAK69C,GAC/B,GAAI92H,EACF,OAAOhN,SAASgN,EAAE,GAAI,GAG1B,CAMO,SAAS8zI,GAAWhgJ,GACzB,OAAOs7G,GAAkBt7G,GAAM,GAAOigJ,MACxC,CAMO,SAASC,GAAqBlgJ,EAAMmgJ,GACzCC,GAAoBpgJ,EAAMmgJ,EAAO,IAAM,IACzC,CAMO,SAASE,GAAkBrgJ,EAAMgjI,GACtChjI,EAAKU,YAAY26G,KAAcilC,mBAAmBtd,GACpD,CAMO,SAASud,GAAsBvgJ,EAAM2/I,GAC1C,MAAMa,EAAO,IAAInxH,KAAgB,IAAXswH,GAChB3c,EACJwd,EAAKC,iBACL,IACA9xI,GAAU6xI,EAAKE,cAAgB,EAAG,GAClC,IACA/xI,GAAU6xI,EAAKG,aAAc,GAC7B,IACAhyI,GAAU6xI,EAAKI,cAAe,GAC9B,IACAjyI,GAAU6xI,EAAKK,gBAAiB,GAChC,IACAlyI,GAAU6xI,EAAKM,gBAAiB,GAChC,IACF9gJ,EAAKU,YAAY26G,KAAcpwE,eAAe+3F,GAChD,CAMO,SAAS+d,GAAqB/gJ,EAAM+O,GACzC,MAAMi0H,EAASj0H,EAAQiyI,cACvBhhJ,EAAKU,YAAY26G,KAAcpwE,eAAe+3F,GAChD,CAMO,SAASie,GAAgCjhJ,EAAMkhJ,GACpD,MAAMle,EAASke,EAAmBjhI,WAClCjgB,EAAKU,YAAY26G,KAAcpwE,eAAe+3F,GAChD,CAEA,MAAMme,GAAkB,MAClBC,GAAgB,MAChBC,GAAkB,sBAMjB,SAASjB,GAAoBpgJ,EAAMgjI,GAEpB,iBAAXA,IACNme,GAAgBtkJ,KAAKmmI,IACpBoe,GAAcvkJ,KAAKmmI,IACnBqe,GAAgBxkJ,KAAKmmI,IAEvBA,EAAO3zH,MAAM,OAAOrV,SAAQ,CAACwvH,EAAM/4H,EAAGR,KAChCQ,EAAIR,EAAEF,OAAS,IACjBy5H,GAAQ,MAEN/4H,EAAI,IACN+4H,EAAO,IAAMA,GAEf62B,GAAkBrgJ,EAAMwpH,EAAK,IAG/BxpH,EAAKU,YAAY26G,KAAcpwE,eAAe+3F,GAElD,CCjIA,MAAMse,GAAiB,CACrB,KACA,oCACA,qCAeIC,GAAiB,CACrBC,IAAOC,GACPC,IAAOC,GACPC,IAAOC,IAQHC,GAAcjkC,GAAgByjC,GAAgB,CAClDE,IAAOhlC,GAAgBilC,IACvBC,IAAOllC,GAAgBmlC,IACvBC,IAAOplC,GAAgBqlC,MAcnBE,GAAelkC,GAAgByjC,GAAgB,CACnD7zF,KAAQmvD,GAAyBojC,GAAY,YAC7CpsJ,KAAQgpH,GAAyBojC,GAAY,cAezCgC,GAAiBnkC,GAAgByjC,GAAgB,CACrDh9I,KAAQs4G,GAAyBojC,IACjCiC,MAyqBF,SAAoBjiJ,EAAMu8G,GACxB,MAAMvkH,EAAgCukH,EAAYA,EAAYxsH,OAAS,GACjEkM,EAAK+D,EAAKkiJ,aAAa,MACvBC,EAASniJ,EAAKkiJ,aAAa,UACtB,OAAPjmJ,GAA0B,OAAXkmJ,IACjBnqJ,EAAc,MAAI,GAAGiE,KAAMkmJ,IAE/B,EA/qBE/4C,KAAQg5C,KAqBJC,GAAmBxkC,GAAgByjC,GAAgB,CACvDh9I,KAAQs4G,GAAyBojC,IACjCsC,KAAQ1lC,GAAyBojC,IACjCuC,OAAU3lC,IA4lBZ,SAAoB58G,EAAMu8G,GACxB,MAAMvkH,EAASomH,GAAgB,CAAA,EAAI4jC,GAAgBhiJ,EAAMu8G,GACzD,GAAIvkH,EACF,OAAOA,EAET,MACF,IAjmBEwqJ,UAAa5lC,IAwmBf,SAAuB58G,EAAMu8G,GAC3B,MAAMvkH,EAASomH,GAAgB,CAAA,EAAIqkC,GAAmBziJ,EAAMu8G,GAC5D,GAAIvkH,EAAQ,CACV,MAAMuqJ,EAASviJ,EAAKkiJ,aAAa,UAIjC,OAHe,OAAXK,IACFvqJ,EAAe,OAAIuqJ,GAEdvqJ,CACX,CACE,MACF,IAjnBEoxG,KAAQg5C,GACRlmJ,KAAQ0gH,GAAyB8iC,IACjCgD,SAAY9lC,GAAyBojC,IACrC2C,OAonBF,SAAqB3iJ,EAAMu8G,GACzB,MAAMvkH,EAAgCukH,EAAYA,EAAYxsH,OAAS,GACjE6yJ,EAAS5iJ,EAAKkiJ,aAAa,UAC3BW,EAAS7iJ,EAAKkiJ,aAAa,UAC3BY,EAAS9iJ,EAAKkiJ,aAAa,UAC3Ba,EAAS/iJ,EAAKkiJ,aAAa,UAEpB,OAAXW,GACW,OAAXD,GACW,OAAXG,GACW,OAAXD,IAEA9qJ,EAAe,OAAI,CACjB,CAACsoB,WAAWuiI,GAASviI,WAAWsiI,IAChC,CAACtiI,WAAWyiI,GAASziI,WAAWwiI,KAGtC,EApoBEE,WAAcC,KAeVR,GAAoB5kC,GAAgByjC,GAAgB,CACxD4B,KAAQtmC,GAAyBkjC,IACjCqD,QAAWvmC,GAAyBojC,MAQhCoD,GAAkBvlC,GAAgByjC,GAAgB,CACtDE,IAAO3kC,IA+2BT,SAAkB78G,EAAM24D,EAAS4jD,GAC/B,MAAM/iH,EACJ+iH,EAAY,GAER74G,EAAai1D,EAAQrgE,gBACrBsG,EAAU,CAACoB,KAAMA,GACvBpB,EAAoB,WAAI8E,EACxB,MAAMF,EAAWm1D,EAAQ70D,cACzB,GAA0B,cAAtBN,EAAS8e,UAA2B,CACtC,MAAMyuE,EACJitD,GAA6Bx6I,GAAU,EAAMhK,GAE/CoF,EAAwB,eAAImyF,EAAW1tE,YACvC3f,EAAkB,MAAIqtF,EAAW9tE,gBACrC,CACE,MAAMpjB,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACjD29G,EAAc0lC,GAAaxjJ,EAAWs7G,cACtCnjH,EAAS0lH,GAAah6G,EAAYi6G,GACxCU,GACEz/G,EACA0kJ,GACA7lC,GACAzlH,EACAukH,EACAoB,EAEJ,IAx4BE+jC,IAAO7kC,IA+4BT,SAAkB78G,EAAM24D,EAAS4jD,GAC/B,MAAM/iH,EACJ+iH,EAAY,GAER74G,EAAai1D,EAAQrgE,gBAErBsG,EAAU,CAACoB,KAAMA,GACvBpB,EAAoB,WAAI8E,EACxB,MAAMF,EAAWm1D,EAAQ70D,cACzB,GAA0B,mBAAtBN,EAAS8e,UAAgC,CAC3C,MAAM8uE,EACJ4sD,GAA6Bx6I,GAAU,EAAMhK,GAE/CkK,EAAmB,OAAI0tF,EAAgBE,gBAC3C,CACE,MAAMzxF,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACjD29G,EAAc4lC,GAAa1jJ,EAAWs7G,cACtCnjH,EAAS0lH,GAAah6G,EAAYi6G,GACxCU,GACEz/G,EACA4kJ,GACA/lC,GACAzlH,EACAukH,EACAoB,EAEJ,IAx6BEikC,IAAO/kC,IAk8BT,SAAkB78G,EAAM24D,EAAS4jD,GAC/B,MAAM/iH,EACJ+iH,EAAY,GAER39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GACjD6O,EAAoB,WAAI+5D,EAAQrgE,gBAChC,MAAMkL,EAAWm1D,EAAQ70D,cACzB,GAA0B,SAAtBN,EAAS8e,UAAsB,CACjC,MAAM/N,EACJypI,GAA6Bx6I,GAAU,EAAMhK,GAE/CoF,EAAwB,eAAI2V,EAAM8O,YAClCogI,GAAazjJ,EAAMuU,EAAM0O,iBAAkBs5F,EAC/C,CACA,MA9uBA,MAAMmnC,GAAc7lC,GAAgByjC,GAAgB,CAClDh9I,KAAQs4G,GAAyBojC,IACjC2D,IAAO/mC,GAAyBojC,IAChCsC,KAAQ1lC,GAAyBojC,IACjC/yH,IAAO2vF,GAAyBojC,IAChC52C,KAAQg5C,GACRxzI,OAAUguG,GAAyBkjC,IACnCkD,WAAcC,GACdrvJ,KAAQgpH,GAAyBojC,IACjC4D,MAsaF,SAAoB5jJ,EAAMu8G,GACxB,MAAMvkH,EAASomH,GAAgB,CAAA,EAAIylC,GAAe7jJ,EAAMu8G,GACxD,GAAIvkH,EAAQ,CACV,MAAM8rJ,EACJvnC,EAAYA,EAAYxsH,OAAS,GAQnC+gG,GALEgzD,EACD,gBAECA,EACD,cACgD9jJ,EAAMhI,EAC3D,CACA,IA5aM6rJ,GAAgBhmC,GAAgByjC,GAAgB,CACpDyC,IAAOnnC,GAAyBgjC,IAChC1jJ,KAAQ0gH,GAAyB8iC,MAQ7BsE,GAAcnmC,GAAgByjC,GAAgB,CAClDh9I,KAAQs4G,GAAyBojC,IACjC2D,IAAO/mC,GAAyBojC,IAChCsC,KAAQ1lC,GAAyBojC,IACjC/yH,IAAO2vF,GAAyBojC,IAChC52C,KAAQg5C,GACRxzI,OAAUguG,GAAyBkjC,IACnClsJ,KAAQgpH,GAAyBojC,IACjCgD,WAAcC,GACdgB,OAmbF,SAAqBjkJ,EAAMu8G,GACzB,MAAMvkH,EAAgCukH,EAAYA,EAAYxsH,OAAS,GACvEkuH,GAAUimC,GAAgBlkJ,EAAMu8G,GAChC,MAAMj2G,EAEHtO,EAAyB,gBACeA,EAAc,KACpDnD,KAAKyR,EAAgBvW,OAC5B,IAnbMm0J,GAAiBrmC,GAAgByjC,GAAgB,CACrD6C,MAsZF,SAAoBnkJ,EAAMu8G,GACxB,MAAMvkH,EAASomH,GAAgB,CAAA,EAAIgmC,GAAepkJ,EAAMu8G,GACxD,GAAIvkH,EAAQ,CACV,MAAMqsJ,EACJ9nC,EAAYA,EAAYxsH,OAAS,GAQnC+gG,GALEuzD,EACD,gBAECA,EACD,cACgDrkJ,EAAMhI,EAC3D,CACA,IA5ZMosJ,GAAgBvmC,GAAgByjC,GAAgB,CACpDyC,IAAOnnC,GAAyBgjC,IAChC1jJ,KAAQ0gH,GAAyB8iC,MAQ7B4E,GAAczmC,GAAgByjC,GAAgB,CAClDyC,IAAOnnC,GAAyBgjC,IAChC1jJ,KAAQ0gH,GAAyB8iC,IACjC6E,OAAU3nC,GAAyBgjC,IACnC4E,YAAe5nC,GAAyBgjC,IACxCt7I,KAAQs4G,GAAyBojC,IACjC2D,IAAO/mC,GAAyBojC,IAChCsC,KAAQ1lC,GAAyBojC,IACjC/yH,IAAO2vF,GAAyBojC,IAChC52C,KAAQg5C,GACRqC,IAAO7nC,GAAyBojC,IAChCpsJ,KAAQgpH,GAAyBojC,IACjC0E,IAAO9nC,GAAyBojC,IAChC2E,IAAO/nC,GAAyBkjC,IAChC8E,KAAQhoC,GAAyBgjC,IACjCiF,KAAQjoC,GAAyBgjC,IACjCkF,KAAQloC,GAAyBgjC,IACjCmF,cAAiBnoC,GAAyBgjC,IAC1CoF,OAAUpoC,GAAyBkjC,IACnCkD,WAAcC,KAOVgC,GAAgB,CAAC,OAAQ,QAOzBC,GAAmBrnC,GAAgByjC,GAAgB,CACvD7zF,KAAQovD,GAAkBujC,IAC1BxsJ,KAAQipH,GAAkBujC,MAQtBiD,GAAexlC,GAAgByjC,GAAgB,CACnD,OACA,MACA,OACA,MACA,OACA,SACA,OACA,UAQIgC,GAAkBzlC,GAAgByjC,GAAgB,CACtDh9I,KAAQu4G,GAAkBujC,IAC1BuD,IAAO9mC,GAAkBujC,IACzBkC,KAAQzlC,GAAkBujC,IAC1BnzH,IAAO4vF,GAAkBujC,IACzBh3C,KAAQyT,GAAkBsoC,IAC1Bv2I,OAAUiuG,GAAkBokC,IAC5BrtJ,KAAQipH,GAAkBujC,IAC1BwD,MAAS7mC,GAAoBF,GAAkB4mC,OAQ3C2B,GAAsBvnC,GAAgByjC,GAAgB,CAAC,MAAO,SAO9DiC,GAAe1lC,GAAgByjC,GAAgB,CACnD,OACA,MACA,OACA,MACA,OACA,SACA,OACA,WAQIkC,GAAkB3lC,GAAgByjC,GAAgB,CACtDh9I,KAAQu4G,GAAkBujC,IAC1BuD,IAAO9mC,GAAkBujC,IACzBkC,KAAQzlC,GAAkBujC,IAC1BnzH,IAAO4vF,GAAkBujC,IACzBh3C,KAAQyT,GAAkBsoC,IAC1Bv2I,OAAUiuG,GAAkBokC,IAC5BrtJ,KAAQipH,GAAkBujC,IAC1B6D,OAAUlnC,GAAoBF,IAoiBhC,SAAqB78G,EAAM+wF,EAAYwrB,GAErC,MAAM39G,EAAU,CAACoB,KAAMA,GACvBpB,EAAwB,eAAImyF,EAAW1tE,YACvCzkB,EAAoB,WAAI,CAAE,EAC1By/G,GACEz/G,EACAymJ,GACAC,GACAv0D,EAAW9tE,iBACXs5F,EAEJ,OAziBM+oC,GAAsBnoC,GAAsB,SAO5CkoC,GAAqBxnC,GAAgByjC,GAAgB,CACzD6C,MAAStnC,GAAkB4mC,MAQvB8B,GAAoB1nC,GAAgByjC,GAAgB,CACxD,MACA,OACA,SACA,cACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,gBACA,WAQIkE,GAAuB3nC,GAAgByjC,GAAgB,CAC3DyC,IAAOlnC,GAAkBkkC,IACzB7kJ,KAAQ2gH,GAAkB0jC,IAC1BgE,OAAU1nC,GAAkBkkC,IAC5ByD,YAAe3nC,GAAkBkkC,IACjCz8I,KAAQu4G,GAAkBujC,IAC1BuD,IAAO9mC,GAAkBujC,IACzBkC,KAAQzlC,GAAkBujC,IAC1BnzH,IAAO4vF,GAAkBujC,IACzBh3C,KAAQyT,GAAkBsoC,IAC1BV,IAAO5nC,GAAkBujC,IACzBxsJ,KAAQipH,GAAkBujC,IAC1BsE,IAAO7nC,GAAkBujC,IACzBuE,IAAO9nC,GAAkBokC,IACzB2D,KAAQ/nC,GAAkBkkC,IAC1B8D,KAAQhoC,GAAkBkkC,IAC1B+D,KAAQjoC,GAAkBkkC,IAC1BgE,cAAiBloC,GAAkBkkC,IACnCiE,OAAUnoC,GAAkBokC,MAOxBwE,GAA4B,CAChCv+H,MAAS,MACTizD,WAAc,MACdK,gBAAmB,OASrB,SAASkrE,GAAiBzyJ,EAAOspH,EAAaiB,GAC5C,MAAMh6G,EAAkC,EAAQM,cAChD,GAAIN,EAAU,CACZ,MAAMg6G,EAAWioC,GAA0BjiJ,EAAS8e,WACpD,GAAIk7F,EAAU,CAEZ,OAAOtC,GADYqB,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACrBm7G,aAAcqC,EACtD,CACA,CACA,CASA,SAAS1sB,GAAiBxqF,EAAiBq/I,EAAe3lJ,EAAMhI,GAmB9D,OAlBAsO,EAAgBzR,KACdyrB,WAAWtgB,EAAKkiJ,aAAa,QAC7B5hI,WAAWtgB,EAAKkiJ,aAAa,SAE3B,QAASlqJ,GACXsO,EAAgBzR,KAA4BmD,EAAa,YAClDA,EAAY,IACnB2tJ,EAAcC,MAAO,GAErBt/I,EAAgBzR,KAAK,GAEnB,SAAUmD,GACZsO,EAAgBzR,KAA4BmD,EAAc,aACnDA,EAAa,KACpB2tJ,EAAcE,MAAO,GAErBv/I,EAAgBzR,KAAK,GAEhByR,CACT,CAWA,SAASw/I,GAAmBH,EAAer/I,EAAiB+d,GAE1D,IAAIrB,EAAS,KACTxc,EAAS,EAWb,GAVIm/I,EAAcC,MAAQD,EAAcE,MACtC7iI,EAAS,OACTxc,EAAS,GACAm/I,EAAcC,MACvB5iI,EAAS,MACTxc,EAAS,GACAm/I,EAAcE,OACvB7iI,EAAS,MACTxc,EAAS,GAEI,IAAXA,EAAc,CAChB,IAAK,IAAI/V,EAAI,EAAG4E,EAAKiR,EAAgBvW,OAAS,EAAGU,EAAI4E,EAAI5E,IACvD6V,EAAgB7V,EAAI+V,GAAUF,EAAoB,EAAJ7V,GAC9C6V,EAAgB7V,EAAI+V,EAAS,GAAKF,EAAoB,EAAJ7V,EAAQ,GACtDk1J,EAAcC,OAChBt/I,EAAgB7V,EAAI+V,EAAS,GAAKF,EAAoB,EAAJ7V,EAAQ,IAExDk1J,EAAcE,OAChBv/I,EAAgB7V,EAAI+V,EAAS,GAAKF,EAAoB,EAAJ7V,EAAQ,IAI9D,GADA6V,EAAgBvW,OAAUuW,EAAgBvW,OAAS,EAAKyW,EACpD6d,EACF,IAAK,IAAI5zB,EAAI,EAAG4E,EAAKgvB,EAAKt0B,OAAQU,EAAI4E,EAAI5E,IACxC4zB,EAAK5zB,GAAM4zB,EAAK5zB,GAAK,EAAK+V,CAGlC,CACE,OAAOwc,CACT,CAwEA,SAASo/H,GAAUpiJ,EAAMu8G,GACvB,MAAMvkH,EAAgCukH,EAAYA,EAAYxsH,OAAS,GACjEiiF,EAAOhyE,EAAKkiJ,aAAa,QAClB,OAATlwE,IACFh6E,EAAa,KAAIg6E,GAEnBisC,GAAU8jC,GAAc/hJ,EAAMu8G,EAChC,CAMA,SAAS0mC,GAAgBjjJ,EAAMu8G,GACSA,EAAYA,EAAYxsH,OAAS,GAC/C,gBAAIiQ,CAC9B,CA6DA,SAASyhJ,GAAQzhJ,EAAMu8G,GACrB,MAAM/iH,EACJ+iH,EAAY,GAERvkH,EAASomH,GACb,CACE93G,gBAAmB,GACnBq/I,cAAiB,CAAE,GAErBjC,GACA1jJ,EACAu8G,GAEF,IAAKvkH,EACH,OAEF,MAAMsO,EAEHtO,EAAyB,uBACrBA,EAAwB,gBAC/B,MAAM2tJ,EAA8C3tJ,EAAuB,qBACpEA,EAAsB,cAC7B,MAAMgrB,EAAS8iI,GAAmBH,EAAer/I,GAC3C9C,EAAW,IAAI22E,GAAW7zE,EAAiB0c,GACjDg7H,GAA6Bx6I,GAAU,EAAOhK,GAC9C,MAAMm/D,EAAU,IAAI31D,GAAQQ,GAE5B,OADAm1D,EAAQzgE,cAAcF,GAAQ,GACvB2gE,CACT,CAOA,SAASgpF,GAAQ3hJ,EAAMu8G,GACrB,MAAM/iH,EACJ+iH,EAAY,GAERvkH,EAASomH,GACb,CACE93G,gBAAmB,GACnB+d,KAAQ,GACRshI,cAAiB,CAAE,GAErB3B,GACAhkJ,EACAu8G,GAEF,IAAKvkH,EACH,OAEF,MAAMsO,EAEHtO,EAAyB,uBACrBA,EAAwB,gBAC/B,MAAMqsB,EAAqCrsB,EAAc,YAClDA,EAAa,KACpB,MAAM2tJ,EAA8C3tJ,EAAuB,qBACpEA,EAAsB,cAC7B,MAAMgrB,EAAS8iI,GAAmBH,EAAer/I,EAAiB+d,GAC5D7gB,EAAW,IAAIg3E,GAAgBl0E,EAAiB0c,EAAQqB,GAC9D25H,GAA6Bx6I,GAAU,EAAOhK,GAC9C,MAAMm/D,EAAU,IAAI31D,GAAQQ,GAE5B,OADAm1D,EAAQzgE,cAAcF,GAAQ,GACvB2gE,CACT,CAOA,SAASkpF,GAAQ7hJ,EAAMu8G,GACrB,MAAM/iH,EACJ+iH,EAAY,GAERvkH,EAASomH,GAAgB,CAAA,EAAIkmC,GAAatkJ,EAAMu8G,GACtD,IAAKvkH,EACH,OAEF,MAAM2tJ,EAA8C,CAAE,EAChDjhJ,EAAcosF,GAAiB,GAAI60D,EAAe3lJ,EAAMhI,GACxDgrB,EAAS8iI,GAAmBH,EAAejhJ,GAC3ClB,EAAW,IAAI0jB,GAAMxiB,EAAase,GACxCg7H,GAA6Bx6I,GAAU,EAAOhK,GAC9C,MAAMm/D,EAAU,IAAI31D,GAAQQ,GAE5B,OADAm1D,EAAQzgE,cAAcF,GAAQ,GACvB2gE,CACT,CAOA,SAASwsF,GAAUnlJ,EAAM/M,EAAOspH,GAC9Bv8G,EAAK8nC,aAAa,OAAQ70C,GAC1B,MACMyQ,EADU64G,EAAYA,EAAYxsH,OAAS,GACV,WACjCq5G,EAAO,CAAC1lG,EAAqB,SAAGA,EAAqB,UAC3D26G,GACF,CAAuDr+G,KAAMA,GACzDklJ,GACAznC,GACArU,EACAmT,EACA0oC,GAEJ,CAOA,SAASxB,GAAazjJ,EAAMsF,EAAYi3G,GACtC,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAE3CorH,EADav8G,EAAQoB,KACKm7G,aAC1Bz3G,EAAa9E,EAAoB,WAEvCoB,EAAK+lJ,eAAe,KAAM,MAAOnuJ,OAAO0N,EAAW,KACnDtF,EAAK+lJ,eAAe,KAAM,MAAOnuJ,OAAO0N,EAAW,KAEnD,OADuB1G,EAAwB,gBAE7C,IAAK,OACmB,IAAlB0G,EAAW,KACb5B,EAAiB,KAAI4B,EAAW,IAGpC,IAAK,MACmB,IAAlBA,EAAW,KACb5B,EAAgB,IAAI4B,EAAW,IAEjC,MACF,IAAK,MACmB,IAAlBA,EAAW,KACb5B,EAAiB,KAAI4B,EAAW,IAMtC,MAAMq4G,EACa,SAAjB39G,EAAKw9G,SACD4nC,GAAoBjqC,GACpBoqC,GAAkBpqC,GAClBnjH,EAAS0lH,GAAah6G,EAAYi6G,GACxCU,GAEG,CAACr+G,KAAMA,EAAM0D,WAAcA,GAC5B8hJ,GACA/nC,GACAzlH,EACAukH,EACAoB,EAEJ,CC5/BA,MAAMqoC,WAAoB1I,GACxB,WAAAruJ,GACEkF,OACJ,CAME,OAAAmuB,GACE,MAAO,MACX,CAYE,WAAAq7H,CAAY1kJ,EAAQO,GAClB,OAAOtK,KAAK+2J,sBACVC,GAAUjtJ,GACV/J,KAAKuuJ,eAAexkJ,EAAQO,GAElC,CAYE,YAAAi3E,CAAax3E,EAAQO,GACnB,OAAOtK,KAAKi3J,uBACVD,GAAUjtJ,GACV/J,KAAKuuJ,eAAexkJ,EAAQO,GAElC,CASE,qBAAAysJ,CAAsBzyJ,EAAQgG,GAC5B,OAAOlC,GACX,CASE,sBAAA6uJ,CAAuB3yJ,EAAQgG,GAC7B,OAAOlC,GACX,CAWE,YAAAsmJ,CAAa3kJ,EAAQO,GACnB,OAAOtK,KAAKk3J,uBACVF,GAAUjtJ,GACV/J,KAAKuuJ,eAAexkJ,EAAQO,GAElC,CASE,sBAAA4sJ,CAAuB5yJ,EAAQgG,GAC7B,OAAOlC,GACX,CAUE,cAAAq5E,CAAe13E,GACb,OAAO/J,KAAKm3J,yBAAyBH,GAAUjtJ,GACnD,CAQE,wBAAAotJ,CAAyB7yJ,GACvB,OAAO8D,GACX,CAWE,YAAAumJ,CAAallF,EAASn/D,GACpB,OAAOutD,KAAKC,UAAU93D,KAAKo3J,mBAAmB3tF,EAASn/D,GAC3D,CAQE,kBAAA8sJ,CAAmB3tF,EAASn/D,GAC1B,OAAOlC,GACX,CAWE,aAAAwmJ,CAAcl0E,EAAUpwE,GACtB,OAAOutD,KAAKC,UAAU93D,KAAKq3J,oBAAoB38E,EAAUpwE,GAC7D,CAQE,mBAAA+sJ,CAAoB38E,EAAUpwE,GAC5B,OAAOlC,GACX,CAWE,aAAAymJ,CAAcv6I,EAAUhK,GACtB,OAAOutD,KAAKC,UAAU93D,KAAKs3J,oBAAoBhjJ,EAAUhK,GAC7D,CAQE,mBAAAgtJ,CAAoBhjJ,EAAUhK,GAC5B,OAAOlC,GACX,EAOA,SAAS4uJ,GAAUjtJ,GACjB,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMzF,EAASuzD,KAAKjE,MAAM7pD,GAC1B,OAAOzF,GAA0C,IACrD,CACE,OAAe,OAAXyF,EACKA,EAEF,IACT,CC6FA,SAASwtJ,GAAqBjzJ,EAAQgG,GACpC,IAAKhG,EACH,OAAO,KAIT,IAAIgQ,EACJ,OAAQhQ,EAAa,MACnB,IAAK,QACHgQ,EA4EN,SAA2BhQ,GACzB,MAAM8S,EAAkB9S,EAAoB,YAC5C,MAAO,CACLI,KAAM,QACN0S,kBACA0c,OAAQc,GAAmBxd,EAAgBvW,QAE/C,CAnFiB22J,CAAiB,GAC5B,MAEF,IAAK,aACHljJ,EAqFN,SAAgChQ,GAC9B,MAAMkR,EAAclR,EAAoB,YAClC8S,EAAkB5B,EAAY6jH,OACpC,MAAO,CACL30H,KAAM,aACN0S,kBACA+d,KAAM,CAAC/d,EAAgBvW,QACvBizB,OAAQc,GAAmBpf,EAAY,IAAI3U,QAAU,GAEzD,CA9FiB42J,CACjB,GAEM,MAEF,IAAK,UACHnjJ,EAkJN,SAA6BhQ,GAC3B,MAAMkR,EAAclR,EAAoB,YAClC8S,EAAkB,GAClBE,EAAS9B,EAAY,KAAK,IAAI3U,OAC9Bs0B,EAAOkB,GAAwBjf,EAAiB,EAAG5B,EAAa8B,GACtE,MAAO,CACL5S,KAAM,UACN0S,kBACA+d,OACArB,OAAQc,GAAmBtd,GAE/B,CA7JiBogJ,CAAmB,GAC9B,MAEF,IAAK,aACHpjJ,EA2GN,SAAgChQ,GAC9B,MAAMkR,EAAclR,EAAoB,YACxC,MAAO,CACLI,KAAM,aACN0S,gBAAiB5B,EAAY6jH,OAC7BvlG,OAAQc,GAAmBpf,EAAY,IAAI3U,QAAU,GAEzD,CAlHiB82J,CACjB,GAEM,MAEF,IAAK,kBACHrjJ,EAoFN,SAAqChQ,GACnC,MAAMkR,EAAclR,EAAoB,YAClCgT,EAAS9B,EAAY,KAAK,IAAI3U,QAAU,EACxCuW,EAAkB,GAClB+d,EAAOkB,GAAwBjf,EAAiB,EAAG5B,EAAa8B,GACtE,MAAO,CACL5S,KAAM,kBACN0S,kBACA+d,OACArB,OAAQc,GAAmBtd,GAE/B,CA/FiBsgJ,CACjB,GAEM,MAEF,IAAK,eACHtjJ,EA4GN,SAAkChQ,GAChC,MAAMkR,EAAclR,EAAoB,YAClC8S,EAAkB,GAClBE,EAAS9B,EAAY,KAAK,KAAK,GAAG3U,QAAU,EAC5Cw0B,EAAQkB,GACZnf,EACA,EACA5B,EACA8B,GAEF,MAAO,CACL5S,KAAM,eACN0S,kBACA+d,KAAME,EACNvB,OAAQc,GAAmBtd,GAE/B,CA5HiBugJ,CACjB,GAEM,MAEF,IAAK,qBACHvjJ,EA2BN,SAAwChQ,GACtC,MAAMojF,EAAapjF,EAAmB,WAAE6sB,KAKtC,SAAU7c,GACR,OAAOijJ,GAAqBjjJ,EAC7B,IAEH,OAAOozE,CACT,CAtCiBowE,CACjB,GAEM,MAEF,QACE,MAAM,IAAIzvJ,MAAM,6BAA+B/D,EAAa,MAGhE,OAAOgQ,CACT,CAoIA,SAASu6I,GAAcv6I,EAAUhK,GAG/B,MAAM5F,GAFN4P,EAAWw6I,GAA6Bx6I,GAAU,EAAMhK,IAElC8oB,UAGtB,IAAI2kI,EACJ,OAAQrzJ,GACN,IAAK,QACHqzJ,EA0IN,SAA4BzjJ,GAC1B,MAAO,CACL5P,KAAM,QACN8Q,YAAalB,EAASyf,iBAE1B,CA/IgBikI,CAC2C,GAGrD,MAEF,IAAK,aACHD,EA+EN,SAAiCzjJ,GAC/B,MAAO,CACL5P,KAAM,aACN8Q,YAAalB,EAASyf,iBAE1B,CApFgBkkI,CACgD,GAG1D,MAEF,IAAK,UACHF,EAwIN,SAA8BzjJ,EAAUhK,GACtC,IAAI4vB,EACA5vB,IACF4vB,EAAQ5vB,EAAQ4tJ,aAElB,MAAO,CACLxzJ,KAAM,UACN8Q,YAAalB,EAASyf,eAAemG,GAEzC,CAjJgBi+H,CAChB,EACQ7tJ,GAEF,MAEF,IAAK,aACHytJ,EAyFN,SAAiCzjJ,GAC/B,MAAO,CACL5P,KAAM,aACN8Q,YAAalB,EAASyf,iBAE1B,CA9FgBqkI,CACgD,GAG1D,MAEF,IAAK,kBACHL,EAsEN,SAAsCzjJ,GACpC,MAAO,CACL5P,KAAM,kBACN8Q,YAAalB,EAASyf,iBAE1B,CA3EgBskI,CACqD,GAG/D,MAEF,IAAK,eACHN,EAuFN,SAAmCzjJ,EAAUhK,GAC3C,IAAI4vB,EACA5vB,IACF4vB,EAAQ5vB,EAAQ4tJ,aAElB,MAAO,CACLxzJ,KAAM,eACN8Q,YAAalB,EAASyf,eAAemG,GAEzC,CAhGgBo+H,CAChB,EACQhuJ,GAEF,MAEF,IAAK,qBACHytJ,EA2BN,SAAyCzjJ,EAAUhK,GACjDA,EAAU5D,OAAO2C,OAAO,CAAA,EAAIiB,UACrBA,EAAQk3E,kBACf,MAAMkG,EAAapzE,EAASqzE,qBAAqBx2D,KAAI,SAAU7c,GAC7D,OAAOu6I,GAAcv6I,EAAUhK,EACnC,IACE,MAAO,CACL5F,KAAM,qBACNgjF,WAAYA,EAEhB,CArCgB6wE,CAChB,EAGQjuJ,GAEF,MAEF,IAAK,SACHytJ,EAAU,CACRrzJ,KAAM,qBACNgjF,WAAY,IAEd,MAEF,QACE,MAAM,IAAIr/E,MAAM,8BAAgC3D,GAGpD,OAAOqzJ,CACT,CCtiBA,MAAMS,WAAoBpK,GACxB,WAAAruJ,GACEkF,OACJ,CAME,OAAAmuB,GACE,MAAO,MACX,CAWE,WAAAq7H,CAAY1kJ,EAAQO,GAClB,OAAOtK,KAAKy4J,oBACVtvF,GAAQp/D,GACR/J,KAAKwuJ,aAAalkJ,GAExB,CASE,mBAAAmuJ,CAAoBl6F,EAAMj0D,GACxB,OAAOlC,GACX,CAWE,YAAAm5E,CAAax3E,EAAQO,GACnB,OAAOtK,KAAK04J,qBACVvvF,GAAQp/D,GACR/J,KAAKwuJ,aAAalkJ,GAExB,CASE,oBAAAouJ,CAAqBn6F,EAAMj0D,GACzB,OAAOlC,GACX,CAWE,YAAAsmJ,CAAa3kJ,EAAQO,GACnB,OAAOtK,KAAK24J,qBACVxvF,GAAQp/D,GACR/J,KAAKwuJ,aAAalkJ,GAExB,CASE,oBAAAquJ,CAAqBp6F,EAAMj0D,GACzB,OAAOlC,GACX,CAUE,cAAAq5E,CAAe13E,GACb,OAAO/J,KAAK44J,uBAAuBzvF,GAAQp/D,GAC/C,CAOE,sBAAA6uJ,CAAuBr6F,GACrB,OAAOv+D,KAAK4hF,cAChB,CAWE,YAAA+sE,CAAallF,EAASn/D,GACpB,OAAOtK,KAAK64J,iBAAiBpvF,EAASzpE,KAAKwuJ,aAAalkJ,GAC5D,CASE,gBAAAuuJ,CAAiBpvF,EAASn/D,GACxB,OAAOlC,GACX,CAWE,aAAAwmJ,CAAcl0E,EAAUpwE,GACtB,OAAOtK,KAAK84J,kBAAkBp+E,EAAU16E,KAAKwuJ,aAAalkJ,GAC9D,CASE,iBAAAwuJ,CAAkBp+E,EAAUpwE,GAC1B,OAAOlC,GACX,CAWE,aAAAymJ,CAAcv6I,EAAUhK,GACtB,OAAOtK,KAAK+4J,kBAAkBzkJ,EAAUtU,KAAKwuJ,aAAalkJ,GAC9D,CASE,iBAAAyuJ,CAAkBzkJ,EAAUhK,GAC1B,OAAOlC,GACX,EAOA,SAAS+gE,GAAQp/D,GACf,MAAsB,iBAAXA,EACFA,EAEF,EACT,CCjMA,MAAMivJ,GACJ,sFAMIC,GAAc,wBAMdC,GAAkB,8BAMlBC,GAAsB,2CAQtBC,GAAa,aCyBnB,MAAMC,GAAoB,CAAC,qCAMrBjH,GAAiB,CACrB,KACA,kCACA,kCACA,kCACA,kCAcIkH,GAAwB,CAC5BrqH,SAAY,WACZo3E,OAAU,SACVkzC,YAAe,UAQXC,GAAoB7qC,GACxByjC,GACA,CACEqH,aAAgBC,GAChBC,OAAUC,GACVC,cAAiBnsC,GAAyBosC,GAAmB,YAC7D7uE,WAAcyiC,GAAyBqsC,GAAgB,YACvDniI,WAAc81F,GAAyBssC,GAAgB,YACvDhiI,MAAS01F,GAAyBusC,GAAW,YAC7Cr/H,QAAW8yF,GAAyBwsC,GAAa,YACjDvxF,MAAS+kD,GAAyBysC,IAClCC,SA+hEJ,SAAiCtpJ,EAAMu8G,GACrC,MAAMgtC,EAAgBC,GAAkB72J,KAAKzD,KAAM8Q,EAAMu8G,GACzD,IAAKgtC,EACH,OAEF,MAAME,EAAkBltC,EAAYA,EAAYxsH,OAAS,GACzD,GAAImB,MAAMC,QAAQo4J,GAChBE,EAAuB,MAAIF,MACtB,IAA6B,iBAAlBA,EAGhB,MAAM,IAAIhyJ,MAAM,uCAFhBkyJ,EAA0B,SAAIF,CAGlC,CACA,EA3iEIG,QAAW9sC,GAAyBojC,IACpC2J,YAAe/sC,GAAyBojC,IACxC17I,KAAQs4G,GAAyBojC,IACjC5vE,KAAQwsC,GAAyB4iC,IACjCoK,YAAehtC,GAAyBojC,IACxC6J,SAAYjtC,GAAyBktC,IACrCC,WAAcntC,GAAyB4iC,KAEzC3hC,GAAgB0qC,GAAmB,CACjCyB,WAAcptC,IAk9ClB,SAA0B58G,EAAMu8G,GAC9B,MAAMrrB,EAAcktB,GAClB,GACA6rC,GACAjqJ,EACAu8G,GAEF,IAAKrrB,EACH,OAEF,OAAO,IAAI1W,GAAgB0W,EAC7B,GA79C6D,YACzDg5D,MAASttC,GAAyButC,GAAa,eAS7CC,GAAuBvsC,GAAgByjC,GAAgB,CAC3DqH,aAAgBC,GAChBC,OAAUC,GACVuB,KA8rEF,SAAoBrqJ,EAAMu8G,GACxB0B,GAAU8jC,GAAc/hJ,EAAMu8G,EAChC,EA/rEEmtC,QAAW9sC,GAAyBojC,IACpC2J,YAAe/sC,GAAyBojC,IACxC17I,KAAQs4G,GAAyBojC,IACjC5vE,KAAQwsC,GAAyB4iC,IACjCoK,YAAehtC,GAAyBojC,IACxC+J,WAAcntC,GAAyB4iC,MAQnCuC,GAAelkC,GAAgByjC,GAAgB,CACnDtvE,KAAQ4qC,GAAyB0tC,MAQ7BC,GAAiB1sC,GAAgByjC,GAAgB,CACrDkJ,SAAU5tC,GAAyBgjC,IACnC6K,UAAW7tC,GAAyBgjC,IACpC8K,SAAU9tC,GAAyBgjC,IACnC+K,KAAM/tC,GAAyBgjC,IAC/BgL,aAAchuC,GAAyBojC,IACvC6K,QAASjuC,GAAyBgjC,IAClCkL,KAAMluC,GAAyBgjC,MAQ3BmL,GAAiBltC,GAAgByjC,GAAgB,CACrD0J,aAmiEF,SAA4BhrJ,EAAMu8G,GAChC,MAAM/oH,EAAS4qH,GACb,CAAE,EACF6sC,GACAjrJ,EACAu8G,GAEF,IAAK/oH,EACH,OAEF,MAAM03J,EACJ3uC,EAAYA,EAAYxsH,OAAS,GAE7B4U,EAAS,CACb2b,WAAW9sB,EAAa,MACxB8sB,WAAW9sB,EAAc,OACzB8sB,WAAW9sB,EAAa,MACxB8sB,WAAW9sB,EAAc,QAE3B03J,EAAqB,OAAIvmJ,EACzBumJ,EAA2B,aAAI13J,EAAqB,aACpD03J,EAA0B,YAAI5qI,WAAW9sB,EAAoB,aAC7D03J,EAA0B,YAAI5qI,WAAW9sB,EAAoB,YAC/D,EAzjEE23J,IA2kEF,SAAmBnrJ,EAAMu8G,GACvB,MAAM/oH,EAAS4qH,GAAgB,CAAA,EAAIgtC,GAAaprJ,EAAMu8G,GACtD,IAAK/oH,EACH,OAEF,MAAM63J,EAAmC9uC,EAAYA,EAAYxsH,OAAS,GAC1Es7J,EAAwB,aAAI/qI,WAAW9sB,EAAqB,cAC5D63J,EAAwB,aAAI/qI,WAAW9sB,EAAqB,cAC5D63J,EAAyB,cAAI/qI,WAAW9sB,EAAsB,eAC9D63J,EAAyB,cAAI/qI,WAAW9sB,EAAsB,cAChE,IA7kEM83J,GAAeztC,GAAgByjC,GAAgB,CAAC,WAAY,cAO5DiK,GAAkB1tC,GAAgByjC,GAAgB,CACtDkK,SAAY3uC,IA+yEd,SAAuB78G,EAAM4pE,EAAU2yC,GAErC8B,GADiE,CAACr+G,KAAMA,GAGtEyrJ,GACAC,GACA9hF,EACA2yC,OACA7mH,EACAxG,KAEJ,IAzzEEy8J,UAAa9uC,GAAkB+uC,MAMjC,IAAIC,GAkBAC,GAKAC,GAKAC,GAKAC,GAKAC,GAjCAC,GAAqB,KAsCzB,IAaIC,GAbAC,GAAsB,KAkB1B,IAaIC,GAbAx1B,GAAuB,KAkB3B,IAAIy1B,GAAqB,KAazB,IAAIhnB,GAAgB,KAapB,IAkFIinB,GAlFAC,GAAsB,KAe1B,SAASC,GAAaxqJ,GACpB,OAAO,GAAKpH,KAAKmM,IAAI/E,EAAK,GAAIA,EAAK,GACrC,CAiFA,SAASyqJ,GAAuB36E,GAC9B,OAAOA,CACT,CA6uBA,SAAS46E,GAAUC,EAAYC,EAAcC,GAC3C,OAAI77J,MAAMC,QAAQ07J,GACTA,EAEiB,iBAAfA,EACFD,GAAUG,EAAaF,GAAaC,EAAcC,GAEpDD,CACT,CAMA,SAASE,GAAUhtJ,GACjB,MAAM46C,EAAI0gE,GAAkBt7G,GAAM,GAG5BkM,EAAI,gCAAgCi5E,KAAKvqC,GAC/C,GAAI1uC,EAAG,CACL,MAAM+gJ,EAAW/gJ,EAAE,GACnB,MAAO,CACLhN,SAAS+tJ,EAASC,OAAO,EAAG,GAAI,IAChChuJ,SAAS+tJ,EAASC,OAAO,EAAG,GAAI,IAChChuJ,SAAS+tJ,EAASC,OAAO,EAAG,GAAI,IAChChuJ,SAAS+tJ,EAASC,OAAO,EAAG,GAAI,IAAM,IAE5C,CAEA,CAMO,SAASC,GAAoBntJ,GAClC,IAAI46C,EAAI0gE,GAAkBt7G,GAAM,GAChC,MAAMsG,EAAkB,GAGxBs0C,EAAIA,EAAEhqC,QAAQ,WAAY,KAC1B,MAAMsI,EACJ,qIACF,IAAIhN,EACJ,KAAQA,EAAIgN,EAAGisE,KAAKvqC,IAAK,CACvB,MAAM31C,EAAIqb,WAAWpU,EAAE,IACjBhH,EAAIob,WAAWpU,EAAE,IACjB8sB,EAAI9sB,EAAE,GAAKoU,WAAWpU,EAAE,IAAM,EACpC5F,EAAgBzR,KAAKoQ,EAAGC,EAAG8zB,GAC3B4hB,EAAIA,EAAEsyG,OAAOhhJ,EAAE,GAAGnc,OACtB,CACE,GAAU,KAAN6qD,EAGJ,OAAOt0C,CACT,CAMA,SAASgkJ,GAAQtqJ,GACf,MAAM46C,EAAI0gE,GAAkBt7G,GAAM,GAAOigJ,OACzC,IAAImN,EAAUptJ,EAAKotJ,QAInB,GAHKA,GAAsB,eAAXA,IACdA,EAAUtvJ,OAAOk7H,SAAShnD,MAExBo7E,EAAS,CAEX,OADY,IAAIr7E,IAAIn3B,EAAGwyG,GACZp7E,IACf,CACE,OAAOp3B,CACT,CAMA,SAASkvG,GAAa9pJ,GAGpB,MAAM46C,EAAI0gE,GAAkBt7G,GAAM,GAC/BigJ,OACArvI,QAAQ,WAAY,KACvB,IAAIw8I,EAAUptJ,EAAKotJ,QAInB,GAHKA,GAAsB,eAAXA,IACdA,EAAUtvJ,OAAOk7H,SAAShnD,MAExBo7E,EAAS,CAEX,OADY,IAAIr7E,IAAIn3B,EAAGwyG,GACZp7E,IACf,CACE,OAAOp3B,CACT,CAqCA,SAASyyG,GAAUrtJ,GACjB,OAAO4/I,GAAY5/I,EACrB,CAOA,MAAMstJ,GAAoBzvC,GAAgByjC,GAAgB,CACxDiM,KA42BF,SAAwBvtJ,EAAMu8G,GAC5B,MAAMixC,EAAapvC,GAAgB,CAAE,EAAEqvC,GAAcztJ,EAAMu8G,EAAartH,MACxE,IAAKs+J,EACH,OAEF,MAAMh3J,EAAuCg3J,EAAiB,IAC9D,GAAIh3J,GAAc,UAAPA,EAAiB,CAC1B,MAAMqzJ,EAA4C2D,EAAsB,SACpE3D,IACFttC,EAAYA,EAAYxsH,OAAS,GAAK85J,GAExC,MAAM7qJ,EAA8BwuJ,EAAmB,MACnDxuJ,IACFu9G,EAAYA,EAAYxsH,OAAS,GAAKiP,EAE5C,CACA,IAn3BA,SAASwqJ,GAAkBxpJ,EAAMu8G,GAC/B,OAAO6B,QAAgB1oH,EAAW43J,GAAmBttJ,EAAMu8G,EAAartH,KAC1E,CAOA,MAAMw+J,GAAqB7vC,GAAgByjC,GAAgB,CACzDtrF,KAAQ4mD,IAsYV,SAAkB58G,EAAMu8G,GACtB,MAAMoxC,EAAavvC,GAAgB,CAAA,EAAIwvC,GAAc5tJ,EAAMu8G,GAC3D,GAAIoxC,EACF,OAAOA,EAET,OAAO,IACT,IA3YEhuG,MAASi9D,GAAyBowC,IAClCa,QAAWjxC,GAAyBgjC,IACpCkO,QAAWlxC,IA/Db,SAAkB58G,GAChB,MAAM+tJ,EAAS/tJ,EAAKkiJ,aAAa,UAC3B8L,EAAShuJ,EAAKkiJ,aAAa,UAEjC,IAAIhiE,EAcJ,OAXIA,EAFW,gBAAX6tE,EACa,gBAAXC,EACO,cAEA,WAGI,gBAAXA,EACO,eAEA,YAGN,CACL/oJ,EAAGqb,WAAWtgB,EAAKkiJ,aAAa,MAChC6L,OAAQvF,GAAsBuF,GAC9B7oJ,EAAGob,WAAWtgB,EAAKkiJ,aAAa,MAChC8L,OAAQxF,GAAsBwF,GAC9B9tE,OAAQA,EAEZ,IAuCE/uE,MAASyrG,GAAyBywC,MA+IpC,MAAMY,GAAsBpwC,GAAgByjC,GAAgB,CAC1D3hG,MAASi9D,GAAyBowC,IAClC77I,MAASyrG,GAAyBywC,MA8BpC,MAAMa,GAAqBrwC,GAAgByjC,GAAgB,CACzD3hG,MAASi9D,GAAyBowC,IAClChvJ,MAAS4+G,GAAyBgjC,MAgCpC,MAAMuO,GAAqBtwC,GAAgByjC,GAAgB,CACzD3hG,MAASi9D,GAAyBowC,IAClC96F,KAAQ0qD,GAAyB4iC,IACjC4O,QAAWxxC,GAAyB4iC,MAmCtC,MAAM6O,GAA2BxwC,GAAgByjC,GAAgB,CAC/D58I,YAAe+3G,GAAa0wC,MAQ9B,SAASmB,GAAmBtuJ,EAAMu8G,GAChC,OAAO6B,GAAgB,KAAMiwC,GAA0BruJ,EAAMu8G,EAC/D,CA8BA,MAAM0tC,GAAiCpsC,GAAgB0qC,GAAmB,CACxE2B,MAAS1tC,GAAgB2tC,MA0B3B,MAAMoE,GAAmB1wC,GACvByjC,GACA,CACEkN,KA4uBJ,SAAoBxuJ,EAAMu8G,GACxB,MAGMkyC,EADHlyC,EAAYA,EAAYxsH,OAAS,GACR0+J,MACtB7zG,EAAI0gE,GAAkBt7G,GAAM,GAC5BwuJ,EAAOn/H,KAAKyzB,MAAMlI,GACxB6zG,EAAM55J,KAAKutB,MAAMosI,GAAQ,EAAIA,EAC/B,GAlvBE3wC,GAAgB0qC,GAAmB,CACjCjvI,MAzDJ,SAAuBtZ,EAAMu8G,GAC3B,MAGM73G,EADH63G,EAAYA,EAAYxsH,OAAS,GACF2U,YAC5Bk2C,EAAI0gE,GAAkBt7G,GAAM,GAG5BkM,EADJ,8HACWi5E,KAAKvqC,GAClB,GAAI1uC,EAAG,CACL,MAAMjH,EAAIqb,WAAWpU,EAAE,IACjBhH,EAAIob,WAAWpU,EAAE,IACjB8sB,EAAI1Y,WAAWpU,EAAE,IACvBxH,EAAY7P,KAAK,CAACoQ,EAAGC,EAAG8zB,GAC5B,MACIt0B,EAAY7P,KAAK,GAErB,KAiDA,SAASs1J,GAAYnqJ,EAAMu8G,GACzB,MAAMmyC,EAAgBtwC,GACU,CAC5B15G,YAAa,GACb+pJ,MAAO,IAETF,GACAvuJ,EACAu8G,GAEF,IAAKmyC,EACH,OAEF,MAAMpoJ,EAAkB,GAClB5B,EAAcgqJ,EAAchqJ,YAC5B+pJ,EAAQC,EAAcD,MAC5B,IACE,IAAIh+J,EAAI,EAAG4E,EAAKyF,KAAKmM,IAAIvC,EAAY3U,OAAQ0+J,EAAM1+J,QACnDU,EAAI4E,IACF5E,EAE2B,GAAzBiU,EAAYjU,GAAGV,QACjBuW,EAAgBzR,KACd6P,EAAYjU,GAAG,GACfiU,EAAYjU,GAAG,GACfiU,EAAYjU,GAAG,GACfg+J,EAAMh+J,IAIZ,OAAO,IAAI0pF,GAAW7zE,EAAiB,OACzC,CAOA,MAAMsnJ,GAAe/vC,GACnByjC,GACA,CACEtvE,KAAQ4qC,GAAyB0tC,KAEnCzsC,GAAgB0qC,GAAmB,CACjCtjJ,EAAK23G,GAAyBgjC,IAC9B16I,EAAK03G,GAAyBgjC,IAC9B1gH,EAAK09E,GAAyBgjC,IAC9BzgH,EAAKy9E,GAAyBgjC,OAsBlC,MAAM+O,GAAoC9wC,GAAgByjC,GAAgB,CACxE58I,YAAe+3G,GAAa0wC,MAQ9B,SAASyB,GAA4B5uJ,EAAMu8G,GACzC,OAAO6B,GACL,KACAuwC,GACA3uJ,EACAu8G,EAEJ,CAOA,MAAMsyC,GAAoChxC,GAAgByjC,GAAgB,CACxEwN,QAAWlyC,GAAyB4iC,IACpCuP,WAAcnyC,GAAyB4iC,IACvCwP,aAAgBpyC,GAAyBojC,MAQ3C,SAASiJ,GAAejpJ,EAAMu8G,GAC5B,MAAM74G,EAAa06G,GACjB,CAAE,EACFywC,GACA7uJ,EACAu8G,GAEIj2G,EAAkBsoJ,GAA4B5uJ,EAAMu8G,GAC1D,GAAIj2G,EAAiB,CACnB,MAAMyqF,EAAa,IAAI5W,GAAW7zE,EAAiB,OAEnD,OADAyqF,EAAW74F,cAAcwL,GAAY,GAC9BqtF,CACX,CAEA,CAOA,SAASm4D,GAAelpJ,EAAMu8G,GAC5B,MAAM74G,EAAa06G,GACjB,CAAE,EACFywC,GACA7uJ,EACAu8G,GAEIj2G,EAAkBsoJ,GAA4B5uJ,EAAMu8G,GAC1D,GAAIj2G,EAAiB,CACnB,MAAM+jB,EAAU,IAAIP,GAAQxjB,EAAiB,MAAO,CAClDA,EAAgBvW,SAGlB,OADAs6B,EAAQnyB,cAAcwL,GAAY,GAC3B2mB,CACX,CAEA,CAOA,MAAM4kI,GAAyBpxC,GAAgByjC,GAAgB,CAC7DnnE,WAAcqiC,GAAgBysC,IAC9BniI,WAAc01F,GAAgB0sC,IAC9BH,cAAiBvsC,GAAgBwsC,IACjC9hI,MAASs1F,GAAgB2sC,IACzBr/H,QAAW0yF,GAAgB4sC,MAQ7B,SAASJ,GAAkBhpJ,EAAMu8G,GAC/B,MAAM3lC,EAAawnC,GACjB,GACA6wC,GACAjvJ,EACAu8G,GAEF,IAAK3lC,EACH,OAAO,KAET,GAA0B,IAAtBA,EAAW7mF,OACb,OAAO,IAAI2qF,GAAmB9D,GAEhC,IAAIs4E,EACAC,GAAc,EAClB,MAAMv7J,EAAOgjF,EAAW,GAAGt0D,UAC3B,IAAI9e,EACJ,IAAK,IAAI/S,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAEhD,GADA+S,EAAWozE,EAAWnmF,GAClB+S,EAAS8e,WAAa1uB,EAAM,CAC9Bu7J,GAAc,EACd,KACN,CAEE,GAAIA,EAAa,CACf,IAAInsI,EACA1c,EACJ,GAAY,SAAR1S,EAAiB,CACnB,MAAM2gB,EAAQqiE,EAAW,GACzB5zD,EAASzO,EAAM8O,YACf/c,EAAkBiO,EAAM4O,qBACxB,IAAK,IAAI1yB,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChD+S,EAAWozE,EAAWnmF,GACtBM,EAAOuV,EAAiB9C,EAAS2f,sBAEnC+rI,EAAgB,IAAI50E,GAAWh0E,EAAiB0c,GAChDosI,GAA4BF,EAAet4E,EACjD,MAAW,GAAY,cAARhjF,EACTs7J,EAAgB,IAAI10E,GAAgB5D,GACpCw4E,GAA4BF,EAAet4E,QACtC,GAAY,WAARhjF,EACTs7J,EAAgB,IAAIz0E,GAAa7D,GACjCw4E,GAA4BF,EAAet4E,OACtC,IAAY,sBAARhjF,IAAgCA,EAAKmwB,WAAW,SAGzD,MAAM,IAAIxsB,MAAM,+BAFhB23J,EAAgB,IAAIx0E,GAAmB9D,EAG7C,CACA,MACIs4E,EAAgB,IAAIx0E,GAAmB9D,GAEzC,QACF,CAOA,SAASuyE,GAAUnpJ,EAAMu8G,GACvB,MAAM74G,EAAa06G,GACjB,CAAE,EACFywC,GACA7uJ,EACAu8G,GAEIj2G,EAAkBsoJ,GAA4B5uJ,EAAMu8G,GAC1D,GAAIj2G,EAAiB,CACnB,MAAMiO,EAAQ,IAAI2S,GAAM5gB,EAAiB,OAEzC,OADAiO,EAAMrc,cAAcwL,GAAY,GACzB6Q,CACX,CAEA,CAOA,MAAM86I,GAA4BxxC,GAAgByjC,GAAgB,CAChEgO,gBAubF,SAA+BtvJ,EAAMu8G,GACnC,MAAMgzC,EAA+BnxC,GACvC,GACIoxC,GACAxvJ,EACAu8G,GAEF,GAAIgzC,EAA6Bx/J,OAAS,EAAG,CAGxCwsH,EAAYA,EAAYxsH,OAAS,GACpB8E,QAAQ06J,EAC5B,CACA,EAncEE,gBAkdF,SAA+BzvJ,EAAMu8G,GAEnC,MAAMmzC,EAAiBtxC,QACrB1oH,EACAi6J,GACA3vJ,EACAu8G,GAEF,GAAImzC,EAAgB,CAGfnzC,EAAYA,EAAYxsH,OAAS,GACpB,GAAK2/J,CACzB,CACA,IAxdA,SAAStG,GAAYppJ,EAAMu8G,GACzB,MAAM74G,EAAa06G,GACrB,CAAuC,EACnCywC,GACA7uJ,EACAu8G,GAEIqzC,EAAkBxxC,GACtB,CAAC,MACDixC,GACArvJ,EACAu8G,GAEF,GAAIqzC,GAAmBA,EAAgB,GAAI,CACzC,MAAMtpJ,EAAkBspJ,EAAgB,GAClCvrI,EAAO,CAAC/d,EAAgBvW,QAC9B,IAAK,IAAIU,EAAI,EAAG4E,EAAKu6J,EAAgB7/J,OAAQU,EAAI4E,IAAM5E,EACrDM,EAAOuV,EAAiBspJ,EAAgBn/J,IACxC4zB,EAAKxvB,KAAKyR,EAAgBvW,QAE5B,MAAMs6B,EAAU,IAAIP,GAAQxjB,EAAiB,MAAO+d,GAEpD,OADAgG,EAAQnyB,cAAcwL,GAAY,GAC3B2mB,CACX,CAEA,CAOA,MAAMwlI,GAAgBhyC,GAAgByjC,GAAgB,CACpDwO,UA7lBF,SAAyB9vJ,EAAMu8G,GAO7B,MAAM/oH,EAAS4qH,GAAgB,CAAA,EAAIsvC,GAAoB1tJ,EAAMu8G,GAC7D,IAAK/oH,EACH,OAEF,MAAMu8J,EACJxzC,EAAYA,EAAYxsH,OAAS,GAE7BigK,EAAa,SAAUx8J,EAASA,EAAa,KAAI,CAAE,EACnDy8J,IAAa,SAAUz8J,IAAWoC,OAAOC,KAAKm6J,GAAYjgK,OAAS,EACzE,IAAIk9B,EACJ,MAAM+kD,EAAwCg+E,EAAkB,KAMhE,IAAInvI,EAAQw1C,EAAcE,EALtByb,EACF/kD,EAAM+kD,EACGi+E,IACThjI,EAAMi/H,IAIR,IAAI/1F,EAAe,cACnB,MAAM23F,EAAyCt6J,EAAiB,QAuBhE,IAAI+S,EAtBAunJ,GACFjtI,EAAS,CAACitI,EAAQ7oJ,EAAG6oJ,EAAQ5oJ,GAC7BmxD,EAAey3F,EAAQC,OACvBx3F,EAAeu3F,EAAQE,OACvB73F,EAAe23F,EAAQ5tE,QACd,8CAA8CrjF,KAAKowB,KAExDA,EAAIr4B,SAAS,YACfisB,EAASirI,GACTz1F,EAAe01F,GACfx1F,EAAey1F,IACN/+H,EAAIr4B,SAAS,kBACtBisB,EAAS,CAAC,GAAI,IACdw1C,EAAe01F,GACfx1F,EAAey1F,IACN/+H,EAAIr4B,SAAS,YACtBisB,EAAS,CAAC,GAAI,GACdw1C,EAAe01F,GACfx1F,EAAey1F,KAKnB,MAAM/mJ,EAAqC+qJ,EAAe,EACpD9qJ,EAAqC8qJ,EAAe,EAK1D,IAAI9tJ,OAJMxM,IAANuP,QAAyBvP,IAANwP,IACrBqB,EAAS,CAACtB,EAAGC,IAIf,MAAMg6B,EAAqC8wH,EAAe,EACpD7wH,EAAqC6wH,EAAe,EAK1D,IAAI5nJ,OAJM1S,IAANwpC,QAAyBxpC,IAANypC,IACrBj9B,EAAO,CAACg9B,EAAGC,IAIb,MAAM0uH,EAAiCr6J,EAAiB,aACxCkC,IAAZm4J,IACFzlJ,EAAWkE,GAAUuhJ,IAGvB,MAAM18I,EAAyC3d,EAAe,MAExDmsD,EAAgDnsD,EAAe,MAErE,GAAIy8J,EAAU,CACRhjI,GAAOi/H,KACThqJ,EAAO+pJ,IAGT,MAAMz4E,EAAa,IAAIxd,GAAK,CAC1Bn1C,OAAQA,EACRs1C,aAAcA,EACdE,aAAcA,EACdE,aAAcA,EACd5oC,YAAaz+B,KAAK2+B,aAClBtnB,OAAQA,EACRowD,aAAc,cACdvuD,SAAUA,EACV+I,MAAOA,EACPjP,KAAMA,EACN+qB,IAAK/9B,KAAKghK,iBAAiBjjI,GAC3B0yB,MAAOA,IAGH64B,EAAahF,EAAWliB,gBAAgB,GACxCwF,EAAY0c,EAAWnxE,UAC7B,GAAkB,OAAdy0D,EAAoB,CACtB,MAAM3L,EAAaqoB,EAAW7oB,gBAC9B,GAAIQ,IAAex/B,IAAmBw/B,IAAex/B,GAAoB,CACvE,MAAMl3B,EAAW,WACf,MAAM02D,EAAaqoB,EAAW7oB,gBAC9B,GAEIQ,IAAex/B,IACfw/B,IAAex/B,GAEjB,CACA,MAAMmrC,EAAY0c,EAAWnxE,UAC7B,GAAIy0D,GAAiC,GAApBA,EAAU/mE,OAAa,CACtC,MAAMogK,EAAczD,GAAa51F,GACjC0c,EAAW5hB,SAAS4mB,EAAa23E,EAC/C,CACY38E,EAAW1hB,oBAAoBr9D,EAC3C,CACS,EACD++E,EAAW3hB,kBAAkBp9D,GACzB02D,IAAex/B,IACjB6nD,EAAWz3E,MAErB,CACA,MAAW,GAAwB,GAApB+6D,EAAU/mE,OAAa,CAChC,MAAMogK,EAAczD,GAAa51F,GACjC0c,EAAW5hB,SAAS4mB,EAAa23E,EACvC,CACIJ,EAAwB,WAAIv8E,CAChC,MAEIu8E,EAAwB,WAAI3D,EAEhC,EA8dEgE,WA9cF,SAA0BpwJ,EAAMu8G,GAE9B,MAAM/oH,EAAS4qH,GAAgB,CAAA,EAAI6vC,GAAqBjuJ,EAAMu8G,GAC9D,IAAK/oH,EACH,OAEF,MAAMu8J,EAAcxzC,EAAYA,EAAYxsH,OAAS,GAC/C4jF,EAAY,IAAIxa,GAAK,CACzBjH,KAAM,IAAIqD,GAAK,CACb5V,MAEG,UAAWnsD,EAASA,EAAc,MAAIq4J,KAE3C16I,MAAwC3d,EAAe,QAEzDu8J,EAAuB,UAAIp8E,CAC7B,EA+bE08E,UA/aF,SAAyBrwJ,EAAMu8G,GAM7B,MAAM/oH,EAAS4qH,GAAgB,CAAA,EAAI8vC,GAAoBluJ,EAAMu8G,GAC7D,IAAK/oH,EACH,OAEF,MAAMu8J,EAAcxzC,EAAYA,EAAYxsH,OAAS,GAC/CmkE,EAAc,IAAI+C,GAAO,CAC7BtX,MAEG,UAAWnsD,EAASA,EAAc,MAAIq4J,GACzC7tJ,MAA8B,UAAWxK,EAASA,EAAc,MAAI,IAEtEu8J,EAAyB,YAAI77F,CAC/B,EA8ZEo8F,UA7YF,SAAyBtwJ,EAAMu8G,GAE7B,MAAM/oH,EAAS4qH,GAAgB,CAAA,EAAI+vC,GAAoBnuJ,EAAMu8G,GAC7D,IAAK/oH,EACH,OAEF,MAAMu8J,EAAcxzC,EAAYA,EAAYxsH,OAAS,GAC/Cq+B,EAAY,IAAImnC,GAAK,CACzB5V,MAEG,UAAWnsD,EAASA,EAAc,MAAIq4J,KAE3CkE,EAAuB,UAAI3hI,EAC3B,MAAM8jC,EAAyC1+D,EAAc,UAChDkC,IAATw8D,IACF69F,EAAkB,KAAI79F,GAExB,MAAMk8F,EAA4C56J,EAAiB,aACnDkC,IAAZ04J,IACF2B,EAAqB,QAAI3B,EAE7B,IAiYA,SAAS/E,GAAUrpJ,EAAMu8G,GACvB,MAAMwzC,EAAc3xC,GAClB,CAAE,EACFyxC,GACA7vJ,EACAu8G,EACArtH,MAEF,IAAK6gK,EACH,OAAO,KAET,IAAI3hI,EAGA,cAAe2hI,EAAcA,EAAuB,UAAI5D,GAE5D,MAAMj6F,EAAyC69F,EAAmB,KAIlE,IAAIv8E,OAHS99E,IAATw8D,GAAuBA,IACzB9jC,EAAY,MAGV,eAAgB2hI,EACdA,EAAwB,YAAK3D,KAC/B54E,EACEu8E,EACD,YAGHv8E,EAAa64E,GAEf,MAAM14E,EAGF,cAAeo8E,EAAcA,EAAuB,UAAIxD,GAEtDr4F,EAGF,gBAAiB67F,EACbA,EAAyB,YACzBj5B,GAEFs3B,EAA4C2B,EAAsB,QACxE,YAAgBr6J,IAAZ04J,GAA0BA,EA6DvB,CACL,IAAIv2F,GAAM,CACR3F,KAAM9jC,EACN7sB,MAAOiyE,EACPhhB,OAAQ0B,EACRzG,KAAMkmB,EACN/9B,YAAQlgD,KA/DH,CACL,IAAImiE,GAAM,CACRr0D,SAAU,SAAUm1D,GAClB,MAAMn1D,EAAWm1D,EAAQ70D,cACnBlQ,EAAO4P,EAAS8e,UACtB,GAAa,uBAAT1uB,EAA+B,CAKjC,OAAO,IAAI8mF,GAHvB,EAKiB2V,8BACA1xD,QAAO,SAAUn7B,GAChB,MAAM5P,EAAO4P,EAAS8e,UACtB,MAAgB,YAAT1uB,GAA+B,iBAATA,CAC/C,IAEA,CACU,GAAa,YAATA,GAA+B,iBAATA,EACxB,OAAO4P,CAEV,EACD0uD,KAAM9jC,EACN7sB,MAAOiyE,EACPhhB,OAAQ0B,EACRzG,KAAMkmB,EACN/9B,YAAQlgD,IAEV,IAAImiE,GAAM,CACRr0D,SAAU,SAAUm1D,GAClB,MAAMn1D,EAAWm1D,EAAQ70D,cACnBlQ,EAAO4P,EAAS8e,UACtB,GAAa,uBAAT1uB,EAA+B,CAKjC,OAAO,IAAI8mF,GAHvB,EAKiB2V,8BACA1xD,QAAO,SAAUn7B,GAChB,MAAM5P,EAAO4P,EAAS8e,UACtB,MAAgB,YAAT1uB,GAA+B,iBAATA,CAC/C,IAEA,CACU,GAAa,YAATA,GAA+B,iBAATA,EACxB,OAAO4P,CAEV,EACD0uD,KAAM9jC,EACNokC,OAAQ,KACR5c,YAAQlgD,IAahB,CAQA,SAAS05J,GAA4BF,EAAet4E,GAClD,MAAMvhF,EAAKuhF,EAAW7mF,OAChBwgK,EAAW,IAAIr/J,MAAM0lF,EAAW7mF,QAChCygK,EAAc,IAAIt/J,MAAM0lF,EAAW7mF,QACnC0gK,EAAgB,IAAIv/J,MAAM0lF,EAAW7mF,QAC3C,IAAI2gK,EAAYC,EAAeC,EAC/BF,GAAa,EACbC,GAAgB,EAChBC,GAAkB,EAClB,IAAK,IAAIngK,EAAI,EAAGA,EAAI4E,IAAM5E,EAAG,CAC3B,MAAM+S,EAAWozE,EAAWnmF,GAC5B8/J,EAAS9/J,GAAK+S,EAASrL,IAAI,WAC3Bq4J,EAAY//J,GAAK+S,EAASrL,IAAI,cAC9Bs4J,EAAchgK,GAAK+S,EAASrL,IAAI,gBAChCu4J,EAAaA,QAA8Bh7J,IAAhB66J,EAAS9/J,GACpCkgK,EAAgBA,QAAoCj7J,IAAnB86J,EAAY//J,GAC7CmgK,EAAkBA,GAAmBH,EAAchgK,EACvD,CACMigK,GACFxB,EAAcp2J,IAAI,UAAWy3J,GAE3BI,GACFzB,EAAcp2J,IAAI,aAAc03J,GAE9BI,GACF1B,EAAcp2J,IAAI,eAAgB23J,EAEtC,CAOA,MAAMI,GAAehzC,GAAgByjC,GAAgB,CACnDwP,YAAel0C,GAAyBojC,IACxC/sJ,MAAS2pH,GAAyBojC,MAkCpC,MAAM+Q,GAAwBlzC,GAAgByjC,GAAgB,CAC5D0P,KA5BF,SAAoBhxJ,EAAMu8G,GACxB,MAAMj4G,EAAOtE,EAAKkiJ,aAAa,QAC/BjkC,GAAU4yC,GAAc7wJ,EAAMu8G,GAC9B,MAAM00C,EACJ10C,EAAYA,EAAYxsH,OAAS,GAE/BuU,GAAQ2sJ,EAAcH,YACxBG,EAAc3sJ,GAAQ,CACpBrR,MAAOg+J,EAAch+J,MACrB69J,YAAaG,EAAcH,YAC3B7wI,SAAU,WACR,OAAOgxI,EAAch+J,KACtB,GAEe,OAATqR,EACT2sJ,EAAc3sJ,GAAQ2sJ,EAAch+J,MACG,OAA9Bg+J,EAAcH,cACvBG,EAAcA,EAAcH,aAAeG,EAAch+J,cAEpDg+J,EAAqB,KAC9B,EASEC,WAsFF,SAA0BlxJ,EAAMu8G,GAC9B0B,GAAUkzC,GAAqBnxJ,EAAMu8G,EACvC,IAjFA,SAASqsC,GAAmB5oJ,EAAMu8G,GAChC0B,GAAU8yC,GAAuB/wJ,EAAMu8G,EACzC,CAMA,SAASusC,GAAa9oJ,EAAMu8G,GAC1B0B,GAAU8sC,GAAgB/qJ,EAAMu8G,EAClC,CAOA,MAAMkxC,GAAe5vC,GAAgByjC,GAAgB,CACnDzpF,MAAS+kD,GAAyBysC,IAClC7yJ,IAAOomH,GAAyBojC,IAChC6J,SAAYjtC,GAAyBktC,MAmDvC,MAAMqH,GAAsBtzC,GAAgByjC,GAAgB,CAC1D8P,WAeF,SAA0BpxJ,EAAMu8G,GAC9B,MAAMj4G,EAAOtE,EAAKkiJ,aAAa,QAC/B,GAAa,OAAT59I,EAAe,CACjB,MAAMtT,EAAOgvJ,GAAWhgJ,GAEtBu8G,EAAYA,EAAYxsH,OAAS,GAErBuU,GAAQtT,CAC1B,CACA,IAOA,MAAMi6J,GAA0BptC,GAAgByjC,GAAgB,CAC9D0N,aAAgBpyC,GAAyBojC,IACzCqR,YAAez0C,GAAyBgjC,IACxC0R,YAAe10C,GAAyBgjC,IACxC7oI,MAAS6lG,GAAyBgjC,IAClC2R,MAAS30C,GAAyBgjC,IAClC4R,KAAQ50C,GAAyBgjC,IACjC6R,KAAQ70C,GAAyBgjC,MAqCnC,MAAMwL,GAAcvtC,GAAgByjC,GAAgB,CAClDoQ,aAAgB90C,GAAyBgjC,IACzC+R,aAAgB/0C,GAAyBgjC,IACzCgS,cAAiBh1C,GAAyBgjC,IAC1CiS,cAAiBj1C,GAAyBgjC,MAwB5C,MAAM4P,GAA4B3xC,GAAgByjC,GAAgB,CAGhEx6H,WAAc01F,GAAgB8xC,MA2BhC,MAAMqB,GAA4B9xC,GAAgByjC,GAAgB,CAChEx6H,WAAc21F,GAAa6xC,MAiD7B,SAASwD,GAAmB9xJ,EAAM2/C,GAChC,MAAMoyG,EAAO/wG,GAAQrB,GAGfqyG,EAAO,CAAW,KAFO,GAAfD,EAAKhiK,OAAcgiK,EAAK,GAAK,GAEhBA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACpD,IAAK,IAAIthK,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B,MAAMuvD,EAAMllD,KAAKoQ,MAA6B8mJ,EAAKvhK,IAAKwvB,SAAS,IACjE+xI,EAAKvhK,GAAmB,GAAduvD,EAAIjwD,OAAc,IAAMiwD,EAAMA,CAC5C,CACEogG,GAAoBpgJ,EAAMgyJ,EAAKhjJ,KAAK,IACtC,CA4CA,MAAMijJ,GAAgCp0C,GAAgByjC,GAAgB,CACpE0P,KAAQn0C,IAUV,SAAuB78G,EAAMkyJ,EAAM31C,GACjCv8G,EAAK8nC,aAAa,OAAQoqH,EAAK5tJ,MAC/B,MAAuD1F,EAAU,CAACoB,KAAMA,GAClE/M,EAAQi/J,EAAKj/J,MAEC,iBAATA,GACK,OAAVA,GAAkBA,EAAM69J,aAC1BzyC,GACEz/G,EACAqzJ,GACAx0C,GACA,CAACxqH,EAAM69J,aACPv0C,EACA,CAAC,gBAIS,OAAVtpH,GAAkBA,EAAMA,OAC1BorH,GACEz/G,EACAqzJ,GACAx0C,GACA,CAACxqH,EAAMA,OACPspH,EACA,CAAC,WAIL8B,GACEz/G,EACAqzJ,GACAx0C,GACA,CAACxqH,GACDspH,EACA,CAAC,SAGP,IA9CEtpH,MAAS4pH,IA4DX,SAA4B78G,EAAM/M,GAChCmtJ,GAAoBpgJ,EAAM/M,EAC5B,IA7DE69J,YAAej0C,IAmDjB,SAA2B78G,EAAMsE,GAC/B87I,GAAoBpgJ,EAAMsE,EAC5B,MAeA,MAAMmnJ,GAAuB5tC,GAAgByjC,GAAgB,CAC3DqK,UAAa9uC,GAAkB+uC,MAU3BF,GAAwB,SAAUz4J,EAAOspH,EAAaiB,GAE1D,OAAOtC,GADYqB,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACrBm7G,aAAc,YAClD,EA0BA,MAAMg3C,GAAoBh1C,GAAsB,QA6BhD,MAAMi1C,GAAgBv0C,GACpByjC,GACA,CAAC,QACDzjC,GAAgB0qC,GAAmB,CAAC,IAAK,IAAK,IAAK,OAQ/C8J,GAAmBx0C,GACvByjC,GACA,CACEtvE,KAAQ6qC,GAAkBujC,KAE5BviC,GAAgB0qC,GAAmB,CACjCtjJ,EAAK43G,GAAkBkkC,IACvB77I,EAAK23G,GAAkBkkC,IACvB7hH,EAAK29E,GAAkBkkC,IACvB5hH,EAAK09E,GAAkBkkC,OAWrBuR,GAAkB,SAAUr/J,EAAOspH,EAAaiB,GACpD,OAAOtC,GAAgBqtC,GAAkB,GAAI,MAAQ/qC,EACvD,EAqCA,MAAM+0C,GAAsB10C,GAAgByjC,GAAgB,CAC1D,QACA,UACA,OACA,QACA,YAQIkR,GAAyB30C,GAAgByjC,GAAgB,CAC7DtrF,KAAQ6mD,IA5CV,SAAmB78G,EAAMygE,EAAM87C,GAC7B,MAAuD39G,EAAU,CAACoB,KAAMA,GAClEH,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACvD,IAAI29G,EAAcy0C,GAAcvyJ,EAAWs7G,cACvCnjH,EAAS0lH,GAAaj9C,EAAMk9C,GAChCU,GACEz/G,EACAyzJ,GACA50C,GACAzlH,EACAukH,EACAoB,GAEFA,EAAcy0C,GAAc7J,GAAkB,IAC9CvwJ,EAAS0lH,GAAaj9C,EAAMk9C,GAC5BU,GACEz/G,EACAyzJ,GACAC,GACAt6J,EACAukH,EACAoB,EAEJ,IAsBEh+D,MAASk9D,GAAkBi1C,IAC3BjE,QAAWhxC,GAAkBkkC,IAC7B+M,QAAWjxC,IA2vBb,SAAmB78G,EAAMyyJ,GACvBzyJ,EAAK8nC,aAAa,IAAKlwC,OAAO66J,EAAKxtJ,IACnCjF,EAAK8nC,aAAa,IAAKlwC,OAAO66J,EAAKvtJ,IACnClF,EAAK8nC,aAAa,SAAU2qH,EAAK1E,QACjC/tJ,EAAK8nC,aAAa,SAAU2qH,EAAKzE,OACnC,IA/vBE78I,MAAS0rG,GAAkB61C,MAmF7B,MAAMC,GAAuB90C,GAAgByjC,GAAgB,CAC3D,QACA,UAQIsR,GAA0B/0C,GAAgByjC,GAAgB,CAC9D3hG,MAASk9D,GAAkBi1C,IAC3B3gJ,MAAS0rG,GAAkB61C,MAqC7B,MAAMG,GAAsBh1C,GAAgByjC,GAAgB,CAAC,QAAS,UAOhEwR,GAAyBj1C,GAAgByjC,GAAgB,CAC7D3hG,MAASk9D,GAAkBi1C,IAC3B9zJ,MAAS6+G,GAAkBkkC,MA+B7B,MAAM0E,GAA4B,CAChCv+H,MAAS,QACTizD,WAAc,aACdrzD,WAAc,aACdgD,QAAW,UACXwwD,WAAc,gBACdE,gBAAmB,gBACnBC,aAAgB,gBAChBC,mBAAsB,iBAUlBq4E,GAAwB,SAAU9/J,EAAOspH,EAAaiB,GAC1D,GAAIvqH,EAAO,CAET,OAAOioH,GADYqB,EAAYA,EAAYxsH,OAAS,GAAGiQ,KAE1Cm7G,aACXsqC,GACuD,EAAQnjI,WAGrE,CACA,EAOM0wI,GAAqB71C,GAAsB,SAO3C81C,GAA2B91C,GAAsB,cAOjD+1C,GAA2B/1C,GAAsB,cAOjDg2C,GAAuBh2C,GAAsB,WAO7Ci2C,GAA6Bv1C,GAAgByjC,GAAgB,CACjEnnE,WAAc0iC,GAAkBw2C,IAChCnsI,MAAS21F,GAAkBw2C,IAC3BvpI,QAAW+yF,GAAkBy2C,IAC7B54E,mBAAsBmiC,GAAkB02C,MAQ1C,SAASA,GAAmBvzJ,EAAMwD,EAAU+4G,GAE1C,MAAM39G,EAAU,CAACoB,KAAMA,GACjBpM,EAAO4P,EAAS8e,UAEtB,IAEIkxI,EAFA58E,EAAa,GAGjB,GAAa,uBAAThjF,EACgC,EAC/By8F,8BACAr2F,SAAQ,SAAUwJ,GACjB,MAAM5P,EAAO4P,EAAS8e,UACtB,GAAa,eAAT1uB,EACFgjF,EAAaA,EAAWnuB,OACI,EAAWmK,kBAElC,GAAa,oBAATh/D,EACTgjF,EAAaA,EAAWnuB,OACS,EAAW6oC,uBAEvC,GAAa,iBAAT19F,EACTgjF,EAAaA,EAAWnuB,OACM,EAAW+pC,mBAEpC,IACI,UAAT5+F,GACS,eAATA,GACS,YAATA,EAIA,MAAM,IAAI2D,MAAM,yBAFhBq/E,EAAW/hF,KAAK2O,EAG1B,CACA,IACIgwJ,EAAUT,QACL,GAAa,eAATn/J,EACTgjF,EAAuC,EAAWhkB,YAClD4gG,EAAUR,QACL,GAAa,oBAATp/J,EACTgjF,EAA4C,EAAW0a,iBACvDkiE,EAAUP,OACL,IAAa,iBAATr/J,EAIT,MAAM,IAAI2D,MAAM,yBAHhBq/E,EAAyC,EAAW4b,cACpDghE,EAAUL,EAGd,CACE90C,GACEz/G,EACAw0J,GACAI,EACA58E,EACA2lC,EAEJ,CAOA,MAAMk3C,GAA0B51C,GAAgByjC,GAAgB,CAC9Dx6H,WAAc+1F,GAAkBw2C,MAQlC,SAASK,GAAgB1zJ,EAAMkkB,EAAYq4F,GAEzC8B,GADiE,CAACr+G,KAAMA,GAGtEyzJ,GACAP,GACA,CAAChvI,GACDq4F,EAEJ,CAOA,MAAMo3C,GAAwB91C,GAAgByjC,GAAgB,CAC5DqH,aAAgB9rC,IA7blB,SAA2B78G,EAAM4zJ,EAAgBr3C,GAC/C,MAAuD39G,EAAU,CAACoB,KAAMA,GAClE8hD,EAAQ8xG,EAAe9xG,MACvB9pD,EAAS47J,EAAe57J,OACxBjI,EAAS+xD,EAAM/xD,OAErB,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAQU,IAC1B4tH,GACEz/G,EACAqzJ,GACAE,GACA,CAAC,CAAC7tJ,KAAMw9C,EAAMrxD,GAAIwC,MAAO+E,EAAOvH,KAChC8rH,EAGN,IA+aEwsC,cAAiBlsC,GAAkB02C,IACnCp5E,WAAc0iC,GAAkBw2C,IAChCvsI,WAAc+1F,GAAkBw2C,IAChCnsI,MAAS21F,GAAkBw2C,IAC3BvpI,QAAW+yF,GAAkBy2C,IAC7Bz7F,MAASglD,IAuXX,SAAoB78G,EAAMuE,EAAQg4G,GAChC,MAAuD39G,EAAU,CAACoB,KAAMA,GAClE0D,EAAa,CAAE,EACrB,GAAIa,EAAOsvJ,YAAY9jK,OAAQ,CAC7B,MAAM4jF,EAAYpvE,EAAOsvJ,YAAY,GAAGx7F,UACpCsb,IACFjwE,EAAuB,WAAIiwE,GAE7B,MAAMH,EAAajvE,EAAOsvJ,YAAY,GAAG5nI,WAEvCunD,GACkD,mBAAzB,EAAmB,SAE5C9vE,EAAsB,UAAI8vE,EAEhC,CACE,GAAIjvE,EAAOuvJ,WAAW/jK,OAAQ,CAC5B,MAAMmkE,EAAc3vD,EAAOuvJ,WAAW,GAAGhhG,YACrCoB,IACFxwD,EAAsB,UAAIwwD,EAEhC,CACE,GAAI3vD,EAAOwvJ,WAAWhkK,OAAQ,CAC5B,MAAMmkE,EAAc3vD,EAAOwvJ,WAAW,GAAGjhG,YACrCoB,IAAgBxwD,EAAsB,YACxCA,EAAsB,UAAIwwD,GAE5BxwD,EAAsB,UAAIa,EAAOwvJ,WAAW,EAChD,CACE,MAAMl0J,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACjD29G,EAAcq2C,GAAen0J,EAAWs7G,cACxCnjH,EAAS0lH,GAAah6G,EAAYi6G,GACxCU,GACEz/G,EACAq1J,GACAx2C,GACAzlH,EACAukH,EACAoB,EAEJ,IA9ZE+rC,QAAW7sC,GAAkBujC,IAC7BuJ,YAAe9sC,GAAkBujC,IACjC97I,KAAQu4G,GAAkBujC,IAC1BhwE,KAAQysC,GAAkBqjC,IAC1B0J,YAAe/sC,GAAkBujC,IACjCyJ,SAAYhtC,GAAkBujC,IAC9B2J,WAAcltC,GAAkBqjC,MAQ5BgU,GAAqBr2C,GAAgByjC,GAAgB,CACzD,OACA,OACA,aACA,UACA,cACA,cACA,WACA,UAQI6S,GAA4Bh3C,GAAsB,gBAUxD,SAASyuC,GAAe5rJ,EAAM24D,EAAS4jD,GACrC,MAAuD39G,EAAU,CAACoB,KAAMA,GAGpE24D,EAAQ10D,SACVjE,EAAK8nC,aAAa,KAA6B6wB,EAAQ10D,SAIzD,MAAMP,EAAai1D,EAAQrgE,gBAGrBqmC,EAAS,CACb+qH,QAAW,EACXC,YAAe,EACfrlJ,KAAQ,EACR8rE,KAAQ,EACRw5E,YAAe,EACfC,SAAY,EACZE,WAAc,GAEhBprH,EAAOg6B,EAAQ90D,mBAAqB,EACpC,MAAMhO,EAAOD,OAAOC,KAAK6N,GAAc,CAAE,GACtCqkB,OACA4W,QAAO,SAAUgiB,GAChB,OAAQhiB,EAAOgiB,EACrB,IAEQkY,EAAgBF,EAAQz0D,mBAC9B,GAAI20D,EAAe,CAGjB,MAAMt0D,EAASs0D,EAAcF,EAAS,GACtC,GAAIp0D,EAAQ,CACV,MAAM6vJ,EAAaljK,MAAMC,QAAQoT,GAAUA,EAAS,CAACA,GACrD,IAAIsvJ,EAAcO,EAmBlB,GAlBIz7F,EAAQ70D,gBACV+vJ,EAAcO,EAAWz1H,QAAO,SAAU3/B,GACxC,MAAMwE,EAAWxE,EAAMy5D,qBAANz5D,CAA4B25D,GAC7C,GAAIn1D,EAAU,CACZ,MAAM5P,EAAO4P,EAAS8e,UACtB,MAAa,uBAAT1uB,EACuC,EACtCy8F,8BACA1xD,QAAO,SAAUn7B,GAChB,MAAM5P,EAAO4P,EAAS8e,UACtB,MAAgB,UAAT1uB,GAA6B,eAATA,CAC5B,IAAE7D,OAES,UAAT6D,GAA6B,eAATA,CACvC,CACA,KAGU1E,KAAKmlK,aAAc,CACrB,IAAIP,EAAaM,EACbL,EAAaK,EACbz7F,EAAQ70D,gBACVgwJ,EAAaM,EAAWz1H,QAAO,SAAU3/B,GACvC,MAAMwE,EAAWxE,EAAMy5D,qBAANz5D,CAA4B25D,GAC7C,GAAIn1D,EAAU,CACZ,MAAM5P,EAAO4P,EAAS8e,UACtB,MAAa,uBAAT1uB,EACuC,EACtCy8F,8BACA1xD,QAAO,SAAUn7B,GAChB,MAAM5P,EAAO4P,EAAS8e,UACtB,MAAgB,eAAT1uB,GAAkC,oBAATA,CACjC,IAAE7D,OAES,eAAT6D,GAAkC,oBAATA,CAC9C,CACA,IACUmgK,EAAaK,EAAWz1H,QAAO,SAAU3/B,GACvC,MAAMwE,EAAWxE,EAAMy5D,qBAANz5D,CAA4B25D,GAC7C,GAAIn1D,EAAU,CACZ,MAAM5P,EAAO4P,EAAS8e,UACtB,MAAa,uBAAT1uB,EACuC,EACtCy8F,8BACA1xD,QAAO,SAAUn7B,GAChB,MAAM5P,EAAO4P,EAAS8e,UACtB,MAAgB,YAAT1uB,GAA+B,iBAATA,CAC9B,IAAE7D,OAES,YAAT6D,GAA+B,iBAATA,CAC3C,CACA,KAEQ8P,EAAkB,MAAI,CACpBmwJ,YAAaA,EACbC,WAAYA,EACZC,WAAYA,EAEtB,CACM,GAAIF,EAAY9jK,aAAiC2F,IAAvBgO,EAAiB,KAAiB,CAC1D,MAAMiwE,EAAYkgF,EAAY,GAAGx7F,UAC7Bsb,IACFjwE,EAAiB,KAAIiwE,EAAUtb,UAEzC,CACA,CACA,CACE,MAAMx4D,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACjD29G,EAAcu2C,GAAmBr0J,EAAWs7G,cAC5CnjH,EAAS0lH,GAAah6G,EAAYi6G,GAUxC,GATAU,GACEz/G,EACA+0J,GACAl2C,GACAzlH,EACAukH,EACAoB,GAGE9nH,EAAK9F,OAAS,EAAG,CACnB,MAAM6tH,EAAWF,GAAah6G,EAAY7N,GAE1CwoH,GACEz/G,EACA+0J,GACAQ,GACA,CALqB,CAACryG,MAAOjsD,EAAMmC,OAAQ4lH,IAM3CrB,EAEN,CAGE,MAAM/iH,EACJ+iH,EAAY,GAEd,IAAI/4G,EAAWm1D,EAAQ70D,cACnBN,IACFA,EAAWw6I,GAA6Bx6I,GAAU,EAAMhK,IAE1D6kH,GACEz/G,EACA+0J,GACAZ,GACA,CAACvvJ,GACD+4G,EAEJ,CAOA,MAAM+3C,GAA8Bz2C,GAAgByjC,GAAgB,CAClE,UACA,aACA,eACA,gBAQIiT,GAAiC12C,GAAgByjC,GAAgB,CACrEwN,QAAWjyC,GAAkBqjC,IAC7B6O,WAAclyC,GAAkBqjC,IAChC8O,aAAgBnyC,GAAkBujC,IAClC17I,YAAem4G,IA5yBjB,SAAkC78G,EAAM0E,EAAa63G,GACnD,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAE3CizB,EAASpkB,EAAgB,OACzB4H,EAAS5H,EAAgB,OAE/B,IAAIiW,EACJ,GAAc,MAAVmO,GAA4B,OAAVA,EACpBnO,EAAY,MACP,IAAc,OAAVmO,GAA6B,QAAVA,EAG5B,MAAM,IAAIzrB,MAAM,2BAFhBsd,EAAY,CAGhB,CAEE,MAAMxf,EAAKqP,EAAY3U,OACvB,IAAI09D,EAAO,GACX,GAAIp4D,EAAK,EAAG,CACVo4D,GAAQ/oD,EAAY,GACpB,IAAK,IAAImL,EAAI,EAAGA,EAAIgF,IAAahF,EAC/B49C,GAAQ,IAAM/oD,EAAYmL,GAE5B,IAAK,IAAIpf,EAAI+V,EAAQ/V,EAAI4E,EAAI5E,GAAK+V,EAAQ,CACxCinD,GAAQ,IAAM/oD,EAAYjU,GAC1B,IAAK,IAAIof,EAAI,EAAGA,EAAIgF,IAAahF,EAC/B49C,GAAQ,IAAM/oD,EAAYjU,EAAIof,EAEtC,CACA,CACEuwI,GAAoBpgJ,EAAMytD,EAC5B,MAsxBA,SAAS4lG,GAAuBrzJ,EAAMwD,EAAU+4G,GAC9C,MAAMj2G,EAAkB9C,EAAS2f,qBACsBvkB,EAAU,CAACoB,KAAMA,GACxEpB,EAAgB,OAAI4E,EAAS6f,YAC7BzkB,EAAgB,OAAI4E,EAASggB,YAG7B,MAAM9f,EAAaF,EAASlL,gBAC5BoL,EAAWgB,YAAc4B,EAEzB,MAAMzG,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACjD29G,EAAc22C,GAA4Bz0J,EAAWs7G,cACrDnjH,EAAS0lH,GAAah6G,EAAYi6G,GACxCU,GACEz/G,EACA21J,GACA92C,GACAzlH,EACAukH,EACAoB,EAEJ,CAOA,MAAM62C,GAAsB32C,GAAgByjC,GAAgB,CAC1D,QACA,OACA,YAQImT,GAAsB52C,GAAgByjC,GAAgB,CAC1DmO,gBAAmB5yC,GAAkB62C,IACrCpE,gBAAmBzyC,GAAkB62C,MAQjCgB,GAA8Bv3C,GAAsB,mBAOpDw3C,GAA8Bx3C,GAAsB,mBAO1D,SAASm2C,GAAatzJ,EAAMqqB,EAASkyF,GACnC,MAAMn4F,EAAciG,EAAQS,iBACtB8pI,EAAYxwI,EAAY/lB,QACyBO,EAAU,CAACoB,KAAMA,GAExEq+G,GACEz/G,EACA61J,GACAC,GACAtwI,EACAm4F,GAGF8B,GACEz/G,EACA61J,GACAE,GACA,CAACC,GACDr4C,EAEJ,CAOA,MAAMs4C,GAAyBh3C,GAAgByjC,GAAgB,CAC7D3hG,MAASk9D,GAAkBi1C,IAC3B5/F,KAAQ2qD,GAAkBqjC,IAC1BkO,QAAWvxC,GAAkBqjC,MAkC/B,SAASwS,GAAmB1yJ,EAAMmR,GAEhC4vI,GAAqB/gJ,EAAMlF,KAAK+R,MAAc,IAARsE,GAAe,IACvD,CAOA,MAAM6iJ,GAAiBn2C,GAAgByjC,GAAgB,CACrD,YACA,aACA,YACA,cAQI2S,GAAoBp2C,GAAgByjC,GAAgB,CACxDwO,UAAajzC,IAzrBf,SAAwB78G,EAAMhB,EAAOu9G,GACnC,MAAuD39G,EAAU,CAACoB,KAAMA,GAC/B0D,EAAa,CAAE,EAClDupB,EAAMjuB,EAAM8sD,SACZ5pD,EAAOlD,EAAMqD,UACb20D,EAAgBh4D,EAAMwyD,eACtBsjG,EAAiB,CACrB9iF,KAAQ/kD,GAGV,GAAI/qB,EAAM,CACR4yJ,EAAkB,EAAI5yJ,EAAK,GAC3B4yJ,EAAkB,EAAI5yJ,EAAK,GAC3B,MAAM2e,EAAS7hB,EAAMuyD,YACf2uB,EAASlhF,EAAMyyD,YAOrB,GALIyuB,GAAUlpB,GAA+B,IAAdkpB,EAAO,IAAYA,EAAO,KAAOh+E,EAAK,KACnE4yJ,EAAkB,EAAI50E,EAAO,GAC7B40E,EAAkB,EAAI99F,EAAc,IAAMkpB,EAAO,GAAKh+E,EAAK,KAGzD2e,IAAWA,EAAO,KAAO3e,EAAK,GAAK,GAAK2e,EAAO,KAAO3e,EAAK,GAAK,GAAI,CACtE,MAA0B4rJ,EAAU,CAChC7oJ,EAAG4b,EAAO,GACVktI,OAAQ,SACR7oJ,EAAGhD,EAAK,GAAK2e,EAAO,GACpBmtI,OAAQ,UAEZtqJ,EAAoB,QAAIoqJ,CAC9B,CACA,CAEEpqJ,EAAiB,KAAIoxJ,EAErB,IAAI3jJ,EAAQnS,EAAMsyD,gBAAgB,GAC9BwF,EAAY50D,EAIhB,GAHkB,OAAd40D,IACFA,EAAYm1F,IAEU,GAApBn1F,EAAU/mE,OAAa,CAEzBohB,GADoBu7I,GAAa51F,EAErC,CACgB,IAAV3lD,IACFzN,EAAkB,MAAIyN,GAGxB,MAAM/I,EAAWpJ,EAAMu9B,cACN,IAAbn0B,IACF1E,EAAoB,QAAI0E,GAG1B,MAAMu3C,EAAQ3gD,EAAMs1D,WAChB3U,IACFj8C,EAAkB,MAAIi8C,GAGxB,MAAM9/C,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACjD29G,EAAc40C,GAAoB1yJ,EAAWs7G,cAC7CnjH,EAAS0lH,GAAah6G,EAAYi6G,GACxCU,GACEz/G,EACA4zJ,GACA/0C,GACAzlH,EACAukH,EACAoB,EAEJ,IAsnBEyyC,WAAcvzC,IA3lBhB,SAAyB78G,EAAMhB,EAAOu9G,GACpC,MAAuD39G,EAAU,CAACoB,KAAMA,GAClE0D,EAAa,CAAE,EACfwuD,EAAOlzD,EAAM2zD,UACfT,IACFxuD,EAAkB,MAAIwuD,EAAKoC,YAE7B,MAAMnjD,EAAQnS,EAAMkyD,WAChB//C,GAAmB,IAAVA,IACXzN,EAAkB,MAAIyN,GAExB,MAAMtR,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACjD29G,EAAcg1C,GAAqB9yJ,EAAWs7G,cAC9CnjH,EAAS0lH,GAAah6G,EAAYi6G,GACxCU,GACEz/G,EACAg0J,GACAn1C,GACAzlH,EACAukH,EACAoB,EAEJ,IAskBE0yC,UAAaxzC,IA9iBf,SAAwB78G,EAAMhB,EAAOu9G,GACnC,MAAuD39G,EAAU,CAACoB,KAAMA,GAClE0D,EAAa,CACjBi8C,MAAS3gD,EAAMs1D,WACft2D,MAAS+jB,OAAO/iB,EAAM4I,aAAe,GAEjC/H,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACjD29G,EAAck1C,GAAoBhzJ,EAAWs7G,cAC7CnjH,EAAS0lH,GAAah6G,EAAYi6G,GACxCU,GACEz/G,EACAk0J,GACAr1C,GACAzlH,EACAukH,EACAoB,EAEJ,IA8hBE2yC,UAAazzC,IApDf,SAAwB78G,EAAMhB,EAAOu9G,GACnC,MAAuD39G,EAAU,CAACoB,KAAMA,GAClEkyD,EAAOlzD,EAAM2zD,UACbH,EAASxzD,EAAM8zD,YACfpvD,EAAa,CACjBi8C,MAASuS,EAAOA,EAAKoC,gBAAa5+D,EAClCw8D,OAAQA,QAAOx8D,EACf04J,UAAW57F,QAAS98D,GAEhBmK,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACjD29G,EAAc62C,GAAoB30J,EAAWs7G,cAC7CnjH,EAAS0lH,GAAah6G,EAAYi6G,GACxCU,GACEz/G,EACAi2J,GACAp3C,GACAzlH,EACAukH,EACAoB,EAEJ,MC7xGA,MAAMo3C,GAAgB,WAChBC,GAAiB,EAAID,GAKrBE,GAAyC,oBAAhBC,YAA8B,KAAO,IAAIA,YAAY,SAOrE,MAAMC,GAIjB,WAAAlmK,CAAYgvI,EAAM,IAAIj9H,WAAW,KAC7B9R,KAAK+uI,IAAMm3B,YAAYC,OAAOp3B,GAAOA,EAAM,IAAIj9H,WAAWi9H,GAC1D/uI,KAAKomK,SAAW,IAAIn0J,SAASjS,KAAK+uI,IAAIn5H,QACtC5V,KAAKipD,IAAM,EACXjpD,KAAK0E,KAAO,EACZ1E,KAAKa,OAASb,KAAK+uI,IAAIluI,MAC/B,CAUI,UAAAwlK,CAAWC,EAAW78H,EAAQ9nC,EAAM3B,KAAKa,QACrC,KAAOb,KAAKipD,IAAMtnD,GAAK,CACnB,MAAMwW,EAAMnY,KAAKumK,aACbC,EAAMruJ,GAAO,EACbsuJ,EAAWzmK,KAAKipD,IAEpBjpD,KAAK0E,KAAa,EAANyT,EACZmuJ,EAAUE,EAAK/8H,EAAQzpC,MAEnBA,KAAKipD,MAAQw9G,GAAUzmK,KAAK0mK,KAAKvuJ,EACjD,CACQ,OAAOsxB,CACf,CAOI,WAAAk9H,CAAYL,EAAW78H,GACnB,OAAOzpC,KAAKqmK,WAAWC,EAAW78H,EAAQzpC,KAAKumK,aAAevmK,KAAKipD,IAC3E,CAEI,WAAA29G,GACI,MAAMzuJ,EAAMnY,KAAKomK,SAASS,UAAU7mK,KAAKipD,KAAK,GAE9C,OADAjpD,KAAKipD,KAAO,EACL9wC,CACf,CAEI,YAAA2uJ,GACI,MAAM3uJ,EAAMnY,KAAKomK,SAASW,SAAS/mK,KAAKipD,KAAK,GAE7C,OADAjpD,KAAKipD,KAAO,EACL9wC,CACf,CAII,WAAA6uJ,GACI,MAAM7uJ,EAAMnY,KAAKomK,SAASS,UAAU7mK,KAAKipD,KAAK,GAAQjpD,KAAKomK,SAASS,UAAU7mK,KAAKipD,IAAM,GAAG,GAAQ48G,GAEpG,OADA7lK,KAAKipD,KAAO,EACL9wC,CACf,CAEI,YAAA8uJ,GACI,MAAM9uJ,EAAMnY,KAAKomK,SAASS,UAAU7mK,KAAKipD,KAAK,GAAQjpD,KAAKomK,SAASW,SAAS/mK,KAAKipD,IAAM,GAAG,GAAQ48G,GAEnG,OADA7lK,KAAKipD,KAAO,EACL9wC,CACf,CAEI,SAAA+uJ,GACI,MAAM/uJ,EAAMnY,KAAKomK,SAASe,WAAWnnK,KAAKipD,KAAK,GAE/C,OADAjpD,KAAKipD,KAAO,EACL9wC,CACf,CAEI,UAAAivJ,GACI,MAAMjvJ,EAAMnY,KAAKomK,SAASiB,WAAWrnK,KAAKipD,KAAK,GAE/C,OADAjpD,KAAKipD,KAAO,EACL9wC,CACf,CAKI,UAAAouJ,CAAWe,GACP,MAAMv4B,EAAM/uI,KAAK+uI,IACjB,IAAI52H,EAAKnX,EAEqC,OAA9CA,EAAI+tI,EAAI/uI,KAAKipD,OAAQ9wC,EAAY,IAAJnX,EAAqBA,EAAI,IAAamX,GACnEnX,EAAI+tI,EAAI/uI,KAAKipD,OAAQ9wC,IAAY,IAAJnX,IAAa,EAAQA,EAAI,IAAamX,GACnEnX,EAAI+tI,EAAI/uI,KAAKipD,OAAQ9wC,IAAY,IAAJnX,IAAa,GAAQA,EAAI,IAAamX,GACnEnX,EAAI+tI,EAAI/uI,KAAKipD,OAAQ9wC,IAAY,IAAJnX,IAAa,GAAQA,EAAI,IAAamX,GACnEnX,EAAI+tI,EAAI/uI,KAAKipD,KAAQ9wC,IAAY,GAAJnX,IAAa,GA+alD,SAA6Bwa,EAAGkwC,EAAGmE,GAC/B,MAAMk/E,EAAMl/E,EAAEk/E,IACd,IAAI9+F,EAAGjvC,EAEkC,GAAzCA,EAAI+tI,EAAIl/E,EAAE5G,OAAQhZ,GAAU,IAAJjvC,IAAa,EAAQA,EAAI,IAAM,OAAOumK,GAAM/rJ,EAAGy0B,EAAGyb,GACjC,GAAzC1qD,EAAI+tI,EAAIl/E,EAAE5G,OAAQhZ,IAAU,IAAJjvC,IAAa,EAAQA,EAAI,IAAM,OAAOumK,GAAM/rJ,EAAGy0B,EAAGyb,GACjC,GAAzC1qD,EAAI+tI,EAAIl/E,EAAE5G,OAAQhZ,IAAU,IAAJjvC,IAAa,GAAQA,EAAI,IAAM,OAAOumK,GAAM/rJ,EAAGy0B,EAAGyb,GACjC,GAAzC1qD,EAAI+tI,EAAIl/E,EAAE5G,OAAQhZ,IAAU,IAAJjvC,IAAa,GAAQA,EAAI,IAAM,OAAOumK,GAAM/rJ,EAAGy0B,EAAGyb,GACjC,GAAzC1qD,EAAI+tI,EAAIl/E,EAAE5G,OAAQhZ,IAAU,IAAJjvC,IAAa,GAAQA,EAAI,IAAM,OAAOumK,GAAM/rJ,EAAGy0B,EAAGyb,GACjC,GAAzC1qD,EAAI+tI,EAAIl/E,EAAE5G,OAAQhZ,IAAU,EAAJjvC,IAAa,GAAQA,EAAI,IAAM,OAAOumK,GAAM/rJ,EAAGy0B,EAAGyb,GAE1E,MAAM,IAAIrjD,MAAM,yCACpB,CAzbem/J,CAAoBrvJ,EAAKmvJ,EAAUtnK,SAClD,CAEI,YAAAynK,GACI,OAAOznK,KAAKumK,YAAW,EAC/B,CAEI,WAAAmB,GACI,MAAMC,EAAM3nK,KAAKumK,aACjB,OAAOoB,EAAM,GAAM,GAAKA,EAAM,IAAK,EAAKA,EAAM,CACtD,CAEI,WAAArX,GACI,OAAO5gH,QAAQ1vC,KAAKumK,aAC5B,CAEI,UAAAzV,GACI,MAAMnvJ,EAAM3B,KAAKumK,aAAevmK,KAAKipD,IAC/BA,EAAMjpD,KAAKipD,IAGjB,OAFAjpD,KAAKipD,IAAMtnD,EAEPA,EAAMsnD,GA3Hc,IA2HoB88G,GAEjCA,GAAgBz3J,OAAOtO,KAAK+uI,IAAI64B,SAAS3+G,EAAKtnD,IAgkBjE,SAAkBotI,EAAK9lF,EAAKtnD,GACxB,IAAIkmK,EAAM,GACNtmK,EAAI0nD,EAER,KAAO1nD,EAAII,GAAK,CACZ,MAAMmmK,EAAK/4B,EAAIxtI,GACf,IAQImuB,EAAII,EAAIi4I,EARRx/I,EAAI,KACJy/I,EACAF,EAAK,IAAO,EACZA,EAAK,IAAO,EACZA,EAAK,IAAO,EAAI,EAEpB,GAAIvmK,EAAIymK,EAAmBrmK,EAAK,MAIP,IAArBqmK,EACIF,EAAK,MACLv/I,EAAIu/I,GAEoB,IAArBE,GACPt4I,EAAKq/G,EAAIxtI,EAAI,GACO,MAAV,IAALmuB,KACDnH,GAAU,GAALu/I,IAAc,EAAY,GAALp4I,EACtBnH,GAAK,MACLA,EAAI,QAGgB,IAArBy/I,GACPt4I,EAAKq/G,EAAIxtI,EAAI,GACbuuB,EAAKi/G,EAAIxtI,EAAI,GACO,MAAV,IAALmuB,IAAuC,MAAV,IAALI,KACzBvH,GAAU,GAALu/I,IAAa,IAAY,GAALp4I,IAAc,EAAY,GAALI,GAC1CvH,GAAK,MAAUA,GAAK,OAAUA,GAAK,SACnCA,EAAI,QAGgB,IAArBy/I,IACPt4I,EAAKq/G,EAAIxtI,EAAI,GACbuuB,EAAKi/G,EAAIxtI,EAAI,GACbwmK,EAAKh5B,EAAIxtI,EAAI,GACO,MAAV,IAALmuB,IAAuC,MAAV,IAALI,IAAuC,MAAV,IAALi4I,KACjDx/I,GAAU,GAALu/I,IAAa,IAAa,GAALp4I,IAAc,IAAY,GAALI,IAAc,EAAY,GAALi4I,GAChEx/I,GAAK,OAAUA,GAAK,WACpBA,EAAI,QAKN,OAANA,GACAA,EAAI,MACJy/I,EAAmB,GAEZz/I,EAAI,QACXA,GAAK,MACLs/I,GAAOn/J,OAAO4tF,aAAa/tE,IAAM,GAAK,KAAQ,OAC9CA,EAAI,MAAa,KAAJA,GAGjBs/I,GAAOn/J,OAAO4tF,aAAa/tE,GAC3BhnB,GAAKymK,CACb,CAEI,OAAOH,CACX,CA7nBeI,CAASjoK,KAAK+uI,IAAK9lF,EAAKtnD,EACvC,CAEI,SAAAumK,GACI,MAAMvmK,EAAM3B,KAAKumK,aAAevmK,KAAKipD,IACjCrzC,EAAS5V,KAAK+uI,IAAI64B,SAAS5nK,KAAKipD,IAAKtnD,GAEzC,OADA3B,KAAKipD,IAAMtnD,EACJiU,CACf,CAQI,gBAAAuyJ,CAAiBhnK,EAAM,GAAImmK,GACvB,MAAM3lK,EAAM3B,KAAKooK,gBACjB,KAAOpoK,KAAKipD,IAAMtnD,GAAKR,EAAIwE,KAAK3F,KAAKumK,WAAWe,IAChD,OAAOnmK,CACf,CAEI,iBAAAknK,CAAkBlnK,EAAM,IACpB,MAAMQ,EAAM3B,KAAKooK,gBACjB,KAAOpoK,KAAKipD,IAAMtnD,GAAKR,EAAIwE,KAAK3F,KAAK0nK,eACrC,OAAOvmK,CACf,CAEI,iBAAAmnK,CAAkBnnK,EAAM,IACpB,MAAMQ,EAAM3B,KAAKooK,gBACjB,KAAOpoK,KAAKipD,IAAMtnD,GAAKR,EAAIwE,KAAK3F,KAAKswJ,eACrC,OAAOnvJ,CACf,CAEI,eAAAonK,CAAgBpnK,EAAM,IAClB,MAAMQ,EAAM3B,KAAKooK,gBACjB,KAAOpoK,KAAKipD,IAAMtnD,GAAKR,EAAIwE,KAAK3F,KAAKknK,aACrC,OAAO/lK,CACf,CAEI,gBAAAqnK,CAAiBrnK,EAAM,IACnB,MAAMQ,EAAM3B,KAAKooK,gBACjB,KAAOpoK,KAAKipD,IAAMtnD,GAAKR,EAAIwE,KAAK3F,KAAKonK,cACrC,OAAOjmK,CACf,CAEI,iBAAAsnK,CAAkBtnK,EAAM,IACpB,MAAMQ,EAAM3B,KAAKooK,gBACjB,KAAOpoK,KAAKipD,IAAMtnD,GAAKR,EAAIwE,KAAK3F,KAAK4mK,eACrC,OAAOzlK,CACf,CAEI,kBAAAunK,CAAmBvnK,EAAM,IACrB,MAAMQ,EAAM3B,KAAKooK,gBACjB,KAAOpoK,KAAKipD,IAAMtnD,GAAKR,EAAIwE,KAAK3F,KAAK8mK,gBACrC,OAAO3lK,CACf,CAEI,iBAAAwnK,CAAkBxnK,EAAM,IACpB,MAAMQ,EAAM3B,KAAKooK,gBACjB,KAAOpoK,KAAKipD,IAAMtnD,GAAKR,EAAIwE,KAAK3F,KAAKgnK,eACrC,OAAO7lK,CACf,CAEI,kBAAAynK,CAAmBznK,EAAM,IACrB,MAAMQ,EAAM3B,KAAKooK,gBACjB,KAAOpoK,KAAKipD,IAAMtnD,GAAKR,EAAIwE,KAAK3F,KAAKinK,gBACrC,OAAO9lK,CACf,CACI,aAAAinK,GACI,OAjMY,IAiMLpoK,KAAK0E,KAAqB1E,KAAKumK,aAAevmK,KAAKipD,IAAMjpD,KAAKipD,IAAM,CACnF,CAGI,IAAAy9G,CAAKvuJ,GACD,MAAMzT,EAAa,EAANyT,EACb,GAzMY,IAyMRzT,EAAqB,KAAO1E,KAAK+uI,IAAI/uI,KAAKipD,OAAS,WAClD,GAxMO,IAwMHvkD,EAAoB1E,KAAKipD,IAAMjpD,KAAKumK,aAAevmK,KAAKipD,SAC5D,GAxMO,IAwMHvkD,EAAsB1E,KAAKipD,KAAO,MACtC,IA3MO,IA2MHvkD,EACJ,MAAM,IAAI2D,MAAM,uBAAuB3D,KADb1E,KAAKipD,KAAO,CACQ,CAC3D,CAQI,QAAA4/G,CAASrC,EAAK9hK,GACV1E,KAAK8oK,YAAatC,GAAO,EAAK9hK,EACtC,CAGI,OAAAqkK,CAAQhxJ,GACJ,IAAIlX,EAASb,KAAKa,QAAU,GAE5B,KAAOA,EAASb,KAAKipD,IAAMlxC,GAAKlX,GAAU,EAE1C,GAAIA,IAAWb,KAAKa,OAAQ,CACxB,MAAMkuI,EAAM,IAAIj9H,WAAWjR,GAC3BkuI,EAAInlI,IAAI5J,KAAK+uI,KACb/uI,KAAK+uI,IAAMA,EACX/uI,KAAKomK,SAAW,IAAIn0J,SAAS88H,EAAIn5H,QACjC5V,KAAKa,OAASA,CAC1B,CACA,CAEI,MAAAixH,GAGI,OAFA9xH,KAAKa,OAASb,KAAKipD,IACnBjpD,KAAKipD,IAAM,EACJjpD,KAAK+uI,IAAI64B,SAAS,EAAG5nK,KAAKa,OACzC,CAGI,YAAAmoK,CAAa7wJ,GACTnY,KAAK+oK,QAAQ,GACb/oK,KAAKomK,SAAS6C,SAASjpK,KAAKipD,IAAK9wC,GAAK,GACtCnY,KAAKipD,KAAO,CACpB,CAGI,aAAAigH,CAAc/wJ,GACVnY,KAAK+oK,QAAQ,GACb/oK,KAAKomK,SAAS6C,SAASjpK,KAAKipD,IAAK9wC,GAAK,GACtCnY,KAAKipD,KAAO,CACpB,CAGI,YAAAkgH,CAAahxJ,GACTnY,KAAK+oK,QAAQ,GACb/oK,KAAKomK,SAAS6C,SAASjpK,KAAKipD,KAAa,EAAR9wC,GAAU,GAC3CnY,KAAKomK,SAAS6C,SAASjpK,KAAKipD,IAAM,EAAGr9C,KAAKoQ,MAAM7D,EAAM2tJ,KAAiB,GACvE9lK,KAAKipD,KAAO,CACpB,CAGI,aAAAmgH,CAAcjxJ,GACVnY,KAAK+oK,QAAQ,GACb/oK,KAAKomK,SAAS6C,SAASjpK,KAAKipD,KAAa,EAAR9wC,GAAU,GAC3CnY,KAAKomK,SAAS6C,SAASjpK,KAAKipD,IAAM,EAAGr9C,KAAKoQ,MAAM7D,EAAM2tJ,KAAiB,GACvE9lK,KAAKipD,KAAO,CACpB,CAGI,WAAA6/G,CAAY3wJ,IACRA,GAAOA,GAAO,GAEJ,WAAaA,EAAM,EA0RrC,SAAwBA,EAAKkxJ,GACzB,IAAI1oK,EAAKC,EAELuX,GAAO,GACPxX,EAAQwX,EAAM,WAAe,EAC7BvX,EAAQuX,EAAM,WAAe,IAE7BxX,KAAUwX,EAAM,YAChBvX,KAAUuX,EAAM,YAEN,WAANxX,EACAA,EAAOA,EAAM,EAAK,GAElBA,EAAM,EACNC,EAAQA,EAAO,EAAK,IAI5B,GAAIuX,GAAO,qBAAuBA,uBAC9B,MAAM,IAAI9P,MAAM,0CAGpBghK,EAAIN,QAAQ,IAWhB,SAA2BpoK,EAAKC,EAAMyoK,GAClCA,EAAIt6B,IAAIs6B,EAAIpgH,OAAe,IAANtoD,EAAa,IAAMA,KAAS,EACjD0oK,EAAIt6B,IAAIs6B,EAAIpgH,OAAe,IAANtoD,EAAa,IAAMA,KAAS,EACjD0oK,EAAIt6B,IAAIs6B,EAAIpgH,OAAe,IAANtoD,EAAa,IAAMA,KAAS,EACjD0oK,EAAIt6B,IAAIs6B,EAAIpgH,OAAe,IAANtoD,EAAa,IAAMA,KAAS,EACjD0oK,EAAIt6B,IAAIs6B,EAAIpgH,KAAe,IAANtoD,CACzB,CAfI2oK,CAAkB3oK,EAAKC,EAAMyoK,GAqBjC,SAA4BzoK,EAAMyoK,GAC9B,MAAME,GAAc,EAAP3oK,IAAgB,EAEmC,GAAhEyoK,EAAIt6B,IAAIs6B,EAAIpgH,QAAUsgH,IAAgB3oK,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEyoK,EAAIt6B,IAAIs6B,EAAIpgH,OAAiB,IAAProD,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEyoK,EAAIt6B,IAAIs6B,EAAIpgH,OAAiB,IAAProD,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEyoK,EAAIt6B,IAAIs6B,EAAIpgH,OAAiB,IAAProD,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEyoK,EAAIt6B,IAAIs6B,EAAIpgH,OAAiB,IAAProD,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OAC3EyoK,EAAIt6B,IAAIs6B,EAAIpgH,OAAiB,IAAProD,CAC1B,CA7BI4oK,CAAmB5oK,EAAMyoK,EAC7B,CAnTYI,CAAetxJ,EAAKnY,OAIxBA,KAAK+oK,QAAQ,GAEb/oK,KAAK+uI,IAAI/uI,KAAKipD,OAAyB,IAAN9wC,GAAeA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnFnY,KAAK+uI,IAAI/uI,KAAKipD,OAAyB,KAAd9wC,KAAS,IAAcA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnFnY,KAAK+uI,IAAI/uI,KAAKipD,OAAyB,KAAd9wC,KAAS,IAAcA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnFnY,KAAK+uI,IAAI/uI,KAAKipD,OAAY9wC,IAAQ,EAAK,OAC/C,CAGI,YAAAuxJ,CAAavxJ,GACTnY,KAAK8oK,YAAY3wJ,EAAM,EAAW,GAANA,EAAU,EAAU,EAANA,EAClD,CAGI,YAAAwxJ,CAAaxxJ,GACTnY,KAAK8oK,aAAa3wJ,EAC1B,CAGI,WAAAyxJ,CAAY/B,GACRA,EAAMn/J,OAAOm/J,GACb7nK,KAAK+oK,QAAqB,EAAblB,EAAIhnK,QAEjBb,KAAKipD,MAEL,MAAMw9G,EAAWzmK,KAAKipD,IAEtBjpD,KAAKipD,IAgdb,SAAmB8lF,EAAK84B,EAAK5+G,GACzB,IAAK,IAAW1gC,EAAGshJ,EAAVtoK,EAAI,EAAYA,EAAIsmK,EAAIhnK,OAAQU,IAAK,CAG1C,GAFAgnB,EAAIs/I,EAAI1xE,WAAW50F,GAEfgnB,EAAI,OAAUA,EAAI,MAAQ,CAC1B,IAAIshJ,EAWG,CACCthJ,EAAI,OAAWhnB,EAAI,IAAMsmK,EAAIhnK,QAC7BkuI,EAAI9lF,KAAS,IACb8lF,EAAI9lF,KAAS,IACb8lF,EAAI9lF,KAAS,KAEb4gH,EAAOthJ,EAEX,QAChB,CAnBgB,GAAIA,EAAI,MAAQ,CACZwmH,EAAI9lF,KAAS,IACb8lF,EAAI9lF,KAAS,IACb8lF,EAAI9lF,KAAS,IACb4gH,EAAOthJ,EACP,QACpB,CACoBA,EAAIshJ,EAAO,OAAU,GAAKthJ,EAAI,MAAS,MACvCshJ,EAAO,IAYlB,MAAUA,IACP96B,EAAI9lF,KAAS,IACb8lF,EAAI9lF,KAAS,IACb8lF,EAAI9lF,KAAS,IACb4gH,EAAO,MAGPthJ,EAAI,IACJwmH,EAAI9lF,KAAS1gC,GAETA,EAAI,KACJwmH,EAAI9lF,KAAS1gC,GAAK,EAAM,KAEpBA,EAAI,MACJwmH,EAAI9lF,KAAS1gC,GAAK,GAAM,KAExBwmH,EAAI9lF,KAAS1gC,GAAK,GAAO,IACzBwmH,EAAI9lF,KAAS1gC,GAAK,GAAM,GAAO,KAEnCwmH,EAAI9lF,KAAS1gC,GAAK,EAAM,GAAO,KAEnCwmH,EAAI9lF,KAAa,GAAJ1gC,EAAW,IAEpC,CACI,OAAO0gC,CACX,CAngBmB6gH,CAAU9pK,KAAK+uI,IAAK84B,EAAK7nK,KAAKipD,KACzC,MAAMlhD,EAAM/H,KAAKipD,IAAMw9G,EAEnB1+J,GAAO,KAAMgiK,GAAuBtD,EAAU1+J,EAAK/H,MAGvDA,KAAKipD,IAAMw9G,EAAW,EACtBzmK,KAAK8oK,YAAY/gK,GACjB/H,KAAKipD,KAAOlhD,CACpB,CAGI,UAAAiiK,CAAW7xJ,GACPnY,KAAK+oK,QAAQ,GACb/oK,KAAKomK,SAAS6D,WAAWjqK,KAAKipD,IAAK9wC,GAAK,GACxCnY,KAAKipD,KAAO,CACpB,CAGI,WAAAihH,CAAY/xJ,GACRnY,KAAK+oK,QAAQ,GACb/oK,KAAKomK,SAAS+D,WAAWnqK,KAAKipD,IAAK9wC,GAAK,GACxCnY,KAAKipD,KAAO,CACpB,CAGI,UAAAmhH,CAAWx0J,GACP,MAAM7N,EAAM6N,EAAO/U,OACnBb,KAAK8oK,YAAY/gK,GACjB/H,KAAK+oK,QAAQhhK,GACb,IAAK,IAAIxG,EAAI,EAAGA,EAAIwG,EAAKxG,IAAKvB,KAAK+uI,IAAI/uI,KAAKipD,OAASrzC,EAAOrU,EACpE,CAOI,eAAA8oK,CAAgBnnK,EAAIsF,GAChBxI,KAAKipD,MAGL,MAAMw9G,EAAWzmK,KAAKipD,IACtB/lD,EAAGsF,EAAKxI,MACR,MAAM+H,EAAM/H,KAAKipD,IAAMw9G,EAEnB1+J,GAAO,KAAMgiK,GAAuBtD,EAAU1+J,EAAK/H,MAGvDA,KAAKipD,IAAMw9G,EAAW,EACtBzmK,KAAK8oK,YAAY/gK,GACjB/H,KAAKipD,KAAOlhD,CACpB,CAQI,YAAAuiK,CAAa9D,EAAKtjK,EAAIsF,GAClBxI,KAAK6oK,SAASrC,EA5WF,GA6WZxmK,KAAKqqK,gBAAgBnnK,EAAIsF,EACjC,CAMI,iBAAA+hK,CAAkB/D,EAAKrlK,GACfA,EAAIN,QAAQb,KAAKsqK,aAAa9D,EAAK+D,GAAmBppK,EAClE,CAKI,kBAAAqpK,CAAmBhE,EAAKrlK,GAChBA,EAAIN,QAAQb,KAAKsqK,aAAa9D,EAAKgE,GAAoBrpK,EACnE,CAKI,kBAAAspK,CAAmBjE,EAAKrlK,GAChBA,EAAIN,QAAQb,KAAKsqK,aAAa9D,EAAKiE,GAAoBtpK,EACnE,CAKI,gBAAAupK,CAAiBlE,EAAKrlK,GACdA,EAAIN,QAAQb,KAAKsqK,aAAa9D,EAAKkE,GAAkBvpK,EACjE,CAKI,iBAAAwpK,CAAkBnE,EAAKrlK,GACfA,EAAIN,QAAQb,KAAKsqK,aAAa9D,EAAKmE,GAAmBxpK,EAClE,CAKI,kBAAAypK,CAAmBpE,EAAKrlK,GAChBA,EAAIN,QAAQb,KAAKsqK,aAAa9D,EAAKoE,GAAoBzpK,EACnE,CAKI,mBAAA0pK,CAAoBrE,EAAKrlK,GACjBA,EAAIN,QAAQb,KAAKsqK,aAAa9D,EAAKqE,GAAqB1pK,EACpE,CAKI,kBAAA2pK,CAAmBtE,EAAKrlK,GAChBA,EAAIN,QAAQb,KAAKsqK,aAAa9D,EAAKsE,GAAoB3pK,EACnE,CAKI,mBAAA4pK,CAAoBvE,EAAKrlK,GACjBA,EAAIN,QAAQb,KAAKsqK,aAAa9D,EAAKuE,GAAqB5pK,EACpE,CAMI,eAAA6pK,CAAgBxE,EAAK5wJ,GACjB5V,KAAK6oK,SAASrC,EArbF,GAsbZxmK,KAAKoqK,WAAWx0J,EACxB,CAKI,iBAAAq1J,CAAkBzE,EAAKruJ,GACnBnY,KAAK6oK,SAASrC,EA5bF,GA6bZxmK,KAAKgpK,aAAa7wJ,EAC1B,CAKI,kBAAA+yJ,CAAmB1E,EAAKruJ,GACpBnY,KAAK6oK,SAASrC,EApcF,GAqcZxmK,KAAKkpK,cAAc/wJ,EAC3B,CAKI,iBAAAgzJ,CAAkB3E,EAAKruJ,GACnBnY,KAAK6oK,SAASrC,EA9cF,GA+cZxmK,KAAKmpK,aAAahxJ,EAC1B,CAKI,kBAAAizJ,CAAmB5E,EAAKruJ,GACpBnY,KAAK6oK,SAASrC,EAtdF,GAudZxmK,KAAKopK,cAAcjxJ,EAC3B,CAKI,gBAAAkzJ,CAAiB7E,EAAKruJ,GAClBnY,KAAK6oK,SAASrC,EA/dF,GAgeZxmK,KAAK8oK,YAAY3wJ,EACzB,CAKI,iBAAAmzJ,CAAkB9E,EAAKruJ,GACnBnY,KAAK6oK,SAASrC,EAveF,GAweZxmK,KAAK0pK,aAAavxJ,EAC1B,CAKI,gBAAAozJ,CAAiB/E,EAAKqB,GAClB7nK,KAAK6oK,SAASrC,EA7eF,GA8eZxmK,KAAK4pK,YAAY/B,EACzB,CAKI,eAAA2D,CAAgBhF,EAAKruJ,GACjBnY,KAAK6oK,SAASrC,EApfF,GAqfZxmK,KAAKgqK,WAAW7xJ,EACxB,CAKI,gBAAAszJ,CAAiBjF,EAAKruJ,GAClBnY,KAAK6oK,SAASrC,EA9fF,GA+fZxmK,KAAKkqK,YAAY/xJ,EACzB,CAKI,iBAAAuzJ,CAAkBlF,EAAKruJ,GACnBnY,KAAKqrK,iBAAiB7E,GAAMruJ,EACpC,EA2BA,SAASovJ,GAAM5mK,EAAKC,EAAM0mK,GACtB,OAAOA,EAAkB,WAAP1mK,GAAsBD,IAAQ,GAAqB,YAAdC,IAAS,IAAqBD,IAAQ,EACjG,CAmEA,SAASopK,GAAuBtD,EAAU1+J,EAAKshK,GAC3C,MAAMsC,EACF5jK,GAAO,MAAS,EAChBA,GAAO,QAAW,EAClBA,GAAO,UAAY,EAAI6D,KAAKoQ,MAAMpQ,KAAKqZ,IAAIld,IAAmB,EAAX6D,KAAKggK,MAG5DvC,EAAIN,QAAQ4C,GACZ,IAAK,IAAIpqK,EAAI8nK,EAAIpgH,IAAM,EAAG1nD,GAAKklK,EAAUllK,IAAK8nK,EAAIt6B,IAAIxtI,EAAIoqK,GAAYtC,EAAIt6B,IAAIxtI,EAClF,CAMA,SAASgpK,GAAkBppK,EAAKkoK,GAC5B,IAAK,IAAI9nK,EAAI,EAAGA,EAAIJ,EAAIN,OAAQU,IAAK8nK,EAAIP,YAAY3nK,EAAII,GAC7D,CAKA,SAASipK,GAAmBrpK,EAAKkoK,GAC7B,IAAK,IAAI9nK,EAAI,EAAGA,EAAIJ,EAAIN,OAAQU,IAAK8nK,EAAIK,aAAavoK,EAAII,GAC9D,CAKA,SAASmpK,GAAiBvpK,EAAKkoK,GAC3B,IAAK,IAAI9nK,EAAI,EAAGA,EAAIJ,EAAIN,OAAQU,IAAK8nK,EAAIW,WAAW7oK,EAAII,GAC5D,CAKA,SAASopK,GAAkBxpK,EAAKkoK,GAC5B,IAAK,IAAI9nK,EAAI,EAAGA,EAAIJ,EAAIN,OAAQU,IAAK8nK,EAAIa,YAAY/oK,EAAII,GAC7D,CAKA,SAASkpK,GAAmBtpK,EAAKkoK,GAC7B,IAAK,IAAI9nK,EAAI,EAAGA,EAAIJ,EAAIN,OAAQU,IAAK8nK,EAAIM,aAAaxoK,EAAII,GAC9D,CAKA,SAASqpK,GAAmBzpK,EAAKkoK,GAC7B,IAAK,IAAI9nK,EAAI,EAAGA,EAAIJ,EAAIN,OAAQU,IAAK8nK,EAAIL,aAAa7nK,EAAII,GAC9D,CAKA,SAASspK,GAAoB1pK,EAAKkoK,GAC9B,IAAK,IAAI9nK,EAAI,EAAGA,EAAIJ,EAAIN,OAAQU,IAAK8nK,EAAIH,cAAc/nK,EAAII,GAC/D,CAKA,SAASupK,GAAmB3pK,EAAKkoK,GAC7B,IAAK,IAAI9nK,EAAI,EAAGA,EAAIJ,EAAIN,OAAQU,IAAK8nK,EAAIF,aAAahoK,EAAII,GAC9D,CAKA,SAASwpK,GAAoB5pK,EAAKkoK,GAC9B,IAAK,IAAI9nK,EAAI,EAAGA,EAAIJ,EAAIN,OAAQU,IAAK8nK,EAAID,cAAcjoK,EAAII,GAC/D,CCtYA,SAASsqK,GAAgBrF,EAAKrtH,EAAQkwH,GACpC,GAAY,IAAR7C,EAAW,CACb,MAAMhtH,EAAQ,CACZ7yC,KAAM,GACNmC,OAAQ,GACR4xE,SAAU,IAEN/4E,EAAM0nK,EAAI9C,aAAe8C,EAAIpgH,IACnCogH,EAAIhD,WAAWyF,GAAgBtyH,EAAO73C,GACtC63C,EAAM34C,OAAS24C,EAAMkhC,SAAS75E,OAC1B24C,EAAM34C,SACRs4C,EAAOK,EAAMpkC,MAAQokC,EAE3B,CACA,CAQA,SAASsyH,GAAetF,EAAKhtH,EAAO6vH,GAClC,GAAY,KAAR7C,EACFhtH,EAAMuyH,QAAU1C,EAAI9C,kBACf,GAAY,IAARC,EACThtH,EAAMpkC,KAAOi0J,EAAIvY,kBACZ,GAAY,IAAR0V,EACThtH,EAAM/jC,OAAS4zJ,EAAI9C,kBACd,GAAY,IAARC,EACThtH,EAAMkhC,SAAS/0E,KAAK0jK,EAAIpgH,UACnB,GAAY,IAARu9G,EACThtH,EAAM7yC,KAAKhB,KAAK0jK,EAAIvY,mBACf,GAAY,IAAR0V,EAAW,CACpB,IAAIziK,EAAQ,KACZ,MAAMpC,EAAM0nK,EAAI9C,aAAe8C,EAAIpgH,IACnC,KAAOogH,EAAIpgH,IAAMtnD,GAEfoC,EACU,KAFVyiK,EAAM6C,EAAI9C,cAAgB,GAGpB8C,EAAIvY,aACI,IAAR0V,EACE6C,EAAInC,YACI,IAARV,EACE6C,EAAIjC,aACI,IAARZ,EACE6C,EAAI5B,eACI,IAARjB,EACE6C,EAAI9C,aACI,IAARC,EACE6C,EAAI3B,cACI,IAARlB,EACE6C,EAAI/Y,cACJ,KAEpB92G,EAAM1wC,OAAOnD,KAAK5B,EACtB,CACA,CAQA,SAASioK,GAAiBxF,EAAK/8F,EAAS4/F,GACtC,GAAW,GAAP7C,EACF/8F,EAAQ18D,GAAKs8J,EAAI9C,kBACZ,GAAW,GAAPC,EAAU,CACnB,MAAM7kK,EAAM0nK,EAAI9C,aAAe8C,EAAIpgH,IACnC,KAAOogH,EAAIpgH,IAAMtnD,GAAK,CACpB,MAAM2F,EAAMmiE,EAAQjwB,MAAM7yC,KAAK0iK,EAAI9C,cAC7BxiK,EAAQ0lE,EAAQjwB,MAAM1wC,OAAOugK,EAAI9C,cACvC98F,EAAQj1D,WAAWlN,GAAOvD,CAChC,CACA,MAAoB,GAAPyiK,EACT/8F,EAAQ/kE,KAAO2kK,EAAI9C,aACH,GAAPC,IACT/8F,EAAQn1D,SAAW+0J,EAAIpgH,IAE3B,CASA,SAASgjH,GAAe5C,EAAK7vH,EAAOj4C,GAClC8nK,EAAIpgH,IAAMzP,EAAMkhC,SAASn5E,GACzB,MAAMI,EAAM0nK,EAAI9C,aAAe8C,EAAIpgH,IAE7BwgB,EAAU,CACdjwB,MAAOA,EACP90C,KAAM,EACN8P,WAAY,CAAE,GAGhB,OADA60J,EAAIhD,WAAW2F,GAAkBviG,EAAS9nE,GACnC8nE,CACT,CCrYA,MAAM2oF,GAAiB,CAAC,MAOlB8Z,GAAcv9C,GAAgByjC,GAAgB,CAClD+Z,GA8JF,SAAgBr7J,EAAMu8G,GACpB,MAAMvkH,EAAgCukH,EAAYA,EAAYxsH,OAAS,GACvEiI,EAAOsjK,OAAOzmK,KAAKmL,EAAKkiJ,aAAa,QACjCliJ,EAAKutC,aAAa,QAAUvtC,EAAKutC,aAAa,SAChDv1C,EAAOsO,gBAAgBzR,KAAKyrB,WAAWtgB,EAAKkiJ,aAAa,SACzDlqJ,EAAOsO,gBAAgBzR,KAAKyrB,WAAWtgB,EAAKkiJ,aAAa,SAE7D,EApKEwT,IAAO6F,KAQHC,GAAU39C,GAAgByjC,GAAgB,CAC9CthJ,KA0FF,SAAkBA,EAAMu8G,GACtB,MAAM/iH,EACJ+iH,EAAY,GAERlhH,EAA+BkhH,EAAYA,EAAYxsH,OAAS,GAChEkM,EAAK+D,EAAKkiJ,aAAa,MAEvBx9I,EAAc,CAClB4b,WAAWtgB,EAAKkiJ,aAAa,QAC7B5hI,WAAWtgB,EAAKkiJ,aAAa,SAE/B7mJ,EAAMogK,MAAMx/J,GAAMyI,EAElB,MAAM1M,EAASomH,GACb,CACEs9C,KAAM,CAAE,GAEVC,GACA37J,EACAu8G,GAEF,IAAK7oH,EAAQsE,EAAO0jK,MAAO,CACzB,MAAMl4J,EAAW,IAAI0jB,GAAMxiB,GAC3Bs5I,GAA6Bx6I,GAAU,EAAOhK,GAC9C,MAAMm/D,EAAU,IAAI31D,GAAQQ,QACjB9N,IAAPuG,GACF08D,EAAQt0D,MAAMpI,GAEhB08D,EAAQzgE,cAAcF,EAAO0jK,MAAM,GACnCrgK,EAAMuuE,SAAS/0E,KAAK8jE,EACxB,CACA,EAxHEijG,IA8HF,SAAiB57J,EAAMu8G,GACrB,MACMvkH,EAASomH,GACb,CACEniH,GAHO+D,EAAKkiJ,aAAa,MAIzBoZ,OAAQ,GACRh1J,gBAAiB,GACjBo1J,KAAM,CAAE,GAEVN,GACAp7J,EACAu8G,GAEmCA,EAAYA,EAAYxsH,OAAS,GAChE8rK,KAAKhnK,KAAKmD,EAClB,IA5DA,MAAM2jK,GAAe99C,GAAgByjC,GAAgB,CACnDoU,IAAO6F,KA8ET,SAASA,GAAQv7J,EAAMu8G,GACiBA,EAAYA,EAAYxsH,OAAS,GAChE2rK,KAAK17J,EAAKkiJ,aAAa,MAAQliJ,EAAKkiJ,aAAa,IAC1D,CC7LA,MAAM4Z,GAQJ,IAAAC,CAAK9iK,GACH,IAAKA,EACH,OAAO,KAET,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClB,OAAO/J,KAAK8sK,iBAAiB5oI,EACnC,CACI,OAAI4oF,GAAW/iH,GACN/J,KAAK8sK,iBAAgB,GAEvB9sK,KAAK+sK,aAAY,EAC5B,CAME,gBAAAD,CAAiB5oI,GACf,IAAK,IAAI5iC,EAAI4iC,EAAIoyC,WAAYh1E,EAAGA,EAAIA,EAAEurH,YACpC,GAAIvrH,EAAEkrH,UAAYC,KAAKojC,aACrB,OAAO7vJ,KAAK+sK,aAAY,GAG5B,OAAO,IACX,CAOE,YAAAA,CAAaj8J,GACX1I,GACJ,ECxCO,SAAS4kK,GAASl8J,GACvB,OAAOA,EAAKi8G,eAPQ,+BAOsB,OAC5C,CCCA,MAAMqlC,GAAiB,CAAC,KAAM,kCAOxBka,GAAU39C,GAAgByjC,GAAgB,CAC9C6a,sBAAyBv/C,IA6Q3B,SAAmC58G,EAAMu8G,GACvC,OAAO6B,GAAgB,CAAE,EAAEg+C,GAAgCp8J,EAAMu8G,EACnE,IA9QE8/C,gBAAmBz/C,IA8RrB,SAA6B58G,EAAMu8G,GACjC,OAAO6B,GAAgB,CAAE,EAAEk+C,GAA0Bt8J,EAAMu8G,EAC7D,IA/REggD,mBAAsB3/C,IAyPxB,SAAgC58G,EAAMu8G,GACpC,OAAO6B,GAAgB,CAAE,EAAEo+C,GAA6Bx8J,EAAMu8G,EAChE,MAxPA,MAAMkgD,WAAYX,GAChB,WAAA7sK,GACEkF,OACJ,CAOE,YAAA8nK,CAAaj8J,GACX,MAAM08J,EAAYt+C,GAAgB,CAAA,EAAIo9C,GAASx7J,EAAM,IACrD,OAAO08J,GAAwB,IACnC,EAQA,MAAMC,GAAkB9+C,GAAgByjC,GAAgB,CACtDsb,cAAiBhgD,GAAyBojC,IAC1C6c,KAAQjgD,GAAyBojC,IACjC8c,mBAAsBlgD,GAAyBojC,IAC/C+c,WAAcngD,GAAyBojC,IACvCgd,QAAWpgD,GAAyBojC,IACpCid,sBAAyBrgD,GAAyBojC,MAQ9Ckd,GAAyBr/C,GAAgByjC,GAAgB,CAC7D6b,MAASzgD,IA+PX,SAAmB18G,EAAMu8G,GACvB,OAAOyjC,GAAWhgJ,EACpB,MAzPMo9J,GAAqBv/C,GAAgByjC,GAAgB,CACzD+b,cAAiBzgD,IAuHnB,SAA2B58G,EAAMu8G,GAC/B,OAAO6B,GAAgB,CAAE,EAAE8+C,GAAwBl9J,EAAMu8G,EAC3D,MAjHM+gD,GAAuBz/C,GAAgByjC,GAAgB,CAC3Dic,MAAS3gD,IAyMX,SAAmB58G,EAAMu8G,GACvB,OAAO6B,GAAgB,CAAE,EAAEo/C,GAAex9J,EAAMu8G,EAClD,IA1MEkhD,QAAW7gD,IAoGb,SAAqB58G,EAAMu8G,GACzB,OAAO6B,GAAgB,CAAE,EAAEu+C,GAAiB38J,EAAMu8G,EACpD,MA9FMmhD,GAAc7/C,GAAgByjC,GAAgB,CAClDqc,KAAQ/gD,IA8JV,SAAkB58G,EAAMu8G,GACtB,OAAO6B,GAAgB,CAAE,EAAEw/C,GAAc59J,EAAMu8G,EACjD,MAxJMqhD,GAAe//C,GAAgByjC,GAAgB,CACnD/9F,IAAOm5D,IAmIT,SAAiB18G,EAAMu8G,GACrB,MAAMvqC,EAAOkqF,GAASl8J,GACtB,IAAKgyE,EACH,OAEF,OAAOosC,GACL,CAACpsC,KAAQA,GACT6rF,GACA79J,EACAu8G,EAEJ,IA7IEuhD,UAAQpoK,IAQJqoK,GAAoBlgD,GAAgByjC,GAAgB,CACxD0c,IAAOphD,IAgHT,SAAiB58G,EAAMu8G,GACrB,OAAO6B,GAAgB,CAAE,EAAEs/C,GAAa19J,EAAMu8G,EAChD,MA1GMigD,GAA8B3+C,GAAgByjC,GAAgB,CAClE2c,UA2IF,SAAuBj+J,EAAMu8G,GAC3B,MAAMj4G,EAAOtE,EAAKkiJ,aAAa,QACzBjvJ,EAAQmrH,GAAgB,CAAA,EAAI2/C,GAAmB/9J,EAAMu8G,GAC3D,IAAKtpH,EACH,OAEoCspH,EAAYA,EAAYxsH,OAAS,GAChEuU,GAAQrR,CACjB,IA3IMuqK,GAAgB3/C,GAAgByjC,GAAgB,CACpD4c,MAASthD,GAAyBojC,IAClCme,UAAavhD,GAAyBojC,MAQlC6d,GAAyBhgD,GAAgByjC,GAAgB,CAC7D8c,WAAc1hD,IA8DhB,SAAwB18G,EAAMu8G,GAC5B,MAAMj4G,EAAOtE,EAAKkiJ,aAAa,QAC/B,IAAK59I,EACH,OAEF,OAAO85G,GAAgB,CAAC95G,KAAQA,GAAO84J,GAAoBp9J,EAAMu8G,EACnE,MA5DM8hD,GAA0BxgD,GAAgByjC,GAAgB,CAC9Dgd,eAAkB1hD,GAAyBojC,IAC3Cue,aAAgB3hD,GAAyBojC,IACzCwe,YAAe5hD,IAgEjB,SAAyB58G,EAAMu8G,GAC7B,OAAO6B,GAAgB,CAAE,EAAEk/C,GAAsBt9J,EAAMu8G,EACzD,MA1DM6/C,GAAiCv+C,GAAgByjC,GAAgB,CACrEmd,SAAY7hD,GAAyBojC,IACrC0e,kBAAqB9hD,GAAyBojC,IAC9C2e,KAAQ/hD,GAAyBojC,IACjC4e,MAAShiD,GAAyBojC,IAClC6e,mBAAsBjiD,GAAyBojC,IAC/C8e,YAAeliD,GAAyBojC,MAQpCsc,GAA2Bz+C,GAAgByjC,GAAgB,CAC/Dyd,aAAgBniD,GAAyBojC,IACzCgf,aAAgBpiD,GAAyBs/C,IACzC+C,eAAkBriD,IA8HpB,SAA4B58G,EAAMu8G,GAChC,OAAO6B,GAAgB,CAAE,EAAEigD,GAAyBr+J,EAAMu8G,EAC5D,MCtIO,SAAS2iD,GAAaC,EAAS34J,EAAQoG,GAE5C,IAAIiD,EADJjD,EAASA,GAAkB,IAG3B,MAAMwyJ,EAAc,IAAIluK,MAAMsV,GAC9B,IAAKqJ,EAAI,EAAGA,EAAIrJ,IAAUqJ,EACxBuvJ,EAAYvvJ,GAAK,EAGnB,IAAK,IAAIpf,EAAI,EAAG4E,EAAK8pK,EAAQpvK,OAAQU,EAAI4E,GACvC,IAAKwa,EAAI,EAAGA,EAAIrJ,IAAUqJ,IAAKpf,EAAG,CAChC,MAAMomK,EAAMsI,EAAQ1uK,GACd2L,EAAQy6J,EAAMuI,EAAYvvJ,GAChCuvJ,EAAYvvJ,GAAKgnJ,EAEjBsI,EAAQ1uK,GAAK2L,CACnB,CAGE,OAAOijK,GAAaF,EAASvyJ,EAC/B,CAaO,SAAS0yJ,GAAav8G,EAASv8C,EAAQoG,GAE5C,IAAIiD,EADJjD,EAASA,GAAkB,IAI3B,MAAMwyJ,EAAc,IAAIluK,MAAMsV,GAC9B,IAAKqJ,EAAI,EAAGA,EAAIrJ,IAAUqJ,EACxBuvJ,EAAYvvJ,GAAK,EAGnB,MAAMsvJ,EAAUI,GAAax8G,EAASn2C,GAEtC,IAAK,IAAInc,EAAI,EAAG4E,EAAK8pK,EAAQpvK,OAAQU,EAAI4E,GACvC,IAAKwa,EAAI,EAAGA,EAAIrJ,IAAUqJ,IAAKpf,EAC7B2uK,EAAYvvJ,IAAMsvJ,EAAQ1uK,GAE1B0uK,EAAQ1uK,GAAK2uK,EAAYvvJ,GAI7B,OAAOsvJ,CACT,CAcO,SAASE,GAAaF,EAASvyJ,GACpCA,EAASA,GAAkB,IAC3B,IAAK,IAAInc,EAAI,EAAG4E,EAAK8pK,EAAQpvK,OAAQU,EAAI4E,IAAM5E,EAC7C0uK,EAAQ1uK,GAAKqK,KAAK+R,MAAMsyJ,EAAQ1uK,GAAKmc,GAGvC,OAAO4yJ,GAAqBL,EAC9B,CAWO,SAASI,GAAax8G,EAASn2C,GACpCA,EAASA,GAAkB,IAC3B,MAAMuyJ,EAAUM,GAAqB18G,GACrC,IAAK,IAAItyD,EAAI,EAAG4E,EAAK8pK,EAAQpvK,OAAQU,EAAI4E,IAAM5E,EAC7C0uK,EAAQ1uK,IAAMmc,EAEhB,OAAOuyJ,CACT,CAUO,SAASK,GAAqBL,GACnC,IAAK,IAAI1uK,EAAI,EAAG4E,EAAK8pK,EAAQpvK,OAAQU,EAAI4E,IAAM5E,EAAG,CAChD,MAAMomK,EAAMsI,EAAQ1uK,GACpB0uK,EAAQ1uK,GAAKomK,EAAM,IAAMA,GAAO,GAAKA,GAAO,CAChD,CACE,OAAO6I,GAAuBP,EAChC,CAQO,SAASM,GAAqB18G,GACnC,MAAMo8G,EAAUQ,GAAuB58G,GACvC,IAAK,IAAItyD,EAAI,EAAG4E,EAAK8pK,EAAQpvK,OAAQU,EAAI4E,IAAM5E,EAAG,CAChD,MAAMomK,EAAMsI,EAAQ1uK,GACpB0uK,EAAQ1uK,GAAW,EAANomK,IAAYA,GAAO,GAAKA,GAAO,CAChD,CACE,OAAOsI,CACT,CAQO,SAASO,GAAuBP,GACrC,IAAIp8G,EAAU,GACd,IAAK,IAAItyD,EAAI,EAAG4E,EAAK8pK,EAAQpvK,OAAQU,EAAI4E,IAAM5E,EAC7CsyD,GAAW68G,GAAsBT,EAAQ1uK,IAE3C,OAAOsyD,CACT,CAQO,SAAS48G,GAAuB58G,GACrC,MAAMo8G,EAAU,GAChB,IAAIU,EAAU,EACVxhK,EAAQ,EACZ,IAAK,IAAI5N,EAAI,EAAG4E,EAAK0tD,EAAQhzD,OAAQU,EAAI4E,IAAM5E,EAAG,CAChD,MAAMP,EAAI6yD,EAAQsiC,WAAW50F,GAAK,GAClCovK,IAAgB,GAAJ3vK,IAAamO,EACrBnO,EAAI,IACNivK,EAAQtqK,KAAKgrK,GACbA,EAAU,EACVxhK,EAAQ,GAERA,GAAS,CAEf,CACE,OAAO8gK,CACT,CAQO,SAASS,GAAsB/I,GACpC,IAAI5jK,EACF8vD,EAAU,GACZ,KAAO8zG,GAAO,IACZ5jK,EAAgC,IAAvB,GAAc,GAAN4jK,GACjB9zG,GAAWnrD,OAAO4tF,aAAavyF,GAC/B4jK,IAAQ,EAIV,OAFA5jK,EAAQ4jK,EAAM,GACd9zG,GAAWnrD,OAAO4tF,aAAavyF,GACxB8vD,CACT,CCvLA,MAAM+8G,GAAmB,CACvB54I,MAmDF,SAA2B1zB,EAAQ2d,EAAOkO,GACxC,MAAM3a,EAAclR,EAAoB,YACpC2d,GAASkO,GACX0gJ,GAAgBr7J,EAAayM,EAAOkO,GAEtC,OAAO,IAAI6H,GAAMxiB,EACnB,EAxDEy1E,WAmFF,SAAgC3mF,EAAQwsK,GACtC,MAAMt7J,EAAcu7J,GAAgBzsK,EAAa,KAAGwsK,GACpD,OAAO,IAAI7lF,GAAWz1E,EACxB,EArFEolB,QA6GF,SAA6Bt2B,EAAQwsK,GACnC,MAAMt7J,EAAc,GACpB,IAAK,IAAIjU,EAAI,EAAG4E,EAAK7B,EAAa,KAAEzD,OAAQU,EAAI4E,IAAM5E,EACpDiU,EAAYjU,GAAKwvK,GAAgBzsK,EAAa,KAAE/C,GAAIuvK,GAEtD,OAAO,IAAIl2I,GAAQplB,EACrB,EAlHE41E,WAgEF,SAAgC9mF,EAAQ2d,EAAOkO,GAC7C,MAAM3a,EAAclR,EAAoB,YACxC,GAAI2d,GAASkO,EACX,IAAK,IAAI5uB,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EACjDsvK,GAAgBr7J,EAAYjU,GAAI0gB,EAAOkO,GAG3C,OAAO,IAAIi7D,GAAW51E,EACxB,EAvEE81E,gBA4FF,SAAqChnF,EAAQwsK,GAC3C,MAAMt7J,EAAc,GACpB,IAAK,IAAIjU,EAAI,EAAG4E,EAAK7B,EAAa,KAAEzD,OAAQU,EAAI4E,IAAM5E,EACpDiU,EAAYjU,GAAKwvK,GAAgBzsK,EAAa,KAAE/C,GAAIuvK,GAEtD,OAAO,IAAIxlF,GAAgB91E,EAC7B,EAjGE+1E,aAyHF,SAAkCjnF,EAAQwsK,GACxC,MAAMt7J,EAAc,GACpB,IAAK,IAAIjU,EAAI,EAAG4E,EAAK7B,EAAa,KAAEzD,OAAQU,EAAI4E,IAAM5E,EAAG,CAEvD,MAAMyvK,EAAY1sK,EAAa,KAAE/C,GAC3B0vK,EAAa,GACnB,IAAK,IAAIp0J,EAAI,EAAG6P,EAAKskJ,EAAUnwK,OAAQgc,EAAI6P,IAAM7P,EAE/Co0J,EAAWp0J,GAAKk0J,GAAgBC,EAAUn0J,GAAIi0J,GAEhDt7J,EAAYjU,GAAK0vK,CACrB,CACE,OAAO,IAAI1lF,GAAa/1E,EAC1B,GA3HA,SAASu7J,GAAgBG,EAASJ,GAEhC,MAAMt7J,EAAc,GACpB,IAAI5S,EACJ,IAAK,IAAIrB,EAAI,EAAG4E,EAAK+qK,EAAQrwK,OAAQU,EAAI4E,IAAM5E,EAM7C,GALAqB,EAAQsuK,EAAQ3vK,GACZA,EAAI,GAENiU,EAAY3K,MAEVjI,GAAS,EAAG,CAEd,MAAMkjE,EAAMgrG,EAAKluK,GACjB,IAAK,IAAIia,EAAI,EAAG6P,EAAKo5C,EAAIjlE,OAAQgc,EAAI6P,IAAM7P,EACzCrH,EAAY7P,KAAKmgE,EAAIjpD,GAAGrZ,MAAM,GAEtC,KAAW,CAEL,MAAMsiE,EAAMgrG,GAAMluK,GAClB,IAAK,IAAIia,EAAIipD,EAAIjlE,OAAS,EAAGgc,GAAK,IAAKA,EACrCrH,EAAY7P,KAAKmgE,EAAIjpD,GAAGrZ,MAAM,GAEtC,CAEE,OAAOgS,CACT,CAkHA,SAAS27J,GACPpoH,EACA+nH,EACA7uJ,EACAkO,EACA5rB,EACA6Q,EACA9K,GAEA,MAAMo9E,EAAa3+B,EAAuB,WACpC2xB,EAAW,GACjB,IAAK,IAAIn5E,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAChDm5E,EAASn5E,GAAK6vK,GACZ1pF,EAAWnmF,GACXuvK,EACA7uJ,EACAkO,EACA5rB,EACA6Q,EACA9K,GAGJ,OAAOowE,CACT,CAeA,SAAS02F,GACP9sK,EACAwsK,EACA7uJ,EACAkO,EACA5rB,EACA6Q,EACA9K,GAEA,IAAIgK,EAAW,KACf,MAAM5P,EAAOJ,EAAOI,KACpB,GAAIA,EAAM,CACR,MAAM2sK,EAAiBT,GAAiBlsK,GAEtC4P,EADW,UAAT5P,GAA6B,eAATA,EACX2sK,EAAe/sK,EAAQ2d,EAAOkO,GAE9BkhJ,EAAe/sK,EAAQwsK,GAEpCx8J,EAAWw6I,GAA6Bx6I,GAAU,EAAOhK,EAC7D,CACE,MAAMm/D,EAAU,IAAI31D,GAAQ,CAACQ,SAAUA,SACrB9N,IAAdlC,EAAOyI,IACT08D,EAAQt0D,MAAM7Q,EAAOyI,IAEvB,IAAIyH,EAAalQ,EAAOkQ,WAUxB,OATIjQ,IACGiQ,IACHA,EAAa,CAAE,GAEjBA,EAAWjQ,GAAY6Q,GAErBZ,GACFi1D,EAAQzgE,cAAcwL,GAAY,GAE7Bi1D,CACT,CAuBA,SAAS6nG,GAAaxrG,EAAK7jD,EAAOkO,GAChC,IAAIpa,EAAI,EACJC,EAAI,EACR,IAAK,IAAIzU,EAAI,EAAG4E,EAAK2/D,EAAIjlE,OAAQU,EAAI4E,IAAM5E,EAAG,CAC5C,MAAMgsJ,EAASznF,EAAIvkE,GACnBwU,GAAKw3I,EAAO,GACZv3I,GAAKu3I,EAAO,GACZA,EAAO,GAAKx3I,EACZw3I,EAAO,GAAKv3I,EACZ66J,GAAgBtjB,EAAQtrI,EAAOkO,EACnC,CACA,CAUA,SAAS0gJ,GAAgBtjB,EAAQtrI,EAAOkO,GACtCo9H,EAAO,GAAKA,EAAO,GAAKtrI,EAAM,GAAKkO,EAAU,GAC7Co9H,EAAO,GAAKA,EAAO,GAAKtrI,EAAM,GAAKkO,EAAU,EAC/C,CC1ZO,MAAMohJ,GAAQ,6BASfC,GAAqB,QA6C3B,MAAMC,WAAgBjiB,GAIpB,WAAAzvJ,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAMhCtK,KAAK0xK,YAAcpnK,EAAQonK,YAM3B1xK,KAAK2xK,UAAYrnK,EAAQqnK,UAMzB3xK,KAAK4xK,QAAUtnK,EAAQsnK,QAMvB5xK,KAAK6xK,eAAiB,GAKtB7xK,KAAK8xK,2BAA6B,CAAE,EACpC9xK,KAAK8xK,2BAA2B9xK,KAAK+xK,WAAa,CAChDC,cAAiB1kD,GAAgBttH,KAAKiyK,sBACtCC,eAAkB3kD,GAAavtH,KAAKiyK,uBAGtCjyK,KAAKq6G,oBAAsB,CAAC,sBAChC,CAOE,oBAAA43D,CAAqBnhK,EAAMu8G,GACzB,MAAMI,EAAY38G,EAAK28G,UACvB,IAAI/yC,EAAW,KACf,GAAiB,qBAAb+yC,EACF/yC,EAAWw0C,GACT,GACAlvH,KAAK8xK,2BACLhhK,EACAu8G,EACArtH,WAEG,GACQ,kBAAbytH,GACa,iBAAbA,GACa,UAAbA,EACA,CACA,MAAM/9G,EAAU29G,EAAY,GAC5B,IAAIqkD,EAAchiK,EAAqB,YACnCiiK,EAAYjiK,EAAmB,UACnC,MAAMm/D,EAAS,IACTsjG,EAAgB,KACtB,IAAKT,GAAe5gK,EAAKK,WAAY,CAClCugK,EAAc,GAAMC,EAAY,GACjC,IAAK,IAAIpwK,EAAI,EAAG4E,EAAK2K,EAAKK,WAAWtQ,OAAQU,EAAI4E,IAAM5E,EAAG,CACxD,MAAM+qD,EAAgCx7C,EAAKK,WAAW5P,GACtD,GAAuB,IAAnB+qD,EAAMkgE,SAAgB,CACxB,MAAM5pG,EAAK0pC,EAAMgiE,SAASnuG,MAAM,KAAKtV,MACrC,IAAK6mK,EAAYhsK,SAASkd,GAAK,CAC7B,IAAItb,EAAM,GACN8+B,EAAQ,EACZ,MAAMgvD,EAAM9oC,EAAM2/D,aAClB,IAAK,MAAMzqH,KAAamwK,EAAW,CACjC,GAAIA,EAAUnwK,KAAe4zF,EAAK,CAChC9tF,EAAM9F,EACN,KAClB,GACkB4kC,CAClB,CACmB9+B,IACHA,EAAMunE,EAASzoC,EACfurI,EAAUrqK,GAAO8tF,GAEnBs8E,EAAY/rK,KAAK2B,EAAM,IAAMsb,EAC3C,CACA,CACA,CACyB,iBAAb6qG,IAEF/9G,EAAqB,YAAIgiK,EACzBhiK,EAAmB,UAAIiiK,EAEjC,CACM,GAAyB,iBAAdA,EAAwB,CACjC,MAAMS,EAAKT,EACXA,EAAY,CAAE,EACdA,EAAUQ,GAAiBC,CACnC,CAEM,MAAMpjD,EAAY,CAAE,EACdqjD,EAAerwK,MAAMC,QAAQyvK,GAC/BA,EACA,CAACA,GACL,IAAK,MAAM7hH,KAAK8hH,EAAW,CAEzB,MAAMz9G,EAAU,CAAE,EAClB,IAAK,IAAI3yD,EAAI,EAAG4E,EAAKksK,EAAaxxK,OAAQU,EAAI4E,IAAM5E,EAAG,EAC/B8wK,EAAa9wK,GAAGmE,SAAS,KAC3C2sK,EAAa9wK,GAAG4e,MAAM,KAAK,GAC3BgyJ,KACkBtiH,IACpBqE,EAAQm+G,EAAa9wK,GAAG4e,MAAM,KAAKtV,OACpB,kBAAb4iH,EACIH,GAAgBttH,KAAKsyK,mBAAoBtyK,MACzCutH,GAAavtH,KAAKsyK,mBAAoBtyK,MAExD,CACQgvH,EAAU2iD,EAAU9hH,IAAMqE,CAClC,CAEQwmB,EAAWw0C,GADI,iBAAbzB,GAA6C,UAAbA,OACPjnH,EAEA,GAFWwoH,EAAWl+G,EAAMu8G,EAI/D,CAII,OAHiB,OAAb3yC,IACFA,EAAW,IAENA,CACX,CAOE,oBAAA63F,CAAqBzhK,EAAMu8G,GACzB,MAAM39G,EAAiC29G,EAAY,GAInD,OAHA39G,EAAiB,QAAIoB,EAAKiuG,kBAAkBi0C,aAAa,WACzDtjJ,EAAsB,aACpBoB,EAAKiuG,kBAAkBi0C,aAAa,gBAC/B9jC,GACL,KACAlvH,KAAKwyK,iBACL1hK,EACAu8G,EACArtH,KAEN,CAOE,iBAAAyyK,CAAkB3hK,EAAMu8G,GACtB,MAAM39G,EAAiC29G,EAAY,GAC7C53G,EACJzV,KAAKuyK,qBAAqBzhK,EAAMu8G,GAElC,OAAO53G,EAAS05I,GAA2B15I,EAAQ/F,QAAWlJ,CAClE,CAOE,mBAAAksK,CAAoB5hK,EAAMu8G,GACxB,MAAM39G,EAAiC29G,EAAY,GAC7C/4G,EACJtU,KAAKuyK,qBAAqBzhK,EAAMu8G,GAElC,OAAO/4G,EACHw6I,GAA6Bx6I,GAAU,EAAO5E,QAC9ClJ,CACR,CAQE,0BAAAmsK,CAA2B7hK,EAAMu8G,EAAaulD,GAC5C,IAAIC,EACJ,MAAM/pK,EAAS,CAAE,EACjB,IAAK,IAAIxH,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAAoB,CAChE,IAAIlrH,EACJ,MAAM0pH,EAAYnsH,EAAEmsH,UAGM,IAAxBnsH,EAAE6P,WAAWtQ,QACY,IAAxBS,EAAE6P,WAAWtQ,SACe,IAA1BS,EAAEg1E,WAAWk2C,UAA4C,IAA1BlrH,EAAEg1E,WAAWk2C,WAE/CzoH,EAAQqoH,GAAkB9qH,GAAG,GACzBkwK,GAAmB7jK,KAAK5J,KAC1BA,OAAQyC,KAGNosK,IAEF7uK,EACgB,cAAd0pH,EACIztH,KAAKyyK,kBAAkBnxK,EAAG+rH,GAC1BrtH,KAAK0yK,oBAAoBpxK,EAAG+rH,IAE/BtpH,EAGoB,cAAd0pH,IAETolD,EAAeplD,GAHf1pH,EAAQ/D,KAAK2yK,2BAA2BrxK,EAAG+rH,GAAa,IAO5D,MAAMtlH,EAAMzG,EAAE6pI,WAAWtqI,OACzB,GAAIkH,EAAM,KAAOhE,aAAiBkuB,IAAW,CAC3CluB,EAAQ,CAAC+uK,UAAW/uK,GACpB,IAAK,IAAIxC,EAAI,EAAGA,EAAIwG,EAAKxG,IAAK,CAE5BwC,EADgBzC,EAAE6pI,WAAW5pI,GAAG6T,MACf9T,EAAE6pI,WAAW5pI,GAAGwC,KAC3C,CACA,CAEU+E,EAAO2kH,IACH3kH,EAAO2kH,aAAsBzrH,QACjC8G,EAAO2kH,GAAa,CAAC3kH,EAAO2kH,KAE9B3kH,EAAO2kH,GAAW9nH,KAAK5B,IAEvB+E,EAAO2kH,GAAa1pH,CAE5B,CACI,IAAK6uK,EACH,OAAO9pK,EAET,MAAM2gE,EAAU,IAAI31D,GAAQhL,GACxB+pK,GACFppG,EAAQ/0D,gBAAgBm+J,GAE1B,MAAME,EACJjiK,EAAKkiJ,aAAa,QAAUjmC,GAAej8G,EAAM9Q,KAAK+xK,UAAW,MAInE,OAHIgB,GACFtpG,EAAQt0D,MAAM49J,GAETtpG,CACX,CAOE,kBAAA6oG,CAAmBxhK,EAAMu8G,GACvB,OAAOrtH,KAAK2yK,2BAA2B7hK,EAAMu8G,GAAa,EAC9D,CAOE,SAAA4sC,CAAUnpJ,EAAMu8G,GACd,MAAMj2G,EAAkBpX,KAAK0/J,4BAA4B5uJ,EAAMu8G,GAC/D,GAAIj2G,EACF,OAAO,IAAI4gB,GAAM5gB,EAAiB,MAExC,CAOE,cAAA47J,CAAeliK,EAAMu8G,GAEnB,MAAM73G,EAAc05G,GAClB,GACAlvH,KAAKizK,mBACLniK,EACAu8G,EACArtH,MAEF,GAAIwV,EACF,OAAO,IAAI41E,GAAW51E,EAG5B,CAOE,mBAAA09J,CAAoBpiK,EAAMu8G,GAExB,MAAMrrB,EAAcktB,GAClB,GACAlvH,KAAKmzK,wBACLriK,EACAu8G,EACArtH,MAEF,GAAIgiG,EACF,OAAO,IAAI1W,GAAgB0W,EAEjC,CAOE,gBAAAoxE,CAAiBtiK,EAAMu8G,GAErB,MAAMzqB,EAAWssB,GACf,GACAlvH,KAAKqzK,qBACLviK,EACAu8G,EACArtH,MAEF,GAAI4iG,EACF,OAAO,IAAIrX,GAAaqX,EAE9B,CAME,iBAAA0wE,CAAkBxiK,EAAMu8G,GACtB0B,GAAU/uH,KAAKuzK,oBAAqBziK,EAAMu8G,EAAartH,KAC3D,CAME,sBAAAwzK,CAAuB1iK,EAAMu8G,GAC3B0B,GAAU/uH,KAAKyzK,yBAA0B3iK,EAAMu8G,EAAartH,KAChE,CAME,mBAAA0zK,CAAoB5iK,EAAMu8G,GACxB0B,GAAU/uH,KAAK2zK,sBAAuB7iK,EAAMu8G,EAAartH,KAC7D,CAOE,cAAA+5J,CAAejpJ,EAAMu8G,GACnB,MAAMj2G,EAAkBpX,KAAK0/J,4BAA4B5uJ,EAAMu8G,GAC/D,GAAIj2G,EAAiB,CAEnB,OADmB,IAAI6zE,GAAW7zE,EAAiB,MAEzD,CAEA,CAOE,kBAAAgoJ,CAAmBtuJ,EAAMu8G,GACvB,MAAMs8B,EAAOz6B,GACX,KACAlvH,KAAKy/J,kCACL3uJ,EACAu8G,EACArtH,MAEF,GAAI2pJ,EACF,OAAOA,CAGb,CAOE,cAAAqQ,CAAelpJ,EAAMu8G,GACnB,MAAMj2G,EAAkBpX,KAAK0/J,4BAA4B5uJ,EAAMu8G,GAC/D,GAAIj2G,EACF,OAAO,IAAIwgB,GAAWxgB,EAAiB,MAE7C,CAOE,WAAA8iJ,CAAYppJ,EAAMu8G,GAEhB,MAAMqzC,EAAkBxxC,GACtB,CAAC,MACDlvH,KAAKmgK,0BACLrvJ,EACAu8G,EACArtH,MAEF,GAAI0gK,GAAmBA,EAAgB,GAAI,CACzC,MAAMtpJ,EAAkBspJ,EAAgB,GAClCvrI,EAAO,CAAC/d,EAAgBvW,QAC9B,IAAIU,EAAG4E,EACP,IAAK5E,EAAI,EAAG4E,EAAKu6J,EAAgB7/J,OAAQU,EAAI4E,IAAM5E,EACjDM,EAAOuV,EAAiBspJ,EAAgBn/J,IACxC4zB,EAAKxvB,KAAKyR,EAAgBvW,QAE5B,OAAO,IAAI+5B,GAAQxjB,EAAiB,MAAO+d,EACjD,CAEA,CAOE,2BAAAuqI,CAA4B5uJ,EAAMu8G,GAChC,OAAO6B,GACL,KACAlvH,KAAKy/J,kCACL3uJ,EACAu8G,EACArtH,KAEN,CASE,oBAAA+vJ,CAAqBj/I,EAAMxG,GACzB,MAAMgK,EAAWtU,KAAK0yK,oBAAoB5hK,EAAM,CAC9C9Q,KAAKuuJ,eAAez9I,EAAMxG,GAAoB,CAAA,KAEhD,OAAOgK,GAAsB,IACjC,CAQE,oBAAAs7I,CAAqB9+I,EAAMxG,GACzB,MAAMspK,EAAkB,CACtBlC,YAAa1xK,KAAK0xK,YAClBC,UAAW3xK,KAAK2xK,WAEdiC,GACFltK,OAAO2C,OAAOuqK,EAAiB5zK,KAAKuuJ,eAAez9I,EAAMxG,IAG3D,OADiBtK,KAAKiyK,qBAAqBnhK,EAAM,CAAC8iK,KAC/B,EACvB,CAOE,sBAAA3jB,CAAuBn/I,GACrB,OAAOwiB,GACLtzB,KAAK4xK,QACD5xK,KAAK4xK,QACL9gK,EAAKiuG,kBAAkBi0C,aAAa,WAE9C,EAGAye,GAAQluK,UAAUwuK,UAAYR,GAM9BE,GAAQluK,UAAU48J,0BAA4B,CAC5C,6BAA8B,CAAE,GAOlCsR,GAAQluK,UAAUk8J,kCAAoC,CACpD,6BAA8B,CAAE,GAOlCgS,GAAQluK,UAAUivK,iBAAmB,CACnC,6BAA8B,CAAE,GAOlCf,GAAQluK,UAAU0vK,mBAAqB,CACrC,6BAA8B,CAC5BY,YAAevmD,GAAgBmkD,GAAQluK,UAAU+vK,mBACjDQ,aAAgBxmD,GAAgBmkD,GAAQluK,UAAU+vK,qBAQtD7B,GAAQluK,UAAU4vK,wBAA0B,CAC1C,6BAA8B,CAC5BY,iBAAoBzmD,GAClBmkD,GAAQluK,UAAUiwK,wBAEpBQ,kBAAqB1mD,GACnBmkD,GAAQluK,UAAUiwK,0BASxB/B,GAAQluK,UAAU8vK,qBAAuB,CACvC,6BAA8B,CAC5BY,cAAiB3mD,GAAgBmkD,GAAQluK,UAAUmwK,qBACnDQ,eAAkB5mD,GAAgBmkD,GAAQluK,UAAUmwK,uBAQxDjC,GAAQluK,UAAUgwK,oBAAsB,CACtC,6BAA8B,CAC5Bv7I,MAASs1F,GAAgBmkD,GAAQluK,UAAUm8J,+BAQ/C+R,GAAQluK,UAAUkwK,yBAA2B,CAC3C,6BAA8B,CAC5BxoF,WAAcqiC,GAAgBmkD,GAAQluK,UAAUw2J,kBAQpD0X,GAAQluK,UAAUowK,sBAAwB,CACxC,6BAA8B,CAC5B/4I,QAAW0yF,GAAgBmkD,GAAQluK,UAAU22J,eAQjDuX,GAAQluK,UAAU4wK,aAAe,CAC/B,6BAA8B,CAC5Bv8I,WAAc21F,GAAakkD,GAAQluK,UAAU67J,sBChpBjD,MAAMyS,GACJN,GAAQ,oDAMJ6C,GAAmC,CACvC9oF,gBAAmB,mBACnB+oF,WAAc,cACd9oF,aAAgB,gBAChB+oF,aAAgB,iBAUlB,MAAMC,WAAa9C,GAIjB,WAAA1xK,CAAYuK,GAGVrF,MAFAqF,EAAUA,GAAoB,CAAE,GAIhCtK,KAAK8xK,2BAA2BP,IAAsB,cAAIjkD,GACxDttH,KAAKiyK,sBAMPjyK,KAAK6xK,eAAiBvnK,EAAQunK,eAC1BvnK,EAAQunK,eACRA,EACR,CAOE,mBAAA5T,CAAoBntJ,EAAMu8G,GACxB,MAAM3hE,EAAI0gE,GAAkBt7G,GAAM,GAAO4Q,QAAQ,aAAc,IAIzD8yJ,EAFJnnD,EAAY,GAEwB,QACtC,IAAIhqG,EAAkB,MACtB,GAAImxJ,EAAc,CAChB,MAAM50E,EAAOtsE,GAAckhJ,GACvB50E,IACFv8E,EAAkBu8E,EAAK17E,qBAE/B,CACI,MAAMuwJ,EAAe/oH,EAAEqlG,OAAO5wI,MAAM,OAC9B/I,EAAkB,GACxB,IAAK,IAAI7V,EAAI,EAAG4E,EAAKsuK,EAAa5zK,OAAQU,EAAI4E,EAAI5E,IAAK,CACrD,MAAMkxC,EAASgiI,EAAalzK,GAAG4e,MAAM,MAC/BpK,EAAIqb,WAAWqhB,EAAO,IACtBz8B,EAAIob,WAAWqhB,EAAO,IACtB3I,EAAsB,IAAlB2I,EAAO5xC,OAAeuwB,WAAWqhB,EAAO,IAAM,EACpDpvB,EAAgBwR,WAAW,MAC7Bzd,EAAgBzR,KAAKoQ,EAAGC,EAAG8zB,GAE3B1yB,EAAgBzR,KAAKqQ,EAAGD,EAAG+zB,EAEnC,CACI,OAAO1yB,CACX,CAOE,OAAAs9J,CAAQ5jK,EAAMu8G,GAEZ,MAAMj2G,EAAkB83G,GACtB,CAAC,MACDlvH,KAAK20K,aACL7jK,EACAu8G,EACArtH,MAEF,OAAOgX,GACLI,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GAEzB,CAME,qBAAAw9J,CAAsB9jK,EAAMu8G,GAE1B,MAAMmzC,EAAiBtxC,QACrB1oH,EACAxG,KAAKm0K,aACLrjK,EACAu8G,EACArtH,MAEF,GAAIwgK,EAAgB,CAGfnzC,EAAYA,EAAYxsH,OAAS,GACpB8E,KAAK66J,EAC3B,CACA,CAME,qBAAAqU,CAAsB/jK,EAAMu8G,GAE1B,MAAMmzC,EAAiBtxC,QACrB1oH,EACAxG,KAAKm0K,aACLrjK,EACAu8G,EACArtH,MAEF,GAAIwgK,EAAgB,CAGfnzC,EAAYA,EAAYxsH,OAAS,GACpB,GAAK2/J,CAC3B,CACA,CAUE,sBAAAsU,CAAuB/wK,EAAOspH,EAAaiB,GACzC,MAAM5+G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3Ck0K,EAAerlK,EAAsB,aACrCslK,EAAUtlK,EAAiB,QAC3BulK,EAAavlK,EAAoB,WAevC,OAdK1N,MAAMC,QAAQ8B,GAYjBuqH,EAAW,WARM,kBAHjBA,EAAgE,EAE9Dl7F,aACkD,IAAjB2hJ,EACjCzmD,EAAW,eACW,YAAbA,IAAsC,IAAZ0mD,EACnC1mD,EAAW,UACW,oBAAbA,IAAiD,IAAf2mD,IAC3C3mD,EAAW,cAKRtC,GAAgB,6BAA8BsC,EACzD,CAOE,mBAAA4mD,CAAoBpkK,EAAM24D,EAAS4jD,GACjC,MAAM0lD,EAAMtpG,EAAQ10D,QAChBg+J,GACFjiK,EAAK8nC,aAAa,MAAK,GAEzB,MAAMlpC,EAAiC29G,EAAYA,EAAYxsH,OAAS,GAClE8wK,EAAYjiK,EAAmB,UAC/BmjK,EAAeppG,EAAQ90D,kBACxBjF,EAAQs+G,cACXt+G,EAAQs+G,YAAc,CAAE,EACxBt+G,EAAQs+G,YAAY2jD,GAAa,CAAE,GAErC,MAAMhrK,EAAO,GACPmC,EAAS,GACf,GAAI2gE,EAAQlgE,gBAAiB,CAC3B,MAAMiL,EAAai1D,EAAQrgE,gBAC3B,IAAK,MAAM9B,KAAOkN,EAAY,CAC5B,MAAMzQ,EAAQyQ,EAAWlN,GACrBvD,UACF4C,EAAKhB,KAAK2B,GACVwB,EAAOnD,KAAK5B,GAEVuD,GAAOurK,GAEL,mBADuB,EAA6B,sBAGhDvrK,KAAOoI,EAAQs+G,YAAY2jD,KAC/BjiK,EAAQs+G,YAAY2jD,GAAWrqK,GAAOqmH,GACpC3tH,KAAKm1K,qBACLn1K,OAIEsH,KAAOoI,EAAQs+G,YAAY2jD,KAC/BjiK,EAAQs+G,YAAY2jD,GAAWrqK,GAC7BqmH,GAAkBujC,KAIlC,CACA,CACI,MAAMjmJ,EAAOvE,OAAO2C,OAAO,CAAA,EAAIqG,GAC/BzE,EAAK6F,KAAOA,EACZq+G,GAEJ,EACMz/G,EAAQs+G,YACRC,QAAsBznH,EAAWmrK,GACjC7oK,EACAukH,EACA1mH,EAEN,CAOE,sBAAAyuK,CAAuBtkK,EAAMwD,EAAU+4G,GACrC,MACMukD,EADUvkD,EAAYA,EAAYxsH,OAAS,GAChB,QAIjC,GAHsB,sBAAlBiQ,EAAKw9G,UAAoCsjD,GAC3C9gK,EAAK8nC,aAAa,UAAWg5H,GAGX,eAAlB9gK,EAAKw9G,UACa,sBAAlBx9G,EAAKw9G,SACL,CACA,MAAM94G,EAAcxV,KAAKq1K,uBAAuBvkK,EAAKm7G,cACrDn7G,EAAKU,YAAYgE,GACjBxV,KAAKs1K,kBAAkB9/J,EAAalB,EAAU+4G,EACpD,MAAW,GAAsB,UAAlBv8G,EAAKw9G,SAAsB,CACpC,MAAMo/B,EAAW1hC,GAAgBl7G,EAAKm7G,aAAc,YACpDn7G,EAAKU,YAAYk8I,GACjB1tJ,KAAKu1K,oBAAoB7nB,EAAUp5I,EAAU+4G,EACnD,CACA,CAOE,4BAAAmoD,CAA6B1kK,EAAMspH,EAAM/M,GACvC,MAAM/gE,EAAQtsD,KAAK80K,uBAAuB16C,EAAM/M,GAC5C/gE,IACFx7C,EAAKU,YAAY86C,GACjBtsD,KAAKo1K,uBAAuB9oH,EAAO8tE,EAAM/M,GAE/C,CAOE,2BAAAooD,CAA4B3kK,EAAMwD,EAAU+4G,GAC1C,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBkiK,EAAUliK,EAAiB,QAC3BgmK,EAAQhmK,EAAe,MACzBkiK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MAAMhgE,EAAQt9F,EAAS8tF,iBACvB+sB,GACE,CAACr+G,KAAMA,EAAM4lJ,KAAMA,EAAMkb,QAASA,EAAS8D,MAAOA,GAClD11K,KAAK21K,oCACL31K,KAAK41K,mCACLhkE,EACAyb,OACA7mH,EACAxG,KAEN,CAOE,oBAAAm1K,CAAqBrkK,EAAMwD,EAAU+4G,GACnC,MAAM39G,EACJ29G,EAAYA,EAAYxsH,OAAS,GAE7BoK,EAAOvE,OAAO2C,OAAO,CAAA,EAAIqG,GAE/B,IAAI3L,EADJkH,EAAW,KAAI6F,EAGb/M,EADE/B,MAAMC,QAAQqS,GACR66I,GACd,EACQz/I,GAGMo/I,GACd,GACQ,EACAp/I,GAGJy/G,GAEJ,EACMnvH,KAAK61K,qBACL71K,KAAK80K,uBACL,CAAC/wK,GACDspH,OACA7mH,EACAxG,KAEN,CAOE,sBAAAq1K,CAAuBppD,GACrB,MAAMz2G,EAAcw2G,GAAgBC,EAAc,eAKlD,OAJAz2G,EAAYojC,aAAa,UAAW,KACpCpjC,EAAYojC,aAAa,KAAM,KAC/BpjC,EAAYojC,aAAa,KAAM,KAExBpjC,CACX,CAQE,iBAAA8/J,CAAkBxkK,EAAM/M,EAAOspH,GAC7B,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBkiK,EAAUliK,EAAiB,QAE3BwzD,EAASn/D,EAAMgwB,iBACfhsB,EAAMm7D,EAAOriE,OACbi+H,EAAQ,IAAI98H,MAAM+F,GACxB,IAAK,IAAIxG,EAAI,EAAGA,EAAIwG,IAAOxG,EAAG,CAC5B,MAAM8jB,EAAQ69C,EAAO3hE,GACrBu9H,EAAMv9H,GAAKvB,KAAK81K,WAAWzwJ,EAAOusJ,EAASlb,EACjD,CACIxF,GAAoBpgJ,EAAMguH,EAAMh/G,KAAK,KACzC,CAQE,mBAAAy1J,CAAoBzkK,EAAMspH,EAAM/M,GAC9B,MAAM/gE,EAAQ0/D,GAAgBl7G,EAAKm7G,aAAc,qBACjDn7G,EAAKU,YAAY86C,GACjBtsD,KAAKo1K,uBAAuB9oH,EAAO8tE,EAAM/M,EAC7C,CAOE,qBAAA0oD,CAAsBjlK,EAAMwD,EAAU+4G,GACpC,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBkiK,EAAUliK,EAAiB,QAIjC,GAHsB,iBAAlBoB,EAAKw9G,UAA+BsjD,GACtC9gK,EAAK8nC,aAAa,UAAWg5H,GAET,YAAlB9gK,EAAKw9G,UAA4C,iBAAlBx9G,EAAKw9G,SAA6B,CACnE,MAAMx2G,EAAQxD,EAASsnB,iBACvBuzF,GACE,CAACr+G,KAAMA,EAAM4lJ,KAAMA,EAAMkb,QAASA,GAClC5xK,KAAKg2K,iBACLh2K,KAAKi2K,mBACLn+J,EACAu1G,OACA7mH,EACAxG,KAER,MAAW,GAAsB,YAAlB8Q,EAAKw9G,SAAwB,CACtC,MAAM4nD,EAAUlqD,GAAgBl7G,EAAKm7G,aAAc,WACnDn7G,EAAKU,YAAY0kK,GACjBl2K,KAAKm2K,qBAAqBD,EAAS5hK,EAAU+4G,EACnD,CACA,CASE,kBAAA4oD,CAAmBlyK,EAAOspH,EAAaiB,GACrC,MAAM5+G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C8P,EAAajB,EAAQoB,KACrBslK,EAAkB1mK,EAAyB,gBAIjD,YAHwBlJ,IAApB4vK,IACF1mK,EAAyB,iBAAI,GAExBs8G,GACLr7G,EAAWs7G,kBACSzlH,IAApB4vK,EAAgC,kBAAoB,kBAE1D,CAQE,oBAAAD,CAAqBrlK,EAAMqqB,EAASkyF,GAClC,MAAM/gE,EAAQ0/D,GAAgBl7G,EAAKm7G,aAAc,gBACjDn7G,EAAKU,YAAY86C,GACjBtsD,KAAK+1K,sBAAsBzpH,EAAOnxB,EAASkyF,EAC/C,CAOE,SAAAgpD,CAAUvlK,EAAM64I,EAAMt8B,GACpB,MAAMr4F,EAAag3F,GAAgBl7G,EAAKm7G,aAAc,cACtDn7G,EAAKU,YAAYwjB,GACjBh1B,KAAKs2K,gBAAgBthJ,EAAY20H,EAAMt8B,EAC3C,CASE,UAAAyoD,CAAWzwJ,EAAOusJ,EAASlb,GAIzB,IAAIjkH,GAHoBm/H,EACpBt+I,GAAcs+I,GAAS1tJ,qBACvB,OACyB2Q,WAAW,MACpCxP,EAAM,GAAK,IAAMA,EAAM,GACvBA,EAAM,GAAK,IAAMA,EAAM,GAC3B,GAAIqxI,EAAM,CAGRjkH,GAAU,KADAptB,EAAM,IAAM,EAE5B,CAEI,OAAOotB,CACX,CAOE,UAAA8jI,CAAWzlK,EAAMwD,EAAU+4G,GACzB,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBkiK,EAAUliK,EAAiB,QAC7BkiK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MAAMp8J,EAAcxV,KAAKq1K,uBAAuBvkK,EAAKm7G,cACrDn7G,EAAKU,YAAYgE,GACjB,MAAM6P,EAAQ/Q,EAASyf,iBAEvBm9H,GAAoB17I,EADNxV,KAAK81K,WAAWzwJ,EAAOusJ,EAASlb,GAElD,CAOE,eAAA8f,CAAgB1lK,EAAMwD,EAAU+4G,GAC9B,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBkiK,EAAUliK,EAAiB,QAC7BkiK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MAAM1uG,EAAS5uD,EAASovD,YACxByrD,GACE,CAACr+G,KAAMA,EAAM4lJ,KAAMA,EAAMkb,QAASA,GAClC5xK,KAAKy2K,wBACLxoD,GAAsB,eACtB/qD,EACAmqD,OACA7mH,EACAxG,KAEN,CAOE,gBAAA02K,CAAiB5lK,EAAMuU,EAAOgoG,GAC5B,MAAM/gE,EAAQ0/D,GAAgBl7G,EAAKm7G,aAAc,SACjDn7G,EAAKU,YAAY86C,GACjBtsD,KAAKu2K,WAAWjqH,EAAOjnC,EAAOgoG,EAClC,CAOE,eAAAipD,CAAgBxlK,EAAMwD,EAAU+4G,GAC9B,MACMukD,EADUvkD,EAAYA,EAAYxsH,OAAS,GAChB,QAC7B+wK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MAAMp8J,EAAcxV,KAAKq1K,uBAAuBvkK,EAAKm7G,cACrDn7G,EAAKU,YAAYgE,GACjBxV,KAAKs1K,kBAAkB9/J,EAAalB,EAAU+4G,EAClD,CAOE,0BAAAspD,CAA2B7lK,EAAMwD,EAAU+4G,GACzC,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBkiK,EAAUliK,EAAiB,QAC3BslK,EAAUtlK,EAAiB,QAC7BkiK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MAAMhvE,EAAWtuF,EAASgvF,cAC1B6rB,GACE,CAACr+G,KAAMA,EAAM4lJ,KAAMA,EAAMkb,QAASA,EAASoD,QAASA,GACpDh1K,KAAK42K,mCACL52K,KAAK41K,mCACLhzE,EACAyqB,OACA7mH,EACAxG,KAEN,CAOE,2BAAA62K,CAA4B/lK,EAAMqqB,EAASkyF,GACzC,MAAM/gE,EAAQtsD,KAAK80K,uBAAuB35I,EAASkyF,GAC/C/gE,IACFx7C,EAAKU,YAAY86C,GACjBtsD,KAAK+1K,sBAAsBzpH,EAAOnxB,EAASkyF,GAEjD,CAOE,aAAAypD,CAAchmK,EAAM2E,EAAQ43G,GAC1B,MACMukD,EADUvkD,EAAYA,EAAYxsH,OAAS,GAChB,QAC7B+wK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MACM9oK,EAAS,CAAC2M,EAAO,GAAK,IAAMA,EAAO,GAAIA,EAAO,GAAK,IAAMA,EAAO,IACtE05G,GAEJ,CAAQr+G,KAAMA,GACR9Q,KAAK+2K,qBACLxoD,GACAzlH,EACAukH,EARW,CAAC,cAAe,eAU3BrtH,KAEN,CAUE,kCAAA41K,CAAmC7xK,EAAOspH,EAAaiB,GACrD,MAAM39G,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACvD,OAAOk7G,GACL,6BACAooD,GAAiCzjK,EAAW29G,UAElD,EAOAimD,GAAKhxK,UAAUk8J,kCAAoC,CACjD,6BAA8B,CAC5BjqJ,YAAe+3G,GAAagnD,GAAKhxK,UAAU06J,uBAQ/CsW,GAAKhxK,UAAU48J,0BAA4B,CACzC,6BAA8B,CAC5BC,gBAAmBmU,GAAKhxK,UAAUqxK,sBAClCrU,gBAAmBgU,GAAKhxK,UAAUsxK,wBAQtCN,GAAKhxK,UAAUoxK,aAAe,CAC5B,6BAA8B,CAC5Bn/J,YAAe83G,GAAgBinD,GAAKhxK,UAAU06J,uBAQlDsW,GAAKhxK,UAAUivK,iBAAmB,CAChC,6BAA8B,CAC5Bx6I,MAASu1F,GAAakkD,GAAQluK,UAAU02J,WACxC7uE,WAAcmiC,GAAakkD,GAAQluK,UAAUyvK,gBAC7C/nF,WAAcsiC,GAAakkD,GAAQluK,UAAUw2J,gBAC7CzuE,gBAAmBiiC,GAAakkD,GAAQluK,UAAU2vK,qBAClDt7I,WAAc21F,GAAakkD,GAAQluK,UAAUy2J,gBAC7Cp/H,QAAW2yF,GAAakkD,GAAQluK,UAAU22J,aAC1C3uE,aAAgBgiC,GAAakkD,GAAQluK,UAAU6vK,kBAC/C4D,IAAOzpD,GAAagnD,GAAKhxK,UAAUmxK,WAQvCH,GAAKhxK,UAAUsyK,qBAAuB,CACpC,6BAA8B,CAC5BoB,MAAStpD,GAAkB4mD,GAAKhxK,UAAU6xK,wBAC1Cf,WAAc1mD,GAAkB4mD,GAAKhxK,UAAUkyK,6BAC/Cz9I,MAAS21F,GAAkB4mD,GAAKhxK,UAAUgzK,YAC1CnrF,WAAcuiC,GAAkB4mD,GAAKhxK,UAAUizK,iBAC/CvrF,WAAc0iC,GAAkB4mD,GAAKhxK,UAAU6xK,wBAC/C9pF,gBAAmBqiC,GACjB4mD,GAAKhxK,UAAUkyK,6BAEjB79I,WAAc+1F,GAAkB4mD,GAAKhxK,UAAU+yK,iBAC/C17I,QAAW+yF,GAAkB4mD,GAAKhxK,UAAUwyK,uBAC5CxqF,aAAgBoiC,GACd4mD,GAAKhxK,UAAUozK,4BAEjBO,QAAWvpD,GAAkB4mD,GAAKhxK,UAAUwyK,uBAC5CzB,aAAgB3mD,GACd4mD,GAAKhxK,UAAUozK,4BAEjBQ,SAAYxpD,GAAkB4mD,GAAKhxK,UAAUuzK,iBAOjDvC,GAAKhxK,UAAUoyK,oCAAsC,CACnD,6BAA8B,CAC5B5B,iBAAoBpmD,GAClB4mD,GAAKhxK,UAAUiyK,8BAEjB4B,YAAezpD,GACb4mD,GAAKhxK,UAAUiyK,gCAQrBjB,GAAKhxK,UAAUyyK,iBAAmB,CAChC,6BAA8B,CAC5BzV,gBAAmB5yC,GAAkB4mD,GAAKhxK,UAAU8yK,WACpDjW,gBAAmBzyC,GAAkB4mD,GAAKhxK,UAAU8yK,aAOxD9B,GAAKhxK,UAAUkzK,wBAA0B,CACvC,6BAA8B,CAC5B5C,YAAelmD,GAAkB4mD,GAAKhxK,UAAUmzK,oBAQpDnC,GAAKhxK,UAAUqzK,mCAAqC,CAClD,6BAA8B,CAC5BS,cAAiB1pD,GACf4mD,GAAKhxK,UAAUszK,6BAEjB5C,cAAiBtmD,GACf4mD,GAAKhxK,UAAUszK,+BAQrBtC,GAAKhxK,UAAUwzK,qBAAuB,CACpC,6BAA8B,CAC5BO,YAAe3pD,GAAkBujC,IACjCqmB,YAAe5pD,GAAkBujC,MCpuBrC,MAAM2gB,GACJN,iFAQI6C,GAAmC,CACvC9oF,gBAAmB,mBACnB+oF,WAAc,cACd9oF,aAAgB,gBAChB+oF,aAAgB,iBAWlB,MAAMkD,WAAa/F,GAIjB,WAAA1xK,CAAYuK,GAGVrF,MAFAqF,EAAUA,GAAoB,CAAE,GAQhCtK,KAAKy3K,cAA+BjxK,IAApB8D,EAAQ0qK,SAAwB1qK,EAAQ0qK,QAMxDh1K,KAAK03K,YAA2BlxK,IAAlB8D,EAAQorK,OAAsBprK,EAAQorK,MAMpD11K,KAAK23K,iBACoBnxK,IAAvB8D,EAAQ2qK,YAA2B3qK,EAAQ2qK,WAM7Cj1K,KAAK43K,mBACsBpxK,IAAzB8D,EAAQyqK,cAA6BzqK,EAAQyqK,aAK/C/0K,KAAK6xK,eAAiBvnK,EAAQunK,eAC1BvnK,EAAQunK,eACRA,GAMJ7xK,KAAK02J,UAAwBlwJ,IAAjB8D,EAAQosJ,MAAqBpsJ,EAAQosJ,IACrD,CAOE,cAAAmhB,CAAe/mK,EAAMu8G,GAEnB,MAAMrrB,EAAcktB,GAClB,GACAlvH,KAAK83K,mBACLhnK,EACAu8G,EACArtH,MAEF,GAAIgiG,EAAa,CAEf,OADwB,IAAI1W,GAAgB0W,EAElD,CAEA,CAOE,iBAAA+1E,CAAkBjnK,EAAMu8G,GAEtB,MAAMrrB,EAAcktB,GAClB,GACAlvH,KAAK83K,mBACLhnK,EACAu8G,EACArtH,MAEIoX,EAAkB,GACxB,IAAK,IAAI7V,EAAI,EAAG4E,EAAK67F,EAAYnhG,OAAQU,EAAI4E,IAAM5E,EACjDM,EAAOuV,EAAiB4qF,EAAYzgG,GAAG0yB,sBAEzC,OAAO7c,CACX,CAOE,gBAAA4gK,CAAiBlnK,EAAMu8G,GAErB,MAAMzqB,EAAWssB,GACf,GACAlvH,KAAKi4K,qBACLnnK,EACAu8G,EACArtH,MAEF,GAAI4iG,EACF,OAAO,IAAIrX,GAAaqX,EAE9B,CAME,iBAAAs1E,CAAkBpnK,EAAMu8G,GACtB0B,GAAU/uH,KAAKm4K,oBAAqBrnK,EAAMu8G,EAAartH,KAC3D,CAME,mBAAAo4K,CAAoBtnK,EAAMu8G,GACxB0B,GAAU/uH,KAAKq4K,sBAAuBvnK,EAAMu8G,EAAartH,KAC7D,CAOE,SAAAs4K,CAAUxnK,EAAMu8G,GACd,OAAO6B,GACL,CAAC,MACDlvH,KAAKu4K,gBACLznK,EACAu8G,EACArtH,KAEN,CAOE,WAAAw4K,CAAY1nK,EAAMu8G,GAChB,OAAO6B,GAAgB,GAAIlvH,KAAKy4K,iBAAkB3nK,EAAMu8G,EAAartH,KACzE,CAOE,gBAAA04K,CAAiB5nK,EAAMu8G,GACrB,OAAO6B,GACL,CAAC,MACDlvH,KAAKmgK,0BACLrvJ,EACAu8G,EACArtH,KAEN,CAOE,qBAAA24K,CAAsB7nK,EAAMu8G,GAC1B,OAAO6B,GACL,CAAC,MACDlvH,KAAKy/J,kCACL3uJ,EACAu8G,EACArtH,KAEN,CAME,cAAA44K,CAAe9nK,EAAMu8G,GAEnB,MAAMmzC,EAAiBtxC,QACrB1oH,EACAxG,KAAKm0K,aACLrjK,EACAu8G,EACArtH,MAEF,GAAIwgK,EAAgB,CAGfnzC,EAAYA,EAAYxsH,OAAS,GACpB8E,KAAK66J,EAC3B,CACA,CAME,cAAAqY,CAAe/nK,EAAMu8G,GAEnB,MAAMmzC,EAAiBtxC,QACrB1oH,EACAxG,KAAKm0K,aACLrjK,EACAu8G,EACArtH,MAEF,GAAIwgK,EAAgB,CAGfnzC,EAAYA,EAAYxsH,OAAS,GACpB,GAAK2/J,CAC3B,CACA,CAOE,WAAAsY,CAAYhoK,EAAMu8G,GAEhB,MAAMqzC,EAAkBxxC,GACtB,CAAC,MACDlvH,KAAK+4K,gBACLjoK,EACAu8G,EACArtH,MAEF,GAAI0gK,GAAmBA,EAAgB,GAAI,CACzC,MAAMtpJ,EAAkBspJ,EAAgB,GAClCvrI,EAAO,CAAC/d,EAAgBvW,QAC9B,IAAIU,EAAG4E,EACP,IAAK5E,EAAI,EAAG4E,EAAKu6J,EAAgB7/J,OAAQU,EAAI4E,IAAM5E,EACjDM,EAAOuV,EAAiBspJ,EAAgBn/J,IACxC4zB,EAAKxvB,KAAKyR,EAAgBvW,QAE5B,OAAO,IAAI+5B,GAAQxjB,EAAiB,MAAO+d,EACjD,CAEA,CAOE,SAAA6jJ,CAAUloK,EAAMu8G,GAEd,MAAMj2G,EAAkB83G,GACtB,CAAC,MACDlvH,KAAKi5K,cACLnoK,EACAu8G,EACArtH,MAEF,GAAIoX,EAAiB,CAEnB,OADmB,IAAI6zE,GAAW7zE,EAAiB,MAEzD,CAEA,CAOE,YAAA8hK,CAAapoK,EAAMu8G,GAEjB,MAAMj2G,EAAkB83G,GACtB,CAAC,MACDlvH,KAAKm5K,iBACLroK,EACAu8G,EACArtH,MAEF,OAAOgX,GACLI,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GAEzB,CAOE,WAAAgiK,CAAYtoK,EAAMu8G,GAChB,IAAI3hE,EAAI0gE,GAAkBt7G,GAAM,GAChC,MAAMkZ,EAAK,6CAEL5S,EAAkB,GACxB,IAAI4F,EACJ,KAAQA,EAAIgN,EAAGisE,KAAKvqC,IAClBt0C,EAAgBzR,KAAKyrB,WAAWpU,EAAE,KAClC0uC,EAAIA,EAAEsyG,OAAOhhJ,EAAE,GAAGnc,QAEpB,GAAU,KAAN6qD,EACF,OAEF,MACM8oH,EADUnnD,EAAY,GACU,QAItC,GAAwB,SAHAmnD,EACpBlhJ,GAAckhJ,GAActwJ,qBAC5B,OAEF,IAAK,IAAI3iB,EAAI,EAAG4E,EAAKiR,EAAgBvW,OAAQU,EAAI4E,EAAI5E,GAAK,EAAG,CAC3D,MAAMyU,EAAIoB,EAAgB7V,GACpBwU,EAAIqB,EAAgB7V,EAAI,GAC9B6V,EAAgB7V,GAAKwU,EACrBqB,EAAgB7V,EAAI,GAAKyU,CACjC,CAEI,MAAMjO,EAAMqP,EAAgBvW,OAI5B,OAHW,GAAPkH,GACFqP,EAAgBzR,KAAK,GAEX,IAARoC,EAGGqP,OAHP,CAIJ,CAOE,eAAAiiK,CAAgBvoK,EAAMu8G,GACpB,MAAM3hE,EAAI0gE,GAAkBt7G,GAAM,GAAO4Q,QAAQ,aAAc,IACzDhS,EAAU29G,EAAY,GACtBmnD,EAAe9kK,EAAiB,QAChC4pK,EAAmB5pK,EAAsB,aACzC2T,EAAkBmxJ,EACpBlhJ,GAAckhJ,GAActwJ,qBAC5B,MACEuuB,EAASiZ,EAAEvrC,MAAM,OAEvB,IAAIo5J,EAAM,EACNzoK,EAAKkiJ,aAAa,gBACpBumB,EAAM1oB,GAA6B//I,EAAKkiJ,aAAa,iBAC5CliJ,EAAKkiJ,aAAa,aAC3BumB,EAAM1oB,GAA6B//I,EAAKkiJ,aAAa,cAE7BliJ,EAAe,WAAEkiJ,aAAa,gBAEtDumB,EAAM1oB,GACoB//I,EAAe,WAAEkiJ,aAAa,iBAE/CsmB,IACTC,EAAM1oB,GAA6ByoB,IAErC,MAAME,EAAQn2J,EAAgBwR,WAAW,MACzC,IAAI9e,EAAGC,EAAG8zB,EACV,MAAM1yB,EAAkB,GACxB,IAAK,IAAI7V,EAAI,EAAG4E,EAAKssC,EAAO5xC,OAAQU,EAAI4E,EAAI5E,GAAKg4K,EAC/CxjK,EAAIqb,WAAWqhB,EAAOlxC,IACtByU,EAAIob,WAAWqhB,EAAOlxC,EAAI,IAC1BuoC,EAAY,IAARyvI,EAAYnoJ,WAAWqhB,EAAOlxC,EAAI,IAAM,EACxCi4K,EACFpiK,EAAgBzR,KAAKoQ,EAAGC,EAAG8zB,GAE3B1yB,EAAgBzR,KAAKqQ,EAAGD,EAAG+zB,GAG/B,OAAO1yB,CACX,CAQE,SAAAqiK,CAAU3oK,EAAM/M,EAAOspH,GACrB,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBgqK,EAAehjB,EAAO,IAAM,IAClC5lJ,EAAK8nC,aAAa,eAAgB8gI,GAClC,MAAM9H,EAAUliK,EAAiB,QAC3B2T,EAAkBuuJ,EACpBt+I,GAAcs+I,GAAS1tJ,qBACvB,MACEmB,EAAQthB,EAAMgwB,iBAEpB,IAAI0e,EAASpvB,EAAgBwR,WAAW,MACpCxP,EAAM,GAAK,IAAMA,EAAM,GACvBA,EAAM,GAAK,IAAMA,EAAM,GAC3B,GAAIqxI,EAAM,CAGRjkH,GAAU,KADAptB,EAAM,IAAM,EAE5B,CACI6rI,GAAoBpgJ,EAAM2hC,EAC9B,CASE,UAAAqjI,CAAWzwJ,EAAOusJ,EAASlb,GAIzB,IAAIjkH,GAHoBm/H,EACpBt+I,GAAcs+I,GAAS1tJ,qBACvB,OACyB2Q,WAAW,MACpCxP,EAAM,GAAK,IAAMA,EAAM,GACvBA,EAAM,GAAK,IAAMA,EAAM,GAC3B,GAAIqxI,EAAM,CAGRjkH,GAAU,KADAptB,EAAM,IAAM,EAE5B,CAEI,OAAOotB,CACX,CAQE,aAAAknI,CAAc7oK,EAAM/M,EAAOspH,GACzB,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBgqK,EAAehjB,EAAO,IAAM,IAClC5lJ,EAAK8nC,aAAa,eAAgB8gI,GAClC,MAAM9H,EAAUliK,EAAiB,QAE3BwzD,EAASn/D,EAAMgwB,iBACfhsB,EAAMm7D,EAAOriE,OACbi+H,EAAQ,IAAI98H,MAAM+F,GACxB,IAAIsd,EACJ,IAAK,IAAI9jB,EAAI,EAAGA,EAAIwG,IAAOxG,EACzB8jB,EAAQ69C,EAAO3hE,GACfu9H,EAAMv9H,GAAKvB,KAAK81K,WAAWzwJ,EAAOusJ,EAASlb,GAE7CxF,GAAoBpgJ,EAAMguH,EAAMh/G,KAAK,KACzC,CAOE,UAAAy2J,CAAWzlK,EAAMwD,EAAU+4G,GACzB,MACMukD,EADUvkD,EAAYA,EAAYxsH,OAAS,GAChB,QAC7B+wK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MAAM3oH,EAAM+iE,GAAgBl7G,EAAKm7G,aAAc,OAC/Cn7G,EAAKU,YAAYy3C,GACjBjpD,KAAKy5K,UAAUxwH,EAAK30C,EAAU+4G,EAClC,CAOE,aAAAypD,CAAchmK,EAAM2E,EAAQ43G,GAC1B,MACMukD,EADUvkD,EAAYA,EAAYxsH,OAAS,GAChB,QAC7B+wK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MACM9oK,EAAS,CAAC2M,EAAO,GAAK,IAAMA,EAAO,GAAIA,EAAO,GAAK,IAAMA,EAAO,IACtE05G,GAEJ,CAAQr+G,KAAMA,GACR9Q,KAAK+2K,qBACLxoD,GACAzlH,EACAukH,EARW,CAAC,cAAe,eAU3BrtH,KAEN,CAOE,eAAAs2K,CAAgBxlK,EAAMwD,EAAU+4G,GAC9B,MACMukD,EADUvkD,EAAYA,EAAYxsH,OAAS,GAChB,QAC7B+wK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MAAMgI,EAAU5tD,GAAgBl7G,EAAKm7G,aAAc,WACnDn7G,EAAKU,YAAYooK,GACjB55K,KAAK25K,cAAcC,EAAStlK,EAAU+4G,EAC1C,CASE,kBAAA4oD,CAAmBlyK,EAAOspH,EAAaiB,GACrC,MAAM5+G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C8P,EAAajB,EAAQoB,KACrBslK,EAAkB1mK,EAAyB,gBAIjD,YAHwBlJ,IAApB4vK,IACF1mK,EAAyB,iBAAI,GAExBs8G,GACLr7G,EAAWs7G,kBACSzlH,IAApB4vK,EAAgC,WAAa,WAEnD,CAOE,qBAAAL,CAAsBjlK,EAAMwD,EAAU+4G,GACpC,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBkiK,EAAUliK,EAAiB,QAIjC,GAHsB,iBAAlBoB,EAAKw9G,UAA+BsjD,GACtC9gK,EAAK8nC,aAAa,UAAWg5H,GAET,YAAlB9gK,EAAKw9G,UAA4C,iBAAlBx9G,EAAKw9G,SAA6B,CACnE,MAAMx2G,EAAQxD,EAASsnB,iBACvBuzF,GACE,CAACr+G,KAAMA,EAAM4lJ,KAAMA,EAAMkb,QAASA,GAClC5xK,KAAKg2K,iBACLh2K,KAAKi2K,mBACLn+J,EACAu1G,OACA7mH,EACAxG,KAER,MAAW,GAAsB,YAAlB8Q,EAAKw9G,SAAwB,CACtC,MAAM4nD,EAAUlqD,GAAgBl7G,EAAKm7G,aAAc,WACnDn7G,EAAKU,YAAY0kK,GACjBl2K,KAAKm2K,qBAAqBD,EAAS5hK,EAAU+4G,EACnD,CACA,CAOE,sBAAA+nD,CAAuBtkK,EAAMwD,EAAU+4G,GACrC,MACMukD,EADUvkD,EAAYA,EAAYxsH,OAAS,GAChB,QAIjC,GAHsB,sBAAlBiQ,EAAKw9G,UAAoCsjD,GAC3C9gK,EAAK8nC,aAAa,UAAWg5H,GAGX,eAAlB9gK,EAAKw9G,UACa,sBAAlBx9G,EAAKw9G,SACL,CACA,MAAMsrD,EAAU5tD,GAAgBl7G,EAAKm7G,aAAc,WACnDn7G,EAAKU,YAAYooK,GACjB55K,KAAK25K,cAAcC,EAAStlK,EAAU+4G,EAC5C,MAAW,GAAsB,UAAlBv8G,EAAKw9G,SAAsB,CACpC,MAAMo/B,EAAW1hC,GAAgBl7G,EAAKm7G,aAAc,YACpDn7G,EAAKU,YAAYk8I,GACjB1tJ,KAAKu1K,oBAAoB7nB,EAAUp5I,EAAU+4G,EACnD,CACA,CAOE,0BAAAspD,CAA2B7lK,EAAMwD,EAAU+4G,GACzC,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBkiK,EAAUliK,EAAiB,QAC3BslK,EAAUtlK,EAAiB,QAC7BkiK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MAAMhvE,EAAWtuF,EAASgvF,cAC1B6rB,GACE,CAACr+G,KAAMA,EAAM4lJ,KAAMA,EAAMkb,QAASA,EAASoD,QAASA,GACpDh1K,KAAK42K,mCACL52K,KAAK41K,mCACLhzE,EACAyqB,OACA7mH,EACAxG,KAEN,CAOE,eAAAw2K,CAAgB1lK,EAAMwD,EAAU+4G,GAC9B,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C+wK,EAAUliK,EAAiB,QAC3BgnJ,EAAOhnJ,EAAc,KACvBkiK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MAAM1uG,EAAS5uD,EAASovD,YACxByrD,GACE,CAACr+G,KAAMA,EAAM4lJ,KAAMA,EAAMkb,QAASA,GAClC5xK,KAAKy2K,wBACLxoD,GAAsB,eACtB/qD,EACAmqD,OACA7mH,EACAxG,KAEN,CAOE,2BAAAy1K,CAA4B3kK,EAAMwD,EAAU+4G,GAC1C,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C61J,EAAOhnJ,EAAc,KACrBkiK,EAAUliK,EAAiB,QAC3BgmK,EAAQhmK,EAAe,MACzBkiK,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE/B,MAAMhgE,EAAQt9F,EAAS8tF,iBACvB+sB,GACE,CAACr+G,KAAMA,EAAM4lJ,KAAMA,EAAMkb,QAASA,EAAS8D,MAAOA,GAClD11K,KAAK21K,oCACL31K,KAAK41K,mCACLhkE,EACAyb,OACA7mH,EACAxG,KAEN,CAOE,SAAAq2K,CAAUvlK,EAAM64I,EAAMt8B,GACpB,MAAMr4F,EAAag3F,GAAgBl7G,EAAKm7G,aAAc,cACtDn7G,EAAKU,YAAYwjB,GACjBh1B,KAAKs2K,gBAAgBthJ,EAAY20H,EAAMt8B,EAC3C,CAOE,2BAAAwpD,CAA4B/lK,EAAMqqB,EAASkyF,GACzC,MAAM/gE,EAAQtsD,KAAK80K,uBAAuB35I,EAASkyF,GAC/C/gE,IACFx7C,EAAKU,YAAY86C,GACjBtsD,KAAK+1K,sBAAsBzpH,EAAOnxB,EAASkyF,GAEjD,CAOE,gBAAAqpD,CAAiB5lK,EAAMuU,EAAOgoG,GAC5B,MAAM/gE,EAAQ0/D,GAAgBl7G,EAAKm7G,aAAc,SACjDn7G,EAAKU,YAAY86C,GACjBtsD,KAAKu2K,WAAWjqH,EAAOjnC,EAAOgoG,EAClC,CAOE,4BAAAmoD,CAA6B1kK,EAAMspH,EAAM/M,GACvC,MAAM/gE,EAAQtsD,KAAK80K,uBAAuB16C,EAAM/M,GAC5C/gE,IACFx7C,EAAKU,YAAY86C,GACjBtsD,KAAKo1K,uBAAuB9oH,EAAO8tE,EAAM/M,GAE/C,CAQE,oBAAA8oD,CAAqBrlK,EAAMqqB,EAASkyF,GAClC,MAAM/gE,EAAQ0/D,GAAgBl7G,EAAKm7G,aAAc,gBACjDn7G,EAAKU,YAAY86C,GACjBtsD,KAAK+1K,sBAAsBzpH,EAAOnxB,EAASkyF,EAC/C,CAQE,mBAAAkoD,CAAoBzkK,EAAMspH,EAAM/M,GAC9B,MAAM/gE,EAAQ0/D,GAAgBl7G,EAAKm7G,aAAc,qBACjDn7G,EAAKU,YAAY86C,GACjBtsD,KAAKo1K,uBAAuB9oH,EAAO8tE,EAAM/M,EAC7C,CAOE,oBAAA8nD,CAAqBrkK,EAAMwD,EAAU+4G,GACnC,MAAM39G,EACJ29G,EAAYA,EAAYxsH,OAAS,GAE7BoK,EAAOvE,OAAO2C,OAAO,CAAA,EAAIqG,GAE/B,IAAI3L,EADJkH,EAAW,KAAI6F,EAGb/M,EADE/B,MAAMC,QAAQqS,GACR66I,GACd,EACQz/I,GAGMo/I,GACd,GACQ,EACAp/I,GAGJy/G,GAEJ,EACMnvH,KAAK61K,qBACL71K,KAAK80K,uBACL,CAAC/wK,GACDspH,OACA7mH,EACAxG,KAEN,CAOE,mBAAAk1K,CAAoBpkK,EAAM24D,EAAS4jD,GACjC,MAAM0lD,EAAMtpG,EAAQ10D,QAChBg+J,GACFjiK,EAAK8nC,aAAa,MAAK,GAEzB,MAAMlpC,EAAiC29G,EAAYA,EAAYxsH,OAAS,GAClE8wK,EAAYjiK,EAAmB,UAC/BmjK,EAAeppG,EAAQ90D,kBACxBjF,EAAQs+G,cACXt+G,EAAQs+G,YAAc,CAAE,EACxBt+G,EAAQs+G,YAAY2jD,GAAa,CAAE,GAErC,MAAMhrK,EAAO,GACPmC,EAAS,GACf,GAAI2gE,EAAQlgE,gBAAiB,CAC3B,MAAMiL,EAAai1D,EAAQrgE,gBAC3B,IAAK,MAAM9B,KAAOkN,EAAY,CAC5B,MAAMzQ,EAAQyQ,EAAWlN,GACrBvD,UACF4C,EAAKhB,KAAK2B,GACVwB,EAAOnD,KAAK5B,GAEVuD,GAAOurK,GAEL,mBADuB,EAA6B,sBAGhDvrK,KAAOoI,EAAQs+G,YAAY2jD,KAC/BjiK,EAAQs+G,YAAY2jD,GAAWrqK,GAAOqmH,GACpC3tH,KAAKm1K,qBACLn1K,OAIEsH,KAAOoI,EAAQs+G,YAAY2jD,KAC/BjiK,EAAQs+G,YAAY2jD,GAAWrqK,GAC7BqmH,GAAkBujC,KAIlC,CACA,CACI,MAAMjmJ,EAAOvE,OAAO2C,OAAO,CAAA,EAAIqG,GAC/BzE,EAAK6F,KAAOA,EACZq+G,GAEJ,EACMz/G,EAAQs+G,YACRC,QAAsBznH,EAAWmrK,GACjC7oK,EACAukH,EACA1mH,EAEN,CAQE,oBAAAkzK,CAAqB/oK,EAAM4pE,EAAU2yC,GACnC,MAAM39G,EAAiC29G,EAAYA,EAAYxsH,OAAS,GAClE6wK,EAAchiK,EAAqB,YACnCiiK,EAAYjiK,EAAmB,UAE/Bs+G,EAAc,CAAE,EACtBA,EAAY2jD,GAAa,CAAE,EAC3B3jD,EAAY2jD,GAAWD,GAAe/jD,GACpC3tH,KAAKk1K,oBACLl1K,MAEF,MAAMiL,EAAOvE,OAAO2C,OAAO,CAAA,EAAIqG,GAC/BzE,EAAK6F,KAAOA,EACZq+G,GAEJ,EACMnB,EACAC,GAAsByjD,EAAaC,GACnCj3F,EACA2yC,EAEN,CAUE,kCAAAuoD,CAAmC7xK,EAAOspH,EAAaiB,GACrD,MAAM39G,EAAa08G,EAAYA,EAAYxsH,OAAS,GAAGiQ,KACvD,OAAOk7G,GACLhsH,KAAK+xK,UACLqC,GAAiCzjK,EAAW29G,UAElD,CAUE,sBAAAwmD,CAAuB/wK,EAAOspH,EAAaiB,GACzC,MAAM5+G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3Ck0K,EAAerlK,EAAsB,aACrCslK,EAAUtlK,EAAiB,QAC3BgmK,EAAQhmK,EAAe,MACvBulK,EAAavlK,EAAoB,WAiBvC,OAhBK1N,MAAMC,QAAQ8B,GAcjBuqH,EAAW,WAVM,kBAHjBA,EAAgE,EAE9Dl7F,aACkD,IAAjB2hJ,EACjCzmD,EAAW,eACW,YAAbA,IAAsC,IAAZ0mD,EACnC1mD,EAAW,UACW,eAAbA,IAAuC,IAAVonD,EACtCpnD,EAAW,QACW,oBAAbA,IAAiD,IAAf2mD,IAC3C3mD,EAAW,cAKRtC,GAAgBhsH,KAAK+xK,UAAWzjD,EAC3C,CAWE,iBAAA+hC,CAAkB/7I,EAAUhK,GAC1BA,EAAUtK,KAAKwuJ,aAAalkJ,GAC5B,MAAMwvK,EAAO9tD,GAAgBhsH,KAAK+xK,UAAW,QACvCriK,EAAU,CACdoB,KAAMgpK,EACNpjB,KAAM12J,KAAK02J,KACXkb,QAAS5xK,KAAK4xK,QACd8D,MAAO11K,KAAK03K,OACZ1C,QAASh1K,KAAKy3K,SACd1C,aAAc/0K,KAAK43K,cACnB3C,WAAYj1K,KAAK23K,aAMnB,OAJIrtK,GACF5D,OAAO2C,OAAOqG,EAASpF,GAEzBtK,KAAKm1K,qBAAqB2E,EAAMxlK,EAAU,CAAC5E,IACpCoqK,CACX,CAWE,iBAAA1pB,CAAkB11E,EAAUpwE,GAC1BA,EAAUtK,KAAKwuJ,aAAalkJ,GAC5B,MAAMwG,EAAOk7G,GAAgBhsH,KAAK+xK,UAAW,kBAC7CjhK,EAAK+lJ,eACH9qC,GACA,qBACA/rH,KAAK6xK,gBAEP,MAAMniK,EAAU,CACdkiK,QAAS5xK,KAAK4xK,QACdlb,KAAM12J,KAAK02J,KACXgf,MAAO11K,KAAK03K,OACZ1C,QAASh1K,KAAKy3K,SACd1C,aAAc/0K,KAAK43K,cACnB3C,WAAYj1K,KAAK23K,YACjBhG,UAAW3xK,KAAK2xK,UAChBD,YAAa1xK,KAAK0xK,aAMpB,OAJIpnK,GACF5D,OAAO2C,OAAOqG,EAASpF,GAEzBtK,KAAK65K,qBAAqB/oK,EAAM4pE,EAAU,CAAChrE,IACpCoB,CACX,EAOA0mK,GAAKj0K,UAAUk8J,kCAAoC,CACjD,6BAA8B,CAC5Bx2G,IAAOskE,GAAaiqD,GAAKj0K,UAAU61K,aACnCQ,QAAWrsD,GAAaiqD,GAAKj0K,UAAU81K,iBACvC7jK,YAAe+3G,GAAagnD,GAAKhxK,UAAU06J,uBAQ/CuZ,GAAKj0K,UAAU48J,0BAA4B,CACzC,6BAA8B,CAC5B4Z,SAAYvC,GAAKj0K,UAAUq1K,eAC3BoB,SAAYxC,GAAKj0K,UAAUs1K,iBAQ/BrB,GAAKj0K,UAAUivK,iBAAmB,CAChC,6BAA8B,CAC5Bx6I,MAASu1F,GAAakkD,GAAQluK,UAAU02J,WACxC7uE,WAAcmiC,GAAakkD,GAAQluK,UAAUyvK,gBAC7C/nF,WAAcsiC,GAAakkD,GAAQluK,UAAUw2J,gBAC7CzuE,gBAAmBiiC,GAAakkD,GAAQluK,UAAU2vK,qBAClDt7I,WAAc21F,GAAakkD,GAAQluK,UAAUy2J,gBAC7Cp/H,QAAW2yF,GAAakkD,GAAQluK,UAAU22J,aAC1C3uE,aAAgBgiC,GAAakkD,GAAQluK,UAAU6vK,kBAC/C8D,QAAW3pD,GAAaiqD,GAAKj0K,UAAUu1K,aACvCxE,aAAgB/mD,GAAaiqD,GAAKj0K,UAAUy0K,kBAC5Cf,MAAS1pD,GAAaiqD,GAAKj0K,UAAUy1K,WACrC3E,WAAc9mD,GAAaiqD,GAAKj0K,UAAUs0K,gBAC1CV,SAAY5pD,GAAaiqD,GAAKj0K,UAAU21K,gBAQ5C1B,GAAKj0K,UAAUu0K,mBAAqB,CAClC,6BAA8B,CAC5BV,YAAe9pD,GAAgBkqD,GAAKj0K,UAAU20K,mBAC9C+B,aAAgB3sD,GAAgBkqD,GAAKj0K,UAAU20K,qBAQnDV,GAAKj0K,UAAU00K,qBAAuB,CACpC,6BAA8B,CAC5BZ,cAAiB/pD,GAAgBkqD,GAAKj0K,UAAU60K,qBAChD8B,eAAkB5sD,GAAgBkqD,GAAKj0K,UAAU60K,uBAQrDZ,GAAKj0K,UAAU40K,oBAAsB,CACnC,6BAA8B,CAC5BltF,WAAcqiC,GAAgBmkD,GAAQluK,UAAUw2J,gBAChDkd,MAAS3pD,GAAgBkqD,GAAKj0K,UAAUy1K,aAQ5CxB,GAAKj0K,UAAU80K,sBAAwB,CACrC,6BAA8B,CAC5Bz9I,QAAW0yF,GAAgBmkD,GAAQluK,UAAU22J,aAC7Cgd,QAAW5pD,GAAgBkqD,GAAKj0K,UAAUu1K,eAQ9CtB,GAAKj0K,UAAUw1K,gBAAkB,CAC/B,6BAA8B,CAC5B7C,QAAW3oD,GAAaiqD,GAAKj0K,UAAU+0K,aAQ3Cd,GAAKj0K,UAAU01K,cAAgB,CAC7B,6BAA8B,CAC5BvrB,SAAYngC,GAAaiqD,GAAKj0K,UAAUi1K,eAQ5ChB,GAAKj0K,UAAU41K,iBAAmB,CAChC,6BAA8B,CAC5B7B,YAAehqD,GAAgBkqD,GAAKj0K,UAAU81K,iBAC9C9B,YAAejqD,GAAgBkqD,GAAKj0K,UAAU81K,mBAQlD7B,GAAKj0K,UAAUg1K,gBAAkB,CAC/B,6BAA8B,CAC5B4B,aAAgB5sD,GAAaiqD,GAAKj0K,UAAUm1K,oBAQhDlB,GAAKj0K,UAAUk1K,iBAAmB,CAChC,6BAA8B,CAC5B2B,kBAAqBjtD,GACnBqqD,GAAKj0K,UAAUo1K,yBASrBlH,GAAQluK,UAAU4wK,aAAe,CAC/B,6BAA8B,CAC5Bv8I,WAAc21F,GAAakkD,GAAQluK,UAAU67J,oBAC7Cib,KAAQ9sD,GAAaiqD,GAAKj0K,UAAUw0K,qBAaxCP,GAAKj0K,UAAUqrJ,cAKf4oB,GAAKj0K,UAAUyyK,iBAAmB,CAChC,6BAA8B,CAC5BgE,SAAYrsD,GAAkB6pD,GAAKj0K,UAAU8yK,WAC7C0D,SAAYpsD,GAAkB6pD,GAAKj0K,UAAU8yK,aAOjDmB,GAAKj0K,UAAUwzK,qBAAuB,CACpC,6BAA8B,CAC5BO,YAAe3pD,GAAkBujC,IACjCqmB,YAAe5pD,GAAkBujC,MAOrCsmB,GAAKj0K,UAAUqzK,mCAAqC,CAClD,6BAA8B,CAC5BS,cAAiB1pD,GACf6pD,GAAKj0K,UAAUszK,6BAEjB5C,cAAiBtmD,GACf6pD,GAAKj0K,UAAUszK,+BAQrBW,GAAKj0K,UAAUkzK,wBAA0B,CACvC,6BAA8B,CAC5B5C,YAAelmD,GAAkB6pD,GAAKj0K,UAAUmzK,oBAOpDc,GAAKj0K,UAAUoyK,oCAAsC,CACnD,6BAA8B,CAC5B5B,iBAAoBpmD,GAClB6pD,GAAKj0K,UAAUiyK,8BAEjB4B,YAAezpD,GACb6pD,GAAKj0K,UAAUiyK,gCAQrBgC,GAAKj0K,UAAUsyK,qBAAuB,CACpC,6BAA8B,CAC5BoB,MAAStpD,GAAkB6pD,GAAKj0K,UAAU6xK,wBAC1Cf,WAAc1mD,GAAkB6pD,GAAKj0K,UAAUkyK,6BAC/Cz9I,MAAS21F,GAAkB6pD,GAAKj0K,UAAUgzK,YAC1CnrF,WAAcuiC,GAAkB6pD,GAAKj0K,UAAUizK,iBAC/CvrF,WAAc0iC,GAAkB6pD,GAAKj0K,UAAU6xK,wBAC/C9pF,gBAAmBqiC,GACjB6pD,GAAKj0K,UAAUkyK,6BAEjB79I,WAAc+1F,GAAkB6pD,GAAKj0K,UAAU+yK,iBAC/C17I,QAAW+yF,GAAkB6pD,GAAKj0K,UAAUwyK,uBAC5CxqF,aAAgBoiC,GACd6pD,GAAKj0K,UAAUozK,4BAEjBO,QAAWvpD,GAAkB6pD,GAAKj0K,UAAUwyK,uBAC5CzB,aAAgB3mD,GACd6pD,GAAKj0K,UAAUozK,4BAEjBQ,SAAYxpD,GAAkB6pD,GAAKj0K,UAAUuzK,iBCnuCjD,MAAMwD,WAAc9C,GAIlB,WAAAz3K,CAAYuK,GAGVrF,MAFAqF,EAAUA,GAAoB,CAAE,GAOhCtK,KAAK6xK,eAAiBvnK,EAAQunK,eAC1BvnK,EAAQunK,eACR7xK,KAAK+xK,UAAY,+CACzB,CAQE,oBAAAoD,CAAqBrkK,EAAMwD,EAAU+4G,GACnC,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GACjDwsH,EAAYA,EAAYxsH,OAAS,GAAK6F,OAAO2C,OAC3C,CAAC4rK,YAAY,EAAMF,cAAc,GACjCrlK,GAEFzK,MAAMkwK,qBAAqBrkK,EAAMwD,EAAU+4G,EAC/C,EAGAitD,GAAM/2K,UAAUwuK,UAAY,iCAM5BuI,GAAM/2K,UAAUk8J,kCAAoC,CAClD,iCAAkC,CAChCx2G,IAAOskE,GAAaiqD,GAAKj0K,UAAU61K,aACnCQ,QAAWrsD,GAAaiqD,GAAKj0K,UAAU81K,iBACvC7jK,YAAe+3G,GAAagnD,GAAKhxK,UAAU06J,uBAQ/Cqc,GAAM/2K,UAAU48J,0BAA4B,CAC1C,iCAAkC,CAChC4Z,SAAYvC,GAAKj0K,UAAUq1K,eAC3BoB,SAAYxC,GAAKj0K,UAAUs1K,iBAQ/ByB,GAAM/2K,UAAUivK,iBAAmB,CACjC,iCAAkC,CAChCx6I,MAASu1F,GAAakkD,GAAQluK,UAAU02J,WACxC7uE,WAAcmiC,GAAakkD,GAAQluK,UAAUyvK,gBAC7C/nF,WAAcsiC,GAAakkD,GAAQluK,UAAUw2J,gBAC7CzuE,gBAAmBiiC,GAAakkD,GAAQluK,UAAU2vK,qBAClDt7I,WAAc21F,GAAakkD,GAAQluK,UAAUy2J,gBAC7Cp/H,QAAW2yF,GAAakkD,GAAQluK,UAAU22J,aAC1C3uE,aAAgBgiC,GAAakkD,GAAQluK,UAAU6vK,kBAC/C8D,QAAW3pD,GAAa+sD,GAAM/2K,UAAUu1K,aACxCxE,aAAgB/mD,GAAaiqD,GAAKj0K,UAAUy0K,kBAC5Cf,MAAS1pD,GAAa+sD,GAAM/2K,UAAUy1K,WACtC3E,WAAc9mD,GAAaiqD,GAAKj0K,UAAUs0K,gBAC1CV,SAAY5pD,GAAa+sD,GAAM/2K,UAAU21K,gBAQ7CoB,GAAM/2K,UAAUu0K,mBAAqB,CACnC,iCAAkC,CAChCV,YAAe9pD,GAAgBkqD,GAAKj0K,UAAU20K,mBAC9C+B,aAAgB3sD,GAAgBkqD,GAAKj0K,UAAU20K,qBAQnDoC,GAAM/2K,UAAU00K,qBAAuB,CACrC,iCAAkC,CAChCZ,cAAiB/pD,GAAgBkqD,GAAKj0K,UAAU60K,qBAChD8B,eAAkB5sD,GAAgBkqD,GAAKj0K,UAAU60K,uBAQrDkC,GAAM/2K,UAAU40K,oBAAsB,CACpC,iCAAkC,CAChCltF,WAAcqiC,GAAgBmkD,GAAQluK,UAAUw2J,gBAChDkd,MAAS3pD,GAAgBkqD,GAAKj0K,UAAUy1K,aAQ5CsB,GAAM/2K,UAAU80K,sBAAwB,CACtC,iCAAkC,CAChCz9I,QAAW0yF,GAAgBmkD,GAAQluK,UAAU22J,aAC7Cgd,QAAW5pD,GAAgBkqD,GAAKj0K,UAAUu1K,eAQ9CwB,GAAM/2K,UAAUw1K,gBAAkB,CAChC,iCAAkC,CAChC7C,QAAW3oD,GAAaiqD,GAAKj0K,UAAU+0K,aAQ3CgC,GAAM/2K,UAAU01K,cAAgB,CAC9B,iCAAkC,CAChCvrB,SAAYngC,GAAaiqD,GAAKj0K,UAAUi1K,eAQ5C8B,GAAM/2K,UAAU41K,iBAAmB,CACjC,iCAAkC,CAChC7B,YAAehqD,GAAgBkqD,GAAKj0K,UAAU81K,iBAC9C9B,YAAejqD,GAAgBkqD,GAAKj0K,UAAU81K,mBAQlDiB,GAAM/2K,UAAUg1K,gBAAkB,CAChC,iCAAkC,CAChC4B,aAAgB5sD,GAAaiqD,GAAKj0K,UAAUm1K,oBAQhD4B,GAAM/2K,UAAUk1K,iBAAmB,CACjC,iCAAkC,CAChC2B,kBAAqBjtD,GACnBqqD,GAAKj0K,UAAUo1K,yBASrB2B,GAAM/2K,UAAU0vK,mBAAqB,CACnC,iCAAkC,CAChCY,YAAevmD,GAAgBmkD,GAAQluK,UAAU+vK,mBACjDQ,aAAgBxmD,GAAgBmkD,GAAQluK,UAAU+vK,qBAQtDgH,GAAM/2K,UAAU4vK,wBAA0B,CACxC,iCAAkC,CAChCY,iBAAoBzmD,GAClBmkD,GAAQluK,UAAUiwK,wBAEpBQ,kBAAqB1mD,GACnBmkD,GAAQluK,UAAUiwK,0BASxB8G,GAAM/2K,UAAU8vK,qBAAuB,CACrC,iCAAkC,CAChCY,cAAiB3mD,GAAgBmkD,GAAQluK,UAAUmwK,qBACnDQ,eAAkB5mD,GAAgBmkD,GAAQluK,UAAUmwK,uBAQxD4G,GAAM/2K,UAAUgwK,oBAAsB,CACpC,iCAAkC,CAChCv7I,MAASs1F,GAAgBmkD,GAAQluK,UAAUm8J,+BAQ/C4a,GAAM/2K,UAAUkwK,yBAA2B,CACzC,iCAAkC,CAChCxoF,WAAcqiC,GAAgBmkD,GAAQluK,UAAUw2J,kBAQpDugB,GAAM/2K,UAAUowK,sBAAwB,CACtC,iCAAkC,CAChC/4I,QAAW0yF,GAAgBmkD,GAAQluK,UAAU22J,eAQjDogB,GAAM/2K,UAAU4wK,aAAe,CAC7B,iCAAkC,CAChCv8I,WAAc21F,GAAakkD,GAAQluK,UAAU67J,oBAC7Cib,KAAQ9sD,GAAa+sD,GAAM/2K,UAAUw0K,qBAOzCuC,GAAM/2K,UAAUyyK,iBAAmB,CACjC,iCAAkC,CAChCgE,SAAYrsD,GAAkB6pD,GAAKj0K,UAAU8yK,WAC7C0D,SAAYpsD,GAAkB6pD,GAAKj0K,UAAU8yK,aAOjDiE,GAAM/2K,UAAUwzK,qBAAuB,CACrC,iCAAkC,CAChCO,YAAe3pD,GAAkBujC,IACjCqmB,YAAe5pD,GAAkBujC,MAOrCopB,GAAM/2K,UAAUqzK,mCAAqC,CACnD,iCAAkC,CAChCS,cAAiB1pD,GACf6pD,GAAKj0K,UAAUszK,6BAEjB5C,cAAiBtmD,GACf6pD,GAAKj0K,UAAUszK,+BAQrByD,GAAM/2K,UAAUkzK,wBAA0B,CACxC,iCAAkC,CAChC5C,YAAelmD,GAAkB6pD,GAAKj0K,UAAUmzK,oBAOpD4D,GAAM/2K,UAAUoyK,oCAAsC,CACpD,iCAAkC,CAChC5B,iBAAoBpmD,GAClB6pD,GAAKj0K,UAAUiyK,8BAEjB4B,YAAezpD,GACb6pD,GAAKj0K,UAAUiyK,gCAQrB8E,GAAM/2K,UAAUsyK,qBAAuB,CACrC,iCAAkC,CAChCoB,MAAStpD,GAAkB6pD,GAAKj0K,UAAU6xK,wBAC1Cf,WAAc1mD,GAAkB6pD,GAAKj0K,UAAUkyK,6BAC/Cz9I,MAAS21F,GAAkB2sD,GAAM/2K,UAAUgzK,YAC3CnrF,WAAcuiC,GAAkB6pD,GAAKj0K,UAAUizK,iBAC/CvrF,WAAc0iC,GAAkB6pD,GAAKj0K,UAAU6xK,wBAC/C9pF,gBAAmBqiC,GACjB6pD,GAAKj0K,UAAUkyK,6BAEjB79I,WAAc+1F,GAAkB6pD,GAAKj0K,UAAU+yK,iBAC/C17I,QAAW+yF,GAAkB6pD,GAAKj0K,UAAUwyK,uBAC5CxqF,aAAgBoiC,GACd6pD,GAAKj0K,UAAUozK,4BAEjBO,QAAWvpD,GAAkB6pD,GAAKj0K,UAAUwyK,uBAC5CzB,aAAgB3mD,GACd6pD,GAAKj0K,UAAUozK,4BAEjBQ,SAAYxpD,GAAkB6pD,GAAKj0K,UAAUuzK,iBCrVjD,MAAMyD,GAIJ,WAAAx6K,CAAY++C,GAKV9+C,KAAKw6K,SAAW17H,CACpB,CAME,UAAA27H,GACE,OAAOz6K,KAAKw6K,QAChB,EChBA,MAAME,WAAoBH,GAKxB,WAAAx6K,CAAY++C,EAASxB,GACnBr4C,MAAM65C,GAKN9+C,KAAKs9C,WAAaA,EAClB3pC,GAAO3T,KAAKs9C,WAAWz8C,QAAU,EAAG,qCACxC,ECfA,MAAM85K,WAAYD,GAIhB,WAAA36K,CAAYu9C,GACVr4C,MAAM,MAAOjD,MAAMuB,UAAUC,MAAMC,KAAKC,WAC5C,ECLA,MAAMk3K,WAAaL,GAOjB,WAAAx6K,CAAY8yK,EAAcp9J,EAAQm8J,GAYhC,GAXA3sK,MAAM,QAKNjF,KAAK6yK,aAAeA,EAKpB7yK,KAAKyV,OAASA,EACQ,IAAlBA,EAAO5U,OACT,MAAM,IAAIwH,MACR,kEAOJrI,KAAK4xK,QAAUA,CACnB,ECPA,MAAME,GAA6B,CACjC,6BAA8B,CAC5B+I,UAAantD,GACX+jD,GAAQluK,UAAUkvK,kBAClB,WAGJ,iCAAkC,CAChCqI,OAAUxtD,GAAgBmkD,GAAQluK,UAAU0uK,wBAQ1C8I,GAA8B,CAClC,6BAA8B,CAC5BC,cAAiBttD,GAAyBkjC,IAC1CqqB,aAAgBvtD,GAAyBkjC,IACzCsqB,aAAgBxtD,GAAyBkjC,KAE3C,iCAAkC,CAChCoqB,cAAiBttD,GAAyBkjC,IAC1CqqB,aAAgBvtD,GAAyBkjC,IACzCsqB,aAAgBxtD,GAAyBkjC,MAQvCuqB,GAA+B,CACnC,6BAA8B,CAC5BC,mBAAsB1tD,GACpB2tD,GACA,sBAEFC,cAAiB5tD,GAAyB6tD,GAAmB,cAE/D,iCAAkC,CAChCH,mBAAsB1tD,GACpB2tD,GACA,sBAEFC,cAAiB5tD,GAAyB6tD,GAAmB,eAO3DC,GAAoB,CACxB,6BAA8B,CAC5BC,aAAgB9tD,GAAkBujC,KAEpC,iCAAkC,CAChCuqB,aAAgB9tD,GAAkBujC,MAOhCwqB,GAA0B,CAC9B,6BAA8B,CAC5BC,OAAUhuD,GAAkBghC,IAC5BitB,OAAUjuD,GAAkBkuD,IAC5BC,OAAUnuD,GAAkBouD,IAC5B9xK,SAAY0jH,GAAkBquD,IAC9BC,OAAUtuD,GAAkBuuD,KAE9B,iCAAkC,CAChCP,OAAUhuD,GAAkBghC,IAC5BitB,OAAUjuD,GAAkBkuD,IAC5BC,OAAUnuD,GAAkBouD,IAC5B9xK,SAAY0jH,GAAkBquD,IAC9BC,OAAUtuD,GAAkBuuD,MAwF1BC,GAAiB,UAKjBC,GAAQ,gCAKRC,GAAQ,CACZ,QAAS,iCACT,QAAS,6BACT,QAAS,8BAMLC,GAAQ,CACZ,QAAS,iCACT,QAAS,6BACT,QAAS,8BAMLC,GAAQ,CACZ,QAAS,iCACT,QAAS,6BACT,QAAS,8BAMLC,GAAmB,CACvB,QACE,4EACF,QACE,0EACF,QACE,2EAMEC,GAAc,CAClB,QAASnC,GACT,QAAS9C,GACT,QAASjD,IAydX,SAASmI,GAA4Bh4K,EAAMg2E,EAAU2yC,EAAa7U,GAChE2W,GACE3W,EACAkjE,GACAztD,GAAsBvpH,GACtBg2E,EACA2yC,EAEJ,CAOA,SAASguD,GAAuBvqK,EAAMu8G,GACpC,OAAO6B,GAAgB,CAAE,EAAE6rD,GAA6BjqK,EAAMu8G,EAChE,CAMA,MAAMsvD,GAAkB,CACtB,6BAA8B,CAC5BC,UAAatvD,IAAgB,SAAUx8G,EAAMu8G,GAC3C,OAAOv8G,EAAKkiJ,aAAa,MAC/B,KAEE,iCAAkC,CAChC4pB,UAAatvD,IAAgB,SAAUx8G,EAAMu8G,GAC3C,OAAOv8G,EAAKkiJ,aAAa,MAC/B,MAQA,SAAS6pB,GAAU/rK,EAAMu8G,GACvB0B,GAAU4tD,GAAiB7rK,EAAMu8G,EACnC,CAMA,MAAMyvD,GAAyB,CAC7B,6BAA8B,CAC5BhpK,QAAW+oK,IAEb,iCAAkC,CAChC/oK,QAAW+oK,KASf,SAAStB,GAAkBzqK,EAAMu8G,GAC/B,OAAO6B,GAAgB,GAAI4tD,GAAwBhsK,EAAMu8G,EAC3D,CAOA,SAASshC,GAAa79I,EAAM24D,EAAS4jD,GACnC,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3C6wK,EAAchiK,EAAqB,YACnCiiK,EAAYjiK,EAAmB,UAC/BqtK,EAAartK,EAAoB,WACjC48C,EAAQ0/D,GAAgB2lD,EAAWD,GACzC5gK,EAAKU,YAAY86C,GACE,IAAfywH,EACFxI,GAAKhxK,UAAU2xK,oBAAoB5oH,EAAOmd,EAAS4jD,GAC3B,IAAf0vD,EACTvF,GAAKj0K,UAAU2xK,oBAAoB5oH,EAAOmd,EAAS4jD,GAEnDitD,GAAM/2K,UAAU2xK,oBAAoB5oH,EAAOmd,EAAS4jD,EAExD,CAOA,SAAS2vD,GAAkBlsK,EAAMiiK,EAAK1lD,GACpC,MACM0+C,EADU1+C,EAAYA,EAAYxsH,OAAS,GAChB,QAC3BuxK,EAAKiK,GAAMtQ,GACXt8H,EAASu8E,GAAgBomD,EAAI,UAC7B9lH,EAAQ0/D,GAAgBomD,EAAI,aAClC3iI,EAAOj+B,YAAY86C,GACnBA,EAAM1T,aAAa,MAAK,GACxB9nC,EAAKU,YAAYi+B,EACnB,CAOA,SAASwtI,GAAYC,EAAexL,GAElC,MAAM7iG,GADNquG,EAAgBA,GAAgCf,IACjB,IAE/B,OAAIzK,EAAY78I,WAAWg6C,GAClB6iG,EAEF7iG,EAAS6iG,CAClB,CAOA,SAASqK,GAAYjrK,EAAM24D,EAAS4jD,GAClC,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GACjD8S,QAA2BnN,IAApBijE,EAAQ10D,QAAuB,gCACtC,MAAM28J,EAAchiK,EAAqB,YACnCwtK,EAAgBxtK,EAAuB,cACvCiiK,EAAYjiK,EAAmB,UAC/BijD,EAAWsqH,GAAYC,EAAexL,GAC5C5gK,EAAK8nC,aAAa,WAAY+Z,GAC9B7hD,EAAK+lJ,eAAeulB,GAAO,SAAWc,EAAevL,GACrD,MAAMoB,EAAMtpG,EAAQ10D,aACRvO,IAARusK,GACFiK,GAAkBlsK,EAAMiiK,EAAK1lD,EAEjC,CAOA,SAASwuD,GAAY/qK,EAAM24D,EAAS4jD,GAClC,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GACjD8S,QAA2BnN,IAApBijE,EAAQ10D,QAAuB,gCACtC,MAAMg3J,EAAUr8J,EAAiB,QAC3BgiK,EAAchiK,EAAqB,YACnCwtK,EAAgBxtK,EAAuB,cACvCiiK,EAAYjiK,EAAmB,UAC/BijD,EAAWsqH,GAAYC,EAAexL,GACtCmB,EAAeppG,EAAQ90D,kBAC7B7D,EAAK8nC,aAAa,WAAY+Z,GAC9B7hD,EAAK+lJ,eAAeulB,GAAO,SAAWc,EAAevL,GACrD,MAAMoB,EAAMtpG,EAAQ10D,QACpB,QAAYvO,IAARusK,EAAmB,CACrB,MAAMpsK,EAAO8iE,EAAQtgE,UACfL,EAAS,GACf,IAAK,IAAIvH,EAAI,EAAG4E,EAAKQ,EAAK9F,OAAQU,EAAI4E,EAAI5E,IAAK,CAC7C,MAAMwC,EAAQ0lE,EAAQxgE,IAAItC,EAAKpF,IAC/B,QAAciF,IAAVzC,EAAqB,CACvB,IAAIqR,EAAOzO,EAAKpF,GAEdwC,GAC4D,mBAAnC,EAA6B,wBAEtDqR,EAAOy9J,GAET/pK,EAAOnD,KAAK,CAACyP,KAAMA,EAAMrR,MAAOA,GACxC,CACA,CACIorH,GACoD,CAChD48C,UACAgR,WAAcrtK,EAAoB,WAClCoB,OACA4lJ,KAAQhnJ,EAAc,KACtBkiK,QAAWliK,EAAiB,SAE9BgsK,GACAztD,GAAsB,YACtBnlH,EACAukH,GAEF2vD,GAAkBlsK,EAAMiiK,EAAK1lD,EACjC,CACA,CAOA,SAAS2uD,GAAclrK,EAAMkyJ,EAAM31C,GACjC,MAAM39G,EAAU29G,EAAYA,EAAYxsH,OAAS,GAC3CkrK,EAAUr8J,EAAiB,QAC3B0iK,EAAKkK,GAAMvQ,GAEX32J,EAAO42G,GAAgBomD,EADD,UAAZrG,EAAsB,iBAAmB,QAEnDgR,EAAartK,EAAoB,WAGvC,GAFAoB,EAAKU,YAAY4D,GACjB87I,GAAoB97I,EAAM4tJ,EAAK5tJ,WACZ5O,IAAfw8J,EAAKj/J,OAAsC,OAAfi/J,EAAKj/J,MAAgB,CACnD,MAAMA,EAAQioH,GAAgBomD,EAAI,SAClCthK,EAAKU,YAAYzN,GAEfi/J,EAAKj/J,OAEH,mBADwBi/J,EAAU,MAAuB,sBAGxC,IAAf+Z,EACFxI,GAAKhxK,UAAU4xK,qBAAqBpxK,EAAOi/J,EAAKj/J,MAAOspH,GAC/B,IAAf0vD,EACTvF,GAAKj0K,UAAU4xK,qBAAqBpxK,EAAOi/J,EAAKj/J,MAAOspH,GAEvDitD,GAAM/2K,UAAU4xK,qBAAqBpxK,EAAOi/J,EAAKj/J,MAAOspH,GAG1D6jC,GAAoBntJ,EAAOi/J,EAAKj/J,MAEtC,CACA,CAOA,SAASm4K,GAAYprK,EAAMqsK,EAAe9vD,GACpC8vD,EAAcC,UAChBtsK,EAAK8nC,aAAa,WAAYukI,EAAcC,eAEX52K,IAA/B22K,EAAcE,cAChBvsK,EAAK8nC,aAAa,eAAgBlwC,OAAOy0K,EAAcE,oBAE7B72K,IAAxB22K,EAAcp5K,OAChBmtJ,GAAoBpgJ,EAAMqsK,EAAcp5K,MAE5C,CAKA,MAAMu5K,GAAyB,CAC7B,6BAA8B,CAC5BC,MAAS5vD,GAAkB6vD,KAE7B,iCAAkC,CAChCD,MAAS5vD,GAAkB6vD,KAE7B,6BAA8B,CAC5BC,OAAU9vD,GAAkB+vD,IAC5B/C,IAAOhtD,GAAkBgwD,IACzBC,GAAMjwD,GAAkBgwD,IACxB/oH,IAAO+4D,GAAkBkwD,IACzBC,KAAQnwD,GAAkBowD,IAC1BC,SAAYrwD,GAAkBswD,IAC9BC,WAAcvwD,GAAkBswD,IAChCE,OAAUxwD,GAAkBswD,IAC5BG,QAAWzwD,GAAkB0wD,IAC7BC,kBAAqB3wD,GAAkB4wD,IACvCC,qBAAwB7wD,GAAkB4wD,IAC1CE,mBAAsB9wD,GAAkB4wD,IACxCG,4BAA+B/wD,GAAkB4wD,IACjDI,sBAAyBhxD,GAAkB4wD,IAC3CK,+BAAkCjxD,GAAkB4wD,IACpDM,eAAkBlxD,GAAkBmxD,IACpCC,kBAAqBpxD,GAAkBqxD,IACvCC,eAAkBtxD,GAAkBuxD,KAEtC,iCAAkC,CAChCzB,OAAU9vD,GAAkB+vD,IAC5B/C,IAAOhtD,GAAkBgwD,IACzBC,GAAMjwD,GAAkBgwD,IACxB/oH,IAAO+4D,GAAkBkwD,IACzBC,KAAQnwD,GAAkBowD,IAC1BC,SAAYrwD,GAAkBswD,IAC9BkB,SAAYxxD,GAAkBswD,IAC9BC,WAAcvwD,GAAkBswD,IAChCmB,WAAczxD,IA0GlB,SAA+B78G,EAAM2+B,EAAQ49E,GAC3Cv8G,EAAK8nC,aAAa,MAA8BnJ,EAAU,IAC5D,IA3GI0uI,OAAUxwD,GAAkBswD,IAC5BG,QAAWzwD,GAAkB0wD,IAC7BC,kBAAqB3wD,GAAkB4wD,IACvCC,qBAAwB7wD,GAAkB4wD,IAC1CE,mBAAsB9wD,GAAkB4wD,IACxCG,4BAA+B/wD,GAAkB4wD,IACjDI,sBAAyBhxD,GAAkB4wD,IAC3CK,+BAAkCjxD,GAAkB4wD,IACpDM,eAAkBlxD,GAAkBmxD,IACpCC,kBAAqBpxD,GAAkBqxD,IACvCC,eAAkBtxD,GAAkBuxD,MASxC,SAAS1B,GAAW1sK,EAAM4gK,EAAarkD,GACrC,MAAM39G,EAAiC29G,EAAYA,EAAYxsH,OAAS,GAClEkrK,EAAUr8J,EAAiB,QAC3BwtK,EAAgBxtK,EAAuB,cACvCiiK,EAAYjiK,EAAmB,UAC/B2vK,EAAgB3vK,EAAuB,cACvCkiK,EAAUliK,EAAiB,QACjC,IAAIijD,EAOA2sH,EAJF3sH,EADEuqH,EACSD,GAAYC,EAAexL,GAE3BA,EAIX4N,EADc,UAAZvT,EACa,YAEA,WAEjBj7J,EAAK8nC,aAAa0mI,EAAc3sH,GAC5Bi/G,GACF9gK,EAAK8nC,aAAa,UAAWg5H,GAE3BD,GACF7gK,EAAK+lJ,eAAeulB,GAAO,SAAWc,EAAevL,GAEvD,MAAM1mK,EACJvE,OAAO2C,OAAO,CAAA,EAAIqG,GAEpBzE,EAAK6F,KAAOA,EACZq+G,GACElkH,EACAuwK,GACAvtD,GAAsB,gBACtBoxD,EACAhyD,GAEF,MAAM59E,EAAS//B,EAAgB,OAC/B,GAAI+/B,EAAQ,CACV,MAAM6c,EAAQ0/D,GAAgBuzD,GAAYxT,GAAU,UACpDj7J,EAAKU,YAAY86C,GACjBkzH,GAAqBlzH,EAAO7c,EAAQ49E,EACxC,CACA,CAOA,SAASmyD,GAAqB1uK,EAAM2+B,EAAQ49E,GAC1C,MAAM39G,EAAiC29G,EAAYA,EAAYxsH,OAAS,GAElEoK,EAAO,CAAC6F,QACdpK,OAAO2C,OAAO4B,EAAM,CAACyE,YACrBy/G,GACElkH,EACAqyK,GACArvD,GAAsBx+E,EAAOgrI,cAC7B,CAAChrI,GACD49E,EAEJ,CAOA,SAAS0wD,GAAgBjtK,EAAM2+B,EAAQ49E,GACrC,MAAM38G,EAAgC28G,EAAYA,EAAYxsH,OAAS,GAEjEkrK,EADUr7J,EAAgB,QACC,QACjCA,EAAgB,QAAI++B,EAAOmiI,QAC3B,MAAMpwJ,EAASi7J,GAAY1Q,GAE3B0T,GAAkB1T,EAASj7J,EAAM2+B,EAAOojI,cACxCrxJ,EAAOje,UAAU4xK,qBAAqBrkK,EAAM2+B,EAAOh6B,OAAQ43G,EAC7D,CAgBA,SAAS4wD,GAAmBntK,EAAM2+B,EAAQ49E,GACxC,MAAM38G,EAAgC28G,EAAYA,EAAYxsH,OAAS,GAEjEkrK,EADUr7J,EAAgB,QACC,QACjCA,EAAgB,QAAI++B,EAAOmiI,QAC3B,MAAMpwJ,EAASi7J,GAAY1Q,GAE3B0T,GAAkB1T,EAASj7J,EAAM2+B,EAAOojI,cACxCrxJ,EAAOje,UAAU4xK,qBAAqBrkK,EAAM2+B,EAAOn7B,SAAU+4G,EAC/D,CAOA,SAASgxD,GAAmBvtK,EAAM2+B,EAAQ49E,GACxC,MAEM0+C,EAFgC1+C,EAAYA,EAAYxsH,OAAS,GACvC,QACC,QACjCo9K,GAAmBntK,EAAM2+B,EAAQ49E,GACjC,MAAMzuG,EAAWotG,GAAgBuzD,GAAYxT,GAAU,YACvD7a,GAAoBtyI,EAAU6wB,EAAO7wB,SAASmS,YAC9B,UAAZg7I,EACFntJ,EAASg6B,aAAa,MAAOnJ,EAAOiwI,MAEpC9gK,EAASg6B,aAAa,QAASnJ,EAAOiwI,MAExC5uK,EAAKU,YAAYoN,EACnB,CAOA,SAAS8+J,GAAkB5sK,EAAM2+B,EAAQ49E,GACvC,MAEM0+C,EAFgC1+C,EAAYA,EAAYxsH,OAAS,GACvC,QACC,QAEjC8+K,GAAgBpD,GAAMxQ,GAAU,iBAAkBj7J,EAAM2+B,EAAOmwI,cAC/D,MAAMC,EAAa7zD,GAAgBulD,GAAO,cAE1CzgK,EAAKU,YAAYquK,GAEjB,MAAMn+K,EAAQsqH,GAAgBulD,GAAO,SACrCsO,EAAWruK,YAAY9P,GACvBo+K,GAAiBp+K,EAAO+tC,EAAO/tC,OAE/B,MAAMC,EAAMqqH,GAAgBulD,GAAO,OACnCsO,EAAWruK,YAAY7P,GACvBm+K,GAAiBn+K,EAAK8tC,EAAO9tC,IAC/B,CAOA,SAASg8K,GAAmB7sK,EAAM2+B,EAAQ49E,GACxC,MACM39G,EADgC29G,EAAYA,EAAYxsH,OAAS,GACvC,QAE1BoK,EAAO,CAAC6F,QACdpK,OAAO2C,OAAO4B,EAAM,CAACyE,YACrB,MAAM4tC,EAAa7N,EAAO6N,WAC1B,IAAK,IAAI/7C,EAAI,EAAG4E,EAAKm3C,EAAWz8C,OAAQU,EAAI4E,IAAM5E,EAAG,CACnD,MAAMg/C,EAAYjD,EAAW/7C,GAC7B4tH,GACElkH,EACAqyK,GACArvD,GAAsB1tE,EAAUk6H,cAChC,CAACl6H,GACD8sE,EAEN,CACA,CAOA,SAASwwD,GAAe/sK,EAAM2+B,EAAQ49E,GACpC,MACM39G,EADgC29G,EAAYA,EAAYxsH,OAAS,GACvC,QAE1BoK,EAAO,CAAC6F,QACdpK,OAAO2C,OAAO4B,EAAM,CAACyE,YACrB,MAAM6wC,EAAY9Q,EAAO8Q,UACzB4uE,GACElkH,EACAqyK,GACArvD,GAAsB1tE,EAAUk6H,cAChC,CAACl6H,GACD8sE,EAEJ,CAOA,SAASkxD,GAAsBztK,EAAM2+B,EAAQ49E,GAC3C,MAEM0+C,EAFgC1+C,EAAYA,EAAYxsH,OAAS,GACvC,QACC,aACR2F,IAArBipC,EAAOswI,WACTjvK,EAAK8nC,aAAa,YAAanJ,EAAOswI,UAAUhvJ,YAElD0uJ,GAAkB1T,EAASj7J,EAAM2+B,EAAOmwI,cACxCI,GAAajU,EAASj7J,EAAM,GAAK2+B,EAAOgpB,WAC1C,CAOA,SAASqmH,GAAkBhuK,EAAM2+B,EAAQ49E,GAIvCoyD,GAHsCpyD,EAAYA,EAAYxsH,OAAS,GACvC,QACC,QACNiQ,EAAM2+B,EAAOmwI,aAC1C,CAOA,SAASZ,GAAqBluK,EAAM2+B,EAAQ49E,GAC1C,MAEM0+C,EAFgC1+C,EAAYA,EAAYxsH,OAAS,GACvC,QACC,QAC3BuxK,EAAKmN,GAAYxT,GAEvB0T,GAAkB1T,EAASj7J,EAAM2+B,EAAOmwI,cAExC,MAAMK,EAAgBj0D,GAAgBomD,EAAI,iBAC1CthK,EAAKU,YAAYyuK,GACjBD,GAAajU,EAASkU,EAAe,GAAKxwI,EAAOwwI,eAEjD,MAAMC,EAAgBl0D,GAAgBomD,EAAI,iBAC1CthK,EAAKU,YAAY0uK,GACjBF,GAAajU,EAASmU,EAAe,GAAKzwI,EAAOywI,cACnD,CAOA,SAAShB,GAAkBpuK,EAAM2+B,EAAQ49E,GACvC,MAEM0+C,EAFgC1+C,EAAYA,EAAYxsH,OAAS,GACvC,QACC,QACjCiQ,EAAK8nC,aAAa,WAAYnJ,EAAO0wI,UACrCrvK,EAAK8nC,aAAa,aAAcnJ,EAAO2wI,YACvCtvK,EAAK8nC,aAAa,aAAcnJ,EAAO4wI,iBACd75K,IAArBipC,EAAOswI,WACTjvK,EAAK8nC,aAAa,YAAanJ,EAAOswI,UAAUhvJ,YAElD0uJ,GAAkB1T,EAASj7J,EAAM2+B,EAAOmwI,cACxCI,GAAajU,EAASj7J,EAAM,GAAK2+B,EAAO+rB,QAC1C,CAQA,SAASmkH,GAAgBvN,EAAItzH,EAAShuC,EAAM/M,GAC1C,MAAMQ,EAAWynH,GAAgBomD,EAAItzH,GACrCoyG,GAAoB3sJ,EAAUR,GAC9B+M,EAAKU,YAAYjN,EACnB,CAOA,SAASy7K,GAAajU,EAASj7J,EAAM/M,GACnC47K,GAAgBJ,GAAYxT,GAAU,UAAWj7J,EAAM/M,EACzD,CAOA,SAAS07K,GAAkB1T,EAASj7J,EAAM/M,GACxB,UAAZgoK,EACF4T,GAAgBpD,GAAMxQ,GAAU,iBAAkBj7J,EAAM/M,GAExD47K,GAAgBtD,GAAMtQ,GAAU,eAAgBj7J,EAAM/M,EAE1D,CAMA,SAAS+7K,GAAiBhvK,EAAM9D,GAC9B,MAAMszK,EAAct0D,GAAgBulD,GAAO,eAC3CzgK,EAAKU,YAAY8uK,GAEjB,MAAMC,EAAev0D,GAAgBulD,GAAO,gBAC5C+O,EAAY9uK,YAAY+uK,GACxBrvB,GAAoBqvB,EAAcvzK,EACpC,CA6BA,SAASwzK,GAAgB1vK,EAAMuhK,EAAchlD,GAC3C,MAAM39G,EAAiC29G,EAAYA,EAAYxsH,OAAS,GAClEoK,EACJvE,OAAO2C,OAAO,CAAA,EAAIqG,GAEpBzE,EAAK6F,KAAOA,EACZq+G,GACElkH,EACAqyK,GACArvD,GAAsB,SACtBokD,EACAhlD,EAEJ,CAEA,SAASkyD,GAAYxT,GACnB,IAAIqG,EAMJ,OAJEA,EADc,UAAZrG,EACGwQ,GAAMxQ,GAENsQ,GAAMtQ,GAENqG,CACT,CCr1CA,MAAMhgB,GAAiB,CAAC,KAAM,mCAMxBquB,GAAqB,CAAC,KAAM,kCAO5BnU,GAAU39C,GAAgByjC,GAAgB,CAC9CsuB,SAAYhzD,IAmMd,SAAsB58G,EAAMu8G,GAC1B,OAAO6B,GAAgB,CAAE,EAAEyxD,GAAkB7vK,EAAMu8G,EACrD,MAnJA,MAAMszD,GAAmBhyD,GAAgByjC,GAAgB,CACvD9oG,MAASkkE,IAyJX,SAAmB18G,EAAMu8G,GACvB,OAAO6B,GAAgB,CAAE,EAAE0xD,GAAe9vK,EAAMu8G,EAClD,IA1JEwzD,cAAiBrzD,IAiKnB,SAA2B18G,EAAMu8G,GAC/B,OAAO6B,GAAgB,CAAE,EAAE4xD,GAAahwK,EAAMu8G,EAChD,MA3JMuzD,GAAgBjyD,GACpByjC,GACA,CACEzpF,MAAS6kD,IA+Jb,SAAmB18G,EAAMu8G,GACvB,MAAMv9G,EAAQo/G,GAAgB,CAAA,EAAIyxC,GAAe7vJ,EAAMu8G,GACvD,IAAKv9G,EACH,OAEF,MAAMixK,EAA+C,SAAnCjwK,EAAKkiJ,aAAa,aAEpC,OADAljJ,EAAiB,UAAIixK,EACdjxK,CACT,IAtKIkxK,OAAUxzD,GAAyBsjC,IACnCmwB,kBAAqBzzD,IA4KzB,SAA+B18G,EAAMu8G,GACnC,OAAO6B,GAAgB,CAAE,EAAEgyD,GAAmBpwK,EAAMu8G,EACtD,IA7KI8zD,UAAa3zD,IAoLjB,SAAwB18G,EAAMu8G,GAC5B,OAAO6B,GAAgB,CAAE,EAAEkyD,GAAmBtwK,EAAMu8G,EACtD,IArLIg0D,YAAe7zD,IA4LnB,SAAyB18G,EAAMu8G,GAC7B,MAAM7rG,EAAS1Q,EAAKkiJ,aAAa,UAC3BvxI,EAAW3Q,EAAKkiJ,aAAa,YAC7BsuB,EAAexwK,EAAKkiJ,aAAa,gBACjCuuB,EAAW,CAAE,EACf//J,IACF+/J,EAAiB,OAAI//J,GAEnBC,IACF8/J,EAAmB,SAAI9/J,GAErB6/J,IACFC,EAAuB,aAAID,GAE7B,OAAOC,CACT,KAzME5yD,GAAgB8xD,GAAoB,CAClC/Q,MAAShiD,GAAyBojC,IAClCye,SAAY7hD,GAAyBojC,IACrC0wB,iBAAoB9zD,GAAyB+zD,IAC7CC,YAAel0D,IA8NnB,SAAgC18G,EAAMu8G,GACpC,MAAMzS,EAAM9pG,EAAKkiJ,aAAa,OACxBx9I,EAAc05G,GAClB,GACAyyD,GACA7wK,EACAu8G,GAEF,GAA0B,GAAtB73G,EAAY3U,OACd,OAEF,MAAO,CAAC4U,OAAQF,GAAeC,GAAcolG,IAAKA,EACpD,IAzOIgnE,WAAcl0D,GAAyBojC,OASrC6P,GAAgBhyC,GACpByjC,GACA,CACEyvB,UAAar0D,IAoOjB,SAAuB18G,EAAMu8G,GAC3B,MAAMy0D,EAAS,CAAE,EAGjB,OAFAA,EAAe,OAAIhxK,EAAKkiJ,aAAa,UACrC8uB,EAAa,KAAI9U,GAASl8J,GACnBgxK,CACT,KAvOEnzD,GAAgB8xD,GAAoB,CAClC/Q,MAAShiD,GAAyBojC,IAClC8wB,WAAcl0D,GAAyBojC,OASrCowB,GAAoBvyD,GAAgByjC,GAAgB,CACxDyuB,cAAiBnzD,GAAyBojC,IAC1CixB,oBAAuBr0D,IA4PzB,SAAkC58G,EAAMu8G,GACtC,OAAO6B,GAAgB,GAAI8yD,GAAyBlxK,EAAMu8G,EAC5D,MAtPM20D,GAA0BrzD,GAAgByjC,GAAgB,CAC9D6vB,iBAAoB30D,IA4PtB,SAA8Bx8G,EAAMu8G,GAClC,OAAO6B,GAAgB,CAAE,EAAEgzD,GAAoBpxK,EAAMu8G,EACvD,MAtPM60D,GAAqBvzD,GAAgByjC,GAAgB,CACzD+vB,WAAcz0D,GAAyBojC,IACvCsxB,WAAc10D,GAAyBkjC,IACvCyxB,WAAc30D,GAAyBkjC,IACvC0xB,WAAc50D,GAAyBkjC,IACvC2xB,WAAc70D,GAAyBkjC,MAQnCwwB,GAAoBzyD,GACxByjC,GACA,CACE56B,QAAW9J,GAAyBojC,IACpCmd,MAASzgD,GAAyBsjC,KAEpCniC,GAAgB8xD,GAAoB,CAClCmB,WAAcl0D,GAAyBojC,OASrC6wB,GAAqBhzD,GAAgB8xD,GAAoB,CAC7D+B,YAAel1D,GAAgBm1D,IAC/BC,YAAep1D,GAAgBm1D,MAQ3B3B,GAAcnyD,GAClByjC,GACA,CACEuwB,kBAAqBj1D,GAAyBojC,IAC9CqxB,WAAc30D,IAuLlB,SAAwB18G,EAAMu8G,GAC5B,OAAO6B,GAAgB,CAAE,EAAE0zD,GAAY9xK,EAAMu8G,EAC/C,KAvLEsB,GAAgB8xD,GAAoB,CAClCoC,aAAgBn1D,GAAyBojC,IACzC8wB,WAAcl0D,GAAyBojC,IACvC4wB,YAAeh0D,GAAyB+zD,OAStCmB,GAAaj0D,GACjByjC,GACA,CACE0wB,cAAiBp1D,GAAyB+0D,IAC1CM,iBAAoBr1D,GAAyBgjC,IAC7CsyB,UAAat1D,GAAyBkjC,IACtCqyB,WAAcv1D,GAAyBkjC,IACvCsyB,YAAex1D,GAAyBkjC,IACxCuyB,aAAgBz1D,GAAyBkjC,KAE3CjiC,GAAgB8xD,GAAoB,CAClCmB,WAAcl0D,GAAyBojC,OA2F3C,SAAS2wB,GAAgB3wK,EAAMu8G,GAC7B,MAAM73G,EAAc05G,GAClB,GACAyyD,GACA7wK,EACAu8G,GAEF,GAA0B,GAAtB73G,EAAY3U,OAGhB,OAAO0U,GAAeC,EACxB,CAsCA,SAASitK,GAAgB3xK,EAAMu8G,GAC7B,MAAM73G,EAAcs7I,GAAWhgJ,GAAMqP,MAAM,OAC3C,IAAK3K,GAAqC,GAAtBA,EAAY3U,OAC9B,OAEF,MAAMkV,GAAKP,EAAY,GACjBQ,GAAKR,EAAY,GACvB,OAAI0d,MAAMnd,IAAMmd,MAAMld,QAAtB,EAGO,CAACD,EAAGC,EACb,CCzWA,MAAMotK,GAAS,CAAC,mBAAoB,0BAK9BC,GAMa,kBANbA,GAaa,kBAwTnB,SAASC,GAAsBp/I,GAC7B,MAAM87B,EAAO97B,EAAI87B,KACjB,SACEA,EAA8B,yBAC7BA,EAAKujH,mBAAqBr/I,EAAIs/I,kBAEnC,CAMA,SAASC,GAAav/I,GACpB,SAAUA,EAAwB,qBAAKA,EAAIw/I,kBAC7C,CAMA,SAASC,GAAkBx5K,GACrBA,EAAQo5K,kBACVp5K,EAAQo5K,oBACCp5K,EAAiC,yBAC1CA,EAAiC,yBAErC,CC5VA,MAAMy5K,GAAa,aAKbC,GAAoB,mBCO1B,MAAMC,GAAY,IAOZC,GAAY,GC3BlB,MAAMC,GAAa,QAWbC,GAAiB,CAAC,EAAG,EAAG,GAMxBC,GAAc,KAAO,ICT3B,MAAMC,GACM,EADNA,GAEQ,EC4uBX,IAACC,GAAK,CAAA,SACTA,GAAGh6K,WAAai6K,EAChBD,GAAGh6K,WAAWF,gBAAkBo6K,EAChCF,GAAG1xK,SAAW6xK,GACdH,GAAG1xK,SAASb,YAAc2yK,GAC1BJ,GAAG1xK,SAASjB,YAAcgzK,GAC1BL,GAAG1xK,SAASR,cAAgBwyK,GAC5BN,GAAG1xK,SAASN,QAAUuyK,GACtBP,GAAGtkL,WAAa8kL,EAChBR,GAAGtwK,QAAU+wK,GACbT,GAAGtwK,QAAQoB,oBAAsB4vK,GACjCV,GAAGW,YrOppBH,cAA0Bl8K,EAIxB,WAAA9I,CAAYuK,GACVrF,QAKAjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAEL4C,EAAUA,GAAW,CAAE,EAOvBtK,KAAKglL,UAAY,KAMjBhlL,KAAKg+E,WAAa/yD,GAMlBjrB,KAAKilL,cAAWz+K,EAEhBxG,KAAK0J,kBAAkBO,GAAqBjK,KAAKklL,0BACjDllL,KAAK0J,kBAAkBO,GAAmBjK,KAAKmlL,6BAEpB3+K,IAAvB8D,EAAQqR,YACV3b,KAAKolL,cAAc96K,EAAQqR,iBAEGnV,IAA5B8D,EAAQ+6K,iBACVrlL,KAAKslL,mBAAmBh7K,EAAQ+6K,iBAGlCrlL,KAAKulL,iBAAiC/+K,IAArB8D,EAAQk7K,UAAyBl7K,EAAQk7K,SAC9D,CAME,eAAArlL,GACEH,KAAKulL,aAAY,GACjBtgL,MAAM9E,iBACV,CAKE,wBAAA+kL,GACE,MAAMvpK,EAAa3b,KAAKszB,gBACpB3X,IACF3b,KAAKg+E,WAAaryD,GAChB2H,GAAc,aACd3X,GAEE3b,KAAKglL,WACPhlL,KAAK4J,IAAIK,GAAmBjK,KAAKg+E,WAAWh+E,KAAKglL,YAGzD,CAKE,sBAAAG,GACE,GAAI,gBAAiB73K,UAAW,CAC9B,MAAMk4K,EAAWxlL,KAAKylL,cAClBD,QAA8Bh/K,IAAlBxG,KAAKilL,SACnBjlL,KAAKilL,SAAW33K,UAAUo4K,YAAYC,cACpC3lL,KAAK4lL,gBAAgB1+K,KAAKlH,MAC1BA,KAAK6lL,eAAe3+K,KAAKlH,MACzBA,KAAK8lL,sBAEGN,QAA8Bh/K,IAAlBxG,KAAKilL,WAC3B33K,UAAUo4K,YAAYK,WAAW/lL,KAAKilL,UACtCjlL,KAAKilL,cAAWz+K,EAExB,CACA,CAME,eAAAo/K,CAAgBtyI,GACd,MAAMb,EAASa,EAASb,OACxBzyC,KAAK4J,IAAIK,GAAmBwoC,EAAOuzI,UACnChmL,KAAK4J,IACHK,GACoB,OAApBwoC,EAAOwzI,cAAoBz/K,EAAYisC,EAAOwzI,UAEhDjmL,KAAK4J,IACHK,GAC4B,OAA5BwoC,EAAOyzI,sBAA4B1/K,EAAYisC,EAAOyzI,kBAExDlmL,KAAK4J,IACHK,GACmB,OAAnBwoC,EAAOksH,aAAmBn4J,EAAY4W,GAAUq1B,EAAOksH,UAEpD3+J,KAAKglL,WAGRhlL,KAAKglL,UAAU,GAAKvyI,EAAO5pB,UAC3B7oB,KAAKglL,UAAU,GAAKvyI,EAAO7pB,UAH3B5oB,KAAKglL,UAAY,CAACvyI,EAAO5pB,UAAW4pB,EAAO7pB,UAK7C,MAAMu9J,EAAoBnmL,KAAKg+E,WAAWh+E,KAAKglL,WAC/ChlL,KAAK4J,IAAIK,GAAmBk8K,EAAkB3iL,SAC9CxD,KAAK4J,IAAIK,GAAiC,OAAjBwoC,EAAO2zI,WAAiB5/K,EAAYisC,EAAO2zI,OACpE,MAAM9xK,EAAW+xK,GAAgBrmL,KAAKglL,UAAWvyI,EAAOuzI,UACxD1xK,EAAS6G,eAAenb,KAAKg+E,YAC7Bh+E,KAAK4J,IAAIK,GAA4BqK,GACrCtU,KAAK4H,SACT,CAME,cAAAi+K,CAAepyK,GACbzT,KAAK4F,cAAc,IAAI22B,GAAiB9oB,GAC5C,CASE,WAAA6yK,GACE,OAAwCtmL,KAAKiJ,IAAIgB,GACrD,CAQE,mBAAAs8K,GACE,OACEvmL,KAAKiJ,IAAIgB,KAA+B,IAE9C,CASE,WAAAu8K,GACE,OAAwCxmL,KAAKiJ,IAAIgB,GACrD,CASE,mBAAAw8K,GACE,OACEzmL,KAAKiJ,IAAIgB,GAEf,CAUE,UAAAy8K,GACE,OAAwC1mL,KAAKiJ,IAAIgB,GACrD,CASE,WAAA60E,GACE,OACE9+E,KAAKiJ,IAAIgB,GAEf,CASE,aAAAqpB,GACE,OACEtzB,KAAKiJ,IAAIgB,GAEf,CASE,QAAA08K,GACE,OAAwC3mL,KAAKiJ,IAAIgB,GACrD,CAQE,WAAAw7K,GACE,OAA+BzlL,KAAKiJ,IAAIgB,GAC5C,CAWE,kBAAA67K,GACE,OACE9lL,KAAKiJ,IAAIgB,GAEf,CASE,aAAAm7K,CAAczpK,GACZ3b,KAAK4J,IAAIK,GAAqBqpB,GAAc3X,GAChD,CAQE,WAAA4pK,CAAYC,GACVxlL,KAAK4J,IAAIK,GAAmBu7K,EAChC,CAWE,kBAAAF,CAAmBh7K,GACjBtK,KAAK4J,IAAIK,GAA2BK,EACxC,GqO8WA85K,GAAGW,YAAYxoJ,iBAAmBqqJ,GAClCxC,GAAG/1K,MAAQw4K,GACXzC,GAAG/1K,MAAMC,OAASw4K,GAClB1C,GAAG/1K,MAAM8vB,eAAiB4oJ,GAC1B3C,GAAG/1K,MAAMkvB,YAAcypJ,GACvB5C,GAAG/1K,MAAMxB,KAAOo6K,GAChB7C,GAAG/lJ,YAAc6oJ,GACjB9C,GAAG5lJ,UAAY2oJ,GACf/C,GAAG5kJ,QAAU4nJ,GACbhD,GAAGtpC,IAAMusC,GACTjD,GAAGzjJ,gBAAkB2mJ,GACrBlD,GAAGliJ,uBAAyBqlJ,GAC5BnD,GAAG3jJ,SAAW+mJ,GACdpD,GAAG19K,OAAS+gL,EACZrD,GAAG19K,OAAOiC,YAAc++K,EACxBtD,GAAG78K,WAAaogL,EAChBvD,GAAG78K,WAAWY,QAAUy/K,EACxBxD,GAAGvmG,QAAUgqG,GACbzD,GAAGn4K,KAAO67K,GACV1D,GAAGz9I,UAAYohJ,GACf3D,GAAGz9I,UAAUgB,gBAAkBqgJ,GAC/B5D,GAAG7jG,UAAY0nG,GACf7D,GAAG7jG,UAAUvpE,eAAiBkxK,GAC9B9D,GAAG+D,iBzJ5wBH,cAA+Bl8K,GAQ7B,WAAAlM,CACEmM,EACAC,EACAmzF,EACA8oF,EACAC,GAEApjL,MAAMiH,EAAWC,EAAO,CAACE,WAAY,IAMrCrM,KAAK6kF,SAAW,KAMhB7kF,KAAKsoL,eAAiB,CAAE,EAMxBtoL,KAAKuoL,mBAAqB,EAK1BvoL,KAAKwoL,sBAAwB,CAAE,EAM/BxoL,KAAKyoL,aAAe,CAAE,EAKtBzoL,KAAK0oL,YAAc,GAKnB1oL,KAAK2oL,cAAgB,CAAE,EAKvB3oL,KAAK4oL,iBAKL5oL,KAAKooL,eAAiBA,EAAelhL,UAAKV,EAAWxG,MAMrDA,KAAK6oL,mBAAqBR,EAK1BroL,KAAKs6F,iBAAmBgF,CAC5B,CAKE,UAAAhwF,GAIE,OAHKtP,KAAK6kF,WACR7kF,KAAK6kF,SAAWh2E,GAAsB,EAAG,EAAGG,KAEvChP,KAAK6kF,QAChB,CAKE,UAAAikG,GACE,QAAS9oL,KAAK6kF,QAClB,CAME,QAAA9nD,GACE,OAAO/8B,KAAK8oL,aAAe9oL,KAAKsP,aAAaJ,OAAS,IAC1D,CAME,cAAA65K,CAAevvI,GACb,MAAMlyC,EAAMiB,EAAOixC,GAYnB,OAXMlyC,KAAOtH,KAAKyoL,eAChBzoL,KAAKyoL,aAAanhL,GAAO,CACvB09H,OAAO,EACPgkD,oBAAqB,KACrB3qE,mBAAoBrsF,IACpBi3J,kBAAoB,EACpBC,uBAAwBl3J,IACxBm3J,sBAAwB,EACxBC,eAAiB,IAGdppL,KAAKyoL,aAAanhL,EAC7B,CAME,IAAAuF,GACE7M,KAAKooL,gBACT,CAME,OAAA57K,GACMxM,KAAK6kF,WACPp1E,GAAczP,KAAK6kF,UACnB71E,GAAWrJ,KAAK3F,KAAK6kF,SAAS31E,QAC9BlP,KAAK6kF,SAAW,MAElB7kF,KAAK6oL,mBAAmB7oL,MACxBA,KAAK0oL,YAAY7nL,OAAS,EAC1BoE,MAAMuH,SACV,GyJ6nBA43K,GAAG35I,KAAO4+I,GACVjF,GAAG35I,KAAK0B,uBAAyBm9I,GACjClF,GAAG35I,KAAKe,2BAA6B+9I,GACrCnF,GAAG35I,KAAK8B,yBAA2Bi9I,GACnCpF,GAAG35I,KAAK+D,gBAAkBi7I,GAC1BrF,GAAG/5K,MAAQ,CAAE,EACb+5K,GAAG/5K,MAAM3J,UAAYgpL,EACrBtF,GAAG/5K,MAAMjK,aAAeupL,EACxBvF,GAAG/5K,MAAMpJ,WAAa2oL,EACtBxF,GAAG/5K,MAAMnI,OAAS2nL,EAClBzF,GAAG/5K,MAAMxI,OAASioL,EAClB1F,GAAG/5K,MAAM/H,SAAWynL,EACpB3F,GAAG/5K,MAAMnJ,kBAAoB8oL,EAC7B5F,GAAG/5K,MAAMgB,OxRhoBF,SAAgBlK,EAAKqH,GAC1B,MAAMjH,EAAIJ,EAAIyF,QAAQ4B,GAChB1H,EAAQS,GAAM,EAIpB,OAHIT,GACFK,EAAI0F,OAAOtF,EAAG,GAETT,CACT,EwR0nBAsjL,GAAG/5K,MAAM5I,gBAAkBwoL,EAC3B7F,GAAG/5K,MAAM6/K,WxRhmBF,SAAoB/oL,EAAKgpL,GAC9B,MAAMtpL,EAASM,EAAIN,OACbe,EAAMI,MAAMb,EAAIN,QACtB,IAAIU,EACJ,IAAKA,EAAI,EAAGA,EAAIV,EAAQU,IACtBK,EAAIL,GAAK,CAACqB,MAAOrB,EAAGwC,MAAO5C,EAAII,IAKjC,IAHAK,EAAIi3B,MAAK,SAAU93B,EAAGC,GACpB,OAAOmpL,EAAWppL,EAAEgD,MAAO/C,EAAE+C,QAAUhD,EAAE6B,MAAQ5B,EAAE4B,KACvD,IACOrB,EAAI,EAAGA,EAAIJ,EAAIN,OAAQU,IAC1BJ,EAAII,GAAKK,EAAIL,GAAGwC,KAEpB,EwRolBAqgL,GAAGgG,QAAU,CAAE,EACfhG,GAAGgG,QAAQz2K,OAAS02K,GACpBjG,GAAGkG,iBAAmB,CAAE,EACxBlG,GAAGkG,iBAAiBhiJ,aAAeiiJ,GACnCnG,GAAGkG,iBAAiBjrK,KAAOmrK,GAC3BpG,GAAG3zH,MAAQ,CAAE,EACb2zH,GAAG3zH,MAAMV,SAAW06H,GACpBrG,GAAG3zH,MAAMqB,QAAU44H,GACnBtG,GAAG3zH,MAAMa,SAAWq5H,GACpBvG,GAAG3zH,MAAMz/B,WAAa45J,GACtBxG,GAAG3zH,MAAMo6H,cjLzfF,SAAuBn/H,GAC5B,IAEE,OADA16B,GAAW06B,IACJ,CACX,CAAI,MACA,OAAO,CACX,CACA,EiLmfA04H,GAAG3zH,MAAMoB,WAAai5H,GACtB1G,GAAG3zH,MAAMiB,WAAaq5H,GACtB3G,GAAG3zH,MAAM1/B,SAAWi6J,GACpB5G,GAAG3zH,MAAMe,UAAYy5H,GACrB7G,GAAG8G,UAAY,CAAE,EACjB9G,GAAG8G,UAAUjuH,YAAckuH,GAC3B/G,GAAG5kK,QAAU,CAAE,EACf4kK,GAAG5kK,QAAQ/L,MAAQ23K,GACnBhH,GAAG5kK,QAAQyF,IlQlyBJ,YAAgB1F,GACjBD,GAAQJ,GAAOC,MAGnBK,QAAQyF,OAAO1F,EACjB,EkQ8xBA6kK,GAAG5kK,QAAQ6rK,SlQ1yBJ,SAAkB7vK,GACvB8D,GAAQJ,GAAO1D,EACjB,EkQyyBA4oK,GAAG5kK,QAAQJ,KAAOksK,GAClBlH,GAAGxqG,QAAU,CAAE,EACfwqG,GAAGxqG,QAAQriC,YAAcg0I,GACzBnH,GAAGxqG,QAAQ/iC,QAAU20I,GACrBpH,GAAGxqG,QAAQ6xG,WLjwBX,cAAyB50I,GAIvB,WAAA92C,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhCrF,MAAM,CACJkF,QAASiF,SAASC,cAAc,OAChCjO,OAAQkJ,EAAQlJ,SAMlBpB,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAKorH,WAAyB5kH,IAAjB8D,EAAQ3D,MAAqB2D,EAAQ3D,KAMlD3G,KAAK0rL,QAAUphL,EAAQP,OAMvB/J,KAAK2rL,iBAAkB,EAKvB3rL,KAAK4rL,4BAA8B5rL,KAAK6rL,uBAAuB3kL,KAAKlH,MAMpEA,KAAK8rL,mBACmBtlL,IAAtB8D,EAAQ2tC,UAA0B3tC,EAAQ2tC,UAAY,iBAMxDj4C,KAAK+rL,mBAAqB,GAM1B/rL,KAAKgsL,sBACyBxlL,IAA5B8D,EAAQ2hL,gBACJ3hL,EAAQ2hL,gBAAgB9rK,MAAM,KAC9B,CAACngB,KAAK8rL,cAAgB,SAM5B9rL,KAAKksL,wBAC2B1lL,IAA9B8D,EAAQ6hL,kBACJ7hL,EAAQ6hL,kBAAkBhsK,MAAM,KAChC,CAACngB,KAAK8rL,cAAgB,UAE5B,MAAMtzI,OAA0BhyC,IAAlB8D,EAAQkuC,MAAsBluC,EAAQkuC,MAAQ,IAM5Dx4C,KAAKosL,WACc,iBAAV5zI,EAAqBppC,SAAS2sC,eAAevD,GAASA,EAE/D,MAAM6zI,OACoB7lL,IAAxB8D,EAAQ+hL,YAA4B/hL,EAAQ+hL,YAAc,IAM5DrsL,KAAKssL,iBACoB,iBAAhBD,EACHj9K,SAAS2sC,eAAeswI,GACxBA,EAEN,MAAMn0I,EAAW5tC,EAAQ4tC,SAAW5tC,EAAQ4tC,SAAW,qBAMvDl4C,KAAKusL,QAAUn9K,SAASC,cAAc,UACtCrP,KAAKusL,QAAQ1zI,MAAQX,EACrBl4C,KAAKusL,QAAQ3zI,aAAa,OAAQ,UAClC54C,KAAKusL,QAAQ/6K,YAAYxR,KAAKosL,YAC9BpsL,KAAKusL,QAAQjnL,iBACXzF,EACAG,KAAK84C,aAAa5xC,KAAKlH,OACvB,GAEFA,KAAKwsL,cAAcxsL,KAAKusL,QAASvsL,KAAK2rL,iBAEtC3rL,KAAKmK,QAAQ8tC,UAAY,GAAGj4C,KAAK8rL,iBAAiB/1I,MAAsBE,KACxEj2C,KAAKmK,QAAQqH,YAAYxR,KAAKusL,QAClC,CAME,YAAAzzI,CAAajzC,GACXA,EAAMhB,iBACN7E,KAAKysL,mBACT,CAKE,iBAAAA,GACE,MAAMt7J,EAAMnxB,KAAKk3C,SACjB,IAAK/lB,EACH,OAEF,MAAM+S,EAAM/S,EAAIgT,mBAChB,GAAKm/I,GAAsBp/I,GAG3B,GAAIu/I,GAAav/I,IAoKrB,SAAwBA,GAClBA,EAAIwoJ,eACNxoJ,EAAIwoJ,iBACKxoJ,EAA0B,sBACnCA,EAA0B,sBAE9B,CAzKMyoJ,CAAezoJ,OACV,CACL,IAAI/5B,EAEFA,EADEnK,KAAK0rL,QAEmB,iBAAjB1rL,KAAK0rL,QACRxnJ,EAAIoT,eAAet3C,KAAK0rL,SACxB1rL,KAAK0rL,QAEDv6J,EAAI4sB,mBAEZ/9C,KAAKorH,MA4If,SAAmCjhH,GAC7BA,EAAiC,wBACnCA,EAAiC,0BAEjCw5K,GAAkBx5K,EAEtB,CAjJQyiL,CAA0BziL,GAE1Bw5K,GAAkBx5K,EAE1B,CACA,CAKE,uBAAA0iL,GACE,MAAM17J,EAAMnxB,KAAKk3C,SACjB,IAAK/lB,EACH,OAEF,MAAM27J,EAAkB9sL,KAAK2rL,gBAC7B3rL,KAAK2rL,gBAAkBlI,GAAatyJ,EAAIgT,oBACpC2oJ,IAAoB9sL,KAAK2rL,kBAC3B3rL,KAAKwsL,cAAcxsL,KAAKusL,QAASvsL,KAAK2rL,iBAClC3rL,KAAK2rL,iBACPp7K,GAAYvQ,KAAKssL,iBAAkBtsL,KAAKosL,YACxCpsL,KAAK4F,cAAcy9K,MAEnB9yK,GAAYvQ,KAAKosL,WAAYpsL,KAAKssL,kBAClCtsL,KAAK4F,cAAcy9K,KAErBlyJ,EAAI0nD,aAEV,CAOE,aAAA2zG,CAAcriL,EAAS4iL,GACjBA,GACF5iL,EAAQmwC,UAAUjvC,UAAUrL,KAAKksL,oBACjC/hL,EAAQmwC,UAAU/5B,OAAOvgB,KAAKgsL,oBAE9B7hL,EAAQmwC,UAAUjvC,UAAUrL,KAAKgsL,kBACjC7hL,EAAQmwC,UAAU/5B,OAAOvgB,KAAKksL,oBAEpC,CAWE,MAAA/0I,CAAOhmB,GACL,MAAM67J,EAAShtL,KAAKk3C,SAChB81I,GACFA,EAAOrjL,qBACLg7B,GACA3kC,KAAK4rL,6BAIT3mL,MAAMkyC,OAAOhmB,GAEbnxB,KAAK6rL,yBACD16J,GACFA,EAAIznB,kBACFi7B,GACA3kC,KAAK4rL,4BAGb,CAKE,sBAAAC,GACE,MAAMrmL,EAAYxF,KAAK+rL,mBACvB,IAAK,IAAIxqL,EAAI,EAAG4E,EAAKX,EAAU3E,OAAQU,EAAI4E,IAAM5E,EAC/C8F,EAAc7B,EAAUjE,IAE1BiE,EAAU3E,OAAS,EAEnB,MAAMswB,EAAMnxB,KAAKk3C,SACjB,GAAI/lB,EAAK,CACP,MAAM+S,EAAM/S,EAAIgT,mBACZm/I,GAAsBp/I,GACxBlkC,KAAKmK,QAAQmwC,UAAUjvC,OAAO2qC,IAE9Bh2C,KAAKmK,QAAQmwC,UAAU/5B,IAAIy1B,IAG7B,IAAK,IAAIz0C,EAAI,EAAG4E,EAAKi9K,GAAOviL,OAAQU,EAAI4E,IAAM5E,EAC5CiE,EAAUG,KACRmB,EAAOo9B,EAAKk/I,GAAO7hL,GAAIvB,KAAK6sL,wBAAyB7sL,OAGzDA,KAAK6sL,yBACX,CACA,GKigBAzI,GAAGxqG,QAAQqzG,cJ7wBX,cAA4Bp2I,GAI1B,WAAA92C,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhC,MAAMH,EAAUiF,SAASC,cAAc,OACvClF,EAAQ8tC,eACgBzxC,IAAtB8D,EAAQ2tC,UAA0B3tC,EAAQ2tC,UAAY,oBAExDhzC,MAAM,CACJkF,QAASA,EACT6sC,OAAQ1sC,EAAQ0sC,OAChB51C,OAAQkJ,EAAQlJ,SAMlBpB,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAEL1H,KAAK0J,kBAAkBk6K,GAAY5jL,KAAKklL,0BAEpC56K,EAAQ4iL,kBACVltL,KAAKmtL,oBAAoB7iL,EAAQ4iL,kBAE/B5iL,EAAQqR,YACV3b,KAAKolL,cAAc96K,EAAQqR,YAO7B3b,KAAKotL,uBAA4C5mL,IAAxB8D,EAAQ+iL,YAMjCrtL,KAAKstL,aAAettL,KAAKotL,kBAAoB9iL,EAAQ+iL,YAAc,SAMnErtL,KAAKutL,cAAgBpjL,EAAQiwC,UAM7Bp6C,KAAKwtL,eAAiB,KAMtBxtL,KAAKg+E,WAAa,KAMlBh+E,KAAKk8F,QAA2B,IAAlB5xF,EAAQoR,KAC1B,CAKE,wBAAAwpK,GACEllL,KAAKg+E,WAAa,IACtB,CAUE,mBAAAyvG,GACE,OACEztL,KAAKiJ,IAAI46K,GAEf,CASE,aAAAvwJ,GACE,OACEtzB,KAAKiJ,IAAI26K,GAEf,CAME,eAAA8J,CAAgB7nL,GACd,MAAMsrB,EAAMnxB,KAAKk3C,SACjBl3C,KAAK2tL,YAAYx8J,EAAI+P,cAAcr7B,GACvC,CAME,cAAA+nL,CAAe/nL,GACb7F,KAAK2tL,YAAY,KACrB,CAWE,MAAAx2I,CAAOhmB,GAEL,GADAlsB,MAAMkyC,OAAOhmB,GACTA,EAAK,CACP,MAAMmiE,EAAWniE,EAAIwR,cACrB3iC,KAAK89B,aAAan4B,KAChBmB,EAAOwsF,EAAUzzF,GAAuBG,KAAK0tL,gBAAiB1tL,OAE5DA,KAAKotL,mBACPptL,KAAK89B,aAAan4B,KAChBmB,EAAOwsF,EAAUzzF,GAAsBG,KAAK4tL,eAAgB5tL,OAGhEA,KAAK2tL,YAAY,KACvB,CACA,CASE,mBAAAR,CAAoB3rK,GAClBxhB,KAAK4J,IAAIi6K,GAAmBriK,EAChC,CASE,aAAA4jK,CAAczpK,GACZ3b,KAAK4J,IAAIg6K,GAAYtwJ,GAAc3X,GACvC,CAME,WAAAgyK,CAAY1sJ,GACV,IAAI4sJ,EAAO7tL,KAAKstL,aAChB,GAAIrsJ,GAASjhC,KAAKwtL,eAAgB,CAChC,IAAKxtL,KAAKg+E,WAAY,CACpB,MAAMriE,EAAa3b,KAAKszB,gBAEtBtzB,KAAKg+E,WADHriE,EACgBgQ,GAChB3rB,KAAKwtL,eACL7xK,GAGgBsP,EAE5B,CACM,MACM7U,EADMpW,KAAKk3C,SACM6J,+BAA+B9f,GACtD,GAAI7qB,EAAY,CACd,MAAM4X,EAAiBE,KAQvB,GAPIF,IACFhuB,KAAKg+E,WAAaryD,GAChB3rB,KAAKwtL,eACLx/J,IAGJhuB,KAAKg+E,WAAW5nE,EAAYA,GACxBpW,KAAKk8F,OAAQ,CAGfxgF,GAAMtF,EADJ4X,GAAkBhuB,KAAKszB,iBAAmBtzB,KAAKwtL,eAE3D,CACQ,MAAMN,EAAmBltL,KAAKytL,sBAE5BI,EADEX,EACKA,EAAiB92K,GAEjBA,EAAW2a,UAE5B,CACA,CACS/wB,KAAKutL,eAAiBM,IAAS7tL,KAAKutL,gBACvCvtL,KAAKmK,QAAQiwC,UAAYyzI,EACzB7tL,KAAKutL,cAAgBM,EAE3B,CAQE,MAAA72I,CAAOK,GACL,MAAM3W,EAAa2W,EAAS3W,WACvBA,EAGC1gC,KAAKwtL,gBAAkB9sJ,EAAWsH,UAAUrsB,aAC9C3b,KAAKwtL,eAAiB9sJ,EAAWsH,UAAUrsB,WAC3C3b,KAAKg+E,WAAa,MAJpBh+E,KAAKwtL,eAAiB,IAO5B,GI8hBApJ,GAAGxqG,QAAQk0G,YH7wBX,cAA0Bj3I,GAIxB,WAAA92C,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhCrF,MAAM,CACJkF,QAASiF,SAASC,cAAc,OAChC2nC,OAAQ1sC,EAAQ0sC,OAChB51C,OAAQkJ,EAAQlJ,SAMlBpB,KAAK+tL,4BAA8B/tL,KAAKguL,uBAAuB9mL,KAAKlH,MAMpEA,KAAKy3C,gBACmBjxC,IAAtB8D,EAAQotC,WAA0BptC,EAAQotC,UAM5C13C,KAAK83C,kBACqBtxC,IAAxB8D,EAAQutC,aAA4BvtC,EAAQutC,YAEzC73C,KAAK83C,eACR93C,KAAKy3C,YAAa,GAOpBz3C,KAAKwhE,qBACwBh7D,IAA3B8D,EAAQm3D,gBAA+Bn3D,EAAQm3D,eAMjDzhE,KAAKiuL,iBAAcznL,EAEnB,MAAMyxC,OACkBzxC,IAAtB8D,EAAQ2tC,UAA0B3tC,EAAQ2tC,UAAY,iBAElDC,OACiB1xC,IAArB8D,EAAQ4tC,SAAyB5tC,EAAQ4tC,SAAW,eAEhDE,OACsB5xC,IAA1B8D,EAAQ8tC,cAA8B9tC,EAAQ8tC,cAAgB,IAEnC,iBAAlBA,GAKTp4C,KAAKs4C,eAAiBlpC,SAASC,cAAc,QAC7CrP,KAAKs4C,eAAeC,YAAcH,GAElCp4C,KAAKs4C,eAAiBF,EAGxB,MAAMI,OAA0BhyC,IAAlB8D,EAAQkuC,MAAsBluC,EAAQkuC,MAAQ,IAEvC,iBAAVA,GAKTx4C,KAAKy4C,OAASrpC,SAASC,cAAc,QACrCrP,KAAKy4C,OAAOF,YAAcC,GAE1Bx4C,KAAKy4C,OAASD,EAGhB,MAAME,EACJ14C,KAAK83C,eAAiB93C,KAAKy3C,WAAaz3C,KAAKs4C,eAAiBt4C,KAAKy4C,OAC/D1U,EAAS30B,SAASC,cAAc,UACtC00B,EAAO6U,aAAa,OAAQ,UAC5B7U,EAAO8U,MAAQX,EACfnU,EAAOvyB,YAAYknC,GAEnB3U,EAAOz+B,iBACLzF,EACAG,KAAK84C,aAAa5xC,KAAKlH,OACvB,GAOFA,KAAKkuL,UAAY9+K,SAASC,cAAc,OACxCrP,KAAKkuL,UAAUj2I,UAAY,qBAO3Bj4C,KAAKmuL,MAAQ7jL,EAAQ8wC,KAErB,MAAMgzI,EAAQ,IAAItzC,GAAI,CACpB1/F,KAAM9wC,EAAQ8wC,KACdiB,SAAU,IAAIjyC,EACds7C,aAAc,IAAIt7C,IAOpBpK,KAAKquL,OAASD,EAEV9jL,EAAQ6uC,QACV7uC,EAAQ6uC,OAAOruC,SAAQ,SAAU0uC,GAC/B40I,EAAMl0G,SAAS1gC,EACvB,IAGI,MAAMumC,EAAM3wE,SAASC,cAAc,OACnC0wE,EAAI9nC,UAAY,qBAChB8nC,EAAIjwE,MAAMw+K,UAAY,aAMtBtuL,KAAKuuL,YAAc,IAAI1wG,GAAQ,CAC7BvqC,SAAU,CAAC,EAAG,GACdorC,YAAa,gBACbv0E,QAAS41E,IAEX//E,KAAKquL,OAAOj0G,WAAWp6E,KAAKuuL,aAE5B,MAAMx1I,EACJd,EACA,IACAlC,GACA,IACAE,IACCj2C,KAAKy3C,YAAcz3C,KAAK83C,aAAe,IAAM5B,GAAkB,KAC/Dl2C,KAAK83C,aAAe,GAAK,qBACtB3tC,EAAUnK,KAAKmK,QACrBA,EAAQ8tC,UAAYc,EACpB5uC,EAAQqH,YAAYxR,KAAKkuL,WACzB/jL,EAAQqH,YAAYuyB,GAIpB,MAAMs2C,EAAUr6E,KAAKuuL,YACfC,EAAaxuL,KAAKuuL,YAAY3vG,aAW9B6vG,EAAO,SAAU5oL,GACrB,MAAMytC,EAPC,CACL9O,SAFiCkqJ,EAQ4B7oL,GANtC2+B,QACvBC,QAASiqJ,EAAcjqJ,SAHS,IAACiqJ,EASnC,MAAMl5K,EAAc44K,EAAMvzG,mBAChC,GAGMR,EAAQsE,YAAYnpE,EACrB,EAEKm5K,EAAa9oL,IACjB,MAAM2P,EAAc44K,EAAMtzG,2BAA2Bj1E,GAE/CsrB,EAAMnxB,KAAKk3C,SAEjB/lB,EAAIkqB,UAAU3O,kBAAkBl3B,GAEhC,MAAMmmE,EAAgBxqD,EAAIgT,mBAC1Bw3C,EAAcr1E,oBAAoB,cAAemoL,GACjD9yG,EAAcr1E,oBAAoB,YAAaqoL,EAAU,EAK3D3uL,KAAKkuL,UAAU5oL,iBAAiB,eAAgBO,IAC9C,MAAM81E,EAAgB37E,KAAKk3C,SAAS/S,mBAChCt+B,EAAMzE,SAAWotL,GACnB7yG,EAAcr2E,iBAAiB,cAAempL,GAEhD9yG,EAAcr2E,iBAAiB,YAAaqpL,EAAU,GAE5D,CAWE,MAAAx3I,CAAOhmB,GACL,MAAM67J,EAAShtL,KAAKk3C,SACpB,GAAI/lB,IAAQ67J,EAAZ,CAGA,GAAIA,EAAQ,CACV,MAAM4B,EAAU5B,EAAO3xI,UACnBuzI,GACF5uL,KAAK6uL,YAAYD,GAEnB5uL,KAAKquL,OAAOp3I,UAAU,KAC5B,CAGI,GAFAhyC,MAAMkyC,OAAOhmB,GAETA,EAAK,CACPnxB,KAAKquL,OAAOp3I,UAAUj3C,KAAKkuL,WAC3BluL,KAAK89B,aAAan4B,KAChBmB,EACEqqB,EACAvxB,EACAI,KAAK8uL,yBACL9uL,OAIJ,MAAMo7C,EAAOjqB,EAAIkqB,UACbD,GACFp7C,KAAK+uL,UAAU3zI,GAGZp7C,KAAKquL,OAAO3xG,cACf18E,KAAKgvL,gCAEb,CA7BA,CA8BA,CAOE,wBAAAF,CAAyBjpL,GACvB,GAAIA,EAAMyB,MAAQq9B,GAAkB,CAClC,MAAMiqJ,EACJ/oL,EACD,SACG+oL,GACF5uL,KAAK6uL,YAAYD,GAEnB,MAAMK,EAAUjvL,KAAKk3C,SAASmE,UAC9Br7C,KAAK+uL,UAAUE,EACrB,MACOjvL,KAAKquL,OAAO3xG,cACZ72E,EAAMyB,MAAQq9B,IAAsB9+B,EAAMyB,MAAQq9B,IAEnD3kC,KAAKquL,OAAOx1G,YAElB,CAOE,SAAAk2G,CAAU3zI,GACR,IAAKp7C,KAAKmuL,MAAO,CAEf,MAAMc,EAAU,IAAIxkJ,GAAK,CACvB9uB,WAAYy/B,EAAK9nB,kBAEnBtzB,KAAKquL,OAAO30G,QAAQu1G,EAC1B,CAEI7zI,EAAK1xC,kBACHw+B,GAAaG,SACbroC,KAAK+tL,6BAGP/tL,KAAKguL,yBAED5yI,EAAK5N,UACPxtC,KAAKquL,OAAOx1G,aACZ74E,KAAKkvL,eAEX,CAOE,WAAAL,CAAYzzI,GACVA,EAAKzxC,qBACHu+B,GAAaG,SACbroC,KAAK+tL,4BAEX,CAME,sBAAAC,GACMhuL,KAAKwhE,iBACPxhE,KAAKquL,OAAOhzI,UAAU5O,YAAYzsC,KAAKk3C,SAASmE,UAAUhO,cAEhE,CAaE,eAAA8hJ,GACE,MAAMh+J,EAAMnxB,KAAKk3C,SACXk3I,EAAQpuL,KAAKquL,OAEnB,IAAKl9J,EAAIurD,eAAiB0xG,EAAM1xG,aAC9B,OAGF,MAAMwD,EAAoD/uD,EAAIhe,UAGxDsC,EADO0b,EAAIkqB,UACG7K,wBAAwB0vC,GAE5C,GAAIlgF,KAAKiuL,aAAe1wG,GAAa9nE,EAAQzV,KAAKiuL,aAEhD,OAEFjuL,KAAKiuL,YAAcx4K,EAEnB,MAAM25K,EACJhB,EAAMj7K,UAIFk8K,EADSjB,EAAM/yI,UACG7K,wBAAwB4+I,GAE1CE,EAAelB,EAAMttI,+BACzBvoC,GAAW9C,IAEP85K,EAAmBnB,EAAMttI,+BAC7BzoC,GAAe5C,IAGX+5K,EAAW5jL,KAAK8L,IAAI43K,EAAa,GAAKC,EAAiB,IACvDE,EAAY7jL,KAAK8L,IAAI43K,EAAa,GAAKC,EAAiB,IAExDG,EAAaN,EAAU,GACvBO,EAAcP,EAAU,GAG5BI,EAAWE,EAAa3L,IACxB0L,EAAYE,EAAc5L,IAC1ByL,EAAWE,EAAa5L,IACxB2L,EAAYE,EAAc7L,GAE1B9jL,KAAKkvL,eACK54K,GAAe+4K,EAAU55K,IACnCzV,KAAK4vL,WAEX,CAOE,YAAAV,GAKE,MAAM/9J,EAAMnxB,KAAKk3C,SACXk3I,EAAQpuL,KAAKquL,OAEbnuG,EAAoD/uD,EAAIhe,UAGxDsC,EADO0b,EAAIkqB,UACG7K,wBAAwB0vC,GAEtC2vG,EAASzB,EAAM/yI,UAKf2zC,EAAQpjF,KAAKqZ,IAAI6+J,KAAyBl4K,KAAKggK,IAErDpxJ,GAAgB/E,EADF,GAAK7J,KAAKC,IAAI,EAAGmjF,EAAQ,GAAK+0F,KAE5C8L,EAAOt9I,YAAYD,GAAkB78B,GACzC,CAOE,SAAAm6K,GACE,MAAMz+J,EAAMnxB,KAAKk3C,SACXk3I,EAAQpuL,KAAKquL,OAEbjzI,EAAOjqB,EAAIkqB,UAEF+yI,EAAM/yI,UAEd3O,kBAAkB0O,EAAKtO,oBAClC,CAME,UAAAgjJ,GACE,MAAM3+J,EAAMnxB,KAAKk3C,SACXk3I,EAAQpuL,KAAKquL,OAEnB,IAAKl9J,EAAIurD,eAAiB0xG,EAAM1xG,aAC9B,OAGF,MAAMwD,EAAoD/uD,EAAIhe,UAExDioC,EAAOjqB,EAAIkqB,UAEXw0I,EAASzB,EAAM/yI,UAEfniC,EAAWlZ,KAAKwhE,gBAAkB,GAAKpmB,EAAK/N,cAE5CgtC,EAAUr6E,KAAKuuL,YACfxuG,EAAM//E,KAAKuuL,YAAY3vG,aACvB5lE,EAASoiC,EAAKxiC,YACdK,EAAamiC,EAAKne,gBAClB8yJ,EAAeF,EAAO5yJ,gBACtBnuB,EAASoxE,EAAQ,GAAKjnE,EAAc82K,EACpChhL,EAAUmxE,EAAQ,GAAKjnE,EAAc82K,EAM3C,GAHA11G,EAAQsE,YAAY3lE,GAGhB+mE,EAAK,CACPA,EAAIjwE,MAAMhB,MAAQA,EAAQ,KAC1BixE,EAAIjwE,MAAMf,OAASA,EAAS,KAC5B,MAAMge,EAAY,UAAY7T,EAAW,OACzC6mE,EAAIjwE,MAAMid,UAAYA,CAC5B,CACA,CAKE,8BAAAiiK,GACMhvL,KAAKgwL,sBAGThwL,KAAKgwL,oBAAsB5oL,EACzBpH,KAAKquL,OACL3pJ,IACC7+B,WACQ7F,KAAKgwL,oBACZhwL,KAAK8vL,YAAY,IAGzB,CAME,YAAAh3I,CAAajzC,GACXA,EAAMhB,iBACN7E,KAAKq6C,eACT,CAKE,aAAAA,GACEr6C,KAAKmK,QAAQmwC,UAAUC,OAAOrE,IAC1Bl2C,KAAKy3C,WACPlnC,GAAYvQ,KAAKs4C,eAAgBt4C,KAAKy4C,QAEtCloC,GAAYvQ,KAAKy4C,OAAQz4C,KAAKs4C,gBAEhCt4C,KAAKy3C,YAAcz3C,KAAKy3C,WAIxB,MAAM22I,EAAQpuL,KAAKquL,OACnB,IAAKruL,KAAKy3C,WAAY,CACpB,GAAI22I,EAAM1xG,aAGR,OAFA18E,KAAKiuL,iBAAcznL,OACnB4nL,EAAMp3I,SAGRo3I,EAAMv1G,aACN74E,KAAKkvL,eACLlvL,KAAKgvL,gCACX,CACA,CAOE,cAAAx0I,GACE,OAAOx6C,KAAK83C,YAChB,CAOE,cAAA+B,CAAehC,GACT73C,KAAK83C,eAAiBD,IAG1B73C,KAAK83C,aAAeD,EACpB73C,KAAKmK,QAAQmwC,UAAUC,OAAO,qBACzB1C,GAAe73C,KAAKy3C,YACvBz3C,KAAKq6C,gBAEX,CASE,YAAAI,CAAa/C,GACN13C,KAAK83C,cAAgB93C,KAAKy3C,aAAeC,GAG9C13C,KAAKq6C,eACT,CAOE,YAAAK,GACE,OAAO16C,KAAKy3C,UAChB,CAOE,iBAAAwqB,GACE,OAAOjiE,KAAKwhE,eAChB,CAOE,iBAAAiB,CAAkBhB,GACZzhE,KAAKwhE,kBAAoBC,IAG7BzhE,KAAKwhE,gBAAkBC,EACuB,IAA1CzhE,KAAKk3C,SAASmE,UAAUhO,gBACtBrtC,KAAKwhE,gBACPxhE,KAAKguL,yBAELhuL,KAAKquL,OAAOhzI,UAAU5O,YAAY,GAEpCzsC,KAAKiuL,iBAAcznL,EACnBxG,KAAKmvL,kBACLnvL,KAAK8vL,cAEX,CAOE,cAAAG,GACE,OAAOjwL,KAAKquL,MAChB,CAOE,MAAAr3I,CAAOK,GACLr3C,KAAKmvL,kBACLnvL,KAAK8vL,YACT,GGwKA1L,GAAGxqG,QAAQj/B,OAASu1I,GACpB9L,GAAGxqG,QAAQu2G,UFpwBX,cAAwBt5I,GAItB,WAAA92C,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhC,MAAMH,EAAUiF,SAASC,cAAc,OACvClF,EAAQ2F,MAAMgnC,cAAgB,OAE9B7xC,MAAM,CACJkF,QAASA,EACT6sC,OAAQ1sC,EAAQ0sC,OAChB51C,OAAQkJ,EAAQlJ,SAMlBpB,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAEL,MAAMuwC,OACkBzxC,IAAtB8D,EAAQ2tC,UACJ3tC,EAAQ2tC,UACR3tC,EAAQ8lL,IACN,eACA,gBAMRpwL,KAAKqwL,cAAgBjhL,SAASC,cAAc,OAC5CrP,KAAKqwL,cAAcp4I,UAAYA,EAAY,SAE3Cj4C,KAAKmK,QAAQ8tC,UAAYA,EAAY,IAAMlC,GAC3C/1C,KAAKmK,QAAQqH,YAAYxR,KAAKqwL,eAM9BrwL,KAAKswL,WAAa,KAMlBtwL,KAAKuwL,eAAiC/pL,IAArB8D,EAAQkmL,SAAyBlmL,EAAQkmL,SAAW,GAMrExwL,KAAKywL,UAAYnmL,EAAQomL,SAMzB1wL,KAAKi5C,kBAAmB,EAMxBj5C,KAAK2wL,oBAAiBnqL,EAMtBxG,KAAKutL,cAAgB,GAErBvtL,KAAK0J,kBAAkBs6K,GAAYhkL,KAAK4wL,qBAExC5wL,KAAK6wL,SAASvmL,EAAQ8a,OAAS,UAM/BplB,KAAK8wL,UAAYxmL,EAAQ8lL,MAAO,EAMhCpwL,KAAK+wL,eAAiBzmL,EAAQ0kF,OAAS,EAMvChvF,KAAKgxL,cAAgB1mL,EAAQi0D,OAAQ,EAMrCv+D,KAAKixL,KAAO3mL,EAAQguG,UAAO9xG,CAC/B,CASE,QAAAud,GACE,OAAO/jB,KAAKiJ,IAAI+6K,GACpB,CAKE,mBAAA4M,GACE5wL,KAAK+5C,gBACT,CAQE,QAAA82I,CAASzrK,GACPplB,KAAK4J,IAAIo6K,GAAY5+J,EACzB,CAOE,MAAA8rK,CAAO54E,GACLt4G,KAAKixL,KAAO34E,CAChB,CAKE,cAAAv+D,GACE,MAAM/R,EAAYhoC,KAAKswL,WAEvB,IAAKtoJ,EAKH,YAJIhoC,KAAKi5C,mBACPj5C,KAAKmK,QAAQ2F,MAAMkqC,QAAU,OAC7Bh6C,KAAKi5C,kBAAmB,IAK5B,MAAMjgC,EAASgvB,EAAUhvB,OACnB2C,EAAaqsB,EAAUrsB,WACvByJ,EAAQplB,KAAK+jB,WACbotK,EAAgC,WAAT/rK,EAAqB,UAAY,IAC9D,IAAIqG,EAAkB/H,GACpB/H,EACAqsB,EAAU/uB,WACVD,EACAm4K,GAGF,MAAMX,EACHxwL,KAAKuwL,WAAavwL,KAAKixL,MAAQ/M,IAAgBA,GAE5CwM,OACelqL,IAAnBxG,KAAKywL,UACAzwL,KAAKywL,WAAazwL,KAAKixL,MAAQ/M,IAAgBA,QAChD19K,EAEN,IAAI4qL,EAAeZ,EAAW/kK,EAC1B4lK,EAAS,GACb,GAAa,WAATjsK,EAAoB,CACtB,MAAMksK,EAAkB5uK,GAAgBzB,QACxCmwK,GAAgBE,EACZF,EAAeE,EAAkB,IACnCD,EAAS,IACT5lK,GAAmB,MACV2lK,EAAeE,GACxBD,EAAS,IACT5lK,GAAmB,IAEnB4lK,EAAS,GAEjB,MAAW,GAAa,YAATjsK,EACLgsK,EAAe,OACjBC,EAAS,KACT5lK,GAAmB,OACV2lK,EAAe,UACxBC,EAAS,KACT5lK,GAAmB,QAEnB4lK,EAAS,KACT5lK,GAAmB,eAEhB,GAAa,YAATrG,EACTqG,GAAmB,KACnB4lK,EAAS,UACJ,GAAa,UAATjsK,EACLgsK,EAAe,MACjBC,EAAS,KACT5lK,GAAmB,KACV2lK,EAAe,MACxBC,EAAS,KACT5lK,GAAmB,KACV2lK,EAAe,GACxBC,EAAS,KACT5lK,GAAmB,KACV2lK,EAAe,IACxBC,EAAS,KAETA,EAAS,KACT5lK,GAAmB,SAEhB,IAAa,MAATrG,EAYT,MAAM,IAAI/c,MAAM,iBAXZ+oL,EAAe,OACjBC,EAAS,KACT5lK,GAAmB,OACV2lK,EAAe,UACxBC,EAAS,KACT5lK,GAAmB,YAEnB4lK,EAAS,KACT5lK,GAAmB,UAI3B,CAEI,IACI2a,EAAOt3B,EAAOyiL,EAEdC,EAAeC,EAHflwL,EAAI,EAAIqK,KAAKoQ,MAAMpQ,KAAKqZ,IAAIurK,EAAW/kK,GAAmB7f,KAAKqZ,IAAI,KAEnEysK,EAAgB,EAEpB,OAAa,CACXH,EAAe3lL,KAAKoQ,MAAMza,EAAI,GAC9B,MAAMse,EAAUjU,KAAKC,IAAI,GAAI0lL,GAG7B,GAFAnrJ,EAAQ69I,IAAiB1iL,EAAI,EAAK,GAAK,GAAKse,EAC5C/Q,EAAQlD,KAAK+R,MAAMyoB,EAAQ3a,GACvByH,MAAMpkB,GAGR,OAFA9O,KAAKmK,QAAQ2F,MAAMkqC,QAAU,YAC7Bh6C,KAAKi5C,kBAAmB,GAG1B,QAAiBzyC,IAAbkqL,GAA0B5hL,GAAS4hL,EAAU,CAC/CtqJ,EAAQsrJ,EACR5iL,EAAQ0iL,EACRD,EAAeE,EACf,KACR,CAAa,GAAI3iL,GAAS0hL,EAClB,MAEFkB,EAAgBtrJ,EAChBorJ,EAAgB1iL,EAChB2iL,EAAuBF,IACrBhwL,CACR,CACI,MAAMssL,EAAO7tL,KAAK8wL,UACd9wL,KAAK2xL,eAAe7iL,EAAOs3B,EAAOirJ,GAClCjrJ,EAAM5oB,QAAQ+zK,EAAe,GAAKA,EAAe,GAAK,IAAMF,EAE5DrxL,KAAKutL,eAAiBM,IACxB7tL,KAAKqwL,cAAcj2I,UAAYyzI,EAC/B7tL,KAAKutL,cAAgBM,GAGnB7tL,KAAK2wL,gBAAkB7hL,IACzB9O,KAAKqwL,cAAcvgL,MAAMhB,MAAQA,EAAQ,KACzC9O,KAAK2wL,eAAiB7hL,GAGnB9O,KAAKi5C,mBACRj5C,KAAKmK,QAAQ2F,MAAMkqC,QAAU,GAC7Bh6C,KAAKi5C,kBAAmB,EAE9B,CASE,cAAA04I,CAAe7iL,EAAOmT,EAAOovK,GAC3B,MAAMO,EAAkB5xL,KAAK6xL,wBACvBC,EACJF,EAAkB,EACdhmL,KAAK+R,MAAM,EAAIi0K,GAAiBG,iBAAmB,OACnD,OAASnmL,KAAK+R,MAAMi0K,GAAiBG,iBACrC/iG,EAAQhvF,KAAK+wL,eACbiB,EAAYljL,EAAQkgF,EACpBijG,EAAa,CAACjyL,KAAKkyL,aAAa,aACtC,IAAK,IAAI3wL,EAAI,EAAGA,EAAIytF,IAASztF,EAAG,CAC9B,MAAM4wL,EACJ5wL,EAAI,GAAM,EAAI,yBAA2B,0BAC3C0wL,EAAWtsL,KAGP,uCAA6BwsL,oBACZH,eAGjBhyL,KAAKkyL,aAAa,aAEjB3wL,EAAI,GAAM,GAAe,IAAVytF,EACZhvF,KAAKoyL,eAAe7wL,EAAGuN,GAAO,EAAOmT,EAAOovK,GAC5C,IACJ,SAEV,CAEIY,EAAWtsL,KAAK3F,KAAKoyL,eAAepjG,EAAOlgF,GAAO,EAAMmT,EAAOovK,IAO/D,OALqBrxL,KAAKgxL,cACtB,4CAA4CliL,SAC5CgjL,EACA,SACA,IACkBG,EAAWnyK,KAAK,GAC1C,CAOE,YAAAoyK,CAAa5+I,GAEX,MAGE,sDAAoBA,WAJG,aAAbA,EAA0B,GAAO,eAOjD,CAWE,cAAA8+I,CAAe7wL,EAAGuN,EAAOujL,EAAQpwK,EAAOovK,GACtC,MAEMiB,GADE,IAAN/wL,EAAU,EAAIqK,KAAK+R,MAAOsE,EAAQjiB,KAAK+wL,eAAkBxvL,EAAI,KAAO,MACjC,IAANA,EAAU,GAAK,IAAM8vL,GAGpD,MAIE,uDANmB,IAAN9vL,GAAU,EAAMuN,EAAQ9O,KAAK+wL,gBAAoB,mBAOzC,IAANxvL,EAAU,OAAS,uBANb,IAANA,EAAU,EAAKuN,EAAQ9O,KAAK+wL,eAAkB,aAQpDsB,EAASvjL,EAAQ,KAAO,aAEjCwjL,EACA,QAEN,CAME,qBAAAT,GASE,OARmBnuK,GACjB1jB,KAAKswL,WAAW30K,WAChB3b,KAAKswL,WAAWr3K,WAChBjZ,KAAKswL,WAAWt3K,OAChB,MAGqB,IAAO,OADlBhZ,KAAKixL,MAAQ/M,GAG7B,CAOE,MAAAltI,CAAOK,GACL,MAAM3W,EAAa2W,EAAS3W,WAI1B1gC,KAAKswL,WAHF5vJ,EAGeA,EAAWsH,UAFX,KAIpBhoC,KAAK+5C,gBACT,GE8WAqqI,GAAGxqG,QAAQr+B,KAAOg3I,GAClBnO,GAAGxqG,QAAQ44G,WDxyBX,cAAyB37I,GAIvB,WAAA92C,CAAYuK,GAGVrF,MAAM,CACJ7D,QAHFkJ,EAAUA,GAAoB,CAAE,GAGdlJ,OAChB+I,QAASiF,SAASC,cAAc,OAChC2nC,OAAQ1sC,EAAQ0sC,SAOlBh3C,KAAKwiC,kBAAoB,GAQzBxiC,KAAKyyL,wBAAqBjsL,EAS1BxG,KAAK0yL,WAAavO,GAMlBnkL,KAAKuiC,UAMLviC,KAAK2yL,aAAe,EAMpB3yL,KAAK4yL,YAAc,EAMnB5yL,KAAK6yL,QAML7yL,KAAK8yL,QAQL9yL,KAAK+yL,WAAa,KAOlB/yL,KAAKgzL,oBAAqB,EAM1BhzL,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,IAErE,MAAM0X,OACkBzxC,IAAtB8D,EAAQ2tC,UAA0B3tC,EAAQ2tC,UAAY,gBAClDg7I,EAAe7jL,SAASC,cAAc,UAC5C4jL,EAAar6I,aAAa,OAAQ,UAClCq6I,EAAah7I,UAAYA,EAAY,UAAYlC,GACjD,MAAMm9I,EAAmBlzL,KAAKmK,QAC9B+oL,EAAiBj7I,UACfA,EAAY,IAAMlC,GAAqB,IAAME,GAC/Ci9I,EAAiB1hL,YAAYyhL,GAE7BC,EAAiB5tL,iBACf28B,GACAjiC,KAAKmzL,oBAAoBjsL,KAAKlH,OAC9B,GAEFkzL,EAAiB5tL,iBACf28B,GACAjiC,KAAKozL,mBAAmBlsL,KAAKlH,OAC7B,GAEFkzL,EAAiB5tL,iBACf28B,GACAjiC,KAAKqzL,kBAAkBnsL,KAAKlH,OAC5B,GAGFkzL,EAAiB5tL,iBACfzF,EACAG,KAAKszL,sBAAsBpsL,KAAKlH,OAChC,GAEFizL,EAAa3tL,iBAAiBzF,EAAiBiF,GAAiB,EACpE,CAWE,MAAAqyC,CAAOhmB,GACLlsB,MAAMkyC,OAAOhmB,GACTA,GACFA,EAAI6lB,QAEV,CAUE,WAAAu8I,GACE,MAAMl9G,EAAYr2E,KAAKmK,QACvB,IAAIqpL,EAAiBn9G,EAAUxmE,YAC3B4jL,EAAkBp9G,EAAUjmE,aAChC,GAAuB,IAAnBojL,GAA4C,IAApBC,EAC1B,OAAQzzL,KAAKgzL,oBAAqB,EAGpC,MAAMU,EAAiB3jL,iBAAiBsmE,GACxCm9G,GACEpiK,WAAWsiK,EAA6B,cACxCtiK,WAAWsiK,EAA4B,aACzCD,GACEriK,WAAWsiK,EAA2B,YACtCtiK,WAAWsiK,EAA8B,eAC3C,MAAMC,EAAoCt9G,EAA2B,kBAC/Du9G,EAAa7jL,iBAAiB4jL,GAC9BE,EACJF,EAAM9jL,YACNuhB,WAAWwiK,EAAwB,aACnCxiK,WAAWwiK,EAAuB,YAC9BE,EACJH,EAAMvjL,aACNghB,WAAWwiK,EAAsB,WACjCxiK,WAAWwiK,EAAyB,cAUtC,OATA5zL,KAAK+yL,WAAa,CAACc,EAAYC,GAE3BN,EAAiBC,GACnBzzL,KAAK0yL,WAAavO,GAClBnkL,KAAK4yL,YAAcY,EAAiBK,IAEpC7zL,KAAK0yL,WAAavO,GAClBnkL,KAAK2yL,aAAec,EAAkBK,GAEhC9zL,KAAKgzL,oBAAqB,CACtC,CAME,qBAAAM,CAAsBztL,GACpB,MAAMu1C,EAAOp7C,KAAKk3C,SAASmE,UAErB04I,EAAmB/zL,KAAKg0L,qBAC5BnuL,EAAMmnC,QAAUhtC,KAAK+yL,WAAW,GAAK,EACrCltL,EAAMonC,QAAUjtC,KAAK+yL,WAAW,GAAK,GAGjC95K,EAAajZ,KAAKi0L,0BAA0BF,GAC5CpnJ,EAAOyO,EAAKvG,mBAAmBuG,EAAKvK,qBAAqB53B,IAE/DmiC,EAAKzN,gBAAgB,CACnBhB,KAAMA,EACNpM,SAAUvgC,KAAK+6C,UACf/M,OAAQliC,IAEd,CAOE,mBAAAqnL,CAAoBttL,GAClB,IAAK7F,KAAKuiC,WAAa18B,EAAMzE,SAAWpB,KAAKmK,QAAQ40G,kBAAmB,CACtE,MAAM50G,EACJnK,KAAKmK,QACN,kBAMD,GALAnK,KAAKk3C,SAASmE,UAAU3G,mBACxB10C,KAAK6yL,QAAUhtL,EAAM2+B,QAAUpT,WAAWjnB,EAAQ2F,MAAM4xC,MACxD1hD,KAAK8yL,QAAUjtL,EAAM4+B,QAAUrT,WAAWjnB,EAAQ2F,MAAM6xC,KACxD3hD,KAAKuiC,WAAY,EAEqB,IAAlCviC,KAAKwiC,kBAAkB3hC,OAAc,CACvC,MAAMqzL,EAAOl0L,KAAKozL,mBACZzxL,EAAM3B,KAAKqzL,kBACXnvJ,EAAMlkC,KAAKk3C,SAAS/S,mBAC1BnkC,KAAKwiC,kBAAkB78B,KACrBmB,EAAOo9B,EAAKjC,GAA8BiyJ,EAAMl0L,MAChD8G,EAAOo9B,EAAKjC,GAA4BtgC,EAAK3B,MAEvD,CACA,CACA,CAQE,kBAAAozL,CAAmBvtL,GACjB,GAAI7F,KAAKuiC,UAAW,CAClB,MAAM9nB,EAAS5U,EAAM2+B,QAAUxkC,KAAK6yL,QAC9Bn4K,EAAS7U,EAAM4+B,QAAUzkC,KAAK8yL,QAC9BiB,EAAmB/zL,KAAKg0L,qBAAqBv5K,EAAQC,GAC3D1a,KAAKyyL,mBACHzyL,KAAKi0L,0BAA0BF,GACjC/zL,KAAKk3C,SAASmE,UAAU/d,cAAct9B,KAAKyyL,mBACjD,CACA,CAOE,iBAAAY,CAAkBxtL,GAChB,GAAI7F,KAAKuiC,UAAW,CACLviC,KAAKk3C,SAASmE,UACtB1G,iBAEL30C,KAAKuiC,WAAY,EACjBviC,KAAK6yL,aAAUrsL,EACfxG,KAAK8yL,aAAUtsL,EACfxG,KAAKwiC,kBAAkB13B,QAAQzD,GAC/BrH,KAAKwiC,kBAAkB3hC,OAAS,CACtC,CACA,CAQE,iBAAAszL,CAAkBtxL,GAChB,MAAMywC,EAAWtzC,KAAKo0L,0BAA0BvxL,GAC1C8wL,EAAoC3zL,KAAKmK,QAAyB,kBAEpEnK,KAAK0yL,YAAcvO,GACrBwP,EAAM7jL,MAAM4xC,KAAO1hD,KAAK4yL,YAAct/I,EAAW,KAEjDqgJ,EAAM7jL,MAAM6xC,IAAM3hD,KAAK2yL,aAAer/I,EAAW,IAEvD,CAYE,oBAAA0gJ,CAAqBj+K,EAAGC,GACtB,IAAIq+K,EAMJ,OAJEA,EADEr0L,KAAK0yL,aAAevO,GACbpuK,EAAI/V,KAAK4yL,YAET58K,EAAIhW,KAAK2yL,aAEbv2K,GAAMi4K,EAAQ,EAAG,EAC5B,CAUE,yBAAAJ,CAA0B3gJ,GAExB,OADWtzC,KAAKk3C,SAASmE,UAAU7J,+BAC5BtuC,CAAG,EAAIowC,EAClB,CAWE,yBAAA8gJ,CAA0BvxL,GAExB,OAAOuZ,GAAM,EADFpc,KAAKk3C,SAASmE,UAAU3J,+BAClBxuC,CAAGL,GAAM,EAAG,EACjC,CAOE,MAAAm0C,CAAOK,GACL,IAAKA,EAAS3W,WACZ,OAEF,IAAK1gC,KAAKgzL,qBAAuBhzL,KAAKuzL,cACpC,OAEF,MAAM1wL,EAAMw0C,EAAS3W,WAAWsH,UAAU/uB,WAC1CjZ,KAAKyyL,mBAAqB5vL,EAC1B7C,KAAKm0L,kBAAkBtxL,EAC3B,GCgdAuhL,GAAGxqG,QAAQ06G,aCxzBX,cAA2Bz9I,GAIzB,WAAA92C,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhCrF,MAAM,CACJkF,QAASiF,SAASC,cAAc,OAChCjO,OAAQkJ,EAAQlJ,SAOlBpB,KAAKyV,OAASnL,EAAQmL,OAASnL,EAAQmL,OAAS,KAEhD,MAAMwiC,OACkBzxC,IAAtB8D,EAAQ2tC,UAA0B3tC,EAAQ2tC,UAAY,iBAElDO,OAA0BhyC,IAAlB8D,EAAQkuC,MAAsBluC,EAAQkuC,MAAQ,IACtDN,OACiB1xC,IAArB8D,EAAQ4tC,SAAyB5tC,EAAQ4tC,SAAW,gBAChDnU,EAAS30B,SAASC,cAAc,UACtC00B,EAAO6U,aAAa,OAAQ,UAC5B7U,EAAO8U,MAAQX,EACfnU,EAAOvyB,YACY,iBAAVgnC,EAAqBppC,SAAS2sC,eAAevD,GAASA,GAG/DzU,EAAOz+B,iBACLzF,EACAG,KAAK84C,aAAa5xC,KAAKlH,OACvB,GAGF,MAAM+4C,EACJd,EAAY,IAAMlC,GAAqB,IAAME,GACzC9rC,EAAUnK,KAAKmK,QACrBA,EAAQ8tC,UAAYc,EACpB5uC,EAAQqH,YAAYuyB,EACxB,CAME,YAAA+U,CAAajzC,GACXA,EAAMhB,iBACN7E,KAAKu0L,oBACT,CAKE,kBAAAA,GACE,MACMn5I,EADMp7C,KAAKk3C,SACAmE,UACX5lC,EAAUzV,KAAKyV,OAEjB+Y,GAAexuB,KAAKyV,OAAQ2lC,EAAK9nB,iBADjC8nB,EAAK9nB,gBAAgBzX,YAEzBu/B,EAAK7I,YAAYD,GAAkB78B,GACvC,GD0vBA2uK,GAAGxqG,QAAQx9B,SAAW,CAAE,EACxBgoI,GAAGxqG,QAAQx9B,SAASA,SAAWo4I,GAC/BpQ,GAAGhuK,WAAa,CAAE,EAClBguK,GAAGhuK,WAAWmK,IAAMk0K,GACpBrQ,GAAGhuK,WAAWoK,gBAAkBk0K,GAChCtQ,GAAGhuK,WAAWwK,iBAAmB+zK,GACjCvQ,GAAGhuK,WAAWw+K,ehQ5sBP,SAAwB1zK,GAC7B,OAAA,SAKY9K,GACR,OAAOiM,GAAWjM,EAAY8K,EAEpC,CACA,EgQmsBAkjK,GAAGhuK,WAAW2K,oBAAsB8zK,GACpCzQ,GAAGhuK,WAAWwI,SAAWk2K,GACzB1Q,GAAGhuK,WAAWlU,OAAS6yL,GACvB3Q,GAAGhuK,WAAWoL,OAASwzK,GACvB5Q,GAAGhuK,WAAWmM,cAAgB0yK,GAC9B7Q,GAAGhuK,WAAWyL,OAASqzK,GACvB9Q,GAAGhuK,WAAW6L,MAAQkzK,GACtB/Q,GAAGhuK,WAAWkG,gBAAkB84K,GAChChR,GAAGhuK,WAAWgM,yBAA2BizK,GACzCjR,GAAGhuK,WAAWk/K,ahQ7fP,SAAsBl/K,EAAY8K,GACvC,OAAI9K,EAEA2K,GAAoB,KAAM3K,EAAW,GAAI8K,GACzC,IACAH,GAAoB,KAAM3K,EAAW,GAAI8K,GAGtC,EACT,EgQqfAkjK,GAAGhuK,WAAWiM,WAAakzK,GAC3BnR,GAAGhuK,WAAWsF,MAAQ85K,GACtBpR,GAAGqR,IAAM,CAAE,EACXrR,GAAGqR,IAAIv/I,gBAAkBw/I,GACzBtR,GAAGqR,IAAIx/I,cAAgB0/I,GACvBvR,GAAGqR,IAAI5/I,aAAe+/I,GACtBxR,GAAGqR,IAAI3/I,iBAAmB+/I,GAC1BzR,GAAGqR,IAAI1/I,mBAAqB+/I,GAC5B1R,GAAGqR,IAAIz/I,kBAAoB+/I,GAC3B3R,GAAGqR,IAAIn/I,kBAAoB0/I,GAC3B5R,GAAG6R,IAAM,CAAE,EACX7R,GAAG6R,IAAIpnL,sBAAwBqnL,GAC/B9R,GAAG6R,IAAIzmL,yBAA2B2mL,GAClC/R,GAAG6R,IAAI9lL,YAAcimL,GACrBhS,GAAG6R,IAAIrmL,WAAaymL,GACpBjS,GAAG6R,IAAIxmL,cAAgB6mL,GACvBlS,GAAG6R,IAAIplL,eAAiB0lL,GACxBnS,GAAG6R,IAAIjlL,gBAAkBwlL,GACzBpS,GAAG6R,IAAI1lL,YAAckmL,GACrBrS,GAAGp2I,OAAS,CAAE,EACdo2I,GAAGp2I,OAAOtiC,OAASgrL,EACnBtS,GAAGp2I,OAAOliC,QAAU6qL,GACpBvS,GAAGp2I,OAAOjiC,SAAW6qL,GACrBxS,GAAGp2I,OAAOhiC,OAAS6qL,GACnBzS,GAAGp2I,OAAO8oJ,U7Q10BH,SAAmBnrL,GACxB,OAAIA,EAAI,GACCI,GAAS,EAAIJ,GAEf,EAAII,GAAS,GAAKJ,EAAI,IAC/B,E6Qs0BAy4K,GAAGhB,OAAS,CAAE,EACdgB,GAAGhB,OAAOr9K,MAAQgxL,EAClB3S,GAAGhB,OAAOr9K,MAAMlB,erRzzBT,SAAwBE,GAC7BA,EAAIF,gBACN,EqRwzBAu/K,GAAGhB,OAAOr9K,MAAMjB,gBAAkBkyL,EAClC5S,GAAGhB,OAAO91B,UAAY,CAAE,EACxB82B,GAAGhB,OAAO91B,UAAUA,UAAY2pC,GAChC7S,GAAGhB,OAAOp+K,OAASkyL,EACnB9S,GAAGhB,OAAO7iI,UAAY,CAAE,EACxB6jI,GAAGhB,OAAO7iI,UAAUtG,IAAMk9I,GAC1B/S,GAAGhB,OAAO7iI,UAAU/C,WAAa45I,GACjChT,GAAGhB,OAAO7iI,UAAU3C,iBAAmBy5I,GACvCjT,GAAGhB,OAAO7iI,UAAUjC,OAASg5I,GAC7BlT,GAAGhB,OAAO7iI,UAAUg3I,MtMnxBC,SAAU16I,GAC7B,OAAOA,EAAgBn4C,MAAQ08B,GAAoBE,KACrD,EsMkxBA8iJ,GAAGhB,OAAO7iI,UAAUi3I,YtMvtBO,SAAU36I,GACnC,OAAOA,EAAgBn4C,MAAQ08B,GAAoBG,QACrD,EsMstBA6iJ,GAAGhB,OAAO7iI,UAAU1C,MAAQ45I,GAC5BrT,GAAGhB,OAAO7iI,UAAUnC,kBAAoBs5I,GACxCtT,GAAGhB,OAAO7iI,UAAUhC,kBAAoBo5I,GACxCvT,GAAGhB,OAAO7iI,UAAUvB,UAAY44I,GAChCxT,GAAGhB,OAAO7iI,UAAU/B,MAAQq5I,GAC5BzT,GAAGhB,OAAO7iI,UAAU7B,eAAiBo5I,GACrC1T,GAAGhB,OAAO7iI,UAAUw3I,QtM3lBG,SAAUl7I,GAC/B,MAAMm7I,EAAan7I,EAAgBjc,cAEnC,OAAOo3J,aAAsBh0J,cAA2C,QAA3Bg0J,EAAW/4I,WAC1D,EsMwlBAmlI,GAAGhB,OAAO7iI,UAAU5B,oBAAsBs5I,GAC1C7T,GAAGhB,OAAO7iI,UAAU23I,wBtMhsBmB,SAAUr7I,GAC/C,MAAMjc,EAAgBic,EAAgBjc,cACtC,OACGA,EAAc6c,SACd5vC,GAAM+yB,EAAc8c,QAAU9c,EAAc+c,WAC5C/c,EAAcyc,QAEnB,EsM0rBA+mI,GAAGhB,OAAO7iI,UAAU43I,YtMvvBO,SAAUt7I,GACnC,MAA+B,eAAxBA,EAAgBn4C,IACzB,EsMsvBA0/K,GAAGhB,OAAO7iI,UAAUrB,cAAgBk5I,GACpChU,GAAGhB,OAAO7iI,UAAU3B,aAAey5I,GACnCjU,GAAGhB,OAAO7iI,UAAU9B,YAAc65I,GAClClU,GAAGhB,OAAO7iI,UAAU1B,kBAAoB05I,GACxCnU,GAAGhB,OAAO7iI,UAAUi4I,UtMlnBK,SAAU37I,GACjC,MAAMm7I,EAAan7I,EAAgBjc,cAEnC,OACEo3J,aAAsBh0J,cAA2C,UAA3Bg0J,EAAW/4I,WAErD,EsM6mBAmlI,GAAGhB,OAAOt8K,OAAS2xL,EACnBrU,GAAGhB,OAAOh8K,WAAasxL,EACvBtU,GAAGhB,OAAO/7K,cAAgBsxL,EAC1BvU,GAAGwU,KAAO,CAAE,EACZxU,GAAGwU,KAAKC,IAAM,CAAE,EAChBzU,GAAGwU,KAAKC,IAAI7/H,gBAAkB8/H,GAC9B1U,GAAGwU,KAAKC,IAAI9/H,qBAAuBggI,GACnC3U,GAAGwU,KAAKngI,WAAa,CAAE,EACvB2rH,GAAGwU,KAAKngI,WAAWjG,QAAUwmI,GAC7B5U,GAAGwU,KAAKngI,WAAWvG,YAAc+mI,GACjC7U,GAAGwU,KAAKngI,WAAWpF,eAAiB6lI,GACpC9U,GAAGwU,KAAKngI,WAAWpG,UAAY8mI,GAC/B/U,GAAGwU,KAAKngI,WAAWtF,kBAAoBimI,GACvChV,GAAGwU,KAAKngI,WAAW4gI,S/KhyBK,E+KiyBxBjV,GAAGwU,KAAKngI,WAAWnG,gBAAkBgnI,GACrClV,GAAGwU,KAAKngI,WAAWtG,WAAaonI,GAChCnV,GAAGwU,KAAKngI,WAAWrE,IAAMolI,GACzBpV,GAAGwU,KAAKngI,WAAWlG,SAAWknI,GAC9BrV,GAAGwU,KAAKngI,WAAWrG,WAAasnI,GAChCtV,GAAGwU,KAAKngI,WAAWI,oBAAsB8gI,GACzCvV,GAAGwU,KAAKngI,WAAW3F,aAAe8mI,GAClCxV,GAAGwU,KAAKngI,WAAWxF,OAAS4mI,GAC5BzV,GAAGwU,KAAKngI,WAAWlF,kBAAoBumI,GACvC1V,GAAGwU,KAAKngI,WAAWshI,a/K3uBZ,SAAsBC,EAASC,GACpC,SAAUD,EAAUC,EACtB,E+K0uBA7V,GAAGwU,KAAKngI,WAAW7E,MAAQsmI,GAC3B9V,GAAGwU,KAAKngI,WAAW9F,SAAWwnI,GAC9B/V,GAAGwU,KAAKwB,IAAM,CAAE,EAChBhW,GAAGwU,KAAKwB,IAAI9lD,yBAA2B+lD,GACvCjW,GAAGwU,KAAKwB,IAAI7lD,4BAA8B+lD,GAC1ClW,GAAGwU,KAAKwB,IAAI/lD,sBAAwBkmD,GACpCnW,GAAGwU,KAAKwB,IAAI5lD,qBAAuBgmD,GACnCpW,GAAGwU,KAAKwB,IAAI5mD,YAAcinD,GAC1BrW,GAAGwU,KAAKwB,IAAIphI,gBAAkB0hI,GAC9BtW,GAAGwU,KAAKwB,IAAI3mD,YAAcknD,GAC1BvW,GAAGwU,KAAKwB,IAAIvmD,0BAA4B+mD,GACxCxW,GAAGwU,KAAKwB,IAAIlmD,sBAAwB2mD,GACpCzW,GAAGwU,KAAKwB,IAAI7mD,aAAeunD,GAC3B1W,GAAGwU,KAAKwB,IAAI1mD,WAAaqnD,GACzB3W,GAAGwU,KAAKwB,IAAIrmD,aAAeinD,GAC3B5W,GAAGwU,KAAKwB,IAAIpmD,uBAAyBinD,GACrC7W,GAAG3uK,OAAS,CAAE,EACd2uK,GAAG3uK,OAAO0F,eAAiB+/K,GAC3B9W,GAAG3uK,OAAO+B,oBAAsB2jL,GAChC/W,GAAG3uK,OAAOF,eAAiB6lL,GAC3BhX,GAAG3uK,OAAOG,OAASylL,GACnBjX,GAAG3uK,OAAOhB,MAAQ6mL,GAClBlX,GAAG3uK,OAAOK,yBAA2BylL,GACrCnX,GAAG3uK,OAAOU,mBAAqBqlL,GAC/BpX,GAAG3uK,OAAOa,eAAiBmlL,GAC3BrX,GAAG3uK,OAAOY,WAAaqlL,GACvBtX,GAAG3uK,OAAOgB,uBAAyBklL,GACnCvX,GAAG3uK,OAAOC,YAAckmL,GACxBxX,GAAG3uK,OAAOuB,eAAiB6kL,GAC3BzX,GAAG3uK,OAAOwB,oBAAsB6kL,GAChC1X,GAAG3uK,OAAOyB,6BAA+B6kL,GACzC3X,GAAG3uK,OAAOumL,8BrQ/tBH,SAAuCxmL,EAAaK,GAEzD,OAAO8B,GADQV,GAAoBpB,GACFL,EACnC,EqQ6tBA4uK,GAAG3uK,OAAO0B,kCAAoC8kL,GAC9C7X,GAAG3uK,OAAOymL,wBrQpsBH,SAAiCpkL,EAAOjC,GAE7C,OAAOgC,GADQZ,GAAoBpB,GACRiC,EAC7B,EqQksBAssK,GAAG3uK,OAAOvT,OAASi6L,GACnB/X,GAAG3uK,OAAO5T,OAASu6L,GACnBhY,GAAG3uK,OAAOE,iBAAmB0mL,GAC7BjY,GAAG3uK,OAAOkC,kBAAoB2kL,GAC9BlY,GAAG3uK,OAAO8B,sBAAwBglL,GAClCnY,GAAG3uK,OAAOoC,YAAc2kL,GACxBpY,GAAG3uK,OAAOmC,SAAW6kL,GACrBrY,GAAG3uK,OAAOwC,cAAgBykL,GAC1BtY,GAAG3uK,OAAO+C,QAAUmkL,GACpBvY,GAAG3uK,OAAO2C,cAAgBwkL,GAC1BxY,GAAG3uK,OAAO4C,eAAiBwkL,GAC3BzY,GAAG3uK,OAAOmD,UAAYkkL,GACtB1Y,GAAG3uK,OAAOoD,UAAYkkL,GACtB3Y,GAAG3uK,OAAOunL,gBrQreH,SAAyBzmL,EAASC,GACvC,MAAME,EAAO9K,KAAKmM,IAAIxB,EAAQ,GAAIC,EAAQ,IACpCG,EAAO/K,KAAKmM,IAAIxB,EAAQ,GAAIC,EAAQ,IAG1C,OAFa5K,KAAKoM,IAAIzB,EAAQ,GAAIC,EAAQ,IAE3BE,IADF9K,KAAKoM,IAAIzB,EAAQ,GAAIC,EAAQ,IACXG,EACjC,EqQgeAytK,GAAG3uK,OAAOsD,kBAAoBkkL,GAC9B7Y,GAAG3uK,OAAOkD,UAAYukL,GACtB9Y,GAAG3uK,OAAO2E,gBAAkB+iL,GAC5B/Y,GAAG3uK,OAAO2nL,oBrQ1ZH,SAA6B7mL,EAASC,GAE3C,OAAOgC,GADc4B,GAAgB7D,EAASC,GAEhD,EqQwZA4tK,GAAG3uK,OAAO4nL,UrQ7WH,SAAmB5nL,GACxB,OAAOiD,GAASjD,GAAUkD,GAAUlD,EACtC,EqQ4WA2uK,GAAG3uK,OAAOkE,mBAAqB2jL,GAC/BlZ,GAAG3uK,OAAOtC,QrQrWH,SAAiBsC,GACtB,MAAO,CAACA,EAAO,GAAKA,EAAO,GAAIA,EAAO,GAAKA,EAAO,GACpD,EqQoWA2uK,GAAG3uK,OAAO8C,WAAaglL,GACvBnZ,GAAG3uK,OAAO6C,YAAcklL,GACxBpZ,GAAG3uK,OAAOiD,SAAW+kL,GACrBrZ,GAAG3uK,OAAO6E,WAAaojL,GACvBtZ,GAAG3uK,OAAOkF,kBAAoBgjL,GAC9BvZ,GAAG3uK,OAAOjR,QAAUo5L,GACpBxZ,GAAG3uK,OAAO8E,eAAiBsjL,GAC3BzZ,GAAG3uK,OAAO+E,gBAAkBsjL,GAC5B1Z,GAAG3uK,OAAOwG,cAAgB8hL,GAC1B3Z,GAAG3uK,OAAOiG,MAAQsiL,GAClB5Z,GAAG6Z,cAAgB,CAAE,EACrB7Z,GAAG6Z,cAAcr9G,gBAAkBs9G,GACnC9Z,GAAG6Z,cAAcE,mBxJj0BV,SAA4BC,GACjCz9G,GAAkBy9G,CACpB,EwJg0BAha,GAAG6Z,cAAcj9G,IAAMq9G,GACvBja,GAAG5iK,OAAS,CAAE,EACd4iK,GAAG5iK,OAAO1N,QAAUwqL,GACpBla,GAAG5iK,OAAO1N,QAAQy7I,eAAiBgvC,GACnCna,GAAG5iK,OAAO1N,QAAQu7I,oBAAsBmvC,GACxCpa,GAAG5iK,OAAO1N,QAAQq7I,2BAA6BsvC,GAC/Cra,GAAG5iK,OAAO1N,QAAQg7I,6BAA+B4vC,GACjDta,GAAG5iK,OAAOm9K,I7BlzBV,cAAkBnvC,GAIhB,WAAAzvJ,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAKhCtK,KAAK4hF,eAAiBtuD,GAAc,aAMpCtzB,KAAK4+L,gBAAkBt0L,EAAQu0L,cACnC,CAME,qBAAAC,CAAsBpkH,GACfA,IACHA,EAAW,IAEb,IAAK,IAAIn5E,EAAI,EAAG4E,EAAKu0E,EAAS75E,OAAQU,EAAI4E,IAAM5E,EAAG,CACjD,MAAMkoE,EAAUiR,EAASn5E,GACzB,GAAIvB,KAAK4+L,gBAAiB,CACxB,MAAMG,EAAiBt1H,EAAQxgE,IAAI,oBAAsB,KACzDjJ,KAAK4+L,gBAAgBn1H,EAASs1H,EACtC,CACMt1H,EAAQ7/D,IAAI,uBAAmBpD,EACrC,CACA,CAcE,YAAAw4L,CAAaj1L,GACX,OAAKA,EAGiB,iBAAXA,EACF/J,KAAKi/L,yBAAyBrrI,GAAM7pD,IAEzC+iH,GAAW/iH,GACN/J,KAAKi/L,yBAAwB,GAE/Bj/L,KAAKk/L,qBAAqBn1L,GARxB,IASb,CAME,wBAAAk1L,CAAyB/6J,GACvB,IAAK,IAAI5iC,EAAyB4iC,EAAc,WAAG5iC,EAAGA,EAAIA,EAAEurH,YAC1D,GAAIvrH,EAAEkrH,WAAaC,KAAKojC,aAAc,CACpC,MAAMsvC,EAAWn/L,KAAKk/L,qBAAoB,GAC1C,GAAIC,EACF,OAAOA,CAEjB,CAEI,OAAO,IACX,CAME,oBAAAD,CAAqBpuL,GACnB,IAAKshJ,GAAe1sJ,SAASoL,EAAKm7G,cAChC,OAAO,KAET,IAAK,IAAI3qH,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAC5C,GACEmjC,GAAe1sJ,SAASpE,EAAE2qH,eACV,aAAhB3qH,EAAEmsH,UAEF,OAAOyB,GAAgB,CAAE,EAAEikC,GAAkB7xJ,EAAG,IAGpD,OAAO,IACX,CAQE,mBAAAouJ,CAAoB5+I,EAAMxG,GACxB,IAAK8nJ,GAAe1sJ,SAASoL,EAAKm7G,cAChC,OAAO,KAET,MAAMmzE,EAAgB/sC,GAAevhJ,EAAK28G,WAC1C,IAAK2xE,EACH,OAAO,KAET,MAAM31H,EAAU21H,EAActuL,EAAM,CAAC9Q,KAAKuuJ,eAAez9I,EAAMxG,KAC/D,OAAKm/D,GAGLzpE,KAAK8+L,sBAAsB,CAACr1H,IACrBA,GAHE,IAIb,CAQE,oBAAAmmF,CAAqB9+I,EAAMxG,GACzB,IAAK8nJ,GAAe1sJ,SAASoL,EAAKm7G,cAChC,MAAO,GAET,GAAsB,OAAlBn7G,EAAK28G,UAAoB,CAE3B,MAAM/yC,EAAWw0C,GAAgB,GAAI0jC,GAAa9hJ,EAAM,CACtD9Q,KAAKuuJ,eAAez9I,EAAMxG,KAE5B,OAAIowE,GACF16E,KAAK8+L,sBAAsBpkH,GACpBA,GAEF,EACb,CACI,MAAO,EACX,CAaE,iBAAA01E,CAAkB11E,EAAUpwE,GAC1BA,EAAUtK,KAAKwuJ,aAAalkJ,GAE5B,MAAM+0L,EAAMrzE,GAAgB,oCAAqC,OAmBjE,OAjBAqzE,EAAIxoC,eADa,gCACY,YAAa9qC,IAC1CszE,EAAIxoC,eACF9qC,GACA,qBA5TJ,+EA+TEszE,EAAIzmJ,aAAa,UAAW,OAC5BymJ,EAAIzmJ,aAAa,UAAW,cAE5Bu2E,GAEJ,CAAQr+G,KAAMuuL,GACRnrC,GACAsC,GACA97E,EACA,CAACpwE,IAEI+0L,CACX,G6BgoBAjb,GAAG5iK,OAAO89K,Q3Bp8BV,cAAsBxoC,GAIpB,WAAA/2J,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhCrF,QAKAjF,KAAK4hF,eAAiBtuD,GACpBhpB,EAAQs3E,eAAiBt3E,EAAQs3E,eAAiB,aAGhDt3E,EAAQk3E,oBAIVxhF,KAAKquJ,yBAA2B/6H,GAAchpB,EAAQk3E,oBAGpDl3E,EAAQgkJ,eACVtuJ,KAAKsuJ,aAAehkJ,EAAQgkJ,cAQ9BtuJ,KAAKiU,cAAgB3J,EAAQuoK,aAO7B7yK,KAAKu/L,qBAAuBj1L,EAAQk1L,oBAEpCx/L,KAAKq6G,oBAAsB,CACzB,uBACA,2BAEN,CASE,qBAAA08C,CAAsBzyJ,EAAQgG,GAI5B,IAAIm1L,EAAiB,KAEnBA,EADqB,YAAnBn7L,EAAa,KACiC,EAE/B,CACfI,KAAQ,UACR4P,SAA4C,EAC5CE,WAAc,MAIlB,MAAMF,EAAWijJ,GAAqBkoC,EAAyB,UAC/D,GAAIz/L,KAAKsuJ,eAAiB9qD,GACxB,OACE6rD,GACE,CACE/6I,WACAvH,GAAI0yL,EAAmB,GACvBjrL,WAAYirL,EAA2B,YAEzCn1L,GAKN,MAAMm/D,EAAU,IAAI31D,GAepB,OAdI9T,KAAKiU,cACPw1D,EAAQ/0D,gBAAgB1U,KAAKiU,eACpBjU,KAAKu/L,sBAAwBE,EAA8B,eACpEh2H,EAAQ/0D,gBAAgB+qL,EAA8B,eAExDh2H,EAAQl1D,YAAYg7I,GAAej7I,EAAUhK,IAEzC,OAAQm1L,GACVh2H,EAAQt0D,MAAMsqL,EAAmB,IAG/BA,EAA2B,YAC7Bh2H,EAAQzgE,cAAcy2L,EAA2B,YAAG,IAG1D,CASE,sBAAAxoC,CAAuB3yJ,EAAQgG,GAE7B,IAAIowE,EAAW,KACf,GAA8B,sBAFsB,EAE5B,KAA2B,CAIjDA,EAAW,GACX,MAAMglH,EAJwB,EAI6B,SAC3D,IAAK,IAAIn+L,EAAI,EAAG4E,EAAKu5L,EAAgB7+L,OAAQU,EAAI4E,IAAM5E,EAAG,CACxD,MAAMwgK,EAAgB/hK,KAAK+2J,sBACzB2oC,EAAgBn+L,GAChB+I,GAEGy3J,GAGLrnF,EAAS/0E,KAAKo8J,EACtB,CACA,MACMrnF,EAAW,CAAC16E,KAAK+2J,sBAAsBzyJ,EAAQgG,IAEjD,OAA0CowE,EAAS2+C,MACvD,CASE,sBAAA69B,CAAuB5yJ,EAAQgG,GAC7B,OAuKJ,SAAsBhG,EAAQgG,GAC5B,MAAMq1L,EAAiBpoC,GAAqBjzJ,GAC5C,OAAOirJ,GAAeowC,EAAgBr1L,EACxC,CA1KWokJ,CAAapqJ,EAAQgG,EAChC,CAQE,wBAAA6sJ,CAAyB7yJ,GACvB,MAAMs2G,EAAMt2G,EAAY,IACxB,IAAIqX,EACJ,GAAIi/F,EACF,GAAmB,QAAfA,EAAU,KACZj/F,EAAa2X,GAAcsnF,EAAgB,WAAQ,UAC9C,IAAoB,SAAhBA,EAAU,KAGnB,MAAM,IAAIvyG,MAAM,oBAFhBsT,EAAa2X,GAAc,QAAUsnF,EAAgB,WAAQ,KAGrE,MAEMj/F,EAAa3b,KAAK4hF,eAEpB,QACJ,CAWE,kBAAAw1E,CAAmB3tF,EAASn/D,GAC1BA,EAAUtK,KAAKwuJ,aAAalkJ,GAG5B,MAAMhG,EAAS,CACbI,KAAQ,UACR4P,SAAU,KACVE,WAAY,MAGRzH,EAAK08D,EAAQ10D,QAKnB,QAJWvO,IAAPuG,IACFzI,EAAOyI,GAAKA,IAGT08D,EAAQlgE,gBACX,OAAOjF,EAGT,MAAMkQ,EAAai1D,EAAQrgE,gBACrBkL,EAAWm1D,EAAQ70D,cAWzB,OAVIN,IACFhQ,EAAOgQ,SAAWu6I,GAAcv6I,EAAUhK,UAEnCkK,EAAWi1D,EAAQ90D,oBAGvBnQ,EAAQgQ,KACXlQ,EAAOkQ,WAAaA,GAGflQ,CACX,CAWE,mBAAA+yJ,CAAoB38E,EAAUpwE,GAC5BA,EAAUtK,KAAKwuJ,aAAalkJ,GAC5B,MAAMs1L,EAAU,GAChB,IAAK,IAAIr+L,EAAI,EAAG4E,EAAKu0E,EAAS75E,OAAQU,EAAI4E,IAAM5E,EAC9Cq+L,EAAQj6L,KAAK3F,KAAKo3J,mBAAmB18E,EAASn5E,GAAI+I,IAEpD,MAAO,CACL5F,KAAM,oBACNg2E,SAAUklH,EAEhB,CAWE,mBAAAtoC,CAAoBhjJ,EAAUhK,GAC5B,OAAOukJ,GAAcv6I,EAAUtU,KAAKwuJ,aAAalkJ,GACrD,G2BmtBA85K,GAAG5iK,OAAOq+K,IzBl8BV,cAAkBrnC,GAIhB,WAAAz4J,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAKhCtK,KAAK4hF,eAAiBtuD,GAAc,aAMpCtzB,KAAK8/L,cAAgBx1L,EAAQw1J,aAAex1J,EAAQw1J,aAAe,OAMnE9/J,KAAK+/L,MAAO,EAMZ//L,KAAKggM,MAAO,EAMZhgM,KAAKigM,UAAY,EAMjBjgM,KAAKkgM,SAAW,EAMhBlgM,KAAKmgM,UAAY,EAMjBngM,KAAKogM,SAAW,CACpB,CASE,mBAAA3nC,CAAoBl6F,EAAMj0D,GACxB,MAAMw1J,EAAe9/J,KAAK8/L,cACpBluF,EAAQrzC,EAAKp+C,MAAMi5I,IAEnB5kJ,EAAa,CAAE,EACf4C,EAAkB,GACxB,IAII7V,EAAG4E,EAJH6tJ,EAAO,IACPqsC,EAAQ,EACRC,EAAM,EACNC,GAAiB,EAErB,IAAKh/L,EAAI,EAAG4E,EAAKyrG,EAAM/wG,OAAQU,EAAI4E,IAAM5E,EAAG,CAC1C,MAAM64H,EAAOxoB,EAAMrwG,GACnB,IAAIyb,EACJ,GAAsB,KAAlBo9G,EAAK74G,OAAO,IAEd,GADAvE,EAAIg8I,GAAY/iE,KAAKmkC,GACjBp9G,EAAG,CACL,MAAMwjL,EAAOxwL,SAASgN,EAAE,GAAI,IACtByjL,EAASzwL,SAASgN,EAAE,GAAI,IACxB0jL,EAAS1wL,SAASgN,EAAE,GAAI,IAC9B,IAAIhH,EAAIhG,SAASgN,EAAE,GAAI,IAAMhN,SAASgN,EAAE,GAAI,IAAM,IAC9Chd,KAAK+/L,OACP/pL,GACEhG,SAASoqH,EAAK52H,MAAMxD,KAAKigM,UAAWjgM,KAAKkgM,UAAW,IACpD,IACA,KAAOlgM,KAAKkgM,SAAWlgM,KAAKigM,YAEpB,KAARjjL,EAAE,KACJhH,GAAKA,GAEP,IAAID,EAAI/F,SAASgN,EAAE,GAAI,IAAMhN,SAASgN,EAAE,GAAI,IAAM,IAWlD,GAVIhd,KAAKggM,OACPjqL,GACE/F,SAASoqH,EAAK52H,MAAMxD,KAAKmgM,UAAWngM,KAAKogM,UAAW,IACpD,IACA,KAAOpgM,KAAKogM,SAAWpgM,KAAKmgM,YAEpB,KAARnjL,EAAE,KACJjH,GAAKA,GAEPqB,EAAgBzR,KAAKoQ,EAAGC,GACJ,QAAhB8pJ,EAAwB,CAC1B,IAAIh2H,EAEFA,EADkB,OAAhBg2H,EACE9vJ,SAASgN,EAAE,IAAK,IACK,cAAhB8iJ,EACL9vJ,SAASgN,EAAE,IAAK,IAEhB,EAEN5F,EAAgBzR,KAAKmkC,EACjC,CACU,IAAI2mH,EAAWtwH,KAAKwgK,IAAI3sC,EAAMqsC,EAAOC,EAAKE,EAAMC,EAAQC,GAEpDjwC,EAAW8vC,IACb9vC,EAAWtwH,KAAKwgK,IAAI3sC,EAAMqsC,EAAOC,EAAM,EAAGE,EAAMC,EAAQC,IAE1DtpL,EAAgBzR,KAAK8qJ,EAAW,KAChC8vC,EAAe9vC,CACzB,OACa,GAAsB,KAAlBr2B,EAAK74G,OAAO,GACrBvE,EAAIm8I,GAAoBljE,KAAKmkC,GACzBp9G,GACFsjL,EAAMtwL,SAASgN,EAAE,GAAI,IACrBqjL,EAAQrwL,SAASgN,EAAE,GAAI,IAAM,EAC7Bg3I,EAAO,IAAOhkJ,SAASgN,EAAE,GAAI,MAE7BA,EAAIk8I,GAAgBjjE,KAAKmkC,GACrBp9G,GACFsjL,EAAMtwL,SAASgN,EAAE,GAAI,IACrBqjL,EAAQrwL,SAASgN,EAAE,GAAI,IAAM,EAC7Bg3I,EAAO,IAAOhkJ,SAASgN,EAAE,GAAI,MAE7BA,EAAIi8I,GAAYhjE,KAAKmkC,GACjBp9G,IACFxI,EAAWwI,EAAE,IAAMA,EAAE,GAAG+zI,eAIzB,GAAsB,KAAlB32B,EAAK74G,OAAO,GAAW,CAChC,MAAMq/K,EAAa5wL,SAASoqH,EAAK52H,MAAM,EAAG,GAAI,IAC9C,IAAK,IAAIjC,EAAI,EAAGA,EAAIq/L,EAAYr/L,IAAK,CACnC,MAAMs/L,EAAUzmE,EAAK52H,MAAM,EAAQ,EAAJjC,EAAO,GAAS,EAAJA,GAC3C,GAAgB,QAAZs/L,GAAiC,QAAZA,EAAmB,CAE1C,MAAMC,EAAW9wL,SAASoqH,EAAK52H,MAAM,EAAQ,EAAJjC,EAAO,EAAQ,EAAJA,GAAQ,IAAM,EAC5Dw/L,EAAU/wL,SAASoqH,EAAK52H,MAAM,EAAQ,EAAJjC,EAAO,EAAQ,EAAJA,GAAQ,IAC3C,QAAZs/L,GACF7gM,KAAK+/L,MAAO,EACZ//L,KAAKigM,UAAYa,EACjB9gM,KAAKkgM,SAAWa,GACK,QAAZF,IACT7gM,KAAKggM,MAAO,EACZhgM,KAAKmgM,UAAYW,EACjB9gM,KAAKogM,SAAWW,EAE9B,CACA,CACA,CACA,CACI,GAA+B,IAA3B3pL,EAAgBvW,OAClB,OAAO,KAET,MACMghG,EAAa,IAAI5W,GAAW7zE,EADH,QAAhB0oJ,EAAyB,MAAQ,QAE1Cr2F,EAAU,IAAI31D,GAClBg7I,GAA6BjtD,GAAY,EAAOv3F,IAGlD,OADAm/D,EAAQzgE,cAAcwL,GAAY,GAC3Bi1D,CACX,CASE,oBAAAivF,CAAqBn6F,EAAMj0D,GACzB,MAAMm/D,EAAUzpE,KAAKy4J,oBAAoBl6F,EAAMj0D,GAC/C,OAAIm/D,EACK,CAACA,GAEH,EACX,GyBswBA26G,GAAG5iK,OAAOs1I,YAAckqC,GACxB5c,GAAG5iK,OAAOy/K,IxB/kBV,cAAkBzxC,GAIhB,WAAAzvJ,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAE3BizJ,KArHPZ,GAAgB,CAAC,IAAK,IAAK,IAAK,GAEhCM,GAAqB,IAAI52F,GAAK,CAC5B5V,MAAOksG,KAGTC,GAA6B,CAAC,GAAI,GAElCC,GAAqC,SAErCC,GAAqC,SAErCC,GAA2B,CAAC,GAAI,IAEhCC,GACE,+DAEFG,GAAsB,IAAIr2F,GAAK,CAC7Bn1C,OAAQirI,GACR31F,aAAc,cACdE,aAAc01F,GACdx1F,aAAcy1F,GACdr+H,YAAa,YACbvlB,SAAU,EACV+I,MAAOu7I,GAAaT,IACpB/pJ,KAAM+pJ,GACNh/H,IAAKi/H,KAGPE,GAAyB,WAEzBt1B,GAAuB,IAAI7/D,GAAO,CAChCtX,MAAOksG,GACP7tJ,MAAO,IAGTsuJ,GAA4B,IAAIr1F,GAAO,CACrCtX,MAAO,CAAC,GAAI,GAAI,GAAI,GACpB3hD,MAAO,IAGTuuJ,GAAqB,IAAIpzF,GAAK,CAC5B7K,KAAM,sBACN4D,KAAMi6F,GACN35F,OAAQ85F,GACRn7I,MAAO,KAGTo0H,GAAgB,IAAI1tE,GAAM,CACxB3F,KAAMi6F,GACN5qJ,MAAO8qJ,GACP5+F,KAAM8+F,GACN/5F,OAAQskE,GACRlhF,OAAQ,IAGV62G,GAAsB,CAAClnB,KAoErBr2I,KAAK4hF,eAAiBtuD,GAAc,aAMpCtzB,KAAKkhM,cAAgB52L,EAAQszJ,aACzBtzJ,EAAQszJ,aACRL,GAMJv9J,KAAKmhM,oBACuB36L,IAA1B8D,EAAQ82L,eAA8B92L,EAAQ82L,cAKhDphM,KAAKmlK,kBACqB3+J,IAAxB8D,EAAQ+2L,aAA4B/2L,EAAQ+2L,YAM9CrhM,KAAKshM,cAAgB,CAAE,EAMvBthM,KAAKuhM,qBACwB/6L,IAA3B8D,EAAQk3L,gBAA+Bl3L,EAAQk3L,eAKjDxhM,KAAK2+B,kBACqBn4B,IAAxB8D,EAAQm0B,YAA4Bn0B,EAAQm0B,YAAc,YAK5Dz+B,KAAKghK,iBAAmB12J,EAAQm3L,gBAC5Bn3L,EAAQm3L,gBACRhkC,GAEJz9J,KAAKq6G,oBAAsB,CAAC,uCAChC,CAQE,qBAAAqnF,CAAsB5wL,EAAMu8G,GAE1B,MASM3yC,EAAWw0C,GAAgB,GATfP,GAAgByjC,GAAgB,CAChDkK,SAAYnvC,GAAkBntH,KAAK0hM,sBAAuB1hM,MAC1D2hM,OAAUx0E,GAAkBntH,KAAK0hM,sBAAuB1hM,MACxDy8J,UAAanvC,GAAgBttH,KAAK4hM,eAAgB5hM,MAClD2oE,MAAS3oE,KAAK6hM,iBAAiB36L,KAAKlH,MACpCo6J,SAAYp6J,KAAK8hM,oBAAoB56L,KAAKlH,QAII8Q,EAAMu8G,EAAartH,MACnE,GAAI06E,EACF,OAAOA,CAGb,CAQE,cAAAknH,CAAe9wL,EAAMu8G,GACnB,MAAM/oH,EAAS4qH,GACb,CAAC56G,SAAY,MACbklJ,GACA1oJ,EACAu8G,EACArtH,MAEF,IAAKsE,EACH,OAEF,MAAMmlE,EAAU,IAAI31D,GACd/G,EAAK+D,EAAKkiJ,aAAa,MAClB,OAAPjmJ,GACF08D,EAAQt0D,MAAMpI,GAEhB,MAAMzC,EACJ+iH,EAAY,GAGR/4G,EAAWhQ,EAAiB,SAOlC,GANIgQ,GACFw6I,GAA6Bx6I,GAAU,EAAOhK,GAEhDm/D,EAAQl1D,YAAYD,UACbhQ,EAAiB,SAEpBtE,KAAKmhM,eAAgB,CACvB,MAEMx3H,EA6fZ,SACE75D,EACA6qJ,EACAiD,EACAC,EACA2jC,GAEA,OAAA,SAMY/3H,EAASxwD,GACjB,IAAI8oL,EAAWP,EACXpsL,EAAO,GACP4sL,EAAsB,GAC1B,GAAID,EAAU,CACZ,MAAMztL,EAAWm1D,EAAQ70D,cACzB,GAAIN,EACF,GAAIA,aAAoBk3E,GACtBw2G,EAAsB1tL,EACnB6sF,8BACA1xD,QAAO,SAAUn7B,GAChB,MAAM5P,EAAO4P,EAAS8e,UACtB,MAAgB,UAAT1uB,GAA6B,eAATA,CAC3C,IACYq9L,EAAWC,EAAoBnhM,OAAS,MACnC,CACL,MAAM6D,EAAO4P,EAAS8e,UACtB2uK,EAAoB,UAATr9L,GAA6B,eAATA,CAC3C,CAEA,CAEUq9L,IACF3sL,EAA8Bq0D,EAAQxgE,IAAI,QAC1C84L,EAAWA,KAAc3sL,EAErB2sL,GAAY,UAAUp0L,KAAKyH,KACxBkoJ,KACHA,GAAWluJ,SAASC,cAAc,aAEpCiuJ,GAASljH,UAAYhlC,EACrBA,EAAOkoJ,GAASv5J,QAIpB,IAAIk+L,EAAerkC,EAMnB,GALI9tJ,EACFmyL,EAAenyL,EACN6qJ,IACTsnC,EAAevkC,GAAU/C,EAAUiD,EAAcC,IAE/CkkC,EAAU,CACZ,MAAMG,EAxGd,SAAiCC,EAAY/sL,GAC3C,MAAMgtL,EAAa,CAAC,EAAG,GAEvB,IAAI93H,EAAY,QAChB,MAAMga,EAAa69G,EAAWplK,WAC9B,GAAIunD,EAAY,CACd,MAAM1c,EAAY0c,EAAWnxE,UAC7B,GAAIy0D,GAAiC,GAApBA,EAAU/mE,OAAa,CACtC,MAAMyoF,EAAahF,EAAWliB,gBACxBzwC,EAAS2yD,EAAWjiB,YAG1B+/H,EAAW,GAAK94G,EAAW,IAAM1hB,EAAU,GAAKj2C,EAAO,IACvDywK,EAAW,GAAK94G,EAAW,IAAM1hB,EAAU,GAAK,EAAIj2C,EAAO,IAC3D24C,EAAY,MAClB,CACA,CACE,IAAIma,EAAY09G,EAAWh5H,UACvBsb,GAGFA,EAAYA,EAAUhwE,QACtBgwE,EAAUjY,QAAQiY,EAAUhZ,WAAa4xF,GAAmB5xF,WAC5DgZ,EAAU/hB,SAAS+hB,EAAUziB,YAAcq7F,GAAmBr7F,YAC9DyiB,EAAU5gB,QAAQ4gB,EAAUhhB,WAAa45F,GAAmB55F,WAC5DghB,EAAUvgB,UAAUugB,EAAU7gB,aAAew5F,KAE7C34E,EAAY44E,GAAmB5oJ,QAEjCgwE,EAAUjb,QAAQp0D,GAClBqvE,EAAU/X,WAAW01H,EAAW,IAChC39G,EAAU9X,WAAWy1H,EAAW,IAChC39G,EAAU1X,aAAazC,GAEvB,MAAM43H,EAAY,IAAIv5H,GAAM,CAC1Bt2D,MAAOiyE,EACP/lB,KAAMkmB,IAER,OAAOy9G,CACT,CAiE0BG,CAAwBJ,EAAa,GAAI7sL,GAC3D,GAAI4sL,EAAoBnhM,OAAS,EAAG,CAIlCqhM,EAAU3tL,YAAY,IAAIi3E,GAAmBw2G,IAQ7C,MAAO,CAACE,EAPU,IAAIv5H,GAAM,CAC1Br0D,SAAU2tL,EAAa,GAAGrtL,cAC1BvC,MAAO,KACP2wD,KAAMi/H,EAAa,GAAGx+H,UACtBH,OAAQ2+H,EAAa,GAAGr+H,YACxBrF,KAAM,QAEsBhF,OAAO0oI,EAAaz+L,MAAM,GAClE,CACQ,OAAO0+L,CACf,CACM,OAAOD,CAEb,CACA,CAxkB4BK,CAFRh+L,EAAc,MACXA,EAAiB,SAIhCtE,KAAKkhM,cACLlhM,KAAKshM,cACLthM,KAAKuhM,iBAEP93H,EAAQ30D,SAAS60D,EACvB,CAOI,cANOrlE,EAAc,MAIrBmlE,EAAQzgE,cAAc1E,GAAQ,GAEvBmlE,CACX,CAOE,gBAAAo4H,CAAiB/wL,EAAMu8G,GACrB,MAAMtgH,EAAK+D,EAAKkiJ,aAAa,MAC7B,GAAW,OAAPjmJ,EAAa,CACf,MAAM+C,EAAQqqJ,GAAU12J,KAAKzD,KAAM8Q,EAAMu8G,GACzC,GAAIv9G,EAAO,CACT,IAAIyyL,EACArkC,EAAUptJ,EAAKotJ,QAInB,GAHKA,GAAsB,eAAXA,IACdA,EAAUtvJ,OAAOk7H,SAAShnD,MAExBo7E,EAAS,CAEXqkC,EADY,IAAI1/G,IAAI,IAAM91E,EAAImxJ,GACfp7E,IACzB,MACUy/G,EAAW,IAAMx1L,EAEnB/M,KAAKshM,cAAciB,GAAYzyL,CACvC,CACA,CACA,CAOE,mBAAAgyL,CAAoBhxL,EAAMu8G,GACxB,MAAMtgH,EAAK+D,EAAKkiJ,aAAa,MAC7B,GAAW,OAAPjmJ,EACF,OAEF,MAAMstJ,EAAgBC,GAAkB72J,KAAKzD,KAAM8Q,EAAMu8G,GACzD,IAAKgtC,EACH,OAEF,IAAIkoC,EACArkC,EAAUptJ,EAAKotJ,QAInB,GAHKA,GAAsB,eAAXA,IACdA,EAAUtvJ,OAAOk7H,SAAShnD,MAExBo7E,EAAS,CAEXqkC,EADY,IAAI1/G,IAAI,IAAM91E,EAAImxJ,GACfp7E,IACrB,MACMy/G,EAAW,IAAMx1L,EAEnB/M,KAAKshM,cAAciB,GAAYloC,CACnC,CAQE,mBAAA3K,CAAoB5+I,EAAMxG,GACxB,IAAK8nJ,GAAe1sJ,SAASoL,EAAKm7G,cAChC,OAAO,KAET,MAAMxiD,EAAUzpE,KAAK4hM,eAAe9wL,EAAM,CACxC9Q,KAAKuuJ,eAAez9I,EAAMxG,KAE5B,OAAIm/D,GAGG,IACX,CASE,oBAAAmmF,CAAqB9+I,EAAMxG,GACzB,IAAK8nJ,GAAe1sJ,SAASoL,EAAKm7G,cAChC,MAAO,GAET,IAAIvxC,EACJ,MAAM+yC,EAAY38G,EAAK28G,UACvB,GAAiB,YAAbA,GAAwC,UAAbA,EAI7B,OAHA/yC,EAAW16E,KAAK0hM,sBAAsB5wL,EAAM,CAC1C9Q,KAAKuuJ,eAAez9I,EAAMxG,KAExBowE,GAGG,GAET,GAAiB,aAAb+yC,EAA0B,CAC5B,MAAMhkD,EAAUzpE,KAAK4hM,eAAe9wL,EAAM,CACxC9Q,KAAKuuJ,eAAez9I,EAAMxG,KAE5B,OAAIm/D,EACK,CAACA,GAEH,EACb,CACI,GAAiB,OAAbgkD,EAAoB,CACtB/yC,EAAW,GACX,IAAK,IAAIp5E,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAAoB,CAChE,MAAMuzE,EAAKxiM,KAAK4vJ,qBAAqBtuJ,EAAGgJ,GACpCk4L,GACF3gM,EAAO64E,EAAU8nH,EAE3B,CACM,OAAO9nH,CACb,CACI,MAAO,EACX,CASE,QAAA+nH,CAAS14L,GACP,GAAKA,EAAL,CAGA,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClB,OAAO/J,KAAK0iM,qBAAqBx+J,EACvC,CACI,OAAI4oF,GAAW/iH,GACN/J,KAAK0iM,qBAAoB,GAE3B1iM,KAAK2iM,iBAAgB,EARhC,CASA,CAME,oBAAAD,CAAqBx+J,GACnB,IAAK,IAAI5iC,EAAyB4iC,EAAc,WAAG5iC,EAAGA,EAAIA,EAAEurH,YAC1D,GAAIvrH,EAAEkrH,UAAYC,KAAKojC,aAAc,CACnC,MAAMz6I,EAAOpV,KAAK2iM,iBAAgB,GAClC,GAAIvtL,EACF,OAAOA,CAEjB,CAGA,CAME,gBAAAutL,CAAiB7xL,GACf,IAAK,IAAIxP,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAC5C,GAAImjC,GAAe1sJ,SAASpE,EAAE2qH,eAAgC,QAAf3qH,EAAEmsH,UAC/C,OAAOqjC,GAAWxvJ,GAGtB,IAAK,IAAIA,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAAoB,CAChE,MAAMxB,EAAYnsH,EAAEmsH,UACpB,GACE2kC,GAAe1sJ,SAASpE,EAAE2qH,gBACZ,YAAbwB,GACc,UAAbA,GACa,aAAbA,GACa,OAAbA,GACF,CACA,MAAMr4G,EAAOpV,KAAK2iM,iBAAiBrhM,GACnC,GAAI8T,EACF,OAAOA,CAEjB,CACA,CAEA,CASE,gBAAAwtL,CAAiB74L,GACf,MAAM84L,EAAe,GACrB,GAAsB,iBAAX94L,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClBlI,EAAOghM,EAAc7iM,KAAK8iM,6BAA6B5+J,GAC7D,MAAe4oF,GAAW/iH,GACpBlI,EACEghM,EACA7iM,KAAK8iM,6BAA4B,IAGnCjhM,EACEghM,EACA7iM,KAAK+iM,yBAAwB,IAGjC,OAAOF,CACX,CAME,4BAAAC,CAA6B5+J,GAC3B,MAAM2+J,EAAe,GACrB,IAAK,IAAIvhM,EAAyB4iC,EAAc,WAAG5iC,EAAGA,EAAIA,EAAEurH,YACtDvrH,EAAEkrH,UAAYC,KAAKojC,cACrBhuJ,EACEghM,EACA7iM,KAAK+iM,yBAAwB,IAInC,OAAOF,CACX,CAME,wBAAAE,CAAyBjyL,GACvB,MAAM+xL,EAAe,GACrB,IAAK,IAAIvhM,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAC5C,GACEmjC,GAAe1sJ,SAASpE,EAAE2qH,eACX,eAAf3qH,EAAEmsH,UACF,CACA,MAAMjlH,EAAM0mH,GAAgB,CAAA,EAAIgsC,GAAsB55J,EAAG,IACzDuhM,EAAal9L,KAAK6C,EAC1B,CAEI,IAAK,IAAIlH,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAAoB,CAChE,MAAMxB,EAAYnsH,EAAEmsH,WAElB2kC,GAAe1sJ,SAASpE,EAAE2qH,eACZ,YAAbwB,GAAwC,UAAbA,GAAsC,OAAbA,GAErD5rH,EAAOghM,EAAc7iM,KAAK+iM,yBAAyBzhM,GAE3D,CACI,OAAOuhM,CACX,CASE,UAAAG,CAAWj5L,GACT,MAAMk5L,EAAU,GAChB,GAAsB,iBAAXl5L,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClBlI,EAAOohM,EAASjjM,KAAKkjM,uBAAuBh/J,GAClD,MAAe4oF,GAAW/iH,GACpBlI,EACEohM,EACAjjM,KAAKkjM,uBAAsB,IAG7BrhM,EAAOohM,EAASjjM,KAAKmjM,mBAAkB,IAEzC,OAAOF,CACX,CAME,sBAAAC,CAAuBh/J,GACrB,MAAM++J,EAAU,GAChB,IAAK,IAAI3hM,EAAyB4iC,EAAc,WAAG5iC,EAAGA,EAAIA,EAAEurH,YACtDvrH,EAAEkrH,UAAYC,KAAKojC,cACrBhuJ,EAAOohM,EAASjjM,KAAKmjM,mBAAkB,IAG3C,OAAOF,CACX,CAOE,kBAAAE,CAAmBryL,GACjB,MAAMmyL,EAAU,GAChB,IAAK,IAAI3hM,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAC5C,GAAImjC,GAAe1sJ,SAASpE,EAAE2qH,eAAgC,UAAf3qH,EAAEmsH,UAAuB,CACtE,MAAMjlH,EAAM0mH,GAAgB,CAAA,EAAI2sC,GAAgBv6J,EAAG,IACnD2hM,EAAQt9L,KAAK6C,EACrB,CAEI,IAAK,IAAIlH,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAAoB,CAChE,MAAMxB,EAAYnsH,EAAEmsH,WAElB2kC,GAAe1sJ,SAASpE,EAAE2qH,eACZ,YAAbwB,GAAwC,UAAbA,GAAsC,OAAbA,GAErD5rH,EAAOohM,EAASjjM,KAAKmjM,mBAAmB7hM,GAEhD,CACI,OAAO2hM,CACX,CAoBE,UAAAG,CAAWr5L,GACT,MAAMs5L,EAAU,GAChB,GAAsB,iBAAXt5L,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClBlI,EAAOwhM,EAASrjM,KAAKsjM,uBAAuBp/J,GAClD,MAAe4oF,GAAW/iH,GACpBlI,EACEwhM,EACArjM,KAAKsjM,uBAAsB,IAG7BzhM,EAAOwhM,EAASrjM,KAAKujM,mBAAkB,IAEzC,OAAOF,CACX,CAME,sBAAAC,CAAuBp/J,GACrB,MAAMm/J,EAAU,GAChB,IAAK,IAAI/hM,EAAyB4iC,EAAc,WAAG5iC,EAAGA,EAAIA,EAAEurH,YACtDvrH,EAAEkrH,WAAaC,KAAKojC,cACtBhuJ,EAAOwhM,EAASrjM,KAAKujM,mBAAkB,IAG3C,OAAOF,CACX,CAOE,kBAAAE,CAAmBzyL,GACjB,MAAMuyL,EAAU,GAChB,IAAK,IAAI/hM,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAC5C,GAAImjC,GAAe1sJ,SAASpE,EAAE2qH,eAAiC,WAAhB3qH,EAAEmsH,UAAwB,CACvE,MAAMjlH,EAAM0mH,GAAgB,CAAA,EAAImsC,GAAgB/5J,EAAG,IACnD+hM,EAAQ19L,KAAK6C,EACrB,CAEI,IAAK,IAAIlH,EAAIwP,EAAKiuG,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAAoB,CAChE,MAAMxB,EAAYnsH,EAAEmsH,WAElB2kC,GAAe1sJ,SAASpE,EAAE2qH,eACX,aAAdwB,GACe,WAAdA,GACc,cAAdA,GACc,QAAdA,GAEF5rH,EAAOwhM,EAASrjM,KAAKujM,mBAAmBjiM,GAEhD,CACI,OAAO+hM,CACX,CAYE,iBAAAjzC,CAAkB11E,EAAUpwE,GAC1BA,EAAUtK,KAAKwuJ,aAAalkJ,GAC5B,MAAMk5L,EAAMx3E,GAAgBomC,GAAe,GAAI,OACzCqxC,EAAW,gCACjBD,EAAI3sC,eAAe4sC,EAAU,WAAYpqC,GAAkB,IAC3DmqC,EAAI3sC,eAAe4sC,EAAU,YAAa13E,IAC1Cy3E,EAAI3sC,eACF9qC,GACA,qBAr4BJ,uFAy4BE,MAAuDr8G,EAAU,CAC7DoB,KAAM0yL,GAGJhvL,EAAa,CAAE,EACjBkmE,EAAS75E,OAAS,EACpB2T,EAAqB,SAAIkmE,EACG,GAAnBA,EAAS75E,SAClB2T,EAAsB,UAAIkmE,EAAS,IAErC,MAAM+zC,EAAc2tC,GAAaonC,EAAIv3E,cAC/BnjH,EAAS0lH,GAAah6G,EAAYi6G,GAUxC,OATAU,GACEz/G,EACA2sJ,GACA9tC,GACAzlH,EACA,CAACwB,GACDmkH,EACAzuH,MAEKwjM,CACX,GwBYApf,GAAG5iK,OAAOy/K,IAAIyC,oBxB9yBP,WACL,OAAOzmC,EACT,EwB6yBAmnB,GAAG5iK,OAAOy/K,IAAI0C,qBxBzwBP,WACL,OAAOxmC,EACT,EwBwwBAinB,GAAG5iK,OAAOy/K,IAAI2C,sBxBxvBP,WACL,OAAOh8D,EACT,EwBuvBAw8C,GAAG5iK,OAAOy/K,IAAI4C,gBxB1tBP,WACL,OAAOxtD,EACT,EwBytBA+tC,GAAG5iK,OAAOy/K,IAAI6C,qBxB9sBP,WACL,OAAOvmC,EACT,EwB6sBA6mB,GAAG5iK,OAAOy/K,IAAI8C,oBxBzuBP,WACL,OAAO1mC,EACT,EwBwuBA+mB,GAAG5iK,OAAOy/K,IAAIhjC,oBAAsB+lC,GACpC5f,GAAG5iK,OAAOyiL,ItBn+BV,cAAkB71C,GAIhB,WAAAruJ,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAKhCtK,KAAK4hF,eAAiB,IAAI/+D,GAAW,CACnCE,KAAM,GACNqC,MAAO,gBAGTplB,KAAKsuJ,aAAehkJ,EAAQgkJ,aACxBhkJ,EAAQgkJ,aAChB,GAQItuJ,KAAKiU,cAAgB3J,EAAQuoK,aAM7B7yK,KAAKkkM,WAAa55L,EAAQ65L,UAAY75L,EAAQ65L,UAAY,QAM1DnkM,KAAK8oH,QAAUx+G,EAAQ6uC,OAAS7uC,EAAQ6uC,OAAS,KAMjDn5C,KAAKokM,YAAc95L,EAAQ+5L,WAE3BrkM,KAAKq6G,oBAAsB,CACzB,qCACA,yBAEN,CAWE,gBAAAiqF,CAAiBj7B,EAAK5/F,EAASryD,EAAiB+d,GAC9Ck0I,EAAIpgH,IAAMwgB,EAAQn1D,SAElB,MAAM3S,EAAM0nK,EAAI9C,aAAe8C,EAAIpgH,IACnC,IAAIs7I,EAAM,EACN1jM,EAAS,EACTkV,EAAI,EACJC,EAAI,EACJwuL,EAAY,EACZC,EAAa,EAEjB,KAAOp7B,EAAIpgH,IAAMtnD,GAAK,CACpB,IAAKd,EAAQ,CACX,MAAM6jM,EAASr7B,EAAI9C,aACnBg+B,EAAe,EAATG,EACN7jM,EAAS6jM,GAAU,CAC3B,CAIM,GAFA7jM,IAEY,IAAR0jM,GAAqB,IAARA,EACfxuL,GAAKszJ,EAAI3B,cACT1xJ,GAAKqzJ,EAAI3B,cAEG,IAAR68B,GAEEC,EAAYC,IACdtvK,EAAKxvB,KAAK6+L,GACVC,EAAaD,GAIjBptL,EAAgBzR,KAAKoQ,EAAGC,GACxBwuL,GAAa,MACR,IAAY,IAARD,EAUT,MAAM,IAAIl8L,MAAM,oCATZm8L,EAAYC,IAEdrtL,EAAgBzR,KACdyR,EAAgBqtL,GAChBrtL,EAAgBqtL,EAAa,IAE/BD,GAAa,EAIvB,CACA,CAEQA,EAAYC,IACdtvK,EAAKxvB,KAAK6+L,GACVC,EAAaD,EAEnB,CASE,cAAAG,CAAet7B,EAAKu7B,EAAYt6L,GAC9B,MAAM5F,EAAOkgM,EAAWlgM,KACxB,GAAa,IAATA,EACF,OAAO,KAGT,IAAI+kE,EACJ,MAAM3gE,EAAS87L,EAAWpwL,WAE1B,IAAIzH,EACC/M,KAAKokM,aAGRr3L,EAAKjE,EAAO9I,KAAKokM,oBACVt7L,EAAO9I,KAAKokM,cAHnBr3L,EAAK63L,EAAW73L,GAMlBjE,EAAO9I,KAAKkkM,YAAcU,EAAWprJ,MAAMpkC,KAE3C,MAAMgC,EAAgD,GAChD+d,EAAqC,GAC3Cn1B,KAAKskM,iBAAiBj7B,EAAKu7B,EAAYxtL,EAAiB+d,GAExD,MAAMu+B,EAsOV,SAAyBhvD,EAAMyvH,GAE7B,IAAIzgE,EACS,IAAThvD,EACFgvD,EAA2B,IAAZygE,EAAgB,QAAU,aACvB,IAATzvH,EACTgvD,EAA2B,IAAZygE,EAAgB,aAAe,kBAC5B,IAATzvH,IACTgvD,EAAe,WAIjB,OAAOA,CACT,CAnPyBmxI,CAAgBngM,EAAMywB,EAAKt0B,QAEhD,GAAIb,KAAKsuJ,eAAiB9qD,GACxB/5B,EACE,IACEzpE,KACA,aAAA0zD,EAAct8C,EAAiB+d,EAAM,EAAGrsB,EAAQiE,GACpD08D,EAAQ18C,UAAUziB,EAAQs3E,oBACrB,CACL,IAAIk4F,EACJ,GAAoB,WAAhBpmH,EAA2B,CAC7B,MAAMr+B,EAAQmF,GAAYpjB,EAAiB+d,GAC3C2kJ,EACEzkJ,EAAMx0B,OAAS,EACX,IAAI0qF,GAAan0E,EAAiB,KAAMie,GACxC,IAAIuF,GAAQxjB,EAAiB,KAAM+d,EACjD,MACQ2kJ,EACmB,UAAjBpmH,EACI,IAAI17B,GAAM5gB,EAAiB,MACV,eAAjBs8C,EACE,IAAIu3B,GAAW7zE,EAAiB,MACf,eAAjBs8C,EACE,IAAI03B,GAAWh0E,EAAiB,MACf,oBAAjBs8C,EACE,IAAI43B,GAAgBl0E,EAAiB,KAAM+d,GAC3C,KAKds0C,EAAU,IAAIq7H,EAFZ9kM,KACD,cAEGA,KAAKiU,eACPw1D,EAAQ/0D,gBAAgB1U,KAAKiU,eAE/B,MAAMK,EAAWw6I,GAA6BgrB,GAAM,EAAOxvK,GAC3Dm/D,EAAQl1D,YAAYD,QACT9N,IAAPuG,GACF08D,EAAQt0D,MAAMpI,GAEhB08D,EAAQzgE,cAAcF,GAAQ,EACpC,CAEI,QACJ,CAME,OAAAsqB,GACE,MAAO,aACX,CAWE,YAAAmuD,CAAax3E,EAAQO,GACnB,MAAM6uC,EAASn5C,KAAK8oH,QAEdlnC,EAAiB34E,IADvBqB,EAAUtK,KAAKwuJ,aAAalkJ,IACOs3E,gBACnCA,EAAen9D,eAAena,EAAQmL,QACtCnL,EAAQs3E,eAAiBA,EAEzB,MAAMynF,EAAM,IAAI07B,GAAG,GACbC,EAAY37B,EAAIhD,WAAWwF,GAAiB,CAAA,GAC5CnxF,EAAW,GACjB,IAAK,MAAMtlE,KAAQ4vL,EAAW,CAC5B,GAAI7rJ,IAAWA,EAAOzzC,SAAS0P,GAC7B,SAEF,MAAM6vL,EAAWD,EAAU5vL,GAErBK,EAASwvL,EAAW,CAAC,EAAG,EAAGA,EAASxvL,OAAQwvL,EAASxvL,QAAU,KACrEmsE,EAAep9D,UAAU/O,GAEzB,IAAK,IAAIlU,EAAI,EAAG4E,EAAK8+L,EAASpkM,OAAQU,EAAI4E,IAAM5E,EAAG,CACjD,MAAMqjM,EAAa34B,GAAe5C,EAAK47B,EAAU1jM,GAC3CkoE,EAAUzpE,KAAK2kM,eAAet7B,EAAKu7B,EAAYt6L,GACrC,OAAZm/D,GACFiR,EAAS/0E,KAAK8jE,EAExB,CACA,CAEI,QACJ,CAUE,cAAAgY,CAAe13E,GACb,OAAO/J,KAAK4hF,cAChB,CAOE,SAAAv5B,CAAUlP,GACRn5C,KAAK8oH,QAAU3vE,CACnB,GsBiuBAirI,GAAG5iK,OAAO0jL,OrB59BV,cAAqB11C,GACnB,WAAAzvJ,GACEkF,QAKAjF,KAAK4hF,eAAiBtuD,GAAc,YACxC,CASE,oBAAAs8H,CAAqB9+I,EAAMxG,GAEzB,GADAA,EAAUtK,KAAKuuJ,eAAez9I,EAAMxG,GACd,OAAlBwG,EAAK28G,UAAoB,CAC3B,MAAMthH,EAAQ+iH,GACZ,CACEq9C,MAAO,CAAE,EACTI,KAAM,GACNjyF,SAAU,IAEZ4xF,GACAx7J,EACA,CAACxG,IAGH,IAAK,IAAIuS,EAAI,EAAGA,EAAI1Q,EAAMwgK,KAAK9rK,OAAQgc,IAAK,CAC1C,MAAM/T,EAAgCqD,EAAMwgK,KAAK9vJ,GAE3CzF,EAAkBtO,EAAOsO,gBAC/B,IAAKA,EAAgBvW,OACnB,IAAK,IAAIU,EAAI,EAAG4E,EAAK2C,EAAOsjK,OAAOvrK,OAAQU,EAAI4E,EAAI5E,IAAK,CAEtDM,EAAOuV,EADOjL,EAAMogK,MAAMzjK,EAAOsjK,OAAO7qK,IAEpD,CAEQ,IAAI+S,EAGFA,EAFExL,EAAOsjK,OAAO,IAAMtjK,EAAOsjK,OAAOtjK,EAAOsjK,OAAOvrK,OAAS,GAEhD,IAAI+5B,GAAQxjB,EAAiB,KAAM,CAC5CA,EAAgBvW,SAGP,IAAIoqF,GAAW7zE,EAAiB,MAE7C03I,GAA6Bx6I,GAAU,EAAOhK,GAC9C,MAAMm/D,EAAU,IAAI31D,GAAQQ,QACV9N,IAAdsC,EAAOiE,IACT08D,EAAQt0D,MAAMrM,EAAOiE,IAEvB08D,EAAQzgE,cAAcF,EAAO0jK,MAAM,GACnCrgK,EAAMuuE,SAAS/0E,KAAK8jE,EAC5B,CACM,GAAIt9D,EAAMuuE,SACR,OAAOvuE,EAAMuuE,QAErB,CACI,MAAO,EACX,GqB85BA0pG,GAAG5iK,OAAO+rJ,IAAM43B,GAChB/gB,GAAG5iK,OAAO4jL,SjB7+BV,cAAuB5sC,GAIrB,WAAAz4J,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAKhCtK,KAAK4hF,eAAiBtuD,GAAc,aAMpCtzB,KAAKqlM,QAAU/6L,EAAQoT,OAASpT,EAAQoT,OAAS,IAMjD1d,KAAKslM,gBAAkBh7L,EAAQi7L,eAC3Bj7L,EAAQi7L,eACR,IACR,CASE,mBAAA9sC,CAAoBl6F,EAAMj0D,GACxB,MAAMgK,EAAWtU,KAAK24J,qBAAqBp6F,EAAMj0D,GACjD,OAAO,IAAIwJ,GAAQQ,EACvB,CASE,oBAAAokJ,CAAqBn6F,EAAMj0D,GAEzB,MAAO,CADStK,KAAKy4J,oBAAoBl6F,EAAMj0D,GAEnD,CASE,oBAAAquJ,CAAqBp6F,EAAMj0D,GACzB,MAAMgN,EAASkd,GAAmBx0B,KAAKslM,iBACjCluL,EAAkBg5J,GAAa7xG,EAAMjnD,EAAQtX,KAAKqlM,SACxDn3C,GAAO92I,EAAiB,EAAGA,EAAgBvW,OAAQyW,EAAQF,GAC3D,MAAM5B,EAAcihB,GAClBrf,EACA,EACAA,EAAgBvW,OAChByW,GAIF,OAAOw3I,GAFY,IAAI7jE,GAAWz1E,EAAaxV,KAAKslM,kBAIlD,EACAtlM,KAAKwuJ,aAAalkJ,GAExB,CASE,gBAAAuuJ,CAAiBpvF,EAASn/D,GACxB,MAAMgK,EAAWm1D,EAAQ70D,cACzB,GAAIN,EACF,OAAOtU,KAAK+4J,kBAAkBzkJ,EAAUhK,GAE1C,MAAM,IAAIjC,MAAM,wCACpB,CASE,iBAAAywJ,CAAkBp+E,EAAUpwE,GAC1B,OAAOtK,KAAK64J,iBAAiBn+E,EAAS,GAAIpwE,EAC9C,CASE,iBAAAyuJ,CAAkBzkJ,EAAUhK,GAM1B,MAAM8M,GALN9C,EAGIw6I,GAA6Bx6I,GAAU,EAAMtU,KAAKwuJ,aAAalkJ,KAElC2pB,qBAC3B3c,EAAShD,EAASggB,YAExB,OADA45H,GAAO92I,EAAiB,EAAGA,EAAgBvW,OAAQyW,EAAQF,GACpD44J,GAAa54J,EAAiBE,EAAQtX,KAAKqlM,QACtD,GiBo3BAjhB,GAAG5iK,OAAO4jL,SAASh1B,aAAeo1B,GAClCphB,GAAG5iK,OAAO4jL,SAAS/0B,aAAeo1B,GAClCrhB,GAAG5iK,OAAO4jL,SAAS70B,qBAAuBm1B,GAC1CthB,GAAG5iK,OAAO4jL,SAAS30B,uBAAyBk1B,GAC5CvhB,GAAG5iK,OAAO4jL,SAASp1B,aAAe41B,GAClCxhB,GAAG5iK,OAAO4jL,SAASj1B,aAAe01B,GAClCzhB,GAAG5iK,OAAO4jL,SAAS90B,qBAAuBw1B,GAC1C1hB,GAAG5iK,OAAO4jL,SAAS10B,sBAAwBq1B,GAC3C3hB,GAAG5iK,OAAO4jL,SAAS50B,uBAAyBw1B,GAC5C5hB,GAAG5iK,OAAOg3I,YAAcytC,GACxB7hB,GAAG5iK,OAAO0kL,ShBj+BV,cAAuBpvC,GAIrB,WAAA/2J,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAMhCtK,KAAKkkM,WAAa55L,EAAQ65L,UAM1BnkM,KAAK8oH,QAAUx+G,EAAQ6uC,OAAS7uC,EAAQ6uC,OAAS,KAKjDn5C,KAAK4hF,eAAiBtuD,GACpBhpB,EAAQs3E,eAAiBt3E,EAAQs3E,eAAiB,YAExD,CASE,sBAAAq1E,CAAuB3yJ,EAAQgG,GAC7B,GAAmB,YAAfhG,EAAOI,KAAoB,CAC7B,MAAMyhM,EAAoD,EAC1D,IAAIp5K,EACF9K,EAAQ,KACRkO,EAAY,KACVg2K,EAA4B,YAC9Bp5K,EAAYo5K,EAA4B,UACxClkL,EAAQ8K,EAAiB,MACzBoD,EAAYpD,EAAqB,WAEnC,MAAM+jJ,EAAOq1B,EAAuB,KAChCp5K,GAgTV,SAAuB+jJ,EAAM7uJ,EAAOkO,GAClC,IAAK,IAAI5uB,EAAI,EAAG4E,EAAK2qK,EAAKjwK,OAAQU,EAAI4E,IAAM5E,EAC1C+vK,GAAaR,EAAKvvK,GAAI0gB,EAAOkO,EAEjC,CAnTQi2K,CAAct1B,EAAM7uJ,EAAOkO,GAG7B,MAAMuqD,EAAW,GACX2rH,EAAmBF,EAA0B,QAC7C5hM,EAAWvE,KAAKkkM,WACtB,IAAIz6H,EACJ,IAAK,MAAM68H,KAAcD,EACnBrmM,KAAK8oH,UAAY9oH,KAAK8oH,QAAQpjH,SAAS4gM,KAGD,uBAAtCD,EAAiBC,GAAY5hM,MAC/B+kE,EACE48H,EAAiBC,GAEnB5rH,EAAS/0E,KAAK/B,MACZ82E,EACAy2F,GACE1nG,EACAqnG,EACA7uJ,EACAkO,EACA5rB,EACA+hM,EACAh8L,MAIJm/D,EACE48H,EAAiBC,GAEnB5rH,EAAS/0E,KACPyrK,GACE3nG,EACAqnG,EACA7uJ,EACAkO,EACA5rB,EACA+hM,EACAh8L,MAKR,OAAOowE,CACb,CACI,MAAO,EACX,CAQE,wBAAAy8E,CAAyB7yJ,GACvB,OAAOtE,KAAK4hF,cAChB,GgBw3BAwiG,GAAG5iK,OAAO+kL,IP5wBV,cAAkB/2C,GAIhB,WAAAzvJ,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAMhCtK,KAAKwmM,SAAWl8L,EAAQyhK,QAAUzhK,EAAQyhK,QAxBtB,QA8BpB/rK,KAAKymM,aAAen8L,EAAQonK,YAM5B1xK,KAAK0mM,WAAap8L,EAAQqnK,UAM1B3xK,KAAK2mM,WAAar8L,EAAQs8L,UACtBt8L,EAAQs8L,UACR,IAAInqB,GAAYz8K,KAAKwmM,UAMzBxmM,KAAK6mM,gBAAkBv8L,EAAQunK,eAC3BvnK,EAAQunK,eACR2K,GAAiBx8K,KAAKwmM,SAC9B,CAKE,cAAAM,GACE,OAAO9mM,KAAKymM,YAChB,CAKE,cAAAM,CAAer1B,GACb1xK,KAAKymM,aAAe/0B,CACxB,CASE,oBAAA9hB,CAAqB9+I,EAAMxG,GAEzB,MAAMoF,EAAU,CACdoB,QAEFpK,OAAO2C,OAAOqG,EAAS,CACrBgiK,YAAe1xK,KAAKymM,aACpB90B,UAAa3xK,KAAK0mM,aAGpBhgM,OAAO2C,OAAOqG,EAAS1P,KAAKuuJ,eAAez9I,EAAMxG,GAAoB,CAAA,IACrE,MAAM+iH,EAAc,CAAC39G,GACrB,IAAIs3L,EAEFA,EADoB,UAAlBhnM,KAAKwmM,SACM10B,GAEA9xK,KAAK2mM,WAAW70B,2BAE/B,IAAIp3F,EAAWw0C,GACb,GACA83E,EACAl2L,EACAu8G,EACArtH,KAAK2mM,YAKP,OAHKjsH,IACHA,EAAW,IAENA,CACX,CASE,uBAAAusH,CAAwBl9L,GACtB,GAAKA,EAAL,CAGA,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClB,OAAO/J,KAAKknM,oCAAoChjK,EACtD,CACI,OAAI4oF,GAAW/iH,GACN/J,KAAKknM,oCAClB,GAGWlnM,KAAKmnM,gCAChB,EAXA,CAaA,CAUE,6BAAAC,CAA8Br9L,GAC5B,GAAKA,EAAL,CAGA,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMm6B,EAAM0vB,GAAM7pD,GAClB,OAAO/J,KAAKqnM,0CAA0CnjK,EAC5D,CACI,OAAI4oF,GAAW/iH,GACN/J,KAAKqnM,0CAClB,GAGWrnM,KAAKsnM,sCAChB,EAXA,CAaA,CAOE,yCAAAD,CAA0CnjK,GACxC,IAAK,IAAI5iC,EAAyB4iC,EAAc,WAAG5iC,EAAGA,EAAIA,EAAEurH,YAC1D,GAAIvrH,EAAEkrH,UAAYC,KAAKojC,aACrB,OAAO7vJ,KAAKsnM,sCACpB,EAKA,CAOE,qCAAAA,CAAsCx2L,GACpC,MAAM24B,EAAS,CAAE,EACX1lC,EAAQ8sJ,GACZ//I,EAAKkiJ,aAAa,qBAGpB,OADAvpH,EAAyB,iBAAI1lC,EACtBmrH,GACX,EACM4iD,GACAhhK,EACA,GACA9Q,KAAK2mM,WAEX,CAME,mCAAAO,CAAoChjK,GAClC,IAAK,IAAI5iC,EAAyB4iC,EAAc,WAAG5iC,EAAGA,EAAIA,EAAEurH,YAC1D,GAAIvrH,EAAEkrH,UAAYC,KAAKojC,aACrB,OAAO7vJ,KAAKmnM,gCAA+B,EAInD,CAME,+BAAAA,CAAgCr2L,GAC9B,OAAOo+G,GACX,CAA4C,EACtCisD,GACArqK,EACA,GAEN,CASE,eAAA0vK,CAAgBl2K,GACd,MAAMwG,EAAOk7G,GAAgBswD,GAAMt8K,KAAKwmM,UAAW,cACnD11L,EAAK8nC,aAAa,UAAW,OAC7B9nC,EAAK8nC,aAAa,UAAW54C,KAAKwmM,UAC9Bl8L,EAAQi9L,QACVz2L,EAAK8nC,aAAa,SAAUtuC,EAAQi9L,QAElCj9L,EAAQk9L,cACV12L,EAAK8nC,aAAa,eAAgBtuC,EAAQk9L,mBAEhBhhM,IAAxB8D,EAAQm9L,aACV32L,EAAK8nC,aAAa,cAAelwC,OAAO4B,EAAQm9L,cAE9Cn9L,EAAQo9L,YACV52L,EAAK8nC,aAAa,aAActuC,EAAQo9L,iBAEflhM,IAAvB8D,EAAQ+7B,YACVv1B,EAAK8nC,aAAa,aAAclwC,OAAO4B,EAAQ+7B,kBAE3B7/B,IAAlB8D,EAAQ87B,OACVt1B,EAAK8nC,aAAa,QAASlwC,OAAO4B,EAAQ87B,aAEjB5/B,IAAvB8D,EAAQq9L,YACV72L,EAAK8nC,aAAa,aAActuC,EAAQq9L,YAE1C72L,EAAK+lJ,eACH9qC,GACA,qBACA/rH,KAAK6mM,iBAGP,MAAMn3L,EAAU,CACdoB,QAaF,GAXApK,OAAO2C,OAAOqG,EAAS,CACrBq8J,QAAW/rK,KAAKwmM,SAChB50B,QAAWtnK,EAAQsnK,QACnBD,UAAarnK,EAAQqnK,UAAYrnK,EAAQqnK,UAAY3xK,KAAK0mM,WAC1DxpB,cAAiB5yK,EAAQ4yK,cACzBmC,cAAiB/0K,EAAQ+0K,cAAgB/0K,EAAQ+0K,cAAgB,KAEnE1rK,GACE3R,MAAMC,QAAQqI,EAAQ+nK,cACtB,2CAEqC,iBAA5B/nK,EAAQ+nK,aAAa,GAAiB,CAC/C,IAAI5iI,EAASnlC,EAAQmlC,OACjBnlC,EAAQ6hD,OACVx4C,GACErJ,EAAQuoK,aACR,2EAEFpjI,EAASzvC,KAAK4nM,qBACZt9L,EAAQuoK,aACRvoK,EAAQ6hD,KACR7hD,EAAQsnK,QACRniI,IAGJ/oC,OAAO2C,OAAOqG,EAAS,CACrBmjK,aAAgBvoK,EAAQuoK,aACxBpjI,OAAUA,IAEZ+wI,GACE1vK,EAC+BxG,EAAoB,aACnD,CAACoF,GAET,MAEMpF,EAAQ+nK,aAAavnK,SAAoC4mK,IACvD,MAAMm2B,EAAiB7nM,KAAK4nM,qBAC1Bl2B,EAAYmB,aACZnB,EAAYvlH,KACZ7hD,EAAQsnK,QACRtnK,EAAQmlC,QAEV/oC,OAAO2C,OAAOqG,EAAS,CACrBmjK,aAAgBnB,EAAYmB,aAC5BpjI,OAAUo4J,IAEZrnB,GAAgB1vK,EAAM,CAAC4gK,EAAYt8J,MAAO,CAAC1F,GAAS,IAGxD,OAAOoB,CACX,CAYE,oBAAA82L,CAAqB/0B,EAAcp9J,EAAQm8J,EAASniI,GAClD,MAAMq4J,ESlgBH,SAAcj1B,EAAcp9J,EAAQm8J,GACzC,OAAO,IAAIgJ,GAAK/H,EAAcp9J,EAAQm8J,EACxC,CTggBuBm2B,CAAal1B,EAAcp9J,EAAQm8J,GACtD,OAAIniI,ES1iBD,SAAa6N,GAClB,MAAM+3C,EAAS,CAAC,MAAM97B,OAAOv3D,MAAMuB,UAAUC,MAAMC,KAAKC,YACxD,OAAO,IAAKskM,SAASzkM,UAAU2D,KAAKtD,MAAM+2K,GAAKtlF,GACjD,CTyiBa4yG,CAAYx4J,EAAQq4J,GAEtBA,CACX,CAYE,gBAAAI,CAAiBC,EAASC,EAASC,EAAS/9L,GAC1C,MAAM+iH,EAAc,GACd0+C,EAAUzhK,EAAQyhK,QAAUzhK,EAAQyhK,QAAU/rK,KAAKwmM,SACnD11L,EAAOk7G,GAAgBswD,GAAMvQ,GAAU,eAI7C,IAAIu8B,EAFJx3L,EAAK8nC,aAAa,UAAW,OAC7B9nC,EAAK8nC,aAAa,UAAWmzH,GAGzBzhK,IACFg+L,EAAUh+L,EAAQi+L,WAAaj+L,EAAQi+L,WAAa,CAAE,EAClDj+L,EAAQi9L,QACVz2L,EAAK8nC,aAAa,SAAUtuC,EAAQi9L,SAGxCz2L,EAAK+lJ,eACH9qC,GACA,qBACAywD,GAAiBzQ,IAGnB,MAAMvzD,EAoEV,SAAkC1nG,EAAMw3L,EAASv8B,EAASzhK,GACxD,MAAM4yK,EAAgB5yK,EAAQ4yK,cAC1B5yK,EAAQ4yK,cACRf,GACJ,IAAIY,EACY,UAAZhR,EACFgR,EAAa,EACQ,UAAZhR,EACTgR,EAAa,EACQ,UAAZhR,IACTgR,EAAa,KAEf,MAAMv0K,EAAM9B,OAAO2C,OACjB,CAACyH,QACD,CACEi7J,UACA4F,UAAarnK,EAAQqnK,UACrBD,YAAepnK,EAAQonK,YACvBwL,cAAiBA,EACjBH,WAAcA,EACdrmB,KAAQpsJ,EAAQosJ,KAChBkb,QAAWtnK,EAAQsnK,SAErB02B,GAEF,OAAO9/L,CACT,CA9FoBggM,CAAyB13L,EAAMw3L,EAASv8B,EAASzhK,GAkBjE,OAjBI69L,GACFzrB,GAA4B,SAAUyrB,EAAS96E,EAAa7U,GAE1D4vF,GACF1rB,GAA4B,SAAU0rB,EAAS/6E,EAAa7U,GAE1D6vF,GACF3rB,GAA4B,SAAU2rB,EAASh7E,EAAa7U,GAE1DluG,EAAQm+L,gBACV/rB,GACE,SACApyK,EAAQm+L,eACRp7E,EACA7U,GAGG1nG,CACX,CAOE,0BAAAk/I,CAA2B9rH,GACzB,IAAK,IAAI5iC,EAAI4iC,EAAIoyC,WAAYh1E,EAAGA,EAAIA,EAAEurH,YACpC,GAAIvrH,EAAEkrH,UAAYC,KAAKojC,aACrB,OAAO7vJ,KAAKiwJ,uBAAsB,GAGtC,OAAO,IACX,CAOE,sBAAAA,CAAuBn/I,GACrB,GAAIA,EAAKiuG,mBAAqBjuG,EAAKiuG,kBAAkBA,kBAEnD,IAAK,IAAIz9G,GADTwP,EAAOA,EAAKiuG,kBAAkBA,mBACZA,kBAAmBz9G,EAAGA,EAAIA,EAAE2tH,mBAC5C,GAE4B,IAAxB3tH,EAAE6P,WAAWtQ,SACY,IAAxBS,EAAE6P,WAAWtQ,QAA0C,IAA1BS,EAAEg1E,WAAWk2C,UAE7C,CACA,MAAMa,EAAc,CAAC,IAErB,OADArtH,KAAK2mM,WAAWj0B,oBAAoBpxK,EAAG+rH,GAChC/5F,GAAc+5F,EAAYxiH,MAAM+mK,QACjD,CAII,OAAO,IACX,GOkXAwS,GAAG5iK,OAAO+kL,IAAImC,YPoSP,SAAqBj5J,EAAQs8H,GAElC,MAAMz/G,EAAQ0/D,GAAgBuzD,GAD9BxT,EAAUA,GAAW,SAC+B,UAC9Cr8J,EAAU,CACdoB,KAAMw7C,GAOR,OALA5lD,OAAO2C,OAAOqG,EAAS,CACrBq8J,QAAWA,EACXt8H,OAAUA,IAEZ+vI,GAAqBlzH,EAAO7c,EAAQ,CAAC//B,IAC9B48C,CACT,EO/SA83H,GAAG5iK,OAAOmnL,kBG5/BV,cAAgCn5C,GAI9B,WAAAzvJ,CAAYuK,GACVrF,QAEAqF,EAAUA,GAAoB,CAAE,EAMhCtK,KAAK0mM,WAAa,yCAMlB1mM,KAAK2mM,WAAa,IAAIpyB,GAMtBv0K,KAAK8oH,QAAUx+G,EAAQ6uC,OAAS7uC,EAAQ6uC,OAAS,IACrD,CAKE,SAAAoP,GACE,OAAOvoD,KAAK8oH,OAChB,CAKE,SAAAzgE,CAAUlP,GACRn5C,KAAK8oH,QAAU3vE,CACnB,CAQE,aAAAyvJ,CAAc93L,EAAMu8G,GAClBv8G,EAAK8nC,aAAa,eAAgB54C,KAAK0mM,YACvC,MAAMj5E,EAAY38G,EAAK28G,UAEvB,IAAI/yC,EAAW,GACf,GAA+B,IAA3B5pE,EAAKK,WAAWtQ,OAClB,OAAO65E,EAET,GAAiB,eAAb+yC,EACF,IAAK,IAAIlsH,EAAI,EAAG4E,EAAK2K,EAAKK,WAAWtQ,OAAQU,EAAI4E,EAAI5E,IAAK,CACxD,MAAMi4C,EAAQ1oC,EAAKK,WAAW5P,GAC9B,GAAIi4C,EAAMgzE,WAAaC,KAAKojC,aAC1B,SAGF,MAAMg5C,EAAuC,EACvCn5L,EAAU29G,EAAY,GAEtBy7E,EA3EU,SA4EV3E,EAAY0E,EAAap7E,UAAU/rG,QAAQonL,EAAU,IAE3D,GAAI9oM,KAAK8oH,UAAY9oH,KAAK8oH,QAAQpjH,SAASy+L,GACzC,SAGF,MAAMzyB,EAAcyyB,EAxFF,WA0FlBz0L,EAAqB,YAAIgiK,EACzBhiK,EAAmB,UAAI1P,KAAK0mM,WAG5B,MAAMxyI,EAAU,CAAE,EAClBA,EAAQw9G,GAAepkD,GACrBttH,KAAK2mM,WAAWr0B,mBAChBtyK,KAAK2mM,YAEP,MAAM33E,EAAYL,GAChB,CAACj/G,EAAmB,UAAG,MACvBwkD,GAEF20I,EAAajwJ,aAAa,eAAgB54C,KAAK0mM,YAC/C,MAAMqC,EAAgB75E,GACpB,GAEAF,EACA65E,EACAx7E,EACArtH,KAAK2mM,YAEHoC,GACFlnM,EAAO64E,EAAUquH,EAE3B,CAEI,GAAiB,qBAAbt7E,EAAkC,CACpC,MAAMu7E,EAAc95E,GAClB,GACAlvH,KAAK2mM,WAAW70B,2BAChBhhK,EACA,CAAC,IACD9Q,KAAK2mM,YAEHqC,IACFtuH,EAAWsuH,EAEnB,CACI,OAAOtuH,CACX,CASE,oBAAAk1E,CAAqB9+I,EAAMxG,GACzB,MAAMspK,EAAkB,CAAE,EAI1B,OAHItpK,GACF5D,OAAO2C,OAAOuqK,EAAiB5zK,KAAKuuJ,eAAez9I,EAAMxG,IAEpDtK,KAAK4oM,cAAc93L,EAAM,CAAC8iK,GACrC,GH23BAwQ,GAAG5iK,OAAOynL,iBNl/BV,cAA+Br8B,GAC7B,WAAA7sK,GACEkF,QAMAjF,KAAKkpM,WAAa,IAAI37B,EAC1B,CAOE,YAAAR,CAAaj8J,GACX,IAAIi7J,EAAUj7J,EAAKkiJ,aAAa,WAC5B+Y,IACFA,EAAUA,EAAQhb,QAEpB,IAAIo4C,EAAuBnpM,KAAKkpM,WAAWn8B,aAAaj8J,GACxD,OAAKq4L,GAGLA,EAA8B,QAAIp9B,EAClCo9B,EAAuBj6E,GACrBi6E,EACA78B,GACAx7J,EACA,IAEKq4L,GAA8C,MAT5C,IAUb,GMk9BA/kB,GAAG5iK,OAAO4nL,MAAQ,CAAE,EACpBhlB,GAAG5iK,OAAO4nL,MAAMp8B,SAAWq8B,GAC3BjlB,GAAG5iK,OAAO8nL,IAAM,CAAE,EAClBllB,GAAG5iK,OAAO8nL,IAAIh5C,YAAci5C,GAC5BnlB,GAAG5iK,OAAO8nL,IAAI/4C,kBAAoBi5C,GAClCplB,GAAG5iK,OAAO8nL,IAAI94C,aAAei5C,GAC7BrlB,GAAG5iK,OAAO8nL,IAAI54C,YAAcg5C,GAC5BtlB,GAAG5iK,OAAO8nL,IAAI34C,kBAAoBg5C,GAClCvlB,GAAG5iK,OAAO8nL,IAAIz4C,6BAA+B+4C,GAC7CxlB,GAAG5iK,OAAO8nL,IAAI14C,oBAAsBi5C,GACpCzlB,GAAG5iK,OAAO8nL,IAAIx4C,WAAag5C,GAC3B1lB,GAAG5iK,OAAO8nL,IAAIt4C,qBAAuB+4C,GACrC3lB,GAAG5iK,OAAO8nL,IAAIn4C,kBAAoB64C,GAClC5lB,GAAG5iK,OAAO8nL,IAAIj4C,sBAAwB44C,GACtC7lB,GAAG5iK,OAAO8nL,IAAIz3C,qBAAuBq4C,GACrC9lB,GAAG5iK,OAAO8nL,IAAIv3C,gCAAkCo4C,GAChD/lB,GAAG5iK,OAAO8nL,IAAIp4C,oBAAsBk5C,GACpChmB,GAAGjwC,UAAY,CAAE,EACjBiwC,GAAGjwC,UAAUpxI,MAAQsnM,EACrBjmB,GAAGjwC,UAAUrxI,KAAOwnM,EACpBlmB,GAAGjwC,UAAUnxI,KAAOunM,EACpBnmB,GAAGjwC,UAAUlxI,WAAaunM,EAC1BpmB,GAAGjwC,UAAUtwI,UAAY4mM,EACzBrmB,GAAGtK,KAAO,CAAE,EACZsK,GAAGtK,KAAK/nG,OAAS24H,GACjBtmB,GAAGtK,KAAK7nJ,SAAW04K,GACnBvmB,GAAGtK,KAAKtuF,mBAAqBo/G,GAC7BxmB,GAAGtK,KAAK7uF,WAAa4/G,GACrBzmB,GAAGtK,KAAKliJ,WAAakzK,GACrB1mB,GAAGtK,KAAKxuF,gBAAkBy/G,GAC1B3mB,GAAGtK,KAAK1uF,WAAa4/G,GACrB5mB,GAAGtK,KAAKvuF,aAAe0/G,GACvB7mB,GAAGtK,KAAK9hJ,MAAQkzK,GAChB9mB,GAAGtK,KAAKl/I,QAAUuwK,GAClB/mB,GAAGtK,KAAKl/I,QAAQiB,SAAWuvK,GAC3BhnB,GAAGtK,KAAKl/I,QAAQqB,WAAaovK,GAC7BjnB,GAAGtK,KAAKl/I,QAAQoB,WAAasvK,GAC7BlnB,GAAGtK,KAAKl/I,QAAQwB,YAAcmvK,GAC9BnnB,GAAGtK,KAAKjmJ,eAAiB23K,GACzBpnB,GAAGtK,KAAKjmJ,eAAee,mBAAqB62K,GAC5CrnB,GAAGtK,KAAKjmJ,eAAeW,mBAAqBk3K,GAC5CtnB,GAAGtK,KAAKjmJ,eAAeiB,gBAAkB62K,GACzCvnB,GAAGtK,KAAKzgD,KAAO,CAAE,EACjB+qD,GAAGtK,KAAKzgD,KAAK5gH,KAAO,CAAE,EACtB2rK,GAAGtK,KAAKzgD,KAAK5gH,KAAKuc,WAAa42K,GAC/BxnB,GAAGtK,KAAKzgD,KAAK5gH,KAAKyc,YAAc22K,GAChCznB,GAAGtK,KAAKzgD,KAAK5gH,KAAK2c,aAAe02K,GACjC1nB,GAAGtK,KAAKzgD,KAAKrgH,OAAS,CAAE,EACxBorK,GAAGtK,KAAKzgD,KAAKrgH,OAAOoc,aAAe22K,GACnC3nB,GAAGtK,KAAKzgD,KAAK2yE,QAAU,CAAE,EACzB5nB,GAAGtK,KAAKzgD,KAAK2yE,QAAQp2K,qBAAuBq2K,GAC5C7nB,GAAGtK,KAAKzgD,KAAK2yE,QAAQ/1K,wBAA0Bi2K,GAC/C9nB,GAAGtK,KAAKzgD,KAAK2yE,QAAQ91K,6BAA+Bi2K,GACpD/nB,GAAGtK,KAAKzgD,KAAK2yE,QAAQl2K,mBAAqBs2K,GAC1ChoB,GAAGtK,KAAKzgD,KAAK2yE,QAAQv2K,gBAAkB42K,GACvCjoB,GAAGtK,KAAKzgD,KAAK2yE,QAAQn2K,0BAA4By2K,GACjDloB,GAAGtK,KAAKzgD,KAAK/9E,SAAW,CAAE,EAC1B8oI,GAAGtK,KAAKzgD,KAAK/9E,SAASrjB,yBAA2Bs0K,GACjDnoB,GAAGtK,KAAKzgD,KAAK/9E,SAASpjB,qBAAuBs0K,GAC7CpoB,GAAGtK,KAAKzgD,KAAK/9E,SAASljB,sBAAwBq0K,GAC9CroB,GAAGtK,KAAKzgD,KAAK/9E,SAASjjB,uBAAyBq0K,GAC/CtoB,GAAGtK,KAAKzgD,KAAKszE,QAAU,CAAE,EACzBvoB,GAAGtK,KAAKzgD,KAAKszE,QAAQx2K,kBAAoBy2K,GACzCxoB,GAAGtK,KAAKzgD,KAAKszE,QAAQv2K,mBAAqBy2K,GAC1CzoB,GAAGtK,KAAKzgD,KAAKszE,QAAQt2K,wBAA0By2K,GAC/C1oB,GAAGtK,KAAKzgD,KAAKszE,QAAQp2K,6BAA+Bw2K,GACpD3oB,GAAGtK,KAAKzgD,KAAK2zE,KAAO,CAAE,EACtB5oB,GAAGtK,KAAKzgD,KAAK2zE,KAAK9+C,OAAS++C,GAC3B7oB,GAAGtK,KAAKzgD,KAAK6zE,SAAW,CAAE,EAC1B9oB,GAAGtK,KAAKzgD,KAAK6zE,SAASC,epEzgCf,SACLruL,EACAV,EACAspH,EACArpH,EACA1C,EACA4W,GAEA,MAAM66K,EAAgB95K,GAAc,aAE9B+5K,EAAUzhM,KAAKiO,IAAIuD,GAAUgB,IAC7BkvL,EAAU1hM,KAAKmO,IAAIqD,GAAUgB,IAC7BmvL,EAAU3hM,KAAKiO,IAAIuD,GAAUiB,IAC7BmvL,EAAU5hM,KAAKmO,IAAIqD,GAAUiB,IAC7BovL,EAAc7hM,KAAKiO,IAAIuD,GAAUsqH,EAAO5oH,IACxC4uL,EAAc9hM,KAAKmO,IAAIqD,GAAUsqH,EAAO5oH,IACxC6B,EAAI2sL,EAAUE,EAAUH,EAAUE,EAAUE,EAElD,OAAOrzE,IAKL,SAAUoN,GACR,GAAI,GAAK7mH,EACP,MAAO,CAAC+mH,EAAMrpH,GAEhB,MAAMsvL,EAAInmE,EAAO57H,KAAKipH,KAAKl0G,GACrBitL,EAAOhiM,KAAKiO,IAAI8zL,GAChBE,EAAOjiM,KAAKmO,IAAI4zL,GAChB33L,EAAI03L,EAAcH,EAClBx3L,EAAIs3L,EAAUG,EAAUF,EAAUC,EAAUE,EAC5CnjK,EAAQ1+B,KAAK4S,MAAMxI,EAAGD,GACtBiJ,EAAMpT,KAAKqT,KAAKquL,EAAUM,EAAOP,EAAUQ,EAAOjiM,KAAKiO,IAAIywB,IAOjE,MAAO,CAACrtB,GALNG,GAAU0B,GACVlT,KAAK4S,MACH5S,KAAKmO,IAAIuwB,GAASujK,EAAOR,EACzBO,EAAON,EAAU1hM,KAAKmO,IAAIiF,KAEN/B,GAAU+B,GACnC,GACD8O,GAAas/K,EAAezxL,GAC5B4W,EAEJ,EoE69BA6xJ,GAAGtK,KAAKzgD,KAAK6zE,SAAS3lE,SAAWumE,GACjC1pB,GAAGtK,KAAKzgD,KAAK6zE,SAASzlE,SAAWsmE,GACjC3pB,GAAGtK,KAAKzgD,KAAK20E,QAAU,CAAE,EACzB5pB,GAAGtK,KAAKzgD,KAAK20E,QAAQv3K,mBAAqBw3K,GAC1C7pB,GAAGtK,KAAKzgD,KAAK20E,QAAQt3K,wBAA0Bw3K,GAC/C9pB,GAAGtK,KAAKzgD,KAAK20E,QAAQr3K,6BAA+Bw3K,GACpD/pB,GAAGtK,KAAKzgD,KAAK+0E,cAAgB,CAAE,EAC/BhqB,GAAGtK,KAAKzgD,KAAK+0E,cAAc91K,wBAA0B+1K,GACrDjqB,GAAGtK,KAAKzgD,KAAK+0E,cAAcr1K,8BAAgCu1K,GAC3DlqB,GAAGtK,KAAKzgD,KAAK9sH,YAAc,CAAE,EAC7B63K,GAAGtK,KAAKzgD,KAAK9sH,YAAY2zF,iBAAmBquG,GAC5CnqB,GAAGtK,KAAKzgD,KAAK9sH,YAAY8zF,wBAA0BmuG,GACnDpqB,GAAGtK,KAAKzgD,KAAK9sH,YAAYm0F,yBAA2B+tG,GACpDrqB,GAAGtK,KAAKzgD,KAAKq1E,iBAAmB,CAAE,EAClCtqB,GAAGtK,KAAKzgD,KAAKq1E,iBAAiBp1K,qBAAuBq1K,GACrDvqB,GAAGtK,KAAKzgD,KAAKq1E,iBAAiB/0K,0BAA4Bi1K,GAC1DxqB,GAAGtK,KAAKzgD,KAAKq1E,iBAAiB90K,qBAAuBi1K,GACrDzqB,GAAGtK,KAAKzgD,KAAKq1E,iBAAiB70K,0BAA4Bi1K,GAC1D1qB,GAAGtK,KAAKzgD,KAAKq1E,iBAAiB50K,+BAAiCi1K,GAC/D3qB,GAAGtK,KAAKzgD,KAAKx4H,OAAS,CAAE,EACxBujL,GAAGtK,KAAKzgD,KAAKx4H,OAAO4gG,iBAAmButG,GACvC5qB,GAAGtK,KAAKzgD,KAAKx4H,OAAOouM,iB1HzlCb,SAA0B73L,EAAiBC,EAAQ1V,EAAK2V,GAC7D,IAAI43L,EAAYztG,GAAiBrqF,EAAiBC,EAAQ1V,EAAK2V,GAC/D,MAAMrB,EAAKmB,EAAgBzV,EAAM2V,GAAUF,EAAgBC,GACrDnB,EAAKkB,EAAgBzV,EAAM2V,EAAS,GAAKF,EAAgBC,EAAS,GAExE,OADA63L,GAAatjM,KAAK6S,KAAKxI,EAAKA,EAAKC,EAAKA,GAC/Bg5L,CACT,E0HolCA9qB,GAAGtK,KAAKzgD,KAAK81E,OAAS,CAAE,EACxB/qB,GAAGtK,KAAKzgD,KAAK81E,OAAO30K,YAAc40K,GAClChrB,GAAGtK,KAAKzgD,KAAK81E,OAAOp1K,sBAAwBs1K,GAC5CjrB,GAAGtK,KAAKzgD,KAAK81E,OAAOl1K,uBAAyBq1K,GAC7ClrB,GAAGtK,KAAKzgD,KAAK81E,OAAO/0K,wBAA0Bm1K,GAC9CnrB,GAAGtK,KAAKzgD,KAAK81E,OAAO90K,kBAAoBm1K,GACxCprB,GAAGtK,KAAKzgD,KAAK81E,OAAO50K,uBAAyBk1K,GAC7CrrB,GAAGtK,KAAKzgD,KAAKrH,QAAU,CAAE,EACzBoyD,GAAGtK,KAAKzgD,KAAKrH,QAAQx8G,YAAck6L,GACnCtrB,GAAGtK,KAAKzgD,KAAKq0B,SAAW,CAAE,EAC1B02B,GAAGtK,KAAKzgD,KAAKq0B,SAAS5iJ,QAAU6kM,GAChCvrB,GAAGtK,KAAKzgD,KAAKq0B,SAASx0H,qBAAuB02K,GAC7CxrB,GAAGtK,KAAKzgD,KAAKlmG,SAAW,CAAE,EAC1BixJ,GAAGtK,KAAKzgD,KAAKlmG,SAASyD,eAAiBi5K,GACvCzrB,GAAGtK,KAAKzgD,KAAKlmG,SAASiE,oBAAsB04K,GAC5C1rB,GAAGtK,KAAKzgD,KAAKlmG,SAAS48K,yB/O77Bf,SACL34L,EACAC,EACAge,EACA/d,EACAib,EACAsE,EACAC,EACAa,GAEA,IAAK,IAAIp2B,EAAI,EAAG4E,EAAKkvB,EAAMx0B,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAM4zB,EAAOE,EAAM9zB,GAEb81B,EAAiB,GACvBP,EAAmBM,GACjBhgB,EACAC,EACA8d,EACA7d,EACAib,EACAsE,EACAC,EACAO,GAEFM,EAAgBhyB,KAAK0xB,GACrBhgB,EAAS8d,EAAKA,EAAKt0B,OAAS,EAChC,CACE,OAAOi2B,CACT,E+Ok6BAstJ,GAAGtK,KAAKzgD,KAAKlmG,SAASqE,SAAWw4K,GACjC5rB,GAAGtK,KAAKzgD,KAAKlmG,SAASsE,cAAgBw4K,GACtC7rB,GAAGtK,KAAKzgD,KAAKlmG,SAASuE,mBAAqBw4K,GAC3C9rB,GAAGtK,KAAKzgD,KAAKlmG,SAASmE,eAAiB64K,GACvC/rB,GAAGtK,KAAKzgD,KAAKlmG,SAASi9K,mB/OpmCf,SACLh5L,EACAC,EACA1V,EACA2V,EACAib,EACA89K,EACAx5K,GA2BA,OAzBAA,OACgCrwB,IAA9BqwB,EAA0CA,EAA4B,GACnEw5K,IACH1uM,EAAM21B,GACJlgB,EACAC,EACA1V,EACA2V,EACAib,EACAsE,EACA,GAEFzf,EAAkByf,EAClBxf,EAAS,EACTC,EAAS,GAEXuf,EAA0Bh2B,OAAS+1B,GACjCxf,EACAC,EACA1V,EACA2V,EACAib,EACAsE,EACA,GAEKA,CACT,E+OkkCAutJ,GAAGtK,KAAKzgD,KAAKlmG,SAASoE,KAAO+4K,GAC7BlsB,GAAGtK,KAAKzgD,KAAKk3E,cAAgB,CAAE,EAC/BnsB,GAAGtK,KAAKzgD,KAAKk3E,cAAc37E,cAAgB47E,GAC3CpsB,GAAGtK,KAAKzgD,KAAKo3E,SAAW,CAAE,EAC1BrsB,GAAGtK,KAAKzgD,KAAKo3E,SAAS73E,eAAiB83E,GACvCtsB,GAAGtK,KAAKzgD,KAAKs3E,SAAW,CAAE,EAC1BvsB,GAAGtK,KAAKzgD,KAAKs3E,SAASC,mBIxoCf,SAA4Bx5L,EAAiBC,EAAQ1V,EAAK2V,GAC/D,MAAMu5L,EAAYlvM,EAAM2V,EACxB,OACEF,EAAgBC,KAAYD,EAAgBy5L,IAC5Cz5L,EAAgBC,EAAS,KAAOD,EAAgBy5L,EAAY,KAC3DlvM,EAAM0V,GAAUC,EAAS,KAEjBygB,GAAe3gB,EAAiBC,EAAQ1V,EAAK2V,EAG1D,EJ+nCA8sK,GAAGtK,KAAKzgD,KAAKtsG,UAAY,CAAE,EAC3Bq3J,GAAGtK,KAAKzgD,KAAKtsG,UAAUlL,OAASivL,GAChC1sB,GAAGtK,KAAKzgD,KAAKtsG,UAAU9K,MAAQ8uL,GAC/B3sB,GAAGtK,KAAKzgD,KAAKtsG,UAAU0E,YAAcu/K,GACrC5sB,GAAGtK,KAAKzgD,KAAKtsG,UAAUoD,UAAY8gL,GACnC7sB,GAAGjjE,IAAM,CAAE,EACXijE,GAAGjjE,IAAI5yG,oBAAsB2iM,GAC7B9sB,GAAGjjE,IAAIrzG,mBAAqBqjM,GAC5B/sB,GAAGjjE,IAAI/yG,aAAegjM,GACtBhtB,GAAGjjE,IAAItzG,IAAMwjM,GACbjtB,GAAGjjE,IAAI1yG,wBAA0B6iM,GACjCltB,GAAGjjE,IAAI1zG,OAAS8jM,GAChBntB,GAAGjjE,IAAIzzG,kBAAoB8jM,GAC3BptB,GAAGjjE,IAAIvzG,OAAS6jM,GAChBrtB,GAAGjjE,IAAInzG,wBAA0B0jM,GACjCttB,GAAGvqG,YAAc,CAAE,EACnBuqG,GAAGvqG,YAAY83H,iBKjpCf,cAA+Bj1J,GAI7B,WAAA38C,CAAY6xM,GACV,MAAMtnM,EAAUsnM,GAA4B,CAAE,EAE9C3sM,MACJ,GAGQqF,EAAQm1C,WACVz/C,KAAKy/C,SAAWn1C,EAAQm1C,UAO1Bz/C,KAAK6xM,mBAAqBvnM,EAAQ4C,MAAQ5C,EAAQ4C,MAAQ,IAM1DlN,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,IAMrEvgC,KAAK8xM,yBAA0B,EAM/B9xM,KAAK+xM,6BAA8B,EAMnC/xM,KAAKgyM,yBAAsBxrM,EAM3BxG,KAAKiyM,iBAAmB,CAAE,EAM1BjyM,KAAK0iC,MAAQ,KAMb1iC,KAAK2/C,eAAiB,EAC1B,CAWE,WAAAv5C,CAAYy2C,GACV,IAAKA,EAAgBjc,cACnB,OAAO,EAGT,IAAIuc,GAAY,EAEhB,GADAn9C,KAAK6/C,uBAAuBhD,GACxB78C,KAAK8xM,yBACP,GAAIj1J,EAAgBn4C,MAAQ08B,GAAoBI,YAC9CxhC,KAAKs/C,gBAAgBzC,GAErBA,EAAgBjc,cAAc/7B,sBACzB,GAAIg4C,EAAgBn4C,MAAQ08B,GAAoBO,UAAW,CAChE,MAAMme,EAAY9/C,KAAKw/C,cAAc3C,GACrC78C,KAAK8xM,wBAA0BhyJ,CACvC,OAEM,GAAIjD,EAAgBn4C,MAAQ08B,GAAoBM,YAC9C,GAAI1hC,KAAK+xM,4BAA6B,CACpC/xM,KAAK+xM,6BAA8B,EACnC,MAAMhyJ,EAAU//C,KAAKq/C,gBAAgBxC,GACrC78C,KAAK8xM,wBAA0B/xJ,EAC/B5C,EAAYn9C,KAAKy/C,SAASM,EACpC,MACU5C,EAAYn9C,KAAKy/C,UAAS,GAC1Bz/C,KAAKkyM,iBAIX,OAAQ/0J,CACZ,CAME,eAAAmC,CAAgBzC,GACd,IAAI4I,EAAa,EAEjB,MAAML,EAASplD,KAAK2/C,eAAe,GAC7B0F,EAASrlD,KAAK0iC,MACd9jB,EAAWwmC,EAAO3gB,QAAU4gB,EAAO5gB,aAEdj+B,IAAvBxG,KAAKulD,gBACPE,EACE,GAAKzlD,KAAKulD,cAAgB3mC,GAAY5e,KAAK6xM,oBAE/C7xM,KAAKulD,cAAgB3mC,EAEH,GAAd6mC,IACFzlD,KAAKwlD,gBAAkBC,GAIzB,MAAMt0B,EAAM0rB,EAAgB1rB,IACtBiqB,EAAOjqB,EAAIkqB,UACjBlqB,EAAI6lB,SACJoE,EAAKrH,yBAAyB0R,EAClC,CAOE,eAAApG,CAAgBxC,GACd,GAAkC,GAA9B78C,KAAK2/C,eAAe9+C,OAAa,CACnC,MAAMswB,EAAM0rB,EAAgB1rB,IAQ5B,OAPAnxB,KAAK8kD,QAAU,KACf9kD,KAAKulD,mBAAgB/+C,EACrBxG,KAAKwlD,gBAAkB,EACvBxlD,KAAK0iC,MAAQma,EAAgBjc,cACxB5gC,KAAK8xM,yBACR3gL,EAAIkqB,UAAU3G,oBAET,CACb,CACI,OAAO,CACX,CAOE,aAAA8K,CAAc3C,GACZ,GAAkC,GAA9B78C,KAAK2/C,eAAe9+C,OAAa,CACnC,MACMu6C,EADMyB,EAAgB1rB,IACXkqB,UACXh6C,EAAYrB,KAAKwlD,gBAAkB,EAAI,GAAM,EAInD,OAHApK,EAAKzG,eAAe30C,KAAK+6C,UAAW15C,GACpCrB,KAAK8xM,yBAA0B,EAC/B9xM,KAAK+xM,6BAA8B,GAC5B,CACb,CACI,OAAO,CACX,CAQE,QAAAtyJ,CAASM,GACP,OAAOA,CACX,CAME,sBAAAF,CAAuBhD,GACrB,GAgDJ,SAAgCA,GAC9B,MAAMn4C,EAAOm4C,EAAgBn4C,KAC7B,OACEA,IAAS08B,GAAoBM,aAC7Bh9B,IAAS08B,GAAoBI,aAC7B98B,IAAS08B,GAAoBO,SAEjC,CAvDQwwK,CAAuBt1J,GAAkB,CAC3C,MAAMh3C,EAAQg3C,EAAgBjc,cAExB7zB,EAAKlH,EAAM+9B,UAAU7S,WACvB8rB,EAAgBn4C,MAAQ08B,GAAoBO,iBACvC3hC,KAAKiyM,iBAAiBllM,IACpB8vC,EAAgBn4C,MAAQ08B,GAAoBM,aAE5C30B,KAAM/M,KAAKiyM,oBADpBjyM,KAAKiyM,iBAAiBllM,GAAMlH,GAK9B7F,KAAK2/C,eAAiBj5C,OAAOoC,OAAO9I,KAAKiyM,iBAC/C,CACA,CAME,cAAAC,QACmC1rM,IAA7BxG,KAAKgyM,qBAEPvuK,aAAazjC,KAAKgyM,qBAClBhyM,KAAKgyM,yBAAsBxrM,IAE3BxG,KAAK+xM,6BAA8B,EACnC/xM,KAAKgyM,oBAAsBtuK,WACzB1jC,KAAKokD,gBAAgBl9C,KAAKlH,MAC1B,KAGR,CAKE,eAAAokD,GACEpkD,KAAK+xM,6BAA8B,EACnC/xM,KAAKgyM,yBAAsBxrM,CAC/B,GLg7BA49K,GAAGvqG,YAAY58B,gBAAkBm1J,GACjChuB,GAAGvqG,YAAYw4H,Y1C3kCf,cAA0B31J,GAIxB,WAAA38C,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhCrF,MAAM,CACJmB,YAAatD,IAMf9C,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAKsyM,eAAgB,EAMrBtyM,KAAKuyM,SAAW,GAChB,MAAMC,EAAqBloM,EAAQkoM,mBAC/BloM,EAAQkoM,mBACR,GACJ,IAAK,IAAIjxM,EAAI,EAAG4E,EAAKqsM,EAAmB3xM,OAAQU,EAAI4E,IAAM5E,EAAG,CAC3D,IAAIigB,EAASgxL,EAAmBjxM,GACV,mBAAXigB,IACTA,EAAS,IAAIA,GAEfxhB,KAAKuyM,SAAS5sM,KAAK6b,GACnBxhB,KAAKsyM,cACHtyM,KAAKsyM,eAAsC,gBAArB9wL,EAAO4R,SACrC,CAMIpzB,KAAK6qC,YAAcvgC,EAAQqR,WACvB2X,GAAchpB,EAAQqR,YACtB,KAMJ3b,KAAKyyM,gBAAkB,KAMvBzyM,KAAK0rL,QAAUphL,EAAQP,QAAU,KAMjC/J,KAAKoB,OAASkJ,EAAQlJ,OAASkJ,EAAQlJ,OAAS,IACpD,CAOE,aAAAsxM,CAAc/pD,EAAM9iJ,GAClB,MAAM4jC,EAAS5jC,EAAMzE,OAAOqoC,OACtBtY,EAAMnxB,KAAKk3C,SACjB,IASIqnB,EATA5iD,EAAa3b,KAAK6qC,YACtB,IAAKlvB,IACHA,EAAauS,MACRvS,GAAY,CAEfA,EADawV,EAAIkqB,UACC/nB,eAC1B,CAII,MAAMq/K,EAAU3yM,KAAKuyM,SACrB,IAAK,IAAIhxM,EAAI,EAAG4E,EAAKwsM,EAAQ9xM,OAAQU,EAAI4E,IAAM5E,EAAG,CAChD,MAAMigB,EAASmxL,EAAQpxM,GACvB,IAAIkkB,EAAQgkB,EACRzpC,KAAKsyM,eAAsC,gBAArB9wL,EAAO4R,iBAClB5sB,IAAT+3D,IACFA,GAAO,IAAIynG,aAAc13J,OAAOm7B,IAElChkB,EAAQ84C,GAEV,MAAMmc,EAAW16E,KAAK4yM,iBAAiBpxL,EAAQiE,EAAO,CACpD+7D,kBAAmB7lE,IAErB,GAAI++D,GAAYA,EAAS75E,OAAS,EAAG,CAC/Bb,KAAK0rL,UACP1rL,KAAK0rL,QAAQrnL,QACbrE,KAAK0rL,QAAQ7pG,YAAYnH,IAE3B16E,KAAK4F,cACH,IAAI8iJ,GACFD,GACAE,EACAjuE,EACA/+D,IAGJ,KACR,CACA,CACA,CAKE,kBAAAk3L,GACE,MAAM1hL,EAAMnxB,KAAKk3C,SACjB,GAAI/lB,EAAK,CACP,MAAM2hL,EAAW9yM,KAAKoB,OAASpB,KAAKoB,OAAS+vB,EAAIwR,cACjD3iC,KAAKyyM,gBAAkB,CACrB3rM,EAAOgsM,EAAUjzM,EAAgBG,KAAK+yM,WAAY/yM,MAClD8G,EAAOgsM,EAAUjzM,EAAqBG,KAAKgzM,WAAYhzM,MACvD8G,EAAOgsM,EAAUjzM,EAAoBG,KAAKgzM,WAAYhzM,MACtD8G,EAAOgsM,EAAUjzM,EAAgBG,KAAKgzM,WAAYhzM,MAE1D,CACA,CASE,SAAA28C,CAAUG,IACH98C,KAAK48C,aAAeE,GACvB98C,KAAK6yM,qBAEH7yM,KAAK48C,cAAgBE,GACvB98C,KAAKizM,uBAEPhuM,MAAM03C,UAAUG,EACpB,CASE,MAAA3F,CAAOhmB,GACLnxB,KAAKizM,uBACLhuM,MAAMkyC,OAAOhmB,GACTnxB,KAAK48C,aACP58C,KAAK6yM,oBAEX,CASE,gBAAAD,CAAiBpxL,EAAQ+8C,EAAMj0D,GAC7B,IACE,OAEGkX,EAAO+/D,aAAahjB,EAAMj0D,EAEnC,CAAM,MACA,OAAO,IACb,CACA,CAKE,oBAAA2oM,GACMjzM,KAAKyyM,kBACPzyM,KAAKyyM,gBAAgB3nM,QAAQzD,GAC7BrH,KAAKyyM,gBAAkB,KAE7B,CAKE,UAAAM,CAAWltM,GACT,MAAMqtM,EAAQrtM,EAAMstM,aAAaD,MACjC,IAAK,IAAI3xM,EAAI,EAAG4E,EAAK+sM,EAAMryM,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAMonJ,EAAOuqD,EAAMjoM,KAAK1J,GAClB6xM,EAAS,IAAIC,WACnBD,EAAO9tM,iBACLzF,EACAG,KAAK0yM,cAAcxrM,KAAKlH,KAAM2oJ,IAE5B3oJ,KAAKsyM,cACPc,EAAOE,kBAAkB3qD,GAEzByqD,EAAOG,WAAW5qD,EAE1B,CACA,CAKE,UAAAqqD,CAAWntM,GACTA,EAAMf,kBACNe,EAAMhB,iBACNgB,EAAMstM,aAAaK,WAAa,MACpC,G0Cu2BApvB,GAAGvqG,YAAYw4H,YAAY3pD,iBAAmB+qD,GAC9CrvB,GAAGvqG,YAAY53B,QAAUyxJ,GACzBtvB,GAAGvqG,YAAY53B,QAAQD,aAAe2xJ,GACtCvvB,GAAGvqG,YAAY55B,QAAU2zJ,GACzBxvB,GAAGvqG,YAAY74B,WAAa6yJ,GAC5BzvB,GAAGvqG,YAAYi6H,kBMppCf,cAAgC10J,GAI9B,WAAAr/C,CAAYuK,GAGVrF,MAFAqF,EAAUA,GAAoB,CAAE,GAQhCtK,KAAKwgD,WAAal2C,EAAQi2C,UAAYj2C,EAAQi2C,UAAY3B,GAM1D5+C,KAAKihD,gBAAaz6C,EAMlBxG,KAAK+zM,oBAAiBvtM,EAMtBxG,KAAKwlD,gBAAkB,EAMvBxlD,KAAK+6C,eAAiCv0C,IAArB8D,EAAQi2B,SAAyBj2B,EAAQi2B,SAAW,GACzE,CAOE,eAAA+e,CAAgBzC,GACd,IAAKmC,GAAUnC,GACb,OAGF,MAAM1rB,EAAM0rB,EAAgB1rB,IACtBne,EAAOme,EAAIhe,UACXkE,EAASwlC,EAAgB5b,MACzBxmB,EAASpD,EAAO,GAAKrE,EAAK,GAAK,EAC/B0H,EAAS1H,EAAK,GAAK,EAAIqE,EAAO,GAC9BizB,EAAQ1+B,KAAK4S,MAAM9D,EAAQD,GAC3Bu5L,EAAYpoM,KAAK6S,KAAKhE,EAASA,EAASC,EAASA,GACjD0gC,EAAOjqB,EAAIkqB,UACjB,QAAwB70C,IAApBxG,KAAKihD,WAA0B,CACjC,MAAMgzJ,EAAaj0M,KAAKihD,WAAa3W,EACrC8Q,EAAKjH,uBAAuB8/J,EAClC,CACIj0M,KAAKihD,WAAa3W,OACU9jC,IAAxBxG,KAAK+zM,gBACP34J,EAAKrH,yBAAyB/zC,KAAK+zM,eAAiBC,QAE1BxtM,IAAxBxG,KAAK+zM,iBACP/zM,KAAKwlD,gBAAkBxlD,KAAK+zM,eAAiBC,GAE/Ch0M,KAAK+zM,eAAiBC,CAC1B,CAQE,aAAAx0J,CAAc3C,GACZ,IAAKmC,GAAUnC,GACb,OAAO,EAGT,MACMzB,EADMyB,EAAgB1rB,IACXkqB,UACXh6C,EAAYrB,KAAKwlD,gBAAkB,EAAI,GAAM,EAGnD,OAFApK,EAAKzG,eAAe30C,KAAK+6C,UAAW15C,GACpCrB,KAAKwlD,gBAAkB,GAChB,CACX,CAQE,eAAAnG,CAAgBxC,GACd,QAAKmC,GAAUnC,OAIX78C,KAAKwgD,WAAW3D,KAClBA,EAAgB1rB,IAAIkqB,UAAU3G,mBAC9B10C,KAAKihD,gBAAaz6C,EAClBxG,KAAK+zM,oBAAiBvtM,GACf,GAGb,GNwiCA49K,GAAGvqG,YAAYn3B,SAAWwxJ,GAC1B9vB,GAAGvqG,YAAYs6H,KzC/lBf,cAAmB/0J,GAIjB,WAAAr/C,CAAYuK,GACV,MAAMu6C,EAAc,EAGfA,EAAepF,WAClBoF,EAAepF,SAAW18C,GAG5BkC,MAAM4/C,GAKN7kD,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAKo0M,eAAgB,EAMrBp0M,KAAKq0M,QAAU,KAMfr0M,KAAKs0M,aAMLt0M,KAAKu0M,cAOLv0M,KAAKw0M,aAMLx0M,KAAKy0M,WAAY,EAOjBz0M,KAAK0rL,QAAUphL,EAAQP,OAASO,EAAQP,OAAS,KAOjD/J,KAAK4sJ,UAAYtiJ,EAAQowE,SAAWpwE,EAAQowE,SAAW,KAOvD16E,KAAK00M,eAAiBpqM,EAAQqqM,cAAgBrqM,EAAQqqM,cAAgB,GAOtE30M,KAAKyjG,MACHn5F,EACD,KAODtK,KAAKgkD,MAivCT,SAAiBt/C,GACf,OAAQA,GACN,IAAK,QACL,IAAK,aACH,MAAO,QACT,IAAK,aACL,IAAK,kBACH,MAAO,aACT,IAAK,UACL,IAAK,eACH,MAAO,UACT,IAAK,SACH,MAAO,SACT,QACE,MAAM,IAAI2D,MAAM,iBAAmB3D,GAEzC,CAjwCiBkwM,CAAQ50M,KAAKyjG,OAQ1BzjG,KAAK60M,aAAevqM,EAAQwqM,UAS5B90M,KAAK+0M,WAAazqM,EAAQ0qM,UACtB1qM,EAAQ0qM,UACO,YAAfh1M,KAAKgkD,MACH,EACA,EAQNhkD,KAAKi1M,WACY,WAAfj1M,KAAKgkD,MACD,EACA15C,EAAQ4qM,UACN5qM,EAAQ4qM,UACRn+L,IAOR/W,KAAKm1M,iBAAmB7qM,EAAQ8qM,gBAC5B9qM,EAAQ8qM,gBACRtyM,EAMJ9C,KAAKslM,gBAAkBh7L,EAAQi7L,eAC3Bj7L,EAAQi7L,eACR,KAEJ,IAAI8P,EAAmB/qM,EAAQ+qM,iBAC/B,IAAKA,EAAkB,CACrB,MAAMC,EAAOt1M,KAAKgkD,MAClB,GAAa,WAATsxJ,EAOFD,EAAmB,CAAC7/L,EAAalB,EAAUqH,KACzC,MAAM8E,EAASnM,GAEX,IAAIy9D,GAAO,CAAC//C,IAAKA,MACfhZ,EAASqV,GAAmB7Y,EAAY,GAAImG,GAC5C45L,EAAgBlqD,GACpBryI,EACAqV,GAAmB7Y,EAAYA,EAAY3U,OAAS,GAAI8a,IAE1D8E,EAAOkgF,mBACL3nF,EACApN,KAAK6S,KAAK82L,GACVv1M,KAAKslM,iBAEP,MAAMt3K,EAAiBE,KAIvB,OAHIF,GACFvN,EAAOsM,UAAUpR,EAAYqS,GAExBvN,CAAM,MAEV,CACL,IAAIk4G,EACS,UAAT28E,EACF38E,EAAc3gG,GACI,eAATs9K,EACT38E,EAAc1tC,GACI,YAATqqH,IACT38E,EAAc/9F,IAQhBy6K,EAAmB,CAAC7/L,EAAalB,EAAUqH,KACrCrH,EACW,YAATghM,EACE9/L,EAAY,GAAG3U,OAEjByT,EAASmgB,eACP,CAACjf,EAAY,GAAG+jD,OAAO,CAAC/jD,EAAY,GAAG,MACvCxV,KAAKslM,iBAGPhxL,EAASmgB,eAAe,GAAIz0B,KAAKslM,iBAGnChxL,EAASmgB,eAAejf,EAAaxV,KAAKslM,iBAG5ChxL,EAAW,IAAIqkH,EAAYnjH,EAAaxV,KAAKslM,iBAExChxL,EAEjB,CACA,CAMItU,KAAK4oE,kBAAoBysI,EAMzBr1M,KAAKw1M,sBACyBhvM,IAA5B8D,EAAQmrM,gBAAgCnrM,EAAQmrM,gBAAkB,IAQpEz1M,KAAK01M,kBAAoB,KAOzB11M,KAAK21M,eAAiB,KAOtB31M,KAAK41M,aAAe,KAOpB51M,KAAK61M,cAAgB,KAOrB71M,KAAK81M,YAAc,KAOnB91M,KAAK+1M,kBAAoB,KASzB/1M,KAAKg2M,uBAAyB1rM,EAAQ2rM,eAClC3rM,EAAQ2rM,eAAiB3rM,EAAQ2rM,eACjC,GAOJj2M,KAAKk2M,SAAW,IAAIvuE,GAAY,CAC9B59H,OAAQ,IAAI86F,GAAa,CACvBQ,iBAAiB,EACjB3pF,QAAOpR,EAAQoR,OAAQpR,EAAQoR,QAEjC5L,MAAOxF,EAAQwF,MAAQxF,EAAQwF,MAAQi6I,KACvCx2E,wBAAwB,IAQ1BvzE,KAAKiU,cAAgB3J,EAAQuoK,aAM7B7yK,KAAKwgD,WAAal2C,EAAQi2C,UAAYj2C,EAAQi2C,UAAY7B,GAM1D1+C,KAAKm2M,mBACD7rM,EAAQ8rM,SACVp2M,KAAKm2M,mBAAqB73J,GAE1Bt+C,KAAKm2M,mBAAqB7rM,EAAQ+rM,kBAC9B/rM,EAAQ+rM,kBACRz3J,GAON5+C,KAAKs2M,gBACLt2M,KAAKu2M,SAASjsM,EAAQksM,QAAS,GAM/Bx2M,KAAKy2M,YAAc,CAAC35J,QAAQ,GAM5B98C,KAAK02M,aAAepsM,EAAQqsM,aAAersM,EAAQP,QAAU,KAE7D/J,KAAK0J,kBAAkB+yC,GAA4Bz8C,KAAK42M,aAC5D,CAQE,QAAAL,CAASC,GACP,IAAIj2J,EAIFA,EAHGi2J,GAEgB,IAAVA,EACGl4J,GAEAk4J,EAJAh4J,GAMdx+C,KAAKs2M,gBAAkB/1J,CAC3B,CASE,MAAApJ,CAAOhmB,GACLlsB,MAAMkyC,OAAOhmB,GACbnxB,KAAK42M,cACT,CAOE,UAAAC,GACE,OAAO72M,KAAKk2M,QAChB,CASE,WAAA9vM,CAAYP,GACNA,EAAM+6B,cAAcl8B,OAAS7E,GAE/BgG,EAAM+6B,cAAc/7B,iBAEtB7E,KAAKy0M,UAA2B,UAAfz0M,KAAKgkD,OAAqBhkD,KAAKm2M,mBAAmBtwM,GACnE,IAAI4oL,EAAO5oL,EAAMnB,OAAS08B,GAAoBK,YAC1C8b,GAAO,EACX,IACGv9C,KAAKy0M,WACNz0M,KAAKu0M,eACL1uM,EAAMnB,OAAS08B,GAAoBI,YACnC,CACYrB,KAAKC,MACPpgC,KAAKu0M,eAAiBv0M,KAAKw1M,kBACnCx1M,KAAKq0M,QAAUxuM,EAAMo7B,MACrBjhC,KAAKo0M,eAAiBp0M,KAAKy0M,UAC3BhmB,GAAO,GAEPzuL,KAAKu0M,mBAAgB/tM,EAEnBxG,KAAKo0M,oBAAuC5tM,IAAtBxG,KAAKs0M,eAC7B7wK,aAAazjC,KAAKs0M,cAClBt0M,KAAKs0M,kBAAe9tM,EAE5B,CAgCI,OA9BExG,KAAKy0M,WACL5uM,EAAMnB,OAAS08B,GAAoBI,aACX,OAAxBxhC,KAAK21M,gBAEL31M,KAAK82M,cAAcjxM,EAAMuQ,YACzBmnC,GAAO,GAEPv9C,KAAKy0M,WACL5uM,EAAMnB,OAAS08B,GAAoBM,YAEnC6b,GAAO,EACEkxI,GAAQzuL,KAAK4/C,kBAAoB,GAC1CrC,EAAO13C,EAAMnB,OAAS08B,GAAoBK,YACtC8b,GAAQv9C,KAAKy0M,WACfz0M,KAAKokC,mBAAmBv+B,GACpB7F,KAAKo0M,eAEPvuM,EAAM+6B,cAAc/7B,mBAGc,UAApCgB,EAAM+6B,cAAcqe,aACnBp5C,EAAMnB,OAAS08B,GAAoBI,kBACZh7B,IAAtBxG,KAAKs0M,eAEPt0M,KAAKokC,mBAAmBv+B,IAEjBA,EAAMnB,OAAS08B,GAAoBG,WAC5Cgc,GAAO,GAGFt4C,MAAMmB,YAAYP,IAAU03C,CACvC,CAQE,eAAA8B,CAAgBx5C,GAGd,OAFA7F,KAAKo0M,eAAiBp0M,KAAKy0M,UAEvBz0M,KAAKy0M,WACPz0M,KAAKq0M,QAAUxuM,EAAMo7B,MAChBjhC,KAAK01M,mBACR11M,KAAK+2M,cAAclxM,EAAMuQ,aAEpB,GAGJpW,KAAKwgD,WAAW36C,IAKrB7F,KAAKu0M,cAAgBp0K,KAAKC,MAC1BpgC,KAAKs0M,aAAe5wK,YAAW,KAC7B1jC,KAAKokC,mBACH,IAAIzD,GACFS,GAAoBK,YACpB57B,EAAMsrB,IACNtrB,EAAM+6B,eACN,EACA/6B,EAAM66B,YAET,GACA1gC,KAAKw1M,kBACRx1M,KAAKq0M,QAAUxuM,EAAMo7B,OACd,IAjBLjhC,KAAKu0M,mBAAgB/tM,GACd,EAiBb,CAKE,gBAAAwwM,GACEh3M,KAAKy2M,YAAc,CAAC35J,QAAQ,EAChC,CAOE,iBAAAm6J,CAAkBpxM,GAChB,IAAK7F,KAAK02M,eAAiB12M,KAAKs2M,gBAAgBzwM,GAC9C,OAGF,GAAI7F,KAAKy2M,YAAY35J,OAEnB,YADA98C,KAAKg3M,mBAIP,MAAM7lL,EAAMnxB,KAAKk3C,SASXzhC,EAASF,GAAe,CARZ4b,EAAIgQ,uBAAuB,CAC3Ct7B,EAAMo7B,MAAM,GAAKjhC,KAAK00M,eACtB7uM,EAAMo7B,MAAM,GAAKjhC,KAAK00M,iBAELvjL,EAAIgQ,uBAAuB,CAC5Ct7B,EAAMo7B,MAAM,GAAKjhC,KAAK00M,eACtB7uM,EAAMo7B,MAAM,GAAKjhC,KAAK00M,mBAGlBh6H,EAAW16E,KAAK02M,aAAarvG,oBAAoB5xF,GACvD,GAAwB,IAApBilE,EAAS75E,OACX,OAGF,MAAM0oJ,EA74BV,SAAyBnzI,EAAYskE,GAInC,MAAM6uE,EAAU,GAEhB,IAAK,IAAIhoJ,EAAI,EAAGA,EAAIm5E,EAAS75E,SAAUU,EAGrC+nJ,GAA2BlzI,EAFXskE,EAASn5E,GACAqT,cACwB20I,GAGnD,OAAOA,CACT,CAg4BoB2tD,CAAgBrxM,EAAMuQ,WAAYskE,GAC9C6uE,EAAQ1oJ,SACVb,KAAKy2M,YAAc,CACjB35J,QAAQ,EACRq6J,QAAStxM,EAAMo7B,MAAMz9B,QACrB+lJ,QAASA,EACT6tD,aAAe,GAGvB,CAOE,6BAAAC,CAA8Bj2M,EAAQs7I,GAKpC,MAAM46D,EAAoBl2M,EAAOilC,YAAcjlC,EAAOs7I,SAElD46D,IADqBl2M,EAAOilC,YAAcq2G,EAIzC46D,GAAqB56D,EAAWt7I,EAAOs7I,WACtC46D,GAAqB56D,EAAWt7I,EAAOs7I,SAGzC18I,KAAKu3M,sBAAsBn2M,EAAQA,EAAOs7I,SAAUA,IAEnD46D,GAAqB56D,EAAWt7I,EAAOs7I,WACtC46D,GAAqB56D,EAAWt7I,EAAOs7I,WAGzC18I,KAAKw3M,yBAAyB96D,EAAUt7I,EAAOs7I,WAIjD18I,KAAKw3M,yBAAyBp2M,EAAOilC,WAAYjlC,EAAOs7I,UACxD18I,KAAKu3M,sBAAsBn2M,EAAQA,EAAOilC,WAAYq2G,GAE5D,CAOE,wBAAA86D,CAAyBC,EAAWC,GAClC,GAAID,IAAcC,EAChB,OAGF,IAAIrsM,EAAS,EACb,GAAIosM,EAAYC,EAAS,CACvB,MAAMzqM,EAAQrB,KAAKgS,KAAK65L,GACxB,IAAI91M,EAAMiK,KAAKoQ,MAAM07L,GACjB/1M,IAAQ+1M,IACV/1M,GAAO,GAET0J,EAAS1J,EAAMsL,EAAQ,CAC7B,KAAW,CACL,MAAMA,EAAQrB,KAAKoQ,MAAMy7L,GACzB,IAAI91M,EAAMiK,KAAKgS,KAAK85L,GAChB/1M,IAAQ+1M,IACV/1M,GAAO,GAET0J,EAAS4B,EAAQtL,EAAM,CAC7B,CAEQ0J,EAAS,GACXrL,KAAK23M,kBAAkBtsM,EAE7B,CAQE,qBAAAksM,CAAsBn2M,EAAQq2M,EAAWC,GACvC,GAAID,IAAcC,EAChB,OAGF,MAAMliM,EAAc,GACpB,GAAIiiM,EAAYC,EAAS,CAEvB,MAAMzqM,EAAQrB,KAAKgS,KAAK65L,GACxB,IAAI91M,EAAMiK,KAAKoQ,MAAM07L,GACjB/1M,IAAQ+1M,IAEV/1M,GAAO,GAET,IAAK,IAAIJ,EAAI0L,EAAO1L,GAAKI,IAAOJ,EAC9BiU,EAAY7P,KAAKojJ,GAAc3nJ,EAAOoU,YAAajU,GAE3D,KAAW,CAEL,MAAM0L,EAAQrB,KAAKoQ,MAAMy7L,GACzB,IAAI91M,EAAMiK,KAAKgS,KAAK85L,GAChB/1M,IAAQ+1M,IACV/1M,GAAO,GAET,IAAK,IAAIJ,EAAI0L,EAAO1L,GAAKI,IAAOJ,EAC9BiU,EAAY7P,KAAKojJ,GAAc3nJ,EAAOoU,YAAajU,GAE3D,CACQiU,EAAY3U,QACdb,KAAK43M,kBAAkBpiM,EAE7B,CAOE,YAAAqiM,CAAahyM,GACX,MAAMiyM,EAAa93M,KAAKy2M,YACxB,IAAKqB,EAAWh7J,OACd,OAGF,QAAIg7J,EAAWV,aAETx4L,GAASk5L,EAAWX,QAAStxM,EAAMo7B,OAASjhC,KAAK00M,eACnD,OAIJ,MAAMqD,EAz3BV,SAA8B3hM,EAAY0hM,EAAY3mL,EAAKwjL,GACzD,MAAM5+L,EAAIK,EAAW,GACfJ,EAAII,EAAW,GAErB,IAAI4hM,EAAwBjhM,IAExBkhM,GAAmB,EACnBC,EAAclmL,IAElB,IACE,IAAIolL,EAAc,EAClBA,EAAcU,EAAWvuD,QAAQ1oJ,SAC/Bu2M,EACF,CACA,MAAMh2M,EAAS02M,EAAWvuD,QAAQ6tD,GAC5B5hM,EAAcpU,EAAOoU,YAE3B,IACIknI,EADAy7D,EAAqBphM,IAEzB,IACE,IAAIqhM,EAAkB,EACtBA,EAAkB5iM,EAAY3U,OAAS,IACrCu3M,EACF,CACA,MAEMj+F,EAAMyvC,GAA4B7zI,EAAGC,EAF7BR,EAAY4iM,GACd5iM,EAAY4iM,EAAkB,IAEtCj+F,EAAI79F,gBAAkB67L,IACxBA,EAAqBh+F,EAAI79F,gBACzBogI,EAAW07D,EAAkBj+F,EAAIr5F,MAEzC,CAEQq3L,EAAqBH,IACvBA,EAAwBG,EACpB/2M,EAAOuoJ,MAAQmuD,EAAWV,cAAgBA,IAExCh2M,EAAOs7I,SAAWt7I,EAAOilC,WAEvBq2G,EAAWt7I,EAAOilC,aACpBq2G,GAAYlnI,EAAY3U,QAEjBO,EAAOs7I,SAAWt7I,EAAOilC,YAE9Bq2G,EAAWt7I,EAAOilC,aACpBq2G,GAAYlnI,EAAY3U,SAI9Bq3M,EAAcx7D,EACdu7D,EAAiBb,EAEvB,CAEE,MAAMiB,EAAYP,EAAWvuD,QAAQ0uD,GACrC,IAAIK,EAAyBD,EAAU1uD,KACvC,GAAImuD,EAAWV,cAAgBa,GAAkBK,EAAwB,CAEvE,MAAMC,EAAgBlvD,GACpBgvD,EAAU7iM,YACV0iM,GAGEt5L,GADUuS,EAAIsqD,uBAAuB88H,GACrBT,EAAWX,SAAWxC,IACxC2D,GAAyB,EAE/B,CAEE,GAAIA,EAAwB,CAC1B,MAAM9iM,EAAc6iM,EAAU7iM,YACxB4wB,EAAQ5wB,EAAY3U,OACpBwlC,EAAagyK,EAAUhyK,WACvBq2G,EAAWw7D,EACjB,GAAI7xK,EAAaq2G,EAAU,CACzB,MAAM87D,EAAkBxvD,GACtBxzI,EACA6wB,EACAq2G,GAEsBsM,GACtBxzI,EACA6wB,EACAq2G,EAAWt2G,GAESoyK,IACpBN,GAAe9xK,EAEvB,KAAW,CACL,MAAMqyK,EAAkBzvD,GACtBxzI,EACA6wB,EACAq2G,GAEsBsM,GACtBxzI,EACA6wB,EACAq2G,EAAWt2G,GAESqyK,IACpBP,GAAe9xK,EAEvB,CACA,CAIE,OAFAsjH,GAAiB9mJ,MAAQq1M,EACzBvuD,GAAiBhN,SAAWw7D,EACrBxuD,EACT,CA8wB+BgvD,CACzB7yM,EAAMuQ,WACN0hM,EACA93M,KAAKk3C,SACLl3C,KAAK00M,gBAGP,GAAIoD,EAAWV,cAAgBW,EAAmBn1M,MAAO,CAEvD,QAAIk1M,EAAWV,YAAoB,CAEjC,MAAMuB,EAAYb,EAAWvuD,QAAQuuD,EAAWV,aAChDp3M,KAAKw3M,yBAAyBmB,EAAUtyK,WAAYsyK,EAAUj8D,SACtE,CAEM,MAAM27D,EAAYP,EAAWvuD,QAAQwuD,EAAmBn1M,OACxD5C,KAAKu3M,sBACHc,EACAA,EAAUhyK,WACV0xK,EAAmBr7D,SAE3B,KAAW,CAEL,MAAMt7I,EAAS02M,EAAWvuD,QAAQuuD,EAAWV,aAC7Cp3M,KAAKq3M,8BAA8Bj2M,EAAQ22M,EAAmBr7D,SACpE,CAGIo7D,EAAWV,YAAcW,EAAmBn1M,MAC5C,MAAMxB,EAAS02M,EAAWvuD,QAAQuuD,EAAWV,aAC7Ch2M,EAAOs7I,SAAWq7D,EAAmBr7D,SAGrC,MAAMtmI,EAAaizI,GACjBjoJ,EAAOoU,YACPpU,EAAOs7I,UAEHz7G,EAAQjhC,KAAKk3C,SAASukC,uBAAuBrlE,GACnDvQ,EAAMuQ,WAAaA,EACnBvQ,EAAMo7B,MAAQ,CAACr1B,KAAK+R,MAAMsjB,EAAM,IAAKr1B,KAAK+R,MAAMsjB,EAAM,IAC1D,CAQE,aAAAue,CAAc35C,GACZ,IAAI03C,GAAO,EAEX,GAA+B,IAA3Bv9C,KAAK4/C,kBAAyB,CAC5B5/C,KAAKs0M,eACP7wK,aAAazjC,KAAKs0M,cAClBt0M,KAAKs0M,kBAAe9tM,GAGtBxG,KAAKokC,mBAAmBv+B,GACxB,MAAM+yM,EAAU54M,KAAKy2M,YAAY35J,OAGjC,GAFA98C,KAAKi3M,kBAAkBpxM,GAEnB7F,KAAKo0M,cAAe,CACtB,MAAMyE,GAAkB74M,KAAK01M,kBACzBmD,GACF74M,KAAK+2M,cAAclxM,EAAMuQ,aAEtByiM,GAAkB74M,KAAKy0M,UAC1Bz0M,KAAK84M,gBAEJ94M,KAAKy0M,WACJoE,GAAiC,UAAf74M,KAAKgkD,QAErBhkD,KAAK+4M,UAAUlzM,EAAMo7B,MAAO23K,GAC1B54M,KAAKm1M,iBAAiBtvM,IACxB7F,KAAK84M,gBAGP94M,KAAK82M,cAAcjxM,EAAMuQ,aAG7BmnC,GAAO,CACf,MAAiBv9C,KAAKy0M,WACdz0M,KAAKg5M,cAEb,CAKI,OAHKz7J,GAAQv9C,KAAK60M,YAChBhvM,EAAMhB,iBAED04C,CACX,CAOE,kBAAAnZ,CAAmBv+B,GAEjB,GADA7F,KAAKw0M,aAAe3uM,EAAM+6B,cAAcqe,YAEtCj/C,KAAKq0M,WACFr0M,KAAKy0M,WAAaz0M,KAAKo0M,eACvBp0M,KAAKy0M,YAAcz0M,KAAKo0M,eAC3B,CACA,MAAM6E,EAASj5M,KAAKq0M,QACd6E,EAAUrzM,EAAMo7B,MAChBhrB,EAAKgjM,EAAO,GAAKC,EAAQ,GACzBhjM,EAAK+iM,EAAO,GAAKC,EAAQ,GACzB58L,EAAkBrG,EAAKA,EAAKC,EAAKA,EAIvC,GAHAlW,KAAKo0M,cAAgBp0M,KAAKy0M,UACtBn4L,EAAkBtc,KAAKg2M,uBACvB15L,GAAmBtc,KAAKg2M,wBACvBh2M,KAAKo0M,cACR,MAER,CAESp0M,KAAK01M,mBAKV11M,KAAK63M,aAAahyM,GAClB7F,KAAKm5M,eAAetzM,EAAMuQ,aALxBpW,KAAKo5M,2BAA2BvzM,EAAMuQ,WAAW5S,QAMvD,CASE,SAAAu1M,CAAU93K,EAAO23K,GACf,IAAIS,GAAK,EACT,GAAIr5M,KAAK21M,eAAgB,CACvB,IAAI2D,GAAkB,EAClBC,EAA+B,CAACv5M,KAAK01M,mBACzC,MAAMJ,EAAOt1M,KAAKgkD,MAClB,GAAa,UAATsxJ,EACF+D,GAAK,OACA,GAAa,WAAT/D,EACT+D,EAAmC,IAA9Br5M,KAAK61M,cAAch1M,YACnB,GAAa,eAATy0M,EACTgE,GACGV,GAAW54M,KAAK61M,cAAch1M,OAASb,KAAK+0M,gBAC1C,GAAa,YAATO,EAAoB,CAC7B,MAAMkE,EAA6Cx5M,KAAkB,cACrEs5M,EAAkBE,EAAa,GAAG34M,OAASb,KAAK+0M,WAChDwE,EAA+B,CAC7BC,EAAa,GAAG,GAChBA,EAAa,GAAGA,EAAa,GAAG34M,OAAS,IAGzC04M,EADEX,EAC6B,CAACY,EAAa,GAAG,IAEjB,CAC7BA,EAAa,GAAG,GAChBA,EAAa,GAAGA,EAAa,GAAG34M,OAAS,GAGrD,CACM,GAAIy4M,EAAiB,CACnB,MAAMnoL,EAAMnxB,KAAKk3C,SACjB,IAAK,IAAI31C,EAAI,EAAG4E,EAAKozM,EAA6B14M,OAAQU,EAAI4E,EAAI5E,IAAK,CACrE,MAAMk4M,EAAmBF,EAA6Bh4M,GAChDm4M,EAAcvoL,EAAIsqD,uBAAuBg+H,GACzCxjM,EAAKgrB,EAAM,GAAKy4K,EAAY,GAC5BxjM,EAAK+qB,EAAM,GAAKy4K,EAAY,GAC5B/E,EAAgB30M,KAAKy0M,UAAY,EAAIz0M,KAAK00M,eAEhD,GADA2E,EAAKztM,KAAK6S,KAAKxI,EAAKA,EAAKC,EAAKA,IAAOy+L,EACjC0E,EAAI,CACNr5M,KAAK01M,kBAAoB+D,EACzB,KACZ,CACA,CACA,CACA,CACI,OAAOJ,CACX,CAME,0BAAAD,CAA2B5jM,GACzB,GAAKxV,KAAK41M,aAGH,CACmB51M,KAAK41M,aAAahhM,cAC1B6f,eAAejf,EACrC,MALMxV,KAAK41M,aAAe,IAAI9hM,GAAQ,IAAIkkB,GAAMxiB,IAC1CxV,KAAK25M,uBAKX,CAME,+BAAAC,CAAgCtlM,GACzBtU,KAAK81M,cACR91M,KAAK81M,YAAc,IAAIhiM,IAEzB,MAAM61I,EAAOr1I,EAASqnB,cAAc,GACpC,IAAIk+K,EAAiB75M,KAAK81M,YAAYlhM,cACjCilM,GAOHA,EAAetlL,mBACbo1H,EAAKx1H,YACLw1H,EAAK11H,sBAEP4lL,EAAejyM,YAVfiyM,EAAiB,IAAI5uH,GACnB0+D,EAAK11H,qBACL01H,EAAKx1H,aAEPn0B,KAAK81M,YAAYvhM,YAAYslM,GAQnC,CAOE,aAAA9C,CAAc9pM,GACZ,MAAM0O,EAAa3b,KAAKk3C,SAASmE,UAAU/nB,gBACrChc,EAASkd,GAAmBx0B,KAAKslM,iBACvC,KAAOr4L,EAAMpM,OAASyW,GACpBrK,EAAMtH,KAAK,GAEb3F,KAAK01M,kBAAoBzoM,EACN,UAAfjN,KAAKgkD,MACPhkD,KAAK61M,cAAgB5oM,EAAMzJ,QACH,YAAfxD,KAAKgkD,OACdhkD,KAAK61M,cAAgB,CAAC,CAAC5oM,EAAMzJ,QAASyJ,EAAMzJ,UAC5CxD,KAAK+1M,kBAAoB/1M,KAAK61M,cAAc,IAE5C71M,KAAK61M,cAAgB,CAAC5oM,EAAMzJ,QAASyJ,EAAMzJ,SAEzCxD,KAAK+1M,oBACP/1M,KAAK81M,YAAc,IAAIhiM,GAAQ,IAAIm3E,GAAWjrF,KAAK+1M,qBAErD,MAAMzhM,EAAWtU,KAAK4oE,kBACpB5oE,KAAK61M,mBACLrvM,EACAmV,GAEF3b,KAAK21M,eAAiB,IAAI7hM,GACtB9T,KAAKiU,eACPjU,KAAK21M,eAAejhM,gBAAgB1U,KAAKiU,eAE3CjU,KAAK21M,eAAephM,YAAYD,GAChCtU,KAAK25M,wBACL35M,KAAK4F,cACH,IAAIijJ,GAAUD,GAAyB5oJ,KAAK21M,gBAElD,CAOE,cAAAwD,CAAe/iM,GACb,MAAM+a,EAAMnxB,KAAKk3C,SACX5iC,EAAWtU,KAAK21M,eAAe/gM,cAC/B+G,EAAawV,EAAIkqB,UAAU/nB,gBAC3Bhc,EAASkd,GAAmBx0B,KAAKslM,iBACvC,IAAI9vL,EAAayhB,EACjB,KAAO7gB,EAAWvV,OAASyW,GACzBlB,EAAWzQ,KAAK,GAsBlB,GApBmB,UAAf3F,KAAKgkD,MACP/sB,EAAOj3B,KAAK61M,cACY,YAAf71M,KAAKgkD,OACdxuC,EAA4CxV,KAAkB,cAAE,GAChEi3B,EAAOzhB,EAAYA,EAAY3U,OAAS,GACpCb,KAAK+4M,UAAU5nL,EAAIsqD,uBAAuBrlE,MAE5CA,EAAapW,KAAK01M,kBAAkBlyM,WAGtCgS,EAAcxV,KAAK61M,cACnB5+K,EAAOzhB,EAAYA,EAAY3U,OAAS,IAE1Co2B,EAAK,GAAK7gB,EAAW,GACrB6gB,EAAK,GAAK7gB,EAAW,GACrBpW,KAAK4oE,kBAC4B5oE,KAAkB,cACjDsU,EACAqH,GAEE3b,KAAK41M,aAAc,CACG51M,KAAK41M,aAAahhM,cAC1B6f,eAAere,EACrC,CACI,GAA2B,YAAvB9B,EAAS8e,WAA0C,YAAfpzB,KAAKgkD,MAC3ChkD,KAAK45M,gCAA+B,QAC/B,GAAI55M,KAAK+1M,kBAAmB,CACV/1M,KAAK81M,YAAYlhM,cACzB6f,eAAez0B,KAAK+1M,kBACzC,CACI/1M,KAAK25M,uBACT,CAQE,aAAA7C,CAAc1gM,GACZ,MAAM9B,EAAWtU,KAAK21M,eAAe/gM,cAC/B+G,EAAa3b,KAAKk3C,SAASmE,UAAU/nB,gBAC3C,IAAI4rC,EACA1pD,EACJ,MAAM8/L,EAAOt1M,KAAKgkD,MA8BlB,MA7Ba,eAATsxJ,GAAkC,WAATA,GAC3Bt1M,KAAK01M,kBAAoBt/L,EAAW5S,QACpCgS,EAA4CxV,KAAkB,cAC1DwV,EAAY3U,QAAUb,KAAKi1M,aACzBj1M,KAAKy0M,UACPj/L,EAAY3K,MAEZq0D,GAAO,GAGX1pD,EAAY7P,KAAKyQ,EAAW5S,SAC5BxD,KAAK4oE,kBAAkBpzD,EAAalB,EAAUqH,IAC5B,YAAT25L,IACT9/L,EAA4CxV,KAAkB,cAAE,GAC5DwV,EAAY3U,QAAUb,KAAKi1M,aACzBj1M,KAAKy0M,UACPj/L,EAAY3K,MAEZq0D,GAAO,GAGX1pD,EAAY7P,KAAKyQ,EAAW5S,SACxB07D,IACFl/D,KAAK01M,kBAAoBlgM,EAAY,IAEvCxV,KAAK4oE,kBAAkB5oE,KAAK61M,cAAevhM,EAAUqH,IAEvD3b,KAAKo5M,2BAA2BhjM,EAAW5S,SAC3CxD,KAAK25M,wBACDz6I,EACKl/D,KAAK84M,gBAEP94M,KAAK21M,cAChB,CAKE,iBAAAgC,CAAkBr2M,GAChB,IAAKtB,KAAK21M,eACR,OAEF,MAAMrhM,EAAWtU,KAAK21M,eAAe/gM,cAC/B+G,EAAa3b,KAAKk3C,SAASmE,UAAU/nB,gBACrCgiL,EAAOt1M,KAAKgkD,MAClB,IAAK,IAAIziD,EAAI,EAAGA,EAAID,IAAKC,EAAG,CAC1B,IAAIiU,EACJ,GAAa,eAAT8/L,GAAkC,WAATA,EAAmB,CAG9C,GAFA9/L,EAA4CxV,KAAkB,cAC9DwV,EAAY3O,QAAS,EAAE,GACnB2O,EAAY3U,QAAU,EAAG,CAC3Bb,KAAK01M,kBAAoBlgM,EAAYA,EAAY3U,OAAS,GAAG2C,QAC7D,MAAMi2M,EAAmBz5M,KAAK01M,kBAAkBlyM,QAChDgS,EAAYA,EAAY3U,OAAS,GAAK44M,EACtCz5M,KAAKo5M,2BAA2BK,EAC1C,CACQz5M,KAAK4oE,kBAAkBpzD,EAAalB,EAAUqH,GACnB,YAAvBrH,EAAS8e,WAA2BpzB,KAAK81M,aAC3C91M,KAAK45M,gCACf,EAGA,MAAa,GAAa,YAATtE,EAAoB,CAC7B9/L,EAA4CxV,KAAkB,cAAE,GAChEwV,EAAY3O,QAAS,EAAE,GACvB,MAAMgzM,EAAiB75M,KAAK81M,YAAYlhM,cACxC,GAAIY,EAAY3U,QAAU,EAAG,CAC3B,MAAM44M,EAAmBjkM,EAAYA,EAAY3U,OAAS,GAAG2C,QAC7DgS,EAAYA,EAAY3U,OAAS,GAAK44M,EACtCz5M,KAAKo5M,2BAA2BK,EAC1C,CACQI,EAAeplL,eAAejf,GAC9BxV,KAAK4oE,kBAAkB5oE,KAAK61M,cAAevhM,EAAUqH,EAC7D,CAEM,GAA2B,IAAvBnG,EAAY3U,OAAc,CAC5Bb,KAAKg5M,eACL,KACR,CACA,CAEIh5M,KAAK25M,uBACT,CAOE,eAAAG,GACE95M,KAAK23M,kBAAkB,EAC3B,CASE,aAAAmB,GACE,MAAMiB,EAAgB/5M,KAAKg6M,gBAC3B,IAAKD,EACH,OAAO,KAET,IAAIvkM,EAAcxV,KAAK61M,cACvB,MAAMvhM,EAAWylM,EAAcnlM,cACzB+G,EAAa3b,KAAKk3C,SAASmE,UAAU/nB,gBAqC3C,MApCmB,eAAftzB,KAAKgkD,OAEPxuC,EAAY3K,MACZ7K,KAAK4oE,kBAAkBpzD,EAAalB,EAAUqH,IACtB,YAAf3b,KAAKgkD,QAEe,EAAc,GAAGn5C,MAC9C7K,KAAK4oE,kBAAkBpzD,EAAalB,EAAUqH,GAC9CnG,EAAclB,EAASyf,kBAIN,eAAf/zB,KAAKyjG,MACPs2G,EAAcxlM,YACZ,IAAI62E,GAAW,CAAgC,KAEzB,oBAAfprF,KAAKyjG,MACds2G,EAAcxlM,YACZ,IAAI+2E,GAAgB,CAA+B,KAE7B,iBAAftrF,KAAKyjG,OACds2G,EAAcxlM,YACZ,IAAIg3E,GAAa,CAA+B,KAKpDvrF,KAAK4F,cAAc,IAAIijJ,GAAUD,GAAuBmxD,IAGpD/5M,KAAK4sJ,WACP5sJ,KAAK4sJ,UAAUjnJ,KAAKo0M,GAElB/5M,KAAK0rL,SACP1rL,KAAK0rL,QAAQ1lF,WAAW+zG,GAEnBA,CACX,CAOE,aAAAC,GACEh6M,KAAK01M,kBAAoB,KACzB,MAAMqE,EAAgB/5M,KAAK21M,eAM3B,OALA31M,KAAK21M,eAAiB,KACtB31M,KAAK41M,aAAe,KACpB51M,KAAK81M,YAAc,KACnB91M,KAAKk2M,SAASv8J,YAAYt1C,OAAM,GAChCrE,KAAKg3M,mBACE+C,CACX,CAME,YAAAf,GACE,MAAMe,EAAgB/5M,KAAKg6M,gBACvBD,GACF/5M,KAAK4F,cAAc,IAAIijJ,GAAUD,GAAyBmxD,GAEhE,CAWE,iBAAAnC,CAAkBpiM,GAChB,MAAM8/L,EAAOt1M,KAAKgkD,MACZi2J,GAAcj6M,KAAK21M,eAKzB,IAAI6D,EACJ,GALIS,GACFj6M,KAAK+2M,cAAcvhM,EAAY,IAIpB,eAAT8/L,GAAkC,WAATA,EAC3BkE,EAA6Cx5M,KAAkB,kBAC1D,IAAa,YAATs1M,EAMT,OALAkE,EACEx5M,KAAK61M,eAAiB71M,KAAK61M,cAAch1M,OACPb,KAAkB,cAAE,GAClD,EAGZ,CAEQi6M,GACFT,EAAarqM,QAIfqqM,EAAa3uM,MAGb,IAAK,IAAItJ,EAAI,EAAGA,EAAIiU,EAAY3U,OAAQU,IACtCvB,KAAK82M,cAActhM,EAAYjU,IAGjC,MAAM24M,EAAS1kM,EAAYA,EAAY3U,OAAS,GAEhDb,KAAK21M,eAAiB31M,KAAK82M,cAAcoD,GACzCl6M,KAAKm5M,eAAee,EACxB,CAcE,MAAAr4M,CAAO4nE,GACL,MACMo4B,EADWp4B,EAAQ70D,cAEzB5U,KAAK21M,eAAiBlsI,EACtBzpE,KAAK61M,cAAgBh0G,EAAW9tE,iBAChC,MAAMkD,EAAOj3B,KAAK61M,cAAc71M,KAAK61M,cAAch1M,OAAS,GAC5Db,KAAK01M,kBAAoBz+K,EAAKzzB,QAC9BxD,KAAK61M,cAAclwM,KAAKsxB,EAAKzzB,SAC7BxD,KAAK41M,aAAe,IAAI9hM,GAAQ,IAAIkkB,GAAMf,IAC1Cj3B,KAAK25M,wBACL35M,KAAK4F,cACH,IAAIijJ,GAAUD,GAAyB5oJ,KAAK21M,gBAElD,CAME,qBAAAgE,GACE,MAAMQ,EAAiB,GACnBn6M,KAAK21M,gBACPwE,EAAex0M,KAAK3F,KAAK21M,gBAEvB31M,KAAK81M,aACPqE,EAAex0M,KAAK3F,KAAK81M,aAEvB91M,KAAK41M,cACPuE,EAAex0M,KAAK3F,KAAK41M,cAE3B,MAAMwE,EAAgBp6M,KAAKk2M,SAASv8J,YACpCygK,EAAc/1M,OAAM,GACpB+1M,EAAcv4H,YAAYs4H,EAC9B,CAKE,YAAAvD,GACE,MAAMzlL,EAAMnxB,KAAKk3C,SACX4F,EAAS98C,KAAK48C,YACfzrB,GAAQ2rB,GACX98C,KAAKg5M,eAEPh5M,KAAKk2M,SAAS/+J,OAAO2F,EAAS3rB,EAAM,KACxC,GyC7oBAizJ,GAAGvqG,YAAYs6H,KAAKtrD,UAAYwxD,GAChCj2B,GAAGvqG,YAAYs6H,KAAKmG,UzC+sBb,WACL,OAAO,SAAU9kM,EAAalB,EAAUqH,GACtC,MAAMlG,EAASF,GACgB,CAC3BC,EAAY,GACZA,EAAYA,EAAY3U,OAAS,IAChCswB,KAAI,SAAU/a,GACf,OAAOiY,GAAmBjY,EAAYuF,EAC9C,KAEU4+L,EAAiB,CACrB,CACEniM,GAAc3C,GACd4C,GAAe5C,GACf6C,GAAY7C,GACZ8C,GAAW9C,GACX2C,GAAc3C,KAGdnB,EACFA,EAASmgB,eAAe8lL,GAExBjmM,EAAW,IAAIsmB,GAAQ2/K,GAEzB,MAAMvsL,EAAiBE,KAIvB,OAHIF,GACF1Z,EAASyY,UAAUpR,EAAYqS,GAE1B1Z,CACR,CACH,EyC5uBA8vK,GAAGvqG,YAAYs6H,KAAKqG,qBzCqqBb,SAA8Bt+K,EAAOpa,GAC1C,OAAO,SAAUtM,EAAalB,EAAUqH,GACtC,MAAM3C,EAASqV,GACgB,EAAc,GAC3C1S,GAEIha,EAAM0sB,GACmB,EAAc7Y,EAAY3U,OAAS,GAChE8a,GAEIwC,EAASvS,KAAK6S,KAAK4sI,GAA0BryI,EAAQrX,IAC3D2S,EAAWA,GAAY2nB,GAAW,IAAI81C,GAAO/4D,GAASkjB,GAEtD,IAAIu+K,EAAgB34L,EACpB,IAAKA,GAAmB,IAAVA,EAAa,CACzB,MAAM/L,EAAIpU,EAAI,GAAKqX,EAAO,GACpBhD,EAAIrU,EAAI,GAAKqX,EAAO,GAC1ByhM,EAAgB7uM,KAAK4S,MAAMxI,EAAGD,EACpC,CACIqmB,GACJ,EACMpjB,EACAmF,EACAs8L,GAGF,MAAMzsL,EAAiBE,KAIvB,OAHIF,GACF1Z,EAASyY,UAAUpR,EAAYqS,GAE1B1Z,CACR,CACH,EyCpsBA8vK,GAAGvqG,YAAY6gI,OxCllCf,cAAqBt7J,GAInB,WAAAr/C,CAAYuK,GAGVrF,MAFAqF,EAAUA,GAAW,CAAE,GAOvBtK,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAOL1H,KAAKwgD,WAAal2C,EAAQi2C,UAAYj2C,EAAQi2C,UAAYjC,GAO1Dt+C,KAAKijB,QAAU,KAOfjjB,KAAK26M,gBAAkB,KAOvB36M,KAAK46M,qBACwBp0M,IAA3B8D,EAAQuwM,eAA+BvwM,EAAQuwM,eAAiB,GAOlE76M,KAAK86M,kBAAmB,EAOxB96M,KAAK+6M,eAAiB,KAOtB/6M,KAAKg7M,eAAiB,KAEjB1wM,IACHA,EAAU,CAAE,GAQdtK,KAAKi7M,eAAiB,IAAItzE,GAAY,CACpC59H,OAAQ,IAAI86F,GAAa,CACvBQ,iBAAiB,EACjB3pF,QAASpR,EAAQoR,QAEnB5L,MAAOxF,EAAQ4wM,SACX5wM,EAAQ4wM,SACRhxD,KACJ52E,sBAAsB,EACtBC,wBAAwB,IAQ1BvzE,KAAKm7M,eAAiB,IAAIxzE,GAAY,CACpC59H,OAAQ,IAAI86F,GAAa,CACvBQ,iBAAiB,EACjB3pF,QAASpR,EAAQoR,QAEnB5L,MAAOxF,EAAQ8wM,aACX9wM,EAAQ8wM,aACRjxD,KACJ72E,sBAAsB,EACtBC,wBAAwB,IAGtBjpE,EAAQmL,QACVzV,KAAKwkB,UAAUla,EAAQmL,OAE7B,CAQE,aAAA4lM,CAAcp6K,EAAO9P,GACnB,MAAMmqL,EAAkBnqL,EAAI4vB,+BAA+B9f,GACrDs6K,EAAiB,SAAUx6M,EAAGC,GAClC,OACEohB,GAAyBk5L,EAAiBv6M,GAC1CqhB,GAAyBk5L,EAAiBt6M,EAE7C,EACKyU,EAASzV,KAAKw7M,oBACpB,GAAI/lM,EAAQ,CAEV,MAAMi4I,EAiTZ,SAAqBj4I,GACnB,MAAO,CACL,CACE,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAErB,CACE,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAErB,CACE,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAErB,CACE,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAGzB,CApUuBgmM,CAAYhmM,GAC7Bi4I,EAAS70H,KAAK0iL,GACd,MAAMG,EAAiBhuD,EAAS,GAEhC,IAAIH,EAAS3sI,GAAiB06L,EAAiBI,GAC/C,MAAMluD,EAAcr8H,EAAI2vB,+BAA+BysG,GAGvD,GAAIouD,GAAmB16K,EAAOusH,IAAgBxtJ,KAAK46M,gBAAiB,CAElE,MAAMgB,EAASzqL,EAAI2vB,+BAA+B46J,EAAe,IAC3DG,EAAS1qL,EAAI2vB,+BAA+B46J,EAAe,IAC3DI,EAAezwD,GAA0BmC,EAAaouD,GACtDG,EAAe1wD,GAA0BmC,EAAaquD,GACtDG,EAAOpwM,KAAK6S,KAAK7S,KAAKmM,IAAI+jM,EAAcC,IAM9C,OALA/7M,KAAK86M,iBAAmBkB,GAAQh8M,KAAK46M,gBACjC56M,KAAK86M,mBACPvtD,EACEuuD,EAAeC,EAAeL,EAAe,GAAKA,EAAe,IAE9DnuD,CACf,CACA,CACI,OAAO,IACX,CAME,kBAAAnpH,CAAmByY,GACjB,MAAM5b,EAAQ4b,EAAgB5b,MACxB9P,EAAM0rB,EAAgB1rB,IAE5B,IAAIo8H,EAASvtJ,KAAKq7M,cAAcp6K,EAAO9P,GAClCo8H,IACHA,EAASp8H,EAAI4vB,+BAA+B9f,IAE9CjhC,KAAKi8M,8BAA8B1uD,EACvC,CAOE,4BAAA2uD,CAA6BzmM,GAC3B,IAAI0mM,EAAgBn8M,KAAK+6M,eAiBzB,OAfKoB,EASE1mM,EAGH0mM,EAAc5nM,YAAY+9B,GAAkB78B,IAF5C0mM,EAAc5nM,iBAAY/N,IAN1B21M,EAAgB,IAAIroM,GAHjB2B,EAGyB68B,GAAkB78B,GAFlB,IAI9BzV,KAAK+6M,eAAiBoB,EACtBn8M,KAAKi7M,eAAethK,YAAYqsD,WAAWm2G,IAQtCA,CACX,CAOE,6BAAAF,CAA8B1uD,GAC5B,IAAI6uD,EAAgBp8M,KAAKg7M,eACzB,GAAKoB,EAIE,CACYA,EAAcxnM,cACtB6f,eAAe84H,EAC9B,MANM6uD,EAAgB,IAAItoM,GAAQ,IAAIkkB,GAAMu1H,IACtCvtJ,KAAKg7M,eAAiBoB,EACtBp8M,KAAKm7M,eAAexhK,YAAYqsD,WAAWo2G,GAK7C,OAAOA,CACX,CAOE,WAAAh2M,CAAYy2C,GACV,OAAKA,EAAgBjc,gBAAkB5gC,KAAKwgD,WAAW3D,KAKrDA,EAAgBn4C,MAAQ08B,GAAoBK,aAC3CzhC,KAAK0/C,wBAEN1/C,KAAKokC,mBAAmByY,GAG1B53C,MAAMmB,YAAYy2C,IAEX,EACX,CAQE,eAAAwC,CAAgBxC,GACd,MAAM5b,EAAQ4b,EAAgB5b,MACxB9P,EAAM0rB,EAAgB1rB,IAEtB1b,EAASzV,KAAKw7M,oBACpB,IAAIjuD,EAASvtJ,KAAKq7M,cAAcp6K,EAAO9P,GAGvC,MAAMkrL,EAAmB,SAAUh3L,GACjC,IAAIi3L,EAAK,KACLC,EAAK,KAWT,OAVIl3L,EAAM,IAAM5P,EAAO,GACrB6mM,EAAK7mM,EAAO,GACH4P,EAAM,IAAM5P,EAAO,KAC5B6mM,EAAK7mM,EAAO,IAEV4P,EAAM,IAAM5P,EAAO,GACrB8mM,EAAK9mM,EAAO,GACH4P,EAAM,IAAM5P,EAAO,KAC5B8mM,EAAK9mM,EAAO,IAEH,OAAP6mM,GAAsB,OAAPC,EACV,CAACD,EAAIC,GAEP,IACR,EACD,GAAIhvD,GAAU93I,EAAQ,CACpB,MAAMM,EACJw3I,EAAO,IAAM93I,EAAO,IAAM83I,EAAO,IAAM93I,EAAO,GAAK83I,EAAO,GAAK,KAC3Dv3I,EACJu3I,EAAO,IAAM93I,EAAO,IAAM83I,EAAO,IAAM93I,EAAO,GAAK83I,EAAO,GAAK,KAGvD,OAANx3I,GAAoB,OAANC,EAChBhW,KAAK26M,gBAAkBvwD,GAAgBiyD,EAAiB9uD,IAEzC,OAANx3I,EACT/V,KAAK26M,gBAAkBrwD,GACrB+xD,EAAiB,CAACtmM,EAAGN,EAAO,KAC5B4mM,EAAiB,CAACtmM,EAAGN,EAAO,MAEf,OAANO,IACThW,KAAK26M,gBAAkBrwD,GACrB+xD,EAAiB,CAAC5mM,EAAO,GAAIO,IAC7BqmM,EAAiB,CAAC5mM,EAAO,GAAIO,KAIvC,MACMu3I,EAASp8H,EAAI4vB,+BAA+B9f,GAC5CjhC,KAAKwkB,UAAU,CAAC+oI,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,KACxDvtJ,KAAK26M,gBAAkBvwD,GAAgBmD,GAEzC,OAAO,CACX,CAOE,eAAAjuG,CAAgBzC,GACd,GAAI78C,KAAK26M,gBAAiB,CACxB,MAAMW,EAAkBz+J,EAAgBzmC,WACxCpW,KAAKwkB,UAAUxkB,KAAK26M,gBAAgBW,IACpCt7M,KAAKi8M,8BAA8BX,EACzC,CACA,CAQE,aAAA97J,CAAc3C,GACZ78C,KAAK26M,gBAAkB,KAEvB,MAAMllM,EAASzV,KAAKw7M,oBAIpB,OAHK/lM,GAA8B,IAApB+C,GAAQ/C,IACrBzV,KAAKwkB,UAAU,OAEV,CACX,CASE,MAAA2yB,CAAOhmB,GACLnxB,KAAKi7M,eAAe9jK,OAAOhmB,GAC3BnxB,KAAKm7M,eAAehkK,OAAOhmB,GAC3BlsB,MAAMkyC,OAAOhmB,EACjB,CAQE,SAAAtV,GACE,OAAO0S,GACLvuB,KAAKw7M,oBACLx7M,KAAKk3C,SAASmE,UAAU/nB,gBAE9B,CAQE,iBAAAkoL,GACE,OAAOx7M,KAAKijB,OAChB,CAQE,SAAAuB,CAAU/O,GAERzV,KAAKijB,QAAUxN,GAAkB,KACjCzV,KAAKk8M,6BAA6BzmM,GAClCzV,KAAK4F,cAAc,IAAIqkJ,GAAYjqJ,KAAKijB,SAC5C,GwCwtBAmhK,GAAGvqG,YAAY6gI,OAAOzwD,YAAcuyD,GACpCp4B,GAAGvqG,YAAYn9B,YAAc+/J,GAC7Br4B,GAAGvqG,YAAYn9B,YAAYK,IAAM2/J,GACjCt4B,GAAGvqG,YAAYn9B,YAAYM,YAAc2/J,GACzCv4B,GAAGvqG,YAAY/2B,YAAc85J,GAC7Bx4B,GAAGvqG,YAAYz2B,aAAey5J,GAC9Bz4B,GAAGvqG,YAAYshF,KvC7mCf,cAAmBz+G,GAIjB,WAAA38C,CAAYuK,GAaV,IAAIwyM,EAZJ73M,QAcE63M,GADsB,KAXxBxyM,EAAU5D,OAAO2C,OACf,CACEikC,SAAS,EACT+nD,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,KAC7B3zE,SAAS,EACTmtD,OAAQ,IAEVvkE,GAAW,CAAE,IAIHgjC,QACS,CAAC/M,SAAU,KACpBj2B,EAAQgjC,QAGChjC,EAAQgjC,QAFR,KASrBttC,KAAK+8M,kBAAoBD,EAMzB98M,KAAKg9M,QAAU1yM,EAAQ+qF,OAAOn1B,QAAO,CAACwqB,EAAK3mF,KACzC2mF,EAAI3mF,IAAS,EACN2mF,IACN,IAMH1qF,KAAKi9M,SAAW3yM,EAAQoX,QAMxB1hB,KAAKk9M,QAAU5yM,EAAQukE,OAMvB7uE,KAAKmoD,cAAgB,GAMrBnoD,KAAKm9M,UAAW,EAKhBn9M,KAAK42M,aAAe52M,KAAK42M,aAAa1vM,KAAKlH,MAO3CA,KAAKo9M,kBAAoB,CAAE,EAO3Bp9M,KAAKq9M,eAAiB,CAAE,CAC5B,CAOE,aAAAC,CAAcloM,GACZ,OAAKpV,KAAKk9M,QAGHl9M,KAAKk9M,QAAU9nM,EAFbA,CAGb,CAQE,IAAAmoM,CAAKloH,EAAQjgF,GACX,OAAOigF,EAAOpsF,IAAIjJ,KAAKs9M,cAAcloM,GACzC,CAQE,IAAAooM,CAAKnoH,EAAQjgF,EAAMrR,GACXqR,KAAQpV,KAAKg9M,SAGnB3nH,EAAOzrF,IAAI5J,KAAKs9M,cAAcloM,GAAOrR,EACzC,CAOE,OAAA05M,CAAQpoH,EAAQjgF,GACRA,KAAQpV,KAAKg9M,SAGnB3nH,EAAOgsB,OAAOrhH,KAAKs9M,cAAcloM,GACrC,CAME,MAAA+hC,CAAOhmB,GACL,MAAM67J,EAAShtL,KAAKk3C,SACpBjyC,MAAMkyC,OAAOhmB,GACTA,IAAQ67J,IAGRA,GACFhtL,KAAKizM,qBAAqBjmB,GAExB77J,IACFnxB,KAAKm9M,UAAW,EAChBn9M,KAAK42M,eACL52M,KAAK6yM,mBAAmB1hL,IAE9B,CAME,kBAAA0hL,CAAmB1hL,GACjBnxB,KAAKmoD,cAAcxiD,KACjBmB,EAAOqqB,EAAKuT,GAAsB1kC,KAAK09M,WAAY19M,MACnD8G,EAAOqqB,EAAIm5B,gBAAiBzqD,EAAkBG,KAAK09M,WAAY19M,MAC/D8G,EAAOqqB,EAAK,oBAAqBnxB,KAAK29M,wBAAyB39M,OAG5DA,KAAKi9M,UACR33M,iBAAiB,WAAYtF,KAAK42M,aAExC,CAME,oBAAA3D,CAAqB9hL,GACnB,IAAK,IAAI5vB,EAAI,EAAG4E,EAAKnG,KAAKmoD,cAActnD,OAAQU,EAAI4E,IAAM5E,EACxD8F,EAAcrH,KAAKmoD,cAAc5mD,IAEnCvB,KAAKmoD,cAActnD,OAAS,EAEvBb,KAAKi9M,UACR32M,oBAAoB,WAAYtG,KAAK42M,cAGvC,MAAM/1H,EAAM,IAAIgC,IAAIj0E,OAAOk7H,SAAShnD,MAC9BuS,EAASxU,EAAI84B,aACnB35G,KAAKy9M,QAAQpoH,EAAQ,KACrBr1F,KAAKy9M,QAAQpoH,EAAQ,KACrBr1F,KAAKy9M,QAAQpoH,EAAQ,KACrBr1F,KAAKy9M,QAAQpoH,EAAQ,KACrBr1F,KAAKy9M,QAAQpoH,EAAQ,KACrBzmF,OAAOgvM,QAAQC,aAAa,KAAM,GAAIh9H,EAC1C,CAKE,uBAAA88H,GACE,MAAMxsL,EAAMnxB,KAAKk3C,SACZ/lB,IAGLnxB,KAAKizM,qBAAqB9hL,GAC1BnxB,KAAK6yM,mBAAmB1hL,GACxBnxB,KAAKm9M,UAAW,EAChBn9M,KAAK09M,aACT,CAKE,YAAA9G,GACE,MACMvhH,EADM,IAAIxS,IAAIj0E,OAAOk7H,SAAShnD,MACjB62B,aACnB,IAAK,MAAMryG,KAAOtH,KAAKo9M,kBAAmB,CACxC,MAAMr5M,EAAQsxF,EAAOpsF,IAAI3B,GACrBA,KAAOtH,KAAKo9M,mBAAqBr5M,IAAU/D,KAAKq9M,eAAe/1M,KACjEtH,KAAKq9M,eAAe/1M,GAAOvD,EAC3B/D,KAAKo9M,kBAAkB91M,GAAKvD,GAEpC,CAEI,MAAMotB,EAAMnxB,KAAKk3C,SACjB,IAAK/lB,EACH,OAEF,MAAMiqB,EAAOjqB,EAAIkqB,UACjB,IAAKD,EACH,OAGF,IAAI0iK,GAAa,EAKjB,MAAMC,EAAiB,CAAE,EAEnBpxK,EAAO89G,GAAWzqJ,KAAKu9M,KAAKloH,EAAQ,MACtC,MAAOr1F,KAAKg9M,SAAWpyD,GAAgBj+G,EAAMyO,EAAKhO,aACpD0wK,GAAa,EACbC,EAAepxK,KAAOA,GAGxB,MAAMzzB,EAAWuxI,GAAWzqJ,KAAKu9M,KAAKloH,EAAQ,MAC1C,MAAOr1F,KAAKg9M,SAAWpyD,GAAgB1xI,EAAUkiC,EAAK/N,iBACxDywK,GAAa,EACbC,EAAe7kM,SAAWA,GAG5B,MAAMF,EAAS,CACbyxI,GAAWzqJ,KAAKu9M,KAAKloH,EAAQ,MAC7Bo1D,GAAWzqJ,KAAKu9M,KAAKloH,EAAQ,OAtRnC,IAAwBt0F,EAAGC,GAyRpB,MAAOhB,KAAKg9M,SAAW,MAAOh9M,KAAKg9M,WAzRlBj8M,EA0RHiY,EA1RMhY,EA0REo6C,EAAKxiC,YAzRzBgyI,GAAgB7pJ,EAAE,GAAIC,EAAE,KAAO4pJ,GAAgB7pJ,EAAE,GAAIC,EAAE,OA2R1D88M,GAAa,EACbC,EAAe/kM,OAASA,GAGtB8kM,KACG99M,KAAKm9M,UAAYn9M,KAAK+8M,kBACzB3hK,EAAK9N,QAAQ5mC,OAAO2C,OAAO00M,EAAgB/9M,KAAK+8M,qBAE5CgB,EAAe/kM,QACjBoiC,EAAKxH,UAAUmqK,EAAe/kM,QAE5B,SAAU+kM,GACZ3iK,EAAKxO,QAAQmxK,EAAepxK,MAE1B,aAAcoxK,GAChB3iK,EAAK3O,YAAYsxK,EAAe7kM,YAKtC,MAAMigC,EAAShoB,EAAIioB,eACb4kK,EAAch+M,KAAKu9M,KAAKloH,EAAQ,KACtC,GACE,MAAOr1F,KAAKg9M,SACZgB,GACAA,EAAYn9M,SAAWs4C,EAAOt4C,OAE9B,IAAK,IAAIU,EAAI,EAAG4E,EAAKgzC,EAAOt4C,OAAQU,EAAI4E,IAAM5E,EAAG,CAC/C,MAAMwC,EAAQiM,SAASguM,EAAYz8M,IACnC,IAAK2xB,MAAMnvB,GAAQ,CACjB,MAAMo2C,EAAUzK,QAAQ3rC,GAClBy1C,EAAQL,EAAO53C,GACjBi4C,EAAM2N,eAAiBhN,GACzBX,EAAMoO,WAAWzN,EAE7B,CACA,CAEA,CAWE,KAAA8jK,CAAM32M,EAAK4Q,GACTlY,KAAKo9M,kBAAkB91M,GAAO4Q,EAC9B,MAEMnU,EAFM,IAAI8+E,IAAIj0E,OAAOk7H,SAAShnD,MACjB62B,aACE1wG,IAAI3B,GAEzB,OADAtH,KAAKq9M,eAAe/1M,GAAOvD,EACpBA,CACX,CAUE,MAAAm8B,CAAO54B,EAAKvD,GACV,MAAM88E,EAAM,IAAIgC,IAAIj0E,OAAOk7H,SAAShnD,MAC9BuS,EAASxU,EAAI84B,aACL,OAAV51G,EACFsxF,EAAOgsB,OAAO/5G,GAEd+tF,EAAOzrF,IAAItC,EAAKvD,GAEduD,KAAOtH,KAAKq9M,iBACdr9M,KAAKq9M,eAAe/1M,GAAOvD,GAE7B/D,KAAKk+M,eAAer9H,EACxB,CAKE,UAAA68H,GACE,MAAMvsL,EAAMnxB,KAAKk3C,SACjB,IAAK/lB,EACH,OAEF,MAAMiqB,EAAOjqB,EAAIkqB,UACjB,IAAKD,EACH,OAGF,MAAMpiC,EAASoiC,EAAKxiC,YACd+zB,EAAOyO,EAAKhO,UACZl0B,EAAWkiC,EAAK/N,cAEhB8L,EAAShoB,EAAIioB,eACb+kK,EAAe,IAAIn8M,MAAMm3C,EAAOt4C,QACtC,IAAK,IAAIU,EAAI,EAAG4E,EAAKgzC,EAAOt4C,OAAQU,EAAI4E,IAAM5E,EAC5C48M,EAAa58M,GAAK43C,EAAO53C,GAAG4lD,aAAe,IAAM,IAGnD,MAAM05B,EAAM,IAAIgC,IAAIj0E,OAAOk7H,SAAShnD,MAC9BuS,EAASxU,EAAI84B,aAEnB35G,KAAKw9M,KAAKnoH,EAAQ,IAAKq1D,GAAY1xI,EAAO,KAC1ChZ,KAAKw9M,KAAKnoH,EAAQ,IAAKq1D,GAAY1xI,EAAO,KAC1ChZ,KAAKw9M,KAAKnoH,EAAQ,IAAKq1D,GAAY/9G,IACnC3sC,KAAKw9M,KAAKnoH,EAAQ,IAAKq1D,GAAYxxI,IACnClZ,KAAKw9M,KAAKnoH,EAAQ,IAAK8oH,EAAar+L,KAAK,KAEzC9f,KAAKk+M,eAAer9H,GACpB7gF,KAAKm9M,UAAW,CACpB,CAME,cAAAe,CAAer9H,GACTA,EAAIiC,OAASl0E,OAAOk7H,SAAShnD,OAC3B9iF,KAAKm9M,UAAYn9M,KAAKi9M,SACxBruM,OAAOgvM,QAAQC,aAAaD,QAAQzxM,MAAO,GAAI00E,GAE/CjyE,OAAOgvM,QAAQQ,UAAU,KAAM,GAAIv9H,GAG3C,GuC8uBAujG,GAAGvqG,YAAYwkI,OtCn/Bf,cAAqBj/J,GAInB,WAAAr/C,CAAYuK,GAqKV,IAAIowE,EAeJ,GAnLAz1E,MAAqD,GAKrDjF,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAGL1H,KAAKs+M,0BAA4Bt+M,KAAKqmG,qBAAqBn/F,KAAKlH,MAMhEA,KAAKwgD,WAAal2C,EAAQi2C,UAAYj2C,EAAQi2C,UAAYrB,GAO1Dl/C,KAAKu+M,wBAA0B,SAAU1hK,GACvC,OAAOW,GAAWX,IAAoB4B,GAAY5B,EACnD,EAMD78C,KAAKw+M,iBAAmBl0M,EAAQm0M,gBAC5Bn0M,EAAQm0M,gBACRz+M,KAAKu+M,wBAMTv+M,KAAK0+M,uBAAyBp0M,EAAQq0M,sBAClCr0M,EAAQq0M,sBACRrgK,GAOJt+C,KAAKg7M,eAAiB,KAOtBh7M,KAAK4+M,gBAAkB,KAMvB5+M,KAAK6+M,WAAa,CAAC,EAAG,GAQtB7+M,KAAK8+M,wBAAyB,EAM9B9+M,KAAK++M,uBAAyB,KAO9B/+M,KAAKg/M,OAAS,IAAI9qI,GAMlBl0E,KAAK46M,qBACwBp0M,IAA3B8D,EAAQuwM,eAA+BvwM,EAAQuwM,eAAiB,GAMlE76M,KAAK86M,kBAAmB,EAQxB96M,KAAKi/M,kBAAmB,EAMxBj/M,KAAKk/M,cAAgB,GAOrBl/M,KAAKk2M,SAAW,IAAIvuE,GAAY,CAC9B59H,OAAQ,IAAI86F,GAAa,CACvBQ,iBAAiB,EACjB3pF,QAASpR,EAAQoR,QAEnB5L,MAAOxF,EAAQwF,MAAQxF,EAAQwF,MAAQi6I,KACvCz2E,sBAAsB,EACtBC,wBAAwB,IAQ1BvzE,KAAKm/M,iBAAmB,CACtBnnL,MAASh4B,KAAKo/M,oBAAoBl4M,KAAKlH,MACvCirF,WAAcjrF,KAAKq/M,yBAAyBn4M,KAAKlH,MACjD43B,WAAc53B,KAAKq/M,yBAAyBn4M,KAAKlH,MACjD46B,QAAW56B,KAAKs/M,sBAAsBp4M,KAAKlH,MAC3CorF,WAAcprF,KAAKu/M,yBAAyBr4M,KAAKlH,MACjDsrF,gBAAmBtrF,KAAKw/M,8BAA8Bt4M,KAAKlH,MAC3DurF,aAAgBvrF,KAAKy/M,2BAA2Bv4M,KAAKlH,MACrD+xE,OAAU/xE,KAAK0/M,qBAAqBx4M,KAAKlH,MACzCwrF,mBAAsBxrF,KAAK2/M,iCAAiCz4M,KAAKlH,OAOnEA,KAAK0rL,QAAU,KAMf1rL,KAAK4/M,cAAgB,KAIjBt1M,EAAQowE,SACVA,EAAWpwE,EAAQowE,SACVpwE,EAAQP,SACjB/J,KAAK0rL,QAAUphL,EAAQP,OACvB2wE,EAAW,IAAItwE,EAAWpK,KAAK0rL,QAAQxhI,eACvClqD,KAAK0rL,QAAQpmL,iBACXq/F,GACA3kG,KAAK6/M,iBAAiB34M,KAAKlH,OAE7BA,KAAK0rL,QAAQpmL,iBACXq/F,GACA3kG,KAAK8/M,oBAAoB54M,KAAKlH,SAG7B06E,EACH,MAAM,IAAIryE,MACR,iEAGAiC,EAAQy1M,eACV//M,KAAK4/M,cAAgBt1M,EAAQy1M,cAO/B//M,KAAK4sJ,UAAYlyE,EAEjB16E,KAAK4sJ,UAAU9hJ,QAAQ9K,KAAK+rJ,YAAY7kJ,KAAKlH,OAC7CA,KAAK4sJ,UAAUtnJ,iBACb3F,EACAK,KAAKggN,kBAAkB94M,KAAKlH,OAE9BA,KAAK4sJ,UAAUtnJ,iBACb3F,EACAK,KAAKigN,qBAAqB/4M,KAAKlH,OAOjCA,KAAKkgN,kBAAoB,KAOzBlgN,KAAKk9C,OAAS,CAAC,EAAG,GAKlBl9C,KAAKmgN,oBACuB35M,IAA1B8D,EAAQ81M,eACHpgN,KAAK4/M,cACNt1M,EAAQ81M,aAClB,CAME,WAAAr0D,CAAYtiF,GACV,MAAMn1D,EAAWm1D,EAAQ70D,cACzB,GAAIN,EAAU,CACZ,MAAM+rM,EAASrgN,KAAKm/M,iBAAiB7qM,EAAS8e,WAC1CitL,GACFA,EAAO52I,EAASn1D,EAExB,CACI,MAAM6c,EAAMnxB,KAAKk3C,SACb/lB,GAAOA,EAAIurD,cAAgB18E,KAAK48C,aAClC58C,KAAKsgN,sBAAsBnvL,EAAIgQ,uBAAuBnhC,KAAK6+M,aAE7Dp1I,EAAQnkE,iBAAiBzF,EAAkBG,KAAKs+M,0BACpD,CAOE,mBAAAiC,CAAoBx7M,EAAK2oJ,GACvB,IAAK1tJ,KAAK++M,uBAAwB,CAChC/+M,KAAK++M,uBAAyB,IAAI30M,EAClC,MAAMswE,EAAW16E,KAAK++M,uBAAuB/zM,WAC7C,IAAK,IAAIzJ,EAAI,EAAG4E,EAAKunJ,EAAS7sJ,OAAQU,EAAI4E,IAAM5E,EAAG,CACjD,MAAMkoE,EAAUikF,EAASnsJ,GAAGkoE,QACxBA,IAAYiR,EAASh1E,SAAS+jE,IAChCzpE,KAAK++M,uBAAuBp5M,KAAK8jE,EAE3C,CACsD,IAA5CzpE,KAAK++M,uBAAuBn0M,YAC9B5K,KAAK++M,uBAAyB,KAE9B/+M,KAAK4F,cACH,IAAImlJ,GACFD,GACA9qJ,KAAK++M,uBACLh6M,GAIZ,CACA,CAME,cAAAknJ,CAAexiF,GACbzpE,KAAKwgN,0BAA0B/2I,GAE3BzpE,KAAKg7M,gBAAiD,IAA/Bh7M,KAAK4sJ,UAAUhiJ,cACxC5K,KAAKk2M,SAASv8J,YAAYgtD,cAAc3mG,KAAKg7M,gBAC7Ch7M,KAAKg7M,eAAiB,MAExBvxI,EAAQnjE,oBACNzG,EACAG,KAAKs+M,0BAEX,CAME,yBAAAkC,CAA0B/2I,GACxB,MAAMg3I,EAAQzgN,KAAKg/M,OAEb0B,EAAgB,GACtBD,EAAM31M,SAIJ,SAAUgG,GACJ24D,IAAY34D,EAAK24D,SACnBi3I,EAAc/6M,KAAKmL,EAEtB,IAEH,IAAK,IAAIvP,EAAIm/M,EAAc7/M,OAAS,EAAGU,GAAK,IAAKA,EAAG,CAClD,MAAMo/M,EAAeD,EAAcn/M,GACnC,IAAK,IAAIsb,EAAI7c,KAAKk/M,cAAcr+M,OAAS,EAAGgc,GAAK,IAAKA,EAChD7c,KAAKk/M,cAAcriM,GAAG,KAAO8jM,GAC/B3gN,KAAKk/M,cAAcr4M,OAAOgW,EAAG,GAGjC4jM,EAAMp1M,OAAOs1M,EACnB,CACA,CASE,SAAAhkK,CAAUG,GACJ98C,KAAKg7M,iBAAmBl+J,IAC1B98C,KAAKk2M,SAASv8J,YAAYgtD,cAAc3mG,KAAKg7M,gBAC7Ch7M,KAAKg7M,eAAiB,MAExB/1M,MAAM03C,UAAUG,EACpB,CASE,MAAA3F,CAAOhmB,GACLnxB,KAAKk2M,SAAS/+J,OAAOhmB,GACrBlsB,MAAMkyC,OAAOhmB,EACjB,CAOE,UAAA0lL,GACE,OAAO72M,KAAKk2M,QAChB,CAME,gBAAA2J,CAAiBh6M,GACXA,EAAM4jE,SACRzpE,KAAK4sJ,UAAUjnJ,KAAKE,EAAM4jE,QAEhC,CAME,mBAAAq2I,CAAoBj6M,GACdA,EAAM4jE,SACRzpE,KAAK4sJ,UAAUvhJ,OAAOxF,EAAM4jE,QAElC,CAME,iBAAAu2I,CAAkBj7M,GAChB/E,KAAK+rJ,YAAYhnJ,EAAIoF,QACzB,CAME,oBAAAk8F,CAAqBthG,GACnB,IAAK/E,KAAKi/M,iBAAkB,CAC1B,MAAMx1I,EAAkC1kE,EAAU,OAClD/E,KAAKisJ,eAAexiF,GACpBzpE,KAAK+rJ,YAAYtiF,EACvB,CACA,CAME,oBAAAw2I,CAAqBl7M,GACnB/E,KAAKisJ,eAAelnJ,EAAIoF,QAC5B,CAOE,mBAAAi1M,CAAoB31I,EAASn1D,GAC3B,MAAMkB,EAAclB,EAASyf,iBAGvBo3H,EAAc,CAClB1hF,QAASA,EACTn1D,SAAUA,EACVuM,QAAS,CAACrL,EAAaA,IAGzBxV,KAAKg/M,OAAOtyJ,OAAOp4C,EAASuH,YAAasvI,EAC7C,CAOE,wBAAAo0D,CAAyB91I,EAASn1D,GAChC,MAAM4uD,EAAS5uD,EAASyf,iBACxB,IAAK,IAAIxyB,EAAI,EAAG4E,EAAK+8D,EAAOriE,OAAQU,EAAI4E,IAAM5E,EAAG,CAC/C,MAAMiU,EAAc0tD,EAAO3hE,GAGrB4pJ,EAAc,CAClB1hF,QAASA,EACTn1D,SAAUA,EACVssM,MAAO,CAACr/M,GACRqB,MAAOrB,EACPsf,QAAS,CAACrL,EAAaA,IAGzBxV,KAAKg/M,OAAOtyJ,OAAOp4C,EAASuH,YAAasvI,EAC/C,CACA,CAOE,wBAAAk0D,CAAyB51I,EAASn1D,GAChC,MAAMkB,EAAclB,EAASyf,iBAC7B,IAAK,IAAIxyB,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAS,EAAGU,EAAI4E,IAAM5E,EAAG,CACxD,MAAMsf,EAAUrL,EAAYhS,MAAMjC,EAAGA,EAAI,GAGnC4pJ,EAAc,CAClB1hF,QAASA,EACTn1D,SAAUA,EACV1R,MAAOrB,EACPsf,QAASA,GAGX7gB,KAAKg/M,OAAOtyJ,OAAOn3C,GAAesL,GAAUsqI,EAClD,CACA,CAOE,6BAAAq0D,CAA8B/1I,EAASn1D,GACrC,MAAMs9F,EAAQt9F,EAASyf,iBACvB,IAAK,IAAIlX,EAAI,EAAG6P,EAAKklF,EAAM/wG,OAAQgc,EAAI6P,IAAM7P,EAAG,CAC9C,MAAMrH,EAAco8F,EAAM/0F,GAC1B,IAAK,IAAItb,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAS,EAAGU,EAAI4E,IAAM5E,EAAG,CACxD,MAAMsf,EAAUrL,EAAYhS,MAAMjC,EAAGA,EAAI,GAGnC4pJ,EAAc,CAClB1hF,QAASA,EACTn1D,SAAUA,EACVssM,MAAO,CAAC/jM,GACRja,MAAOrB,EACPsf,QAASA,GAGX7gB,KAAKg/M,OAAOtyJ,OAAOn3C,GAAesL,GAAUsqI,EACpD,CACA,CACA,CAOE,qBAAAm0D,CAAsB71I,EAASn1D,GAC7B,MAAMwD,EAAQxD,EAASyf,iBACvB,IAAK,IAAIlX,EAAI,EAAG6P,EAAK5U,EAAMjX,OAAQgc,EAAI6P,IAAM7P,EAAG,CAC9C,MAAMrH,EAAcsC,EAAM+E,GAC1B,IAAK,IAAItb,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAS,EAAGU,EAAI4E,IAAM5E,EAAG,CACxD,MAAMsf,EAAUrL,EAAYhS,MAAMjC,EAAGA,EAAI,GAGnC4pJ,EAAc,CAClB1hF,QAASA,EACTn1D,SAAUA,EACVssM,MAAO,CAAC/jM,GACRja,MAAOrB,EACPsf,QAASA,GAGX7gB,KAAKg/M,OAAOtyJ,OAAOn3C,GAAesL,GAAUsqI,EACpD,CACA,CACA,CAOE,0BAAAs0D,CAA2Bh2I,EAASn1D,GAClC,MAAMsuF,EAAWtuF,EAASyf,iBAC1B,IAAK,IAAIhX,EAAI,EAAGmlH,EAAKt/B,EAAS/hG,OAAQkc,EAAImlH,IAAMnlH,EAAG,CACjD,MAAMjF,EAAQ8qF,EAAS7lF,GACvB,IAAK,IAAIF,EAAI,EAAG6P,EAAK5U,EAAMjX,OAAQgc,EAAI6P,IAAM7P,EAAG,CAC9C,MAAMrH,EAAcsC,EAAM+E,GAC1B,IAAK,IAAItb,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAS,EAAGU,EAAI4E,IAAM5E,EAAG,CACxD,MAAMsf,EAAUrL,EAAYhS,MAAMjC,EAAGA,EAAI,GAGnC4pJ,EAAc,CAClB1hF,QAASA,EACTn1D,SAAUA,EACVssM,MAAO,CAAC/jM,EAAGE,GACXna,MAAOrB,EACPsf,QAASA,GAGX7gB,KAAKg/M,OAAOtyJ,OAAOn3C,GAAesL,GAAUsqI,EACtD,CACA,CACA,CACA,CAaE,oBAAAu0D,CAAqBj2I,EAASn1D,GAC5B,MAAMkB,EAAclB,EAASsE,YAGvBioM,EAAoB,CACxBp3I,QAASA,EACTn1D,SAAUA,EACV1R,MAltBsB,EAmtBtBie,QAAS,CAACrL,EAAaA,IAInBsrM,EAA2B,CAC/Br3I,QAASA,EACTn1D,SAAUA,EACV1R,MAntB6B,EAotB7Bie,QAAS,CAACrL,EAAaA,IAGnBurM,EAAkB,CAACF,EAAmBC,GAC5CD,EAAkBE,gBAAkBA,EACpCD,EAAyBC,gBAAkBA,EAC3C/gN,KAAKg/M,OAAOtyJ,OAAOpkB,GAAa9yB,GAAcqrM,GAC9C,IAAI19H,EAAc,EAGlB,MAAMn1D,EAAiBE,KACvB,GAAIF,GAAkBhuB,KAAKk3C,SAAU,CACnC,MAAMv7B,EAAa3b,KAAKk3C,SAASmE,UAAU/nB,gBAC3C6vD,EAAiBA,EACd1uE,QACAsY,UAAUiB,EAAgBrS,GAC7BwnE,EAAiBlnD,GACvB,GACQlP,UAAUpR,EAAYqS,EAC9B,CACIhuB,KAAKg/M,OAAOtyJ,OAAOy2B,EAAetnE,YAAailM,EACnD,CAOE,gCAAAnB,CAAiCl2I,EAASn1D,GACxC,MAAMozE,EAAapzE,EAASqzE,qBAC5B,IAAK,IAAIpmF,EAAI,EAAGA,EAAImmF,EAAW7mF,SAAUU,EAAG,CAC1C,MAAM+S,EAAWozE,EAAWnmF,IAE5B8+M,EADergN,KAAKm/M,iBAAiB7qM,EAAS8e,YACvCq2C,EAASn1D,EACtB,CACA,CAUE,4BAAA0sM,CAA6BxrM,EAAaklE,EAAUgN,EAAYw5B,GAC9D,IAAIk7F,EAAgBp8M,KAAKg7M,eACzB,GAAKoB,EAIE,CACYA,EAAcxnM,cACtB6f,eAAejf,EAC9B,MANM4mM,EAAgB,IAAItoM,GAAQ,IAAIkkB,GAAMxiB,IACtCxV,KAAKg7M,eAAiBoB,EACtBp8M,KAAKk2M,SAASv8J,YAAYqsD,WAAWo2G,GAQvC,OAHAA,EAAcxyM,IAAI,WAAY8wE,GAC9B0hI,EAAcxyM,IAAI,aAAc89E,GAChC00H,EAAcxyM,IAAI,WAAYs3G,GACvBk7F,CACX,CAQE,WAAAh2M,CAAYy2C,GACV,IAAKA,EAAgBjc,cACnB,OAAO,EAIT,IAAImf,EAuBJ,OAzBA//C,KAAKkgN,kBAAoBrjK,EAItBA,EAAgB1rB,IAAIkqB,UAAU1M,kBAC/BkO,EAAgBn4C,MAAQ08B,GAAoBK,aAC3CzhC,KAAK0/C,wBAEN1/C,KAAKokC,mBAAmByY,GAEtB78C,KAAKg7M,gBAAkBh7M,KAAKw+M,iBAAiB3hK,KAO7CkD,IALAlD,EAAgBn4C,MAAQ08B,GAAoBC,cAC3CrhC,KAAK8+M,yBAEI9+M,KAAKihN,eAMfpkK,EAAgBn4C,MAAQ08B,GAAoBC,cAC9CrhC,KAAK8+M,wBAAyB,GAGzB75M,MAAMmB,YAAYy2C,KAAqBkD,CAClD,CAEE,wCAAAmhK,CAAyC5F,GACvCt7M,KAAKsgN,sBAAsBhF,GAC3Bt7M,KAAKk/M,cAAcr+M,OAAS,EAC5Bb,KAAK++M,uBAAyB,KAC9B,MAAM3C,EAAgBp8M,KAAKg7M,eAC3B,IAAKoB,EACH,OAGF,MAAMzgM,EAAa3b,KAAKk3C,SAASmE,UAAU/nB,gBACrC6tL,EAAiB,GACjB5zD,EAAS6uD,EAAcxnM,cAAcmf,iBACrCqtL,EAAe7rM,GAAe,CAACg4I,IAC/B8zD,EAAqBrhN,KAAKg/M,OAAOz6G,YAAY68G,GAC7CE,EAAoB,CAAE,EAC5BD,EAAmBxoL,KAAKmyH,IACxB,IAAK,IAAIzpJ,EAAI,EAAG4E,EAAKk7M,EAAmBxgN,OAAQU,EAAI4E,IAAM5E,EAAG,CAC3D,MAAMggN,EAAmBF,EAAmB9/M,GACtCsf,EAAU0gM,EAAiB1gM,QACjC,IAAI09E,EAAMh2F,EAAOg5M,EAAiBjtM,UAClC,MAAMssM,EAAQW,EAAiBX,MAQ/B,GAPIA,IACFriH,GAAO,IAAMqiH,EAAM9gM,KAAK,MAErBwhM,EAAkB/iH,KACrB+iH,EAAkB/iH,GAAO,IAAIv8F,MAAM,IAIK,WAAxCu/M,EAAiBjtM,SAAS8e,WAp1BC,IAq1B3BmuL,EAAiB3+M,MAiBnB,IAAIgzC,GAAiB/0B,EAAQ,GAAI0sI,IAAY+zD,EAAkB/iH,GAAK,GAMpE,IAAI3oD,GAAiB/0B,EAAQ,GAAI0sI,IAAY+zD,EAAkB/iH,GAAK,KAgClEh2F,EAAOsY,KAAY7gB,KAAK4+M,kBACvB0C,EAAkB/iH,GAAK,IACvB+iH,EAAkB/iH,GAAK,IAExB4iH,EAAex7M,KAAK47M,OApCtB,CACE,GACED,EAAkB/iH,GAAK,IACa,IAApC+iH,EAAkB/iH,GAAK,GAAG37F,MAC1B,CACA,IAAI4S,EAAc+rM,EAAiBjtM,SAASyf,iBAC5C,OAAQwtL,EAAiBjtM,SAAS8e,WAEhC,IAAK,aACL,IAAK,kBACH,SAGF,IAAK,eACH5d,EAAcA,EAAYorM,EAAM,IAElC,IAAK,UACH,GAAIW,EAAiB3+M,QAAU4S,EAAYorM,EAAM,IAAI//M,OAAS,EAC5D,SAMhB,CAEQb,KAAKk/M,cAAcv5M,KAAK,CAAC47M,EAAkB,IAC3CD,EAAkB/iH,GAAK,GAAKgjH,CAEpC,MAlCQvhN,KAAKk/M,cAAcv5M,KAAK,CAAC47M,EAAkB,IAC3CD,EAAkB/iH,GAAK,GAAKgjH,MArB9B,CAUI3rK,GANoB21G,GACpB+vD,EACAiG,EACA5lM,GAGgC4xI,KAC/B+zD,EAAkB/iH,GAAK,KAExBv+F,KAAKk/M,cAAcv5M,KAAK,CAAC47M,EAAkB,IAC3CD,EAAkB/iH,GAAK,GAAKgjH,EAGtC,CA8CA,CAEI,OAAOJ,CACX,CAOE,eAAA7hK,CAAgBv6C,GACd/E,KAAK8+M,wBAAyB,EAC9B9+M,KAAKugN,oBACHx7M,EACA/E,KAAKk/M,cAAc/tL,KAAI,EAAEtQ,KAAaA,KAGxC,MAAM0sI,EAAS,CACbxoJ,EAAIqR,WAAW,GAAKpW,KAAKk9C,OAAO,GAChCn4C,EAAIqR,WAAW,GAAKpW,KAAKk9C,OAAO,IAE5Bw9B,EAAW,GACXgN,EAAa,GACnB,IAAK,IAAInmF,EAAI,EAAG4E,EAAKnG,KAAKk/M,cAAcr+M,OAAQU,EAAI4E,IAAM5E,EAAG,CAC3D,MAAMigN,EAAcxhN,KAAKk/M,cAAc39M,GACjC4pJ,EAAcq2D,EAAY,GAC1B/3I,EAAU0hF,EAAY1hF,QACvBiR,EAASh1E,SAAS+jE,IACrBiR,EAAS/0E,KAAK8jE,GAEhB,MAAMn1D,EAAW62I,EAAY72I,SACxBozE,EAAWhiF,SAAS4O,IACvBozE,EAAW/hF,KAAK2O,GAElB,MAAMssM,EAAQz1D,EAAYy1D,MAC1B,IAAIprM,EACJ,MAAMqL,EAAUsqI,EAAYtqI,QACtBje,EAAQ4+M,EAAY,GAE1B,KAAOj0D,EAAO1sJ,OAASyT,EAASggB,aAC9Bi5H,EAAO5nJ,KAAKkb,EAAQje,GAAO2qJ,EAAO1sJ,SAGpC,OAAQyT,EAAS8e,WACf,IAAK,QACH5d,EAAc+3I,EACd1sI,EAAQ,GAAK0sI,EACb1sI,EAAQ,GAAK0sI,EACb,MACF,IAAK,aACH/3I,EAAclB,EAASyf,iBACvBve,EAAY21I,EAAYvoJ,OAAS2qJ,EACjC1sI,EAAQ,GAAK0sI,EACb1sI,EAAQ,GAAK0sI,EACb,MACF,IAAK,aACH/3I,EAAclB,EAASyf,iBACvBve,EAAY21I,EAAYvoJ,MAAQA,GAAS2qJ,EACzC1sI,EAAQje,GAAS2qJ,EACjB,MACF,IAAK,kBAKL,IAAK,UACH/3I,EAAclB,EAASyf,iBACvBve,EAAYorM,EAAM,IAAIz1D,EAAYvoJ,MAAQA,GAAS2qJ,EACnD1sI,EAAQje,GAAS2qJ,EACjB,MACF,IAAK,eACH/3I,EAAclB,EAASyf,iBACvBve,EAAYorM,EAAM,IAAIA,EAAM,IAAIz1D,EAAYvoJ,MAAQA,GAAS2qJ,EAC7D1sI,EAAQje,GAAS2qJ,EACjB,MACF,IAAK,SACH,MAAM9sI,EAAM,EAKZ,GAFAI,EAAQ,GAAK0sI,EACb1sI,EAAQ,GAAK0sI,EAz+BK,IA0+BdpC,EAAYvoJ,MACd5C,KAAKi/M,kBAAmB,EACxBx+L,EAAOmzB,UAAU25G,GACjBvtJ,KAAKi/M,kBAAmB,MACnB,CAELj/M,KAAKi/M,kBAAmB,EACxB,MAAMtjM,EAAa5W,EAAIosB,IAAIkqB,UAAU/nB,gBACrC,IAAInV,EAASw9L,GACXttL,GAAmB5N,EAAO7H,YAAa+C,GACvC0S,GAAmBk/H,EAAQ5xI,IAE7B,MAAMqS,EAAiBE,KACvB,GAAIF,EAAgB,CAClB,MAAMm1D,EAAiB1iE,EACpBhM,QACAsY,UAAUiB,EAAgBrS,GAC7BwnE,EAAe/c,UAAUjoD,GACzBA,EAASglE,EACNp2D,UAAUpR,EAAYqS,GACtBtN,WACjB,CACYD,EAAO2lD,UAAUjoD,GACjBne,KAAKi/M,kBAAmB,CACpC,EAMUzpM,GACFxV,KAAKyhN,wBAAwBntM,EAAUkB,EAE/C,CACIxV,KAAKghN,6BAA6BzzD,EAAQ7yE,EAAUgN,GAAY,EACpE,CAQE,eAAAroC,CAAgBt6C,GACd,IAAK/E,KAAKwgD,WAAWz7C,GACnB,OAAO,EAET,MAAMu2M,EAAkBv2M,EAAIqR,WACtB+qM,EACJnhN,KAAKkhN,yCAAyC5F,GAEhD,GAAI6F,GAAgBtgN,QAAUb,KAAK0+M,uBAAuB35M,KACxD/E,KAAKugN,oBAAoBx7M,EAAKo8M,GAE1BnhN,KAAKg7M,gBAAgB,CACvB,MAAMztD,EAASvtJ,KAAKg7M,eAAepmM,cAAcmf,iBACjD,IAAK,IAAIlX,EAAIskM,EAAetgN,OAAS,EAAGgc,GAAK,IAAKA,EAChD7c,KAAK0hN,cAAcP,EAAetkM,GAAI0wI,GAExCvtJ,KAAK8+M,wBAAyB,CACtC,CAGI,QAAS9+M,KAAKg7M,cAClB,CAQE,aAAAx7J,CAAcz6C,GACZ,IAAK,IAAIxD,EAAIvB,KAAKk/M,cAAcr+M,OAAS,EAAGU,GAAK,IAAKA,EAAG,CACvD,MAAM4pJ,EAAcnrJ,KAAKk/M,cAAc39M,GAAG,GACpC+S,EAAW62I,EAAY72I,SAC7B,GAA2B,WAAvBA,EAAS8e,UAAwB,CACnC,MAAM3S,EAAM,EAINjL,EAAciL,EAAO7H,YACrBioM,EAAoB11D,EAAY41D,gBAAgB,GAChDD,EAA2B31D,EAAY41D,gBAAgB,GAC7DF,EAAkBhgM,QAAQ,GAAKrL,EAC/BqrM,EAAkBhgM,QAAQ,GAAKrL,EAC/BsrM,EAAyBjgM,QAAQ,GAAKrL,EACtCsrM,EAAyBjgM,QAAQ,GAAKrL,EACtCxV,KAAKg/M,OAAO9+K,OAAOoI,GAAa9yB,GAAcqrM,GAE9C,IAAI19H,EAAiB1iE,EACrB,MAAMuN,EAAiBE,KACvB,GAAIF,EAAgB,CAClB,MAAMrS,EAAa5W,EAAIosB,IAAIkqB,UAAU/nB,gBACrC6vD,EAAiBA,EACd1uE,QACAsY,UAAUiB,EAAgBrS,GAC7BwnE,EAAiBlnD,GAAWknD,GAAgBp2D,UAC1CpR,EACAqS,EAEZ,CACQhuB,KAAKg/M,OAAO9+K,OACVijD,EAAetnE,YACfilM,EAEV,MACQ9gN,KAAKg/M,OAAO9+K,OAAO3qB,GAAe41I,EAAYtqI,SAAUsqI,EAEhE,CAWI,OAVInrJ,KAAK++M,yBACP/+M,KAAK4F,cACH,IAAImlJ,GACFD,GACA9qJ,KAAK++M,uBACLh6M,IAGJ/E,KAAK++M,uBAAyB,OAEzB,CACX,CAME,kBAAA36K,CAAmBr/B,GACjB/E,KAAK6+M,WAAa95M,EAAIk8B,MACtBjhC,KAAKsgN,sBAAsBv7M,EAAIqR,WACnC,CAME,qBAAAkqM,CAAsBhF,GACpB,MAAMnqL,EAAMnxB,KAAKk3C,SACXjW,EAAQ9P,EAAIsqD,uBAAuB6/H,GACnC3/L,EAAawV,EAAIkqB,UAAU/nB,gBAC3BioL,EAAiB,SAAUx6M,EAAGC,GAClC,OACEiqJ,GAAsCqwD,EAAiBv6M,EAAG4a,GAC1DsvI,GAAsCqwD,EAAiBt6M,EAAG2a,EAE7D,EAGD,IAAI4wJ,EAEAo1C,EACJ,GAAI3hN,KAAK4/M,cAAe,CACtB,MAAMzqI,EAC0B,iBAAvBn1E,KAAK4/M,cACPpmK,GAAUA,IAAUx5C,KAAK4/M,mBAC1Bp5M,EACN2qB,EAAIqpD,sBACFv5C,GACA,CAACwoC,EAASjwB,EAAOllC,KACXA,GAAmC,UAAvBA,EAAS8e,YACvB9e,EAAW,IAAI0jB,GACb7J,GAAiB7Z,EAASyf,iBAAkBpY,KAGhD,MAAMm+J,EAAOxlK,GAAYm1D,EAAQ70D,cAEjC,GACEklK,GACmB,UAAnBA,EAAK1mJ,WACLq2C,aAAmB31D,IACnB9T,KAAK4sJ,UAAU5hJ,WAAWtF,SAAS+jE,GACnC,CACAk4I,EAAyC,EACzC,MAAMvrM,EAAmCqzD,EAAQ70D,cAC9Cqf,qBACAzwB,MAAM,EAAG,GACZ+oK,EAAQ,CACN,CACE9iG,UACAn1D,SAAUqtM,EACV9gM,QAAS,CAACzK,EAAYA,IAGtC,CACU,OAAO,CAAI,GAEb,CAAC++D,eAET,CACI,IAAKo3F,EAAO,CACV,MAKMxsF,EAAMxxD,GACVqzL,GANiBpzL,GACjB8Z,GAAagzK,EAAiBtpH,IAC9Br2E,GAEawV,EAAIkqB,UAAUpe,gBAAkBj9B,KAAK46M,gBAEjB5oH,IACjCr2E,GAEF4wJ,EAAQvsK,KAAKg/M,OAAOz6G,YAAYxkB,EACtC,CAEI,GAAIwsF,GAASA,EAAM1rK,OAAS,EAAG,CAC7B,MAAMiQ,EAAOy7J,EAAM1zI,KAAK0iL,GAAgB,GAClCG,EAAiB5qM,EAAK+P,QAC5B,IAAI0sI,EAAShC,GAAqB+vD,EAAiBxqM,EAAM6K,GACzD,MAAM6xI,EAAcr8H,EAAIsqD,uBAAuB8xE,GAC/C,IAAIyuD,EAAOL,GAAmB16K,EAAOusH,GACrC,GAAIm0D,GAAoB3F,GAAQh8M,KAAK46M,gBAAiB,CAEpD,MAAMiH,EAAiB,CAAE,EAOzB,GANAA,EAAet5M,EAAOmzM,KAAmB,EAEpC17M,KAAKmgN,iBACRngN,KAAKk9C,OAAO,GAAKqwG,EAAO,GAAK+tD,EAAgB,GAC7Ct7M,KAAKk9C,OAAO,GAAKqwG,EAAO,GAAK+tD,EAAgB,IAGjB,WAA5BxqM,EAAKwD,SAAS8e,WA7rCW,IA8rCzBtiB,EAAKlO,MAEL5C,KAAK86M,kBAAmB,EACxB96M,KAAKghN,6BACHzzD,EACA,CAACz8I,EAAK24D,SACN,CAAC34D,EAAKwD,UACNtU,KAAK86M,sBAEF,CACL,MAAMc,EAASzqL,EAAIsqD,uBAAuBigI,EAAe,IACnDG,EAAS1qL,EAAIsqD,uBAAuBigI,EAAe,IACnDI,EAAezwD,GAA0BmC,EAAaouD,GACtDG,EAAe1wD,GAA0BmC,EAAaquD,GAI5D,GAHAG,EAAOpwM,KAAK6S,KAAK7S,KAAKmM,IAAI+jM,EAAcC,IACxC/7M,KAAK86M,iBAAmBkB,GAAQh8M,KAAK46M,iBAGlC56M,KAAK86M,mBACL96M,KAAK0+M,uBAAuB1+M,KAAKkgN,mBAMlC,YAJIlgN,KAAKg7M,iBACPh7M,KAAKk2M,SAASv8J,YAAYgtD,cAAc3mG,KAAKg7M,gBAC7Ch7M,KAAKg7M,eAAiB,OAItBh7M,KAAK86M,mBACPvtD,EACEuuD,EAAeC,EACXL,EAAe,GACfA,EAAe,IAEvB17M,KAAKghN,6BACHzzD,EACA,CAACz8I,EAAK24D,SACN,CAAC34D,EAAKwD,UACNtU,KAAK86M,kBAEP,MAAMpzH,EAAa,CAAE,EACrBA,EAAWn/E,EAAOuI,EAAKwD,YAAa,EACpC,IAAK,IAAI/S,EAAI,EAAG4E,EAAKomK,EAAM1rK,OAAQU,EAAI4E,IAAM5E,EAAG,CAC9C,MAAMsf,EAAU0rJ,EAAMhrK,GAAGsf,QACzB,KACG+0B,GAAiB8lK,EAAe,GAAI76L,EAAQ,KAC3C+0B,GAAiB8lK,EAAe,GAAI76L,EAAQ,KAC7C+0B,GAAiB8lK,EAAe,GAAI76L,EAAQ,KAC3C+0B,GAAiB8lK,EAAe,GAAI76L,EAAQ,KAQ9C,MAPA,CACA,MAAMihM,EAAcv5M,EAAOgkK,EAAMhrK,GAAG+S,UAC9BwtM,KAAep6H,IACnBA,EAAWo6H,IAAe,EAC1BD,EAAet5M,EAAOsY,KAAY,EAElD,CAGA,CACA,CAGQ,YADA7gB,KAAK4+M,gBAAkBiD,EAE/B,CACA,CACQ7hN,KAAKg7M,iBACPh7M,KAAKk2M,SAASv8J,YAAYgtD,cAAc3mG,KAAKg7M,gBAC7Ch7M,KAAKg7M,eAAiB,KAE5B,CAQE,aAAA0G,CAAcv2D,EAAaoC,GACzB,MAAM1sI,EAAUsqI,EAAYtqI,QACtB4oD,EAAU0hF,EAAY1hF,QACtBn1D,EAAW62I,EAAY72I,SACvBssM,EAAQz1D,EAAYy1D,MACpBh+M,EAAQuoJ,EAAYvoJ,MAC1B,IAAI4S,EAEJ,KAAO+3I,EAAO1sJ,OAASyT,EAASggB,aAC9Bi5H,EAAO5nJ,KAAK,GAGd,OAAQ2O,EAAS8e,WACf,IAAK,kBAIL,IAAK,UACH5d,EAAclB,EAASyf,iBACvBve,EAAYorM,EAAM,IAAI/5M,OAAOjE,EAAQ,EAAG,EAAG2qJ,GAC3C,MACF,IAAK,eACH/3I,EAAclB,EAASyf,iBACvBve,EAAYorM,EAAM,IAAIA,EAAM,IAAI/5M,OAAOjE,EAAQ,EAAG,EAAG2qJ,GACrD,MACF,IAAK,aACH/3I,EAAclB,EAASyf,iBACvBve,EAAY3O,OAAOjE,EAAQ,EAAG,EAAG2qJ,GACjC,MACF,QACE,OAAO,EAGXvtJ,KAAKyhN,wBAAwBntM,EAAUkB,GACvC,MAAMusM,EAAQ/hN,KAAKg/M,OACnB+C,EAAM12M,OAAO8/I,GACbnrJ,KAAKgiN,sBAAsB1tM,EAAU1R,EAAOg+M,EAAO,GAGnD,MAAMqB,EAAiB,CACrBphM,QAAS,CAACA,EAAQ,GAAI0sI,GACtB9jF,QAASA,EACTn1D,SAAUA,EACVssM,MAAOA,EACPh+M,MAAOA,GAGTm/M,EAAMr1J,OAAOn3C,GAAe0sM,EAAephM,SAAUohM,GACrDjiN,KAAKk/M,cAAcv5M,KAAK,CAACs8M,EAAgB,IAGzC,MAAMC,EAAkB,CACtBrhM,QAAS,CAAC0sI,EAAQ1sI,EAAQ,IAC1B4oD,QAASA,EACTn1D,SAAUA,EACVssM,MAAOA,EACPh+M,MAAOA,EAAQ,GAKjB,OAFAm/M,EAAMr1J,OAAOn3C,GAAe2sM,EAAgBrhM,SAAUqhM,GACtDliN,KAAKk/M,cAAcv5M,KAAK,CAACu8M,EAAiB,KACnC,CACX,CAEE,cAAAC,CAAe/rM,GAIb,OAHIA,GACFpW,KAAKkhN,yCAAyC9qM,GAEzCpW,KAAKg7M,gBAAgBpmM,cAAcmf,gBAC9C,CAME,QAAAyuE,GACE,MAAMpsF,EAAapW,KAAKg7M,gBAAgBpmM,cAAcmf,iBACtD,OAAK3d,EAGE+X,GACL/X,EACApW,KAAKk3C,SAASmE,UAAU/nB,iBAJjB,IAMb,CAQE,cAAA8uL,GACE,IAAKpiN,KAAKg7M,eACR,OAAO,EAET,GACEh7M,KAAKg7M,eACF/xM,IAAI,cACJvG,OACE4R,GACwB,WAAvBA,EAAS8e,WACT9e,EAAS8e,UAAUm9B,SAAS,WAGlC,OAAO,EAET,MAAMn6C,EAAapW,KAAKg7M,eAAepmM,cAAcmf,iBAErD,OADiB/zB,KAAKg/M,OAAOz6G,YAAYhvF,GAAe,CAACa,KACzCsjC,MACd,EAAE74B,aACA+0B,GAAiB/0B,EAAQ,GAAIzK,IAC7Bw/B,GAAiB/0B,EAAQ,GAAIzK,IAErC,CASE,WAAA6qM,CAAY7qM,GAQV,GAPIA,IACFA,EAAaiY,GACXjY,EACApW,KAAKk3C,SAASmE,UAAU/nB,iBAE1BtzB,KAAKmiN,eAAe/rM,KAGnBpW,KAAKkgN,mBACLlgN,KAAKkgN,mBACJlgN,KAAKkgN,kBAAkBx7M,MAAQ08B,GAAoBI,YACrD,CACA,MAAMz8B,EAAM/E,KAAKkgN,kBACjBlgN,KAAKugN,oBACHx7M,EACA/E,KAAKk/M,cAAc/tL,KAAI,EAAEtQ,KAAaA,KAExC,MAAM4nF,EAAUzoG,KAAKqiN,gBAYrB,OAXIriN,KAAK++M,wBACP/+M,KAAK4F,cACH,IAAImlJ,GACFD,GACA9qJ,KAAK++M,uBACLh6M,IAKN/E,KAAK++M,uBAAyB,KACvBt2G,CACb,CACI,OAAO,CACX,CAOE,aAAA45G,GACE,MAAMC,EAAetiN,KAAKk/M,cACpBqD,EAAoB,CAAE,EAC5B,IACIC,EAAWhtM,EAAagsM,EAAaltM,EAAU/S,EAAGqB,EAAO8+C,EACzD+gK,EAAUvoL,EAAOixH,EAAa5sD,EAF9BmkH,GAAU,EAGd,IAAKnhN,EAAI+gN,EAAazhN,OAAS,EAAGU,GAAK,IAAKA,EAC1CigN,EAAcc,EAAa/gN,GAC3B4pJ,EAAcq2D,EAAY,GAC1BjjH,EAAMh2F,EAAO4iJ,EAAY1hF,SACrB0hF,EAAYy1D,QAEdriH,GAAO,IAAM4sD,EAAYy1D,MAAM9gM,KAAK,MAEhCy+E,KAAOgkH,IACXA,EAAkBhkH,GAAO,CAAE,GAEN,IAAnBijH,EAAY,IACde,EAAkBhkH,GAAKrkE,MAAQixH,EAC/Bo3D,EAAkBhkH,GAAK37F,MAAQuoJ,EAAYvoJ,OAChB,GAAlB4+M,EAAY,KACrBe,EAAkBhkH,GAAK78C,KAAOypG,EAC9Bo3D,EAAkBhkH,GAAK37F,MAAQuoJ,EAAYvoJ,MAAQ,GAGvD,IAAK27F,KAAOgkH,EAAmB,CAiB7B,OAhBAroL,EAAQqoL,EAAkBhkH,GAAKrkE,MAC/BwnB,EAAO6gK,EAAkBhkH,GAAK78C,KAC9B9+C,EAAQ2/M,EAAkBhkH,GAAK37F,MAC/B6/M,EAAW7/M,EAAQ,EAEjBuoJ,OADW3kJ,IAATk7C,EACYA,EAEAxnB,EAEZuoL,EAAW,IACbA,EAAW,GAEbnuM,EAAW62I,EAAY72I,SACvBkB,EAAclB,EAASyf,iBACvByuL,EAAYhtM,EACZktM,GAAU,EACFpuM,EAAS8e,WACf,IAAK,kBACC5d,EAAY21I,EAAYy1D,MAAM,IAAI//M,OAAS,IAC7C2U,EAAY21I,EAAYy1D,MAAM,IAAI/5M,OAAOjE,EAAO,GAChD8/M,GAAU,GAEZ,MACF,IAAK,aACCltM,EAAY3U,OAAS,IACvB2U,EAAY3O,OAAOjE,EAAO,GAC1B8/M,GAAU,GAEZ,MACF,IAAK,eACHF,EAAYA,EAAUr3D,EAAYy1D,MAAM,IAE1C,IAAK,UACH4B,EAAYA,EAAUr3D,EAAYy1D,MAAM,IACpC4B,EAAU3hN,OAAS,IACjB+B,GAAS4/M,EAAU3hN,OAAS,IAC9B+B,EAAQ,GAEV4/M,EAAU37M,OAAOjE,EAAO,GACxB8/M,GAAU,EACI,IAAV9/M,IAEF4/M,EAAU33M,MACV23M,EAAU78M,KAAK68M,EAAU,IACzBC,EAAWD,EAAU3hN,OAAS,IAQtC,GAAI6hN,EAAS,CACX1iN,KAAKyhN,wBAAwBntM,EAAUkB,GACvC,MAAMk4I,EAAW,GASjB,QARalnJ,IAATk7C,IACF1hD,KAAKg/M,OAAO3zM,OAAOq2C,GACnBgsG,EAAS/nJ,KAAK+7C,EAAK7gC,QAAQ,UAEfra,IAAV0zB,IACFl6B,KAAKg/M,OAAO3zM,OAAO6uB,GACnBwzH,EAAS/nJ,KAAKu0B,EAAMrZ,QAAQ,UAEjBra,IAATk7C,QAAgCl7C,IAAV0zB,EAAqB,CAE7C,MAAM+nL,EAAiB,CACrBrB,MAAOz1D,EAAYy1D,MACnBn3I,QAAS0hF,EAAY1hF,QACrBn1D,SAAU62I,EAAY72I,SACtB1R,MAAO6/M,EACP5hM,QAAS6sI,GAGX1tJ,KAAKg/M,OAAOtyJ,OACVn3C,GAAe0sM,EAAephM,SAC9BohM,EAEZ,CACQjiN,KAAKgiN,sBAAsB1tM,EAAU1R,EAAOuoJ,EAAYy1D,UACpD5gN,KAAKg7M,iBACPh7M,KAAKk2M,SAASv8J,YAAYgtD,cAAc3mG,KAAKg7M,gBAC7Ch7M,KAAKg7M,eAAiB,MAExBsH,EAAazhN,OAAS,CAC9B,CACA,CACI,OAAO6hN,CACX,CAQE,cAAAC,GACE,IAAK3iN,KAAKg7M,eACR,OAAO,EAET,GACEh7M,KAAKg7M,eACF/xM,IAAI,cACJvG,OACE4R,GACwB,WAAvBA,EAAS8e,WACT9e,EAAS8e,UAAUm9B,SAAS,WAGlC,OAAO,EAET,MAAMn6C,EAAapW,KAAKg7M,eAAepmM,cAAcmf,iBAErD,OADiB/zB,KAAKg/M,OAAOz6G,YAAYhvF,GAAe,CAACa,KACzCsjC,MACd,EAAE74B,eAEE+0B,GAAiB/0B,EAAQ,GAAIzK,IAC7Bw/B,GAAiB/0B,EAAQ,GAAIzK,KAGvC,CASE,WAAAwsM,CAAYxsM,GACV,MAAMklM,EAAkBllM,EACpBiY,GAAmBjY,EAAYpW,KAAKk3C,SAASmE,UAAU/nB,iBACvDtzB,KAAKg7M,gBAAgBpmM,cAAcmf,iBACvC,IAAKunL,EACH,OAAO,EAIT,OADEt7M,KAAKkhN,yCAAyC5F,GAC1Bp7I,QACpB,CAAC50D,EAAM6/I,IACL7/I,GAAQtL,KAAK0hN,cAAcv2D,EAAamwD,KAC1C,EAEN,CAOE,uBAAAmG,CAAwBntM,EAAUkB,GAChCxV,KAAKi/M,kBAAmB,EACxB3qM,EAASmgB,eAAejf,GACxBxV,KAAKi/M,kBAAmB,CAC5B,CASE,qBAAA+C,CAAsB1tM,EAAU1R,EAAOg+M,EAAO1zM,GAC5ClN,KAAKg/M,OAAOv6G,gBACVnwF,EAASuH,aACT,SAAU0lM,GAENA,EAAiBjtM,WAAaA,SACnB9N,IAAVo6M,QAC4Bp6M,IAA3B+6M,EAAiBX,OACjB1+M,EAAOq/M,EAAiBX,MAAOA,KACjCW,EAAiB3+M,MAAQA,IAEzB2+M,EAAiB3+M,OAASsK,EAE7B,GAEP,GsCpfAk3K,GAAGvqG,YAAYwkI,OAAOtzD,YAAc83D,GACpCz+B,GAAGvqG,YAAYx2B,eAAiBy/J,GAChC1+B,GAAGvqG,YAAYj1B,YAAcm+J,GAC7B3+B,GAAGvqG,YAAYv0B,UAAY09J,GAC3B5+B,GAAGvqG,YAAYopI,QAAUC,GACzB9+B,GAAGvqG,YAAYopI,QAAQjjK,SAAWmjK,GAClC/+B,GAAGvqG,YAAYgyE,OAASu3D,GACxBh/B,GAAGvqG,YAAYgyE,OAAOJ,YAAc43D,GACpCj/B,GAAGvqG,YAAYypI,KnCv4Bf,cAAmBlkK,GAIjB,WAAAr/C,CAAYuK,GAGV,MAAMu6C,EAFNv6C,EAAUA,GAAoB,CAAE,EAM3Bu6C,EAAexF,kBAClBwF,EAAexF,gBAAkBv8C,GAG9B+hD,EAAepF,WAClBoF,EAAepF,SAAW18C,GAG5BkC,MAAM4/C,GAKN7kD,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAML1H,KAAK0rL,QAAUphL,EAAQP,OAASO,EAAQP,OAAS,KAMjD/J,KAAKujN,aAA6B/8M,IAAnB8D,EAAQijJ,QAAuBjjJ,EAAQijJ,OAMtDvtJ,KAAKwjN,WAAyBh9M,IAAjB8D,EAAQ0vB,MAAqB1vB,EAAQ0vB,KAMlDh6B,KAAKyjN,mBACsBj9M,IAAzB8D,EAAQ+P,cAA6B/P,EAAQ+P,aAM/Cra,KAAK4sJ,UAAYtiJ,EAAQowE,SAAWpwE,EAAQowE,SAAW,KAMvD16E,KAAK0jN,sBAAwB,GAM7B1jN,KAAK2jN,2BAA6B,CAAE,EAQpC3jN,KAAK4jN,wBAA0B,CAAE,EASjC5jN,KAAK6jN,iBAAmB,CAAE,EAM1B7jN,KAAK46M,qBACwBp0M,IAA3B8D,EAAQuwM,eAA+BvwM,EAAQuwM,eAAiB,GAOlE76M,KAAKg/M,OAAS,IAAI9qI,GAOlBl0E,KAAK8jN,SAAW,KAMhB9jN,KAAK+jN,YAAcr9M,OAAO2C,OACxB,CAAE,EACFokJ,GACAnjJ,EAAQ05M,WAEd,CASE,UAAAh+G,CAAWv8B,EAASo8D,GAClBA,OAAwBr/H,IAAbq/H,GAAyBA,EACpC,MAAMo+E,EAAc17M,EAAOkhE,GACrBn1D,EAAWm1D,EAAQ70D,cACzB,GAAIN,EAAU,CACZ,MAAMq5I,EAAY3tJ,KAAK+jN,YAAYzvM,EAAS8e,WAC5C,GAAIu6H,EAAW,CACb3tJ,KAAK4jN,wBAAwBK,GAC3B3vM,EAASuH,UlOzQV,CAAC9E,IAAUA,KAAU,KAAW,MkO0QjC,MAAM22I,EAAWC,EACfr5I,EACAtU,KAAKk3C,SAASmE,UAAU/nB,iBAE1B,IAAI4wL,EAAex2D,EAAS7sJ,OAC5B,IAAK,IAAIU,EAAI,EAAGA,EAAI2iN,IAAgB3iN,EAAG,CACrC,MAAMsf,EAAU6sI,EAASnsJ,GACzBssJ,GAAYtsJ,GAAKgU,GAAesL,GAChCitI,GAAgBvsJ,GAAK,CACnBkoE,QAASA,EACT5oD,QAASA,EAErB,CAIQ,GAHAgtI,GAAYhtJ,OAASqjN,EACrBp2D,GAAgBjtJ,OAASqjN,EAErBlkN,KAAKyjN,cACP,IAAK,IAAI5mM,EAAI,EAAG6P,EAAKghI,EAAS7sJ,OAAQgc,EAAI6P,IAAM7P,EAAG,CACjD,MAAMgE,EAAU6sI,EAAS7wI,GACzB,GAAuB,IAAnBgE,EAAQhgB,OACV,SAEF,MAAM4U,EAASo4I,GAAYhxI,GAE3B,IAAK,IAAIE,EAAI,EAAGmlH,EAAKwrB,EAAS7sJ,OAAQkc,EAAImlH,IAAMnlH,EAAG,CACjD,GAAIF,IAAME,GAAKF,EAAI,IAAME,GAAKF,EAAI,IAAME,EAEtC,SAEF,MAAMonM,EAAez2D,EAAS3wI,GAC9B,IAAKsW,GAAiB5d,EAAQo4I,GAAY9wI,IACxC,SAEF,MAAM1C,EAAe6e,GAAqBrY,EAASsjM,GACnD,IAAK9pM,EACH,SAEF,MAAM+pM,EAAsB,CAAC/pM,GAC7BwzI,GAAYq2D,GAAgB3uM,GAAe6uM,GAC3Ct2D,GAAgBo2D,KAAkB,CAChCz6I,UACA5oD,QAASujM,EACTC,gBAAgB,EAEhC,CAEY,MAAMC,EAAgBtkN,KAAKg/M,OAAOz6G,YAAYspD,GAAYhxI,IAC1D,IAAK,MAAOgE,QAASsjM,KAAiBG,EAAe,CACnD,GAA4B,IAAxBH,EAAatjN,OACf,SAEF,MAAMwZ,EAAe6e,GAAqBrY,EAASsjM,GACnD,IAAK9pM,EACH,SAEF,MAAM+pM,EAAsB,CAAC/pM,GAC7BwzI,GAAYq2D,GAAgB3uM,GAAe6uM,GAC3Ct2D,GAAgBo2D,KAAkB,CAChCz6I,UACA5oD,QAASujM,EACTC,gBAAgB,EAEhC,CACA,CAG6B,IAAjBH,EACFlkN,KAAKg/M,OAAOtyJ,OAAOmhG,GAAY,GAAIC,GAAgB,IAEnD9tJ,KAAKg/M,OAAOnyM,KAAKghJ,GAAaC,GAExC,CACA,CAEQjoB,IACF7lI,KAAK2jN,2BAA2BM,GAAen9M,EAC7C2iE,EACA5pE,EACAG,KAAKqmG,qBACLrmG,MAGR,CAME,YAAAukN,GAEE,IAAI7pI,EAMJ,OALI16E,KAAK4sJ,UACPlyE,EAAW16E,KAAK4sJ,UACP5sJ,KAAK0rL,UACdhxG,EAAW16E,KAAK0rL,QAAQxhI,eAEnBwwB,CACX,CAWE,iBAAA8pI,CAAkBC,EAAOC,GACvB,OAAOD,EAAM5jM,UAAY6jM,EAAM7jM,SAAW4jM,EAAMh7I,UAAYi7I,EAAMj7I,OACtE,CAQE,WAAArjE,CAAYrB,GACV,MAAM0kC,EAASzpC,KAAK2kN,OAAO5/M,EAAIk8B,MAAOl8B,EAAIqR,WAAYrR,EAAIosB,KAwB1D,OAtBIsY,GACF1kC,EAAIqR,WAAaqzB,EAAO8jH,OAAO/pJ,MAAM,EAAG,GACxCuB,EAAIk8B,MAAQwI,EAAO+jH,YAGfxtJ,KAAK8jN,WAAa9jN,KAAKwkN,kBAAkBxkN,KAAK8jN,SAAUr6K,IAC1DzpC,KAAK4F,cAAc,IAAI0nJ,GAAUD,GAAsBrtJ,KAAK8jN,WAG9D9jN,KAAK8jN,SAAW,CACdv2D,OAAQxoJ,EAAIqR,WACZo3I,YAAazoJ,EAAIk8B,MACjBwoC,QAAShgC,EAAOggC,QAChB5oD,QAAS4oB,EAAO5oB,SAElB7gB,KAAK4F,cAAc,IAAI0nJ,GAAUD,GAAoBrtJ,KAAK8jN,YACjD9jN,KAAK8jN,WAEd9jN,KAAK4F,cAAc,IAAI0nJ,GAAUD,GAAsBrtJ,KAAK8jN,WAC5D9jN,KAAK8jN,SAAW,MAGX7+M,MAAMmB,YAAYrB,EAC7B,CAME,iBAAAi7M,CAAkBj7M,GAChB,MAAM0kE,EAAUmkF,GAAoB7oJ,GAChC0kE,GACFzpE,KAAKgmG,WAAWv8B,EAEtB,CAME,oBAAAw2I,CAAqBl7M,GACnB,MAAM0kE,EAAUmkF,GAAoB7oJ,GAChC0kE,GACFzpE,KAAK2mG,cAAcl9B,EAEzB,CAME,oBAAA48B,CAAqBthG,GACnB,MAAM0kE,EAA0D1kE,EAAU,OAC1E,GAAI/E,KAAK0/C,uBAAwB,CAC/B,MAAM6+C,EAAMh2F,EAAOkhE,GACb80B,KAAOv+F,KAAK6jN,mBAChB7jN,KAAK6jN,iBAAiBtlH,GAAO90B,EAErC,MACMzpE,KAAK4kN,eAAen7I,EAE1B,CAQE,aAAAjqB,CAAcz6C,GACZ,MAAM8/M,EAAmBn+M,OAAOoC,OAAO9I,KAAK6jN,kBAC5C,GAAIgB,EAAiBhkN,OACnB,IAAK,MAAM4oE,KAAWo7I,EACpB7kN,KAAK4kN,eAAen7I,GAGxB,OAAO,CACX,CASE,aAAAk9B,CAAcl9B,EAASxrC,GACrB,MAAM6mL,OAA0Bt+M,IAAby3B,GAAyBA,EACtCgmL,EAAc17M,EAAOkhE,GACrBh0D,EAASzV,KAAK4jN,wBAAwBK,GAC5C,GAAIxuM,EAAQ,CACV,MAAMgrM,EAAQzgN,KAAKg/M,OACb0B,EAAgB,GACtBD,EAAMh8G,gBAAgBhvF,GAAQ,SAAU3E,GAClC24D,IAAY34D,EAAK24D,SACnBi3I,EAAc/6M,KAAKmL,EAE7B,IACM,IAAK,IAAIvP,EAAIm/M,EAAc7/M,OAAS,EAAGU,GAAK,IAAKA,EAC/Ck/M,EAAMp1M,OAAOq1M,EAAcn/M,GAEnC,CAEQujN,IACFz9M,EAAcrH,KAAK2jN,2BAA2BM,WACvCjkN,KAAK2jN,2BAA2BM,GAE7C,CASE,MAAA9sK,CAAOhmB,GACL,MAAM4zL,EAAa/kN,KAAKk3C,SAClBvwC,EAAO3G,KAAK0jN,sBAClB,IAAIhpI,EAAW16E,KAAKukN,eAcpB,GAbKviN,MAAMC,QAAQy4E,KACjBA,EAAWA,EAAS1vE,YAGlB+5M,IACFp+M,EAAKmE,QAAQzD,GACbV,EAAK9F,OAAS,EACdb,KAAKg/M,OAAO36M,QACZqC,OAAOoC,OAAO9I,KAAK2jN,4BAA4B74M,QAAQzD,GACvDrH,KAAK2jN,2BAA6B,CAAE,GAEtC1+M,MAAMkyC,OAAOhmB,GAETA,EAAK,CACHnxB,KAAK4sJ,UACPjmJ,EAAKhB,KACHmB,EACE9G,KAAK4sJ,UACLjtJ,EACAK,KAAKggN,kBACLhgN,MAEF8G,EACE9G,KAAK4sJ,UACLjtJ,EACAK,KAAKigN,qBACLjgN,OAGKA,KAAK0rL,SACd/kL,EAAKhB,KACHmB,EACE9G,KAAK0rL,QACL/mF,GACA3kG,KAAKggN,kBACLhgN,MAEF8G,EACE9G,KAAK0rL,QACL/mF,GACA3kG,KAAKigN,qBACLjgN,OAIN,IAAK,MAAMypE,KAAWiR,EACpB16E,KAAKgmG,WAAWv8B,EAExB,CACA,CAQE,MAAAk7I,CAAO1jL,EAAOq6K,EAAiBnqL,GAC7B,MAAMxV,EAAawV,EAAIkqB,UAAU/nB,gBAC3B0xL,EAAsB32L,GAAmBitL,EAAiB3/L,GAE1DokE,EAAMxxD,GACV3Y,GACEL,GAAe,CAACyvM,IAChB7zL,EAAIkqB,UAAUpe,gBAAkBj9B,KAAK46M,iBAEvCj/L,GAGI+xI,EAAW1tJ,KAAKg/M,OAAOz6G,YAAYxkB,GACnCklI,EAAiBv3D,EAAS7sJ,OAChC,GAAuB,IAAnBokN,EACF,OAAO,KAGT,IAAIC,EAEA19G,EAEA68G,EAHAzxL,EAAqB7b,IAErB2kM,EAAiB,KAGrB,MAAMyJ,EAAwBnlN,KAAK46M,gBAAkB56M,KAAK46M,gBACpDwK,EAAY,KAChB,GAAIF,EAAe,CACjB,MAAM13D,EAAcr8H,EAAIsqD,uBAAuBypI,GAE/C,GAD6B5oM,GAAgB2kB,EAAOusH,IAE1B23D,IACtBd,GAAkBrkN,KAAKyjN,gBACrBY,IAAmBrkN,KAAKujN,SAAWvjN,KAAKwjN,QAE5C,MAAO,CACLj2D,OAAQ23D,EACR13D,YAAa,CACX5hJ,KAAK+R,MAAM6vI,EAAY,IACvB5hJ,KAAK+R,MAAM6vI,EAAY,KAEzB/jF,QAAS+9B,EACT3mF,QAAS66L,EAGrB,CACM,OAAO,IAAI,EAGb,GAAI17M,KAAKujN,SAAWvjN,KAAKyjN,cAAe,CACtC,IAAK,IAAIliN,EAAI,EAAGA,EAAI0jN,IAAkB1jN,EAAG,CACvC,MAAM4pJ,EAAcuC,EAASnsJ,GAC7B,GAAoD,WAAhD4pJ,EAAY1hF,QAAQ70D,cAAcwe,UACpC,IAAK,MAAMm6H,KAAUpC,EAAYtqI,QAAS,CACxC,MACM3T,EAAQoP,GAAgB0oM,EADN32L,GAAmBk/H,EAAQ5xI,IAE/CzO,EAAQ0lB,IACVsyL,EAAgB33D,EAChB36H,EAAqB1lB,EACrBs6F,EAAiB2jD,EAAY1hF,QAC7B46I,EAAiBl5D,EAAYk5D,eAE3C,CAEA,CACM,MAAM56K,EAAS27K,IACf,GAAI37K,EACF,OAAOA,CAEf,CAEI,GAAIzpC,KAAKwjN,MAAO,CACd,IAAK,IAAIjiN,EAAI,EAAGA,EAAI0jN,IAAkB1jN,EAAG,CACvC,IAAIgsJ,EAAS,KACb,MAAMpC,EAAcuC,EAASnsJ,GAC7B,GAAoD,WAAhD4pJ,EAAY1hF,QAAQ70D,cAAcwe,UAAwB,CAC5D,IAAI+vD,EAAiBgoE,EAAY1hF,QAAQ70D,cACzC,MAAMoZ,EAAiBE,KACnBF,IACFm1D,EAAiBA,EACd1uE,QACAsY,UAAUiB,EAAgBrS,IAE/B4xI,EAAS/sI,GACPwkM,EACZ,EAEA,KAAe,CACL,MAAOK,EAAcC,GAAcn6D,EAAYtqI,QAE3CykM,IACFz6D,GAAY,GAAKx8H,GAAmBg3L,EAAc1pM,GAClDkvI,GAAY,GAAKx8H,GAAmBi3L,EAAY3pM,GAChD4xI,EAAS3sI,GAAiBokM,EAAqBn6D,IAE3D,CACQ,GAAI0C,EAAQ,CACV,MAAMrgJ,EAAQoP,GAAgB0oM,EAAqBz3D,GAC/CrgJ,EAAQ0lB,IACVsyL,EAAgB/2L,GAAiBo/H,EAAQ5xI,GACzC+/L,EACkD,WAAhDvwD,EAAY1hF,QAAQ70D,cAAcwe,UAC9B,KACA+3H,EAAYtqI,QAClB+R,EAAqB1lB,EACrBs6F,EAAiB2jD,EAAY1hF,QAEzC,CACA,CAEM,MAAMhgC,EAAS27K,IACf,GAAI37K,EACF,OAAOA,CAEf,CAEI,OAAO,IACX,CAME,cAAAm7K,CAAen7I,GACbzpE,KAAK2mG,cAAcl9B,GAAS,GAC5BzpE,KAAKgmG,WAAWv8B,GAAS,EAC7B,GmCiVA26G,GAAGvqG,YAAY0rI,UlCjkCf,cAAwBnmK,GAItB,WAAAr/C,CAAYuK,GAyCV,IAAI6qE,EACJ,GAvCAlwE,MAFAqF,EAAUA,GAAoB,CAAE,GAOhCtK,KAAKyH,GAKLzH,KAAKgH,KAKLhH,KAAK0H,GAOL1H,KAAKwlN,gBAAkB,KAOvBxlN,KAAKylN,iBAAmB,KAMxBzlN,KAAK4sJ,eAAiCpmJ,IAArB8D,EAAQowE,SAAyBpwE,EAAQowE,SAAW,KAIjEpwE,EAAQ6uC,SAAWn5C,KAAK4sJ,UAC1B,GAA8B,mBAAnBtiJ,EAAQ6uC,OACjBg8B,EAAc7qE,EAAQ6uC,WACjB,CACL,MAAMA,EAAS7uC,EAAQ6uC,OACvBg8B,EAAc,SAAU37B,GACtB,OAAOL,EAAOzzC,SAAS8zC,EACxB,CACT,MAEM27B,EAAcryE,EAOhB9C,KAAK6sJ,aAAe13E,EAMpBn1E,KAAK0sJ,QAAUpiJ,EAAQmlC,SAAWzvC,KAAK4sJ,UAAYtiJ,EAAQmlC,OAAS3sC,EAMpE9C,KAAK2sJ,cAAgBriJ,EAAQ2qE,aAAe3qE,EAAQ2qE,aAAe,EAMnEj1E,KAAKwgD,WAAal2C,EAAQi2C,UAAYj2C,EAAQi2C,UAAYjC,GAM1Dt+C,KAAK0lN,aAAe,KAEpB1lN,KAAK0J,kBACH+yC,GACAz8C,KAAK2lN,qBAEX,CAQE,eAAAtmK,CAAgBx5C,GACd,IAAKA,EAAM+6B,gBAAkB5gC,KAAKwgD,WAAW36C,GAC3C,OAAO,EAGT,GADA7F,KAAK0lN,aAAe1lN,KAAK4lN,iBAAiB//M,EAAMo7B,MAAOp7B,EAAMsrB,MACxDnxB,KAAKwlN,iBAAmBxlN,KAAK0lN,aAAc,CAC9C1lN,KAAKylN,iBAAmB5/M,EAAMuQ,WAC9BpW,KAAKwlN,gBAAkB3/M,EAAMuQ,WAC7BpW,KAAKu/C,gBAAgB15C,GAErB,MAAM60E,EAAW16E,KAAK4sJ,WAAa,IAAIxiJ,EAAW,CAACpK,KAAK0lN,eAWxD,OATA1lN,KAAK4F,cACH,IAAIooJ,GACFD,GACArzE,EACA70E,EAAMuQ,WACNpW,KAAKylN,iBACL5/M,KAGG,CACb,CACI,OAAO,CACX,CAQE,aAAA25C,CAAc35C,GACZ,GAAI7F,KAAKwlN,gBAAiB,CACxBxlN,KAAKwlN,gBAAkB,KACvBxlN,KAAKu/C,gBAAgB15C,GAErB,MAAM60E,EAAW16E,KAAK4sJ,WAAa,IAAIxiJ,EAAW,CAACpK,KAAK0lN,eAaxD,OAXA1lN,KAAK4F,cACH,IAAIooJ,GACFD,GACArzE,EACA70E,EAAMuQ,WACNpW,KAAKylN,iBACL5/M,IAIJ7F,KAAKylN,iBAAmB,MACjB,CACb,CACI,OAAO,CACX,CAOE,eAAAnmK,CAAgBz5C,GACd,GAAI7F,KAAKwlN,gBAAiB,CACxB,MAAMjN,EAAgB1yM,EAAMuQ,WACtBuF,EAAa9V,EAAMsrB,IAAIkqB,UAAU/nB,gBAEjCuyL,EAAoBx3L,GAAmBkqL,EAAe58L,GACtDmqM,EAAqBz3L,GACzBruB,KAAKwlN,gBACL7pM,GAEIlB,EAASorM,EAAkB,GAAKC,EAAmB,GACnDprM,EAASmrM,EAAkB,GAAKC,EAAmB,GAEnDprI,EAAW16E,KAAK4sJ,WAAa,IAAIxiJ,EAAW,CAACpK,KAAK0lN,eAClD13L,EAAiBE,KAEvBwsD,EAAS5vE,SAAQ,SAAU2+D,GACzB,MAAMqwG,EAAOrwG,EAAQ70D,cACjBoZ,GACF8rJ,EAAK/sJ,UAAUiB,EAAgBrS,GAC/Bm+J,EAAK3pJ,UAAU1V,EAAQC,GACvBo/J,EAAK/sJ,UAAUpR,EAAYqS,IAE3B8rJ,EAAK3pJ,UAAU1V,EAAQC,GAEzB+uD,EAAQl1D,YAAYulK,EAC5B,IAEM95K,KAAKwlN,gBAAkBjN,EAEvBv4M,KAAK4F,cACH,IAAIooJ,GACFD,GACArzE,EACA69H,EACAv4M,KAAKylN,iBACL5/M,GAGV,CACA,CAOE,eAAA05C,CAAgB15C,GACd,MAAMsF,EAAOtF,EAAMsrB,IAAIwR,cAInB3iC,KAAK4lN,iBAAiB//M,EAAMo7B,MAAOp7B,EAAMsrB,MAC3ChmB,EAAKmvC,UAAUjvC,OAAOrL,KAAKwlN,gBAAkB,UAAY,eACzDr6M,EAAKmvC,UAAU/5B,IAAIvgB,KAAKwlN,gBAAkB,cAAgB,YAE1Dr6M,EAAKmvC,UAAUjvC,OAAO,UAAW,cAEvC,CAWE,gBAAAu6M,CAAiB3kL,EAAO9P,GACtB,OAAOA,EAAIqpD,sBACTv5C,GACA,CAACwoC,EAASjwB,KACR,GAAMiwB,aAAmB31D,IAAa9T,KAAK0sJ,QAAQjjF,EAASjwB,MAGxDx5C,KAAK4sJ,WAAc5sJ,KAAK4sJ,UAAU5hJ,WAAWtF,SAAS+jE,IAG1D,OAAOA,CAAO,GAEhB,CACE0L,YAAan1E,KAAK6sJ,aAClB53E,aAAcj1E,KAAK2sJ,eAG3B,CAOE,eAAAK,GACE,OAAOhtJ,KAAK2sJ,aAChB,CAQE,eAAAM,CAAgBh4E,GACdj1E,KAAK2sJ,cAAgB13E,CACzB,CASE,MAAA99B,CAAOhmB,GACL,MAAM67J,EAAShtL,KAAKk3C,SACpBjyC,MAAMkyC,OAAOhmB,GACbnxB,KAAK42M,aAAa5pB,EACtB,CAKE,oBAAA24B,GACE3lN,KAAK42M,aAAa,KACtB,CAME,YAAAA,CAAa5pB,GACX,IAAI77J,EAAMnxB,KAAKk3C,SACf,MAAM4F,EAAS98C,KAAK48C,YACpB,KAAKzrB,IAAQ2rB,KACX3rB,EAAMA,GAAO67J,EACT77J,GAAK,CACMA,EAAIwR,cACZ2X,UAAUjvC,OAAO,UAAW,cACzC,CAEA,GkCoxBA+4K,GAAGvqG,YAAY0rI,UAAUv3D,eAAiB+3D,GAC1C3hC,GAAGvqG,YAAYz9B,SAAW,CAAE,EAC5BgoI,GAAGvqG,YAAYz9B,SAASA,SAAW4pK,GACnC5hC,GAAG5qI,MAAQ,CAAE,EACb4qI,GAAG5qI,MAAMysK,KAAOC,GAChB9hC,GAAG5qI,MAAM2sK,UAAYC,GACrBhiC,GAAG5qI,MAAM6sK,SAAWC,GACpBliC,GAAG5qI,MAAMuuG,WAAaw+D,GACtBniC,GAAG5qI,MAAMgtK,UlEvhCT,cAAwB7+E,GAItB,WAAA5nI,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhC,MAAM29C,EAAcvhD,OAAO2C,OACzB,CACEiqE,sBAAsB,EACtBC,wBAAwB,EACxBF,aAAc,GAEhB/oE,UAGK29C,EAAYw+J,gBACZx+J,EAAY+c,mBACZ/c,EAAYy+J,kBACZz+J,EAAY0+J,kBACZ1+J,EAAY2+J,yBACZ3+J,EAAY4+J,yBACZ5+J,EAAY6+J,wBACZ7+J,EAAY8+J,wBACZ9+J,EAAY++J,qBACZ/+J,EAAYg/J,qBACZh/J,EAAYi/J,UACnBjiN,MAAMgjD,GAMNjoD,KAAK6qC,YAAc,KAMnB7qC,KAAKmnN,QAAUpwM,IAMf/W,KAAKonN,QAAUrwM,IAMf/W,KAAKqnN,SAAWtwM,IAMhB/W,KAAKsnN,SAAWvwM,IAMhB/W,KAAKunN,MAAQxwM,IAMb/W,KAAKwnN,MAAQzwM,IAMb/W,KAAKynN,OAAS1wM,IAMd/W,KAAK0nN,OAAS3wM,IAMd/W,KAAK2nN,iBACoBnhN,IAAvB8D,EAAQo8M,WAA2Bp8M,EAAQo8M,WAAa,IAM1D1mN,KAAK4nN,eAAiCphN,IAArB8D,EAAQm8M,SAAyBn8M,EAAQm8M,SAAW,IAMrEzmN,KAAK6nN,WAAa,GAMlB7nN,KAAK8nN,WAAa,GAMlB9nN,KAAK+nN,kBACqBvhN,IAAxB8D,EAAQ06D,YACJ16D,EAAQ06D,YACR4iE,GAMN5nI,KAAKgoN,0BAAuBxhN,EAM5BxG,KAAKioN,wBAAqBzhN,EAM1BxG,KAAKkoN,wBAA0B,KAM/BloN,KAAKmoN,YAAc,KAMnBnoN,KAAKooN,aAAe,KAMpBpoN,KAAKqoN,SAAW,KAMhBroN,KAAKsoN,UAAY,KAMjBtoN,KAAKuoN,iBAAmB,KAMxBvoN,KAAKwoN,iBAAmB,KAEpBl+M,EAAQq8M,aAKV3mN,KAAKyoN,mBAC0BjiN,MAA7B8D,EAAQs8M,kBACJ7lM,GAAoB7Z,KAAKlH,KAAM,MAC/BsK,EAAQs8M,kBAMd5mN,KAAK0oN,mBAC0BliN,MAA7B8D,EAAQu8M,kBACJ9lM,GAAoB7Z,KAAKlH,KAAM,MAC/BsK,EAAQu8M,kBAQd7mN,KAAK2oN,kBACyBniN,MAA5B8D,EAAQw8M,iBAAgC,EAAIx8M,EAAQw8M,iBAQtD9mN,KAAK4oN,kBACyBpiN,MAA5B8D,EAAQy8M,iBAAgC,EAAIz8M,EAAQy8M,iBAMtD/mN,KAAK6oN,mBAAqB,IAAIlgJ,GAAM,CAClCpK,UAC4B/3D,IAA1B8D,EAAQ08M,cACJ18M,EAAQ08M,cAAcvyM,QACtB,IAAIw1D,GAAK,CACP7K,KAAM,0BACNwL,aAAc,SACd5H,KAAM,IAAIqD,GAAK,CACb5V,MAAO,kBAET6S,OAAQ,IAAIyE,GAAO,CACjBtX,MAAO,sBACP3hD,MAAO,QAUnB9O,KAAK8oN,eAAkBr/I,IACrB,MAAMjxB,EAAQixB,EAAQxgE,IAAI,mBAE1B,OADAjJ,KAAK6oN,mBAAmB1/I,UAAUK,QAAQhxB,GACnCx4C,KAAK6oN,kBAAkB,EAOhC7oN,KAAK+oN,mBAAqB,IAAIpgJ,GAAM,CAClCpK,UAC4B/3D,IAA1B8D,EAAQ28M,cACJ38M,EAAQ28M,cAAcxyM,QACtB,IAAIw1D,GAAK,CACP7K,KAAM,0BACNkL,UAAW,QACXtH,KAAM,IAAIqD,GAAK,CACb5V,MAAO,kBAET6S,OAAQ,IAAIyE,GAAO,CACjBtX,MAAO,sBACP3hD,MAAO,QAUnB9O,KAAKgpN,eAAkBv/I,IACrB,MAAMjxB,EAAQixB,EAAQxgE,IAAI,mBAE1B,OADAjJ,KAAK+oN,mBAAmB5/I,UAAUK,QAAQhxB,GACnCx4C,KAAK+oN,kBAAkB,EAGhC/oN,KAAKuoN,iBAAmB,GACxBvoN,KAAKwoN,iBAAmB,GAExBxoN,KAAKsF,iBAAiBzF,GAAsBG,KAAKipN,YAAY/hN,KAAKlH,QAOpEA,KAAKkpN,gBACmB1iN,IAAtB8D,EAAQ48M,UAA0B58M,EAAQ48M,UAAYr/E,GAGxD7nI,KAAK8pD,UACH,IAAI+6C,GAAa,CACfjyF,OAAQ5S,KAAKmpN,eAAejiN,KAAKlH,MACjCmlG,SAAUnlG,KAAKopN,iBAAiBliN,KAAKlH,MACrC06E,SAAU,IAAItwE,EACd46F,UAAU,EACVK,iBAAiB,EACjB3pF,MAAOpR,EAAQoR,SASnB1b,KAAKqpN,aAAe,GAMpBrpN,KAAKspN,WAAa,IAAI3gJ,GAAM,CAC1BrF,OAAQtjE,KAAK+nN,eAOf/nN,KAAKupN,cAAgB,KAMrBvpN,KAAK4hH,gBAAkB,KAMvB5hH,KAAK6iI,oBAAsB,KAE3B7iI,KAAKm0E,eAAe,KACxB,CASE,gBAAAi1I,CAAiB3zM,EAAQwD,GAEvB,IAAIuwM,EAAkB/zM,EAAOjS,QAe7B,OAdIxD,KAAK6qC,aAAe7qC,KAAK25C,YAAYg8B,YACvCkvD,GAAY2kF,EAAiBxpN,KAAK6qC,aAEhC7qC,KAAKupN,gBAEL/xM,GAAoBxX,KAAKupN,cAAeC,EAAiBvwM,GAGzDuwM,EAAkBxpN,KAAKupN,cAAc/lN,QAGrCxD,KAAK25C,YAAY4uD,mBAAmBvoG,KAAKupN,gBAGtC,CAACC,EACZ,CAQE,cAAAL,CAAe1zM,EAAQwD,EAAY0C,GACjC3b,KAAKupN,cAAgB9zM,EACrB,MAAM1L,EAAS/J,KAAK25C,YASdgqE,EAAevpG,GANDpa,KAAK6b,aAAe,EACrC9E,KACAA,IACDA,IACAA,KAEgDtB,GAElD,GACEzV,KAAK4hH,iBACL1/G,GAAOlC,KAAK4hH,gBAAiB+B,IAC7B3jH,KAAK6iI,sBAAwB5pH,EAE7B,OAMF,GAJAjZ,KAAK4hH,gBAAkB+B,EACvB3jH,KAAK6iI,oBAAsB5pH,EAGvBzU,GAAQm/G,GACV,OAIF,MAAM3qG,EAASJ,GAAU+qG,GACnBpxF,EAAoBtZ,EAAaA,EAAc,IAGlDjZ,KAAK6qC,cAAgBmkH,GAAqBhvJ,KAAK6qC,YAAalvB,KAG7D3b,KAAKypN,sBAAsB9tM,GAG7B3b,KAAK0pN,iBAAiB/lG,EAAc3qG,EAAQC,EAAYsZ,GAGxD,IAQIk3C,EARA83D,EAAevhI,KAAK6nN,WAAWhnN,OAASb,KAAK8nN,WAAWjnN,OAS5D,IARIb,KAAKuoN,mBACPhnF,GAAgBvhI,KAAK6nN,WAAWhnN,QAE9Bb,KAAKwoN,mBACPjnF,GAAgBvhI,KAAK8nN,WAAWjnN,QAI3B0gI,EAAevhI,KAAKqpN,aAAaxoN,QACtC4oE,EAAU,IAAI31D,GACd9T,KAAKqpN,aAAa1jN,KAAK8jE,GAGzB,MAAMkgJ,EAAe5/M,EAAOo9F,wBAC5BwiH,EAAatlN,QACb,IAGI9C,EAAGia,EAHHouM,EAAY,EAIhB,IAAKroN,EAAI,EAAGia,EAAIxb,KAAK6nN,WAAWhnN,OAAQU,EAAIia,IAAKja,EAC/CkoE,EAAUzpE,KAAKqpN,aAAaO,KAC5BngJ,EAAQl1D,YAAYvU,KAAK6nN,WAAWtmN,IACpCkoE,EAAQ30D,SAAS9U,KAAKspN,YACtBK,EAAahkN,KAAK8jE,GAEpB,IAAKloE,EAAI,EAAGia,EAAIxb,KAAK8nN,WAAWjnN,OAAQU,EAAIia,IAAKja,EAC/CkoE,EAAUzpE,KAAKqpN,aAAaO,KAC5BngJ,EAAQl1D,YAAYvU,KAAK8nN,WAAWvmN,IACpCkoE,EAAQ30D,SAAS9U,KAAKspN,YACtBK,EAAahkN,KAAK8jE,EAExB,CAYE,YAAAogJ,CAAa78L,EAAK88L,EAAQC,EAAQx3L,EAAkB9c,EAAQ7S,GAC1D,MAAMi/F,EAAa7hG,KAAKgqN,aACtBh9L,EACA88L,EACAC,EACAx3L,EACA3vB,GAEF,GAAI0X,GAAWunF,EAAWhmF,YAAapG,GAAS,CAC9C,GAAIzV,KAAKuoN,iBAAkB,CACzB,MAAMhqJ,EAAOv+D,KAAKyoN,mBAAmBz7L,GACjCpqB,KAAS5C,KAAKuoN,iBAChBvoN,KAAKuoN,iBAAiB3lN,GAAO27D,KAAOA,EAEpCv+D,KAAKuoN,iBAAiB3lN,GAAS,CAC7Bk3K,KAAM,IAAI9hJ,GAAM,IAChBumC,KAAMA,EAGlB,CACMv+D,KAAK6nN,WAAWjlN,KAAWi/F,CACjC,CACI,OAAOj/F,CACX,CAYE,YAAAqnN,CAAajrM,EAAKkrM,EAAQC,EAAQ53L,EAAkB9c,EAAQ7S,GAC1D,MAAMi/F,EAAa7hG,KAAKoqN,aACtBprM,EACAkrM,EACAC,EACA53L,EACA3vB,GAEF,GAAI0X,GAAWunF,EAAWhmF,YAAapG,GAAS,CAC9C,GAAIzV,KAAKwoN,iBAAkB,CACzB,MAAMjqJ,EAAOv+D,KAAK0oN,mBAAmB1pM,GACjCpc,KAAS5C,KAAKwoN,iBAChBxoN,KAAKwoN,iBAAiB5lN,GAAO27D,KAAOA,EAEpCv+D,KAAKwoN,iBAAiB5lN,GAAS,CAC7Bk3K,KAAM,IAAI9hJ,GAAM,IAChBumC,KAAMA,EAGlB,CACMv+D,KAAK8nN,WAAWllN,KAAWi/F,CACjC,CACI,OAAOj/F,CACX,CAME,WAAAqmN,CAAYpjN,GACV,MAAMqT,EAAWrT,EAAM66B,WAAWsH,UAAU9uB,SACtCD,EAAapT,EAAM66B,WAAWsH,UAAU/uB,WACxCjG,EAAOnN,EAAM66B,WAAW1tB,KACxByC,EAAS5P,EAAM66B,WAAWjrB,OAC1B40M,EAAiBzxM,GAAUnD,GACjC,IAAI60M,EAAiB70M,EACrB,GAAIyD,EAAU,CACZ,MAAMqxM,EAAiBv3M,EAAK,GAAKiG,EAC3BuxM,EAAkBx3M,EAAK,GAAKiG,EAClCqxM,EAAiB,CACfD,EAAe,GAAKE,EAAiB,EACrCF,EAAe,GAAKG,EAAkB,EACtCH,EAAe,GAAKE,EAAiB,EACrCF,EAAe,GAAKG,EAAkB,EAE9C,CAEI,IAAI7iE,EAAa,EACb9jB,EAAW,EACX4mF,EAAgBzqN,KAAK4oN,kBAAoB,GAC7C,MAAMhtM,EAAmB5b,KAAK6qC,YAAYhvB,YACpCE,EAAarD,GAASkD,GAC5B,GACE5b,KAAK25C,YAAYg8B,YACjB31E,KAAK6qC,YAAY/uB,aAChBxF,GAAesF,EAAkBnG,GAClC,CACAkyI,EAAa/7I,KAAKoQ,OAAOvG,EAAO,GAAKmG,EAAiB,IAAMG,GAC5D8nH,EAAWj4H,KAAKgS,MAAMnI,EAAO,GAAKmG,EAAiB,IAAMG,GAEzD0uM,EAAgBA,IADC7+M,KAAK8L,IAAIwB,GAAYtN,KAAKuR,GAAK,CAEtD,CACI,MAAMutM,EAAgBp+H,GAAiBzmF,GAEvC,IAAK,IAAIi+H,EAAQ6jB,EAAY7jB,GAASD,IAAYC,EAAO,CACvD,IACIr6D,EAAS7mE,EAAO4Y,EAAGmvM,EADnBf,EAAY5pN,KAAK6nN,WAAWhnN,OAASb,KAAK8nN,WAAWjnN,OAGzD,GAAIb,KAAKuoN,iBACP,IAAK3lN,EAAQ,EAAG4Y,EAAIxb,KAAKuoN,iBAAiB1nN,OAAQ+B,EAAQ4Y,IAAK5Y,EAAO,CACpE,MAAMi/F,EAAa7hG,KAAK6nN,WAAWjlN,GACnC,GAAKsW,GAAsB,IAAV4qH,EAEV,CACL,MAAMrvH,EAAQotF,EAAWptF,QACzBA,EAAM0b,UAAU2zG,EAAQ/nH,EAAY,GACpCtH,EAAMoN,QAAQ3I,EAAUmxM,GACxBM,EAAY3qN,KAAK4qN,kBAAkBn2M,EAAO61M,EAAgB1nN,GAC1D+nN,EAAU9oM,OAAO3I,EAAUmxM,EACvC,MAPYM,EAAY3qN,KAAK4qN,kBAAkB/oH,EAAYpsF,EAAQ7S,GAQzD6mE,EAAUzpE,KAAKqpN,aAAaO,KAC5BngJ,EAAQl1D,YAAYo2M,GACpBlhJ,EAAQ7/D,IAAI,kBAAmB5J,KAAKuoN,iBAAiB3lN,GAAO27D,MAC5DmsJ,EAActnI,YAAY3Z,EAASzpE,KAAK8oN,eAAer/I,GACjE,CAEM,GAAIzpE,KAAKwoN,mBAEJ1kF,IAAU6jB,GAAc8iE,GACxB3mF,IAAUD,IAAa4mF,GAExB,IAAK7nN,EAAQ,EAAG4Y,EAAIxb,KAAK8nN,WAAWjnN,OAAQ+B,EAAQ4Y,IAAK5Y,EAAO,CAC9D,MAAMi/F,EAAa7hG,KAAK8nN,WAAWllN,GACnC,GAAKsW,GAAsB,IAAV4qH,EAEV,CACL,MAAMrvH,EAAQotF,EAAWptF,QACzBA,EAAM0b,UAAU2zG,EAAQ/nH,EAAY,GACpCtH,EAAMoN,QAAQ3I,EAAUmxM,GACxBM,EAAY3qN,KAAK6qN,kBAAkBp2M,EAAO61M,EAAgB1nN,GAC1D+nN,EAAU9oM,OAAO3I,EAAUmxM,EACzC,MAPcM,EAAY3qN,KAAK6qN,kBAAkBhpH,EAAYpsF,EAAQ7S,GAQzD6mE,EAAUzpE,KAAKqpN,aAAaO,KAC5BngJ,EAAQl1D,YAAYo2M,GACpBlhJ,EAAQ7/D,IAAI,kBAAmB5J,KAAKwoN,iBAAiB5lN,GAAO27D,MAC5DmsJ,EAActnI,YAAY3Z,EAASzpE,KAAKgpN,eAAev/I,GACnE,CAGA,CACA,CASE,gBAAAigJ,CAAiBj0M,EAAQuD,EAAQC,EAAYsZ,GAC3C,MAAMisC,EAAWx+D,KAAK8qN,aAAa7xM,GACnC,IAAgB,GAAZulD,EASF,OARAx+D,KAAK6nN,WAAWhnN,OAAS,EACzBb,KAAK8nN,WAAWjnN,OAAS,EACrBb,KAAKuoN,mBACPvoN,KAAKuoN,iBAAiB1nN,OAAS,QAE7Bb,KAAKwoN,mBACPxoN,KAAKwoN,iBAAiB3nN,OAAS,IAKnC,IAAI6a,GAAQ,EACZ,MAAME,EAAmB5b,KAAK6qC,YAAYhvB,YACpCE,EAAarD,GAASkD,GAE1B5b,KAAK25C,YAAYg8B,YACjB31E,KAAK6qC,YAAY/uB,aAChBxF,GAAesF,EAAkBnG,KAE9BiD,GAASjD,IAAWsG,GACtBtG,EAAO,GAAKmG,EAAiB,GAC7BnG,EAAO,GAAKmG,EAAiB,IAE7BF,GAAQ,GAMZ,MAAMqvM,EAAe,CACnB3uM,GAAMpD,EAAO,GAAIhZ,KAAKynN,MAAOznN,KAAKunN,OAClCnrM,GAAMpD,EAAO,GAAIhZ,KAAK0nN,MAAO1nN,KAAKwnN,QAO9BwD,EAAehrN,KAAKioN,mBAAmB8C,GACzC73L,MAAM83L,EAAa,MACrBA,EAAa,GACXp/M,KAAK8L,IAAI1X,KAAKmnN,UAAYv7M,KAAK8L,IAAI1X,KAAKqnN,SACpCrnN,KAAKmnN,QACLnnN,KAAKqnN,SAEb,IAAI4D,EAAY7uM,GAAM4uM,EAAa,GAAIhrN,KAAKsnN,QAAStnN,KAAKonN,SACtD8D,EAAY9uM,GAAM4uM,EAAa,GAAIhrN,KAAKqnN,QAASrnN,KAAKmnN,SAC1D,MAAMV,EAAWzmN,KAAK4nN,UACtB,IAAIuD,EAAK5qF,EAAKvhH,EAAKgO,EAIfo+L,EAAe31M,EACdiG,IACH0vM,EAAe,CACbhvM,GAAM3G,EAAO,GAAIzV,KAAKynN,MAAOznN,KAAKunN,OAClCnrM,GAAM3G,EAAO,GAAIzV,KAAK0nN,MAAO1nN,KAAKwnN,OAClCprM,GAAM3G,EAAO,GAAIzV,KAAKynN,MAAOznN,KAAKunN,OAClCnrM,GAAM3G,EAAO,GAAIzV,KAAK0nN,MAAO1nN,KAAKwnN,SAMtC,MAAM6D,EAAclwM,GAClBiwM,EACAprN,KAAKioN,wBACLzhN,EACA,GAGF,IAAIujN,EAASsB,EAAY,GACrBlB,EAASkB,EAAY,GACrBvB,EAASuB,EAAY,GACrBnB,EAASmB,EAAY,GAwCzB,GAtCK3vM,IAKCvF,GAAmBi1M,EAAcprN,KAAKmoN,eACxC+B,EAASlqN,KAAKsnN,QACdwC,EAAS9pN,KAAKqnN,SAEZlxM,GAAmBi1M,EAAcprN,KAAKooN,gBACxC+B,EAASnqN,KAAKonN,QACd0C,EAAS9pN,KAAKqnN,SAEZlxM,GAAmBi1M,EAAcprN,KAAKqoN,YACxC6B,EAASlqN,KAAKsnN,QACdyC,EAAS/pN,KAAKmnN,SAEZhxM,GAAmBi1M,EAAcprN,KAAKsoN,aACxC6B,EAASnqN,KAAKonN,QACd2C,EAAS/pN,KAAKmnN,SAKhB4C,EAAS3tM,GAAM2tM,EAAQmB,EAAWlrN,KAAKmnN,SACvCgD,EAAS/tM,GAAM+tM,EAAQc,EAAWjrN,KAAKonN,SACvC0C,EAAS1tM,GAAM0tM,EAAQ9pN,KAAKqnN,QAAS6D,GACrChB,EAAS9tM,GAAM8tM,EAAQlqN,KAAKsnN,QAAS2D,IAKvCA,EAAYr/M,KAAKoQ,MAAMivM,EAAYzsJ,GAAYA,EAC/CxxC,EAAM5Q,GAAM6uM,EAAWjrN,KAAKsnN,QAAStnN,KAAKonN,SAE1C7mF,EAAMvgI,KAAK6pN,aAAa78L,EAAK88L,EAAQC,EAAQx3L,EAAkB9c,EAAQ,GAEvE01M,EAAM,EACFzvM,EACF,MAAQsR,GAAOwxC,IAAa0rJ,GAAUiB,IAAQ1E,GAC5ClmF,EAAMvgI,KAAK6pN,aACT78L,EACA88L,EACAC,EACAx3L,EACA9c,EACA8qH,QAIJ,KAAOvzG,GAAOhtB,KAAKsnN,SAAW6D,IAAQ1E,GACpCz5L,EAAMphB,KAAKoM,IAAIgV,EAAMwxC,EAAUx+D,KAAKsnN,SACpC/mF,EAAMvgI,KAAK6pN,aACT78L,EACA88L,EACAC,EACAx3L,EACA9c,EACA8qH,GAQN,GAHAvzG,EAAM5Q,GAAM6uM,EAAWjrN,KAAKsnN,QAAStnN,KAAKonN,SAE1C+D,EAAM,EACFzvM,EACF,MAAQsR,GAAOwxC,IAAa2rJ,GAAUgB,IAAQ1E,GAC5ClmF,EAAMvgI,KAAK6pN,aACT78L,EACA88L,EACAC,EACAx3L,EACA9c,EACA8qH,QAIJ,KAAOvzG,GAAOhtB,KAAKonN,SAAW+D,IAAQ1E,GACpCz5L,EAAMphB,KAAKmM,IAAIiV,EAAMwxC,EAAUx+D,KAAKonN,SACpC7mF,EAAMvgI,KAAK6pN,aACT78L,EACA88L,EACAC,EACAx3L,EACA9c,EACA8qH,GAkBN,IAbAvgI,KAAK6nN,WAAWhnN,OAAS0/H,EACrBvgI,KAAKuoN,mBACPvoN,KAAKuoN,iBAAiB1nN,OAAS0/H,GAKjC2qF,EAAYt/M,KAAKoQ,MAAMkvM,EAAY1sJ,GAAYA,EAC/Cx/C,EAAM5C,GAAM8uM,EAAWlrN,KAAKqnN,QAASrnN,KAAKmnN,SAE1C5mF,EAAMvgI,KAAKiqN,aAAajrM,EAAKkrM,EAAQC,EAAQ53L,EAAkB9c,EAAQ,GAEvE01M,EAAM,EACCnsM,GAAOhf,KAAKqnN,SAAW8D,IAAQ1E,GACpCznM,EAAMpT,KAAKoM,IAAIgH,EAAMw/C,EAAUx+D,KAAKqnN,SACpC9mF,EAAMvgI,KAAKiqN,aACTjrM,EACAkrM,EACAC,EACA53L,EACA9c,EACA8qH,GAOJ,IAHAvhH,EAAM5C,GAAM8uM,EAAWlrN,KAAKqnN,QAASrnN,KAAKmnN,SAE1CgE,EAAM,EACCnsM,GAAOhf,KAAKmnN,SAAWgE,IAAQ1E,GACpCznM,EAAMpT,KAAKmM,IAAIiH,EAAMw/C,EAAUx+D,KAAKmnN,SACpC5mF,EAAMvgI,KAAKiqN,aACTjrM,EACAkrM,EACAC,EACA53L,EACA9c,EACA8qH,GAIJvgI,KAAK8nN,WAAWjnN,OAAS0/H,EACrBvgI,KAAKwoN,mBACPxoN,KAAKwoN,iBAAiB3nN,OAAS0/H,EAErC,CAOE,YAAAuqF,CAAa7xM,GACX,MAAMgyM,EAAYjrN,KAAKkoN,wBAAwB,GACzCgD,EAAYlrN,KAAKkoN,wBAAwB,GAC/C,IAAI1pJ,GAAa,EACjB,MAAMp9D,EAASwK,KAAKC,IAAI7L,KAAK2nN,YAAc1uM,EAAY,GAEjDu9G,EAAK,GAELC,EAAK,GACX,IAAK,IAAIl1H,EAAI,EAAG4E,EAAKnG,KAAKkpN,WAAWroN,OAAQU,EAAI4E,IAAM5E,EAAG,CACxD,MAAM2L,EAAQkP,GAAMpc,KAAKkpN,WAAW3nN,GAAK,EAAG,EAAG,IAEzC+pN,EAAalvM,GAAM8uM,GAAc,GAAGh+M,EAAO,GAAKA,GACtDspH,EAAG,GAAKy0F,EAAY/9M,EACpBspH,EAAG,GAAK80F,EAAap+M,EACrBupH,EAAG,GAAKw0F,EAAY/9M,EACpBupH,EAAG,GAAK60F,EAAap+M,EACrBlN,KAAKgoN,qBAAqBxxF,EAAIA,GAC9Bx2H,KAAKgoN,qBAAqBvxF,EAAIA,GAE9B,GADa7qH,KAAKC,IAAI4qH,EAAG,GAAKD,EAAG,GAAI,GAAK5qH,KAAKC,IAAI4qH,EAAG,GAAKD,EAAG,GAAI,IACtDp1H,EACV,MAEFo9D,EAAWx+D,KAAKkpN,WAAW3nN,EACjC,CACI,OAAOi9D,CACX,CAWE,YAAAwrJ,CAAah9L,EAAK88L,EAAQC,EAAQx3L,EAAkB3vB,GAClD,MAAMwU,EAAkBmwH,GACtBv6G,EACA88L,EACAC,EACA/pN,KAAK6qC,YACLtY,GAEF,IAAIsvE,EAAa7hG,KAAK6nN,WAAWjlN,GAQjC,OAPKi/F,GAIHA,EAAWttE,mBAAmB,KAAMnd,GACpCyqF,EAAWj6F,YAJXi6F,EAAa,IAAI5W,GAAW7zE,EAAiB,MAC7CpX,KAAK6nN,WAAWjlN,GAASi/F,GAKpBA,CACX,CASE,iBAAA+oH,CAAkB/oH,EAAYpsF,EAAQ7S,GACpC,MAAMwU,EAAkByqF,EAAW5tE,qBACnC,IAAIg1E,EAAS,EACTtnD,EAAMvqC,EAAgBvW,OAAS,EAC/BuW,EAAgB6xF,GAAU7xF,EAAgBuqC,KAC5CsnD,EAAStnD,EACTA,EAAM,GAER,MAAM4pK,EAAgB3/M,KAAKoM,IAAIvC,EAAO,GAAI2B,EAAgB6xF,IACpDuiH,EAAa5/M,KAAKmM,IAAItC,EAAO,GAAI2B,EAAgBuqC,IACjD3iC,EAAM5C,GACV3G,EAAO,GAAK7J,KAAK8L,IAAIjC,EAAO,GAAKA,EAAO,IAAMzV,KAAK2oN,kBACnD4C,EACAC,GAOIp1M,EAAa,CAJjBgB,EAAgB6xF,EAAS,IACvB7xF,EAAgBuqC,EAAM,GAAKvqC,EAAgB6xF,EAAS,KACnDjqF,EAAM5H,EAAgB6xF,KACtB7xF,EAAgBuqC,GAAOvqC,EAAgB6xF,IACXjqF,GAC3BqG,EAAQrlB,KAAKuoN,iBAAiB3lN,GAAOk3K,KAE3C,OADAz0J,EAAMoP,eAAere,GACdiP,CACX,CAOE,YAAAomM,GACE,OAAOzrN,KAAK6nN,UAChB,CAWE,YAAAuC,CAAaprM,EAAKkrM,EAAQC,EAAQ53L,EAAkB3vB,GAClD,MAAMwU,EAAkBqwH,GACtBzoH,EACAkrM,EACAC,EACAnqN,KAAK6qC,YACLtY,GAEF,IAAIsvE,EAAa7hG,KAAK8nN,WAAWllN,GAOjC,OANKi/F,GAGHA,EAAWttE,mBAAmB,KAAMnd,GACpCyqF,EAAWj6F,WAHXi6F,EAAa,IAAI5W,GAAW7zE,EAAiB,MAKxCyqF,CACX,CASE,iBAAAgpH,CAAkBhpH,EAAYpsF,EAAQ7S,GACpC,MAAMwU,EAAkByqF,EAAW5tE,qBACnC,IAAIytB,EAAO,EACPxnB,EAAQ9iB,EAAgBvW,OAAS,EACjCuW,EAAgBsqC,GAAQtqC,EAAgB8iB,KAC1CwnB,EAAOxnB,EACPA,EAAQ,GAEV,MAAMwxL,EAAc9/M,KAAKoM,IAAIvC,EAAO,GAAI2B,EAAgBsqC,IAClDiqK,EAAe//M,KAAKmM,IAAItC,EAAO,GAAI2B,EAAgB8iB,IACnDlN,EAAM5Q,GACV3G,EAAO,GAAK7J,KAAK8L,IAAIjC,EAAO,GAAKA,EAAO,IAAMzV,KAAK4oN,kBACnD8C,EACAC,GAOIv1M,EAAa,CAAC4W,EAJlB5V,EAAgBsqC,EAAO,IACrBtqC,EAAgB8iB,EAAQ,GAAK9iB,EAAgBsqC,EAAO,KACnD10B,EAAM5V,EAAgBsqC,KACtBtqC,EAAgB8iB,GAAS9iB,EAAgBsqC,KAExCr8B,EAAQrlB,KAAKwoN,iBAAiB5lN,GAAOk3K,KAE3C,OADAz0J,EAAMoP,eAAere,GACdiP,CACX,CAOE,YAAAumM,GACE,OAAO5rN,KAAK8nN,UAChB,CAME,qBAAA2B,CAAsB9tM,GACpB,MAAMkwM,EAAqBv4L,GAAc,aAEnCnQ,EAAcxH,EAAWsI,iBAE/BjkB,KAAKmnN,QAAUhkM,EAAY,GAC3BnjB,KAAKonN,QAAUjkM,EAAY,GAC3BnjB,KAAKqnN,QAAUlkM,EAAY,GAC3BnjB,KAAKsnN,QAAUnkM,EAAY,GAK3B,MAAM2oM,EAAoBh+L,GAAanS,EAAYkwM,GACnD,GAAI7rN,KAAKsnN,QAAUtnN,KAAKonN,QACtBpnN,KAAKioN,mBAAqB6D,MACrB,CACL,MAAM3rM,EAAQngB,KAAKsnN,QAAUtnN,KAAKonN,QAAU,EAC5CpnN,KAAKonN,SAAW,IAChBpnN,KAAKioN,mBAAqB,SAAUzyM,EAAakQ,EAAQC,GAEvD,MAAMomM,EAAoBD,EACxBt2M,EACAkQ,EAHFC,EAAYA,GAAa,GAMzB,IAAK,IAAIpkB,EAAI,EAAGia,EAAIuwM,EAAkBlrN,OAAQU,EAAIia,EAAGja,GAAKokB,EACpDomM,EAAkBxqN,GAAK4e,IACzB4rM,EAAkBxqN,IAAM,KAG5B,OAAOwqN,CACR,CACP,CAKI/rN,KAAKgoN,qBAAuBl6L,GAAa+9L,EAAoBlwM,GAC7D,MAAMqwM,EAAe7wM,GACnB,CAACnb,KAAKsnN,QAAStnN,KAAKqnN,QAASrnN,KAAKonN,QAASpnN,KAAKmnN,SAChDnnN,KAAKgoN,0BACLxhN,EACA,GAGFxG,KAAKynN,MAAQuE,EAAa,GAC1BhsN,KAAKunN,MAAQyE,EAAa,GAC1BhsN,KAAK0nN,MAAQsE,EAAa,GAC1BhsN,KAAKwnN,MAAQwE,EAAa,GAK1BhsN,KAAKmoN,YAAcnoN,KAAKgoN,qBAAqB,CAAChoN,KAAKsnN,QAAStnN,KAAKqnN,UACjErnN,KAAKooN,aAAepoN,KAAKgoN,qBAAqB,CAAChoN,KAAKonN,QAASpnN,KAAKqnN,UAClErnN,KAAKqoN,SAAWroN,KAAKgoN,qBAAqB,CAAChoN,KAAKsnN,QAAStnN,KAAKmnN,UAC9DnnN,KAAKsoN,UAAYtoN,KAAKgoN,qBAAqB,CAAChoN,KAAKonN,QAASpnN,KAAKmnN,UAM/DnnN,KAAKkoN,wBAA0BloN,KAAKioN,mBAClCrvM,GAAU+C,EAAWE,cAEnBqX,MAAMlzB,KAAKkoN,wBAAwB,MACrCloN,KAAKkoN,wBAAwB,GAC3Bt8M,KAAK8L,IAAI1X,KAAKmnN,UAAYv7M,KAAK8L,IAAI1X,KAAKqnN,SACpCrnN,KAAKmnN,QACLnnN,KAAKqnN,SAGbrnN,KAAK6qC,YAAclvB,CACvB,GkExBAyoK,GAAG5qI,MAAMyyK,MAAQC,GACjB9nC,GAAG5qI,MAAMyyK,MAAMlkK,WAAaokK,GAC5B/nC,GAAG5qI,MAAM4yK,Q3C3nCT,cAAsBrkE,GAIpB,WAAAhoJ,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhC,MAAM29C,EAAcvhD,OAAO2C,OAAO,CAAA,EAAIiB,UAE/B29C,EAAYokK,gBACZpkK,EAAY9pC,cACZ8pC,EAAYqkK,YACZrkK,EAAYxR,OACnBxxC,MAAMgjD,GAENjoD,KAAK0sJ,QAAUpiJ,EAAQmlC,SAAU,EAMjCzvC,KAAKqmJ,gBAAkB/7I,EAAQkpD,WAAa,CAAE,EAM9CxzD,KAAKusN,UAAY,KAEjBvsN,KAAK0J,kBAAkBO,GAAmBjK,KAAKwsN,wBAE/CxsN,KAAKysN,YAAYniN,EAAQ+hN,SAAW/hN,EAAQ+hN,SAAW7jE,IAEvDxoJ,KAAK0sN,aAAyBlmN,IAAjB8D,EAAQgiN,KAAqBhiN,EAAQgiN,KAAO,IAEzDtsN,KAAKomE,eAA6B5/D,IAAnB8D,EAAQ6T,OAAuB7T,EAAQ6T,OAAS,GAE/D,MAAMs4B,EAASnsC,EAAQmsC,OAASnsC,EAAQmsC,OAAS,SAKjDz2C,KAAK2sN,QAAUl2K,EAIfz2C,KAAKm0E,eAAe,KACxB,CAQE,OAAAy4I,GACE,OACE5sN,KAAKiJ,IAAIgB,GAEf,CAQE,WAAA4iN,GACE,OAAqC7sN,KAAKiJ,IAAIgB,GAClD,CAQE,SAAAyW,GACE,OACE1gB,KAAKiJ,IAAIgB,GAEf,CAKE,sBAAAuiN,GACExsN,KAAKusN,UA6MT,SAAwBl0J,GACtB,MAAMvpD,EAAQ,EACRC,EAAS,IACTW,EAAUb,GAAsBC,EAAOC,GAEvCs9M,EAAW38M,EAAQo9M,qBAAqB,EAAG,EAAGh+M,EAAOC,GACrDgiD,EAAO,GAAKsH,EAAOx3D,OAAS,GAClC,IAAK,IAAIU,EAAI,EAAG4E,EAAKkyD,EAAOx3D,OAAQU,EAAI4E,IAAM5E,EAC5C8qN,EAASU,aAAaxrN,EAAIwvD,EAAMsH,EAAO92D,IAMzC,OAHAmO,EAAQwvB,UAAYmtL,EACpB38M,EAAQyvB,SAAS,EAAG,EAAGrwB,EAAOC,GAEvBW,EAAQR,MACjB,CA5NqB89M,CAAehtN,KAAK6sN,cACzC,CAQE,OAAAH,CAAQJ,GACN,MAAMW,EAAgBjtN,KAAKiJ,IAAIgB,IAC/BjK,KAAK4J,IAAIK,GAAeqiN,GAEJ,iBAATA,GAA8C,iBAAlBW,EAIvCjtN,KAAKiqD,gBAHHjqD,KAAK4H,SAIX,CAQE,WAAA6kN,CAAYp0J,GACVr4D,KAAK4J,IAAIK,GAAmBouD,EAChC,CAQE,SAAA+N,CAAUjoD,GACR,MAAM8uM,EAAgBjtN,KAAKiJ,IAAIgB,IAC/BjK,KAAK4J,IAAIK,GAAiBkU,GAEJ,iBAAXA,GAAgD,iBAAlB8uM,EAIzCjtN,KAAKiqD,gBAHHjqD,KAAK4H,SAIX,CAOE,SAAAslN,CAAUz9K,GACRzvC,KAAK0sJ,QAAUj9G,EACfzvC,KAAK4H,UACL5H,KAAKiqD,eACT,CAOE,SAAAkjK,CAAU12K,GACRz2C,KAAK2sN,QAAUl2K,EACfz2C,KAAK4H,UACL5H,KAAKiqD,eACT,CAKE,cAAAqB,GACE,MAAM+uF,EAAU,IAAI/D,GAEd5mI,EdlGD,CACL8jD,UAAW,CAAE,EACbh/C,WAAY,CAAE,EACd2/H,UAAW,CAAE,EACbjhC,UAAW,EACXz/C,WAAW,EACXC,cAAc,Gc6FR05J,EAAiBpzE,GAAiBtqI,EAAS1P,KAAK0sJ,QAASx6F,IAC/D,IAAIm7J,EAAiBrzE,GACnBtqI,EACA1P,KAAK0gB,YACLyxC,IAEEm7J,EAAetzE,GAAiBtqI,EAAS1P,KAAK4sN,UAAWz6J,IAG7D,MAAMo7J,EAAqB,CAAE,EACC,iBAAnBvtN,KAAK4sN,YACdU,EAAe,SACfC,EAA2B,OAAI,IAAMvtN,KAAK4sN,UAC1CvyE,EAAQzC,WAAW,iBAEW,iBAArB53I,KAAK0gB,cACd2sM,EAAiB,WACjBE,EAA6B,SAAI,IAAMvtN,KAAK0gB,YAC5C25H,EAAQzC,WAAW,mBAIrB,MAAM41E,EAAkB,CAAE,EAC1B,IAAIC,EAAmB,KACvB,GAC0B,iBAAjBztN,KAAK2sN,SACY,mBAAjB3sN,KAAK2sN,QACZ,CACA,MAAMe,EACoB,iBAAjB1tN,KAAK2sN,QACPljJ,GAAYA,EAAQxgE,IAAIjJ,KAAK2sN,SAC9B3sN,KAAK2sN,QACXa,EAA6B,YAAI,CAC/Bx6M,KAAM,EACNkF,SAAWuxD,IACT,MAAMkkJ,EAAcD,EAAejkJ,GACnC,YAAuBjjE,IAAhBmnN,EAA4BvxM,GAAMuxM,EAAa,EAAG,GAAK,CAAC,GAGnEF,EAAmB,gBACnBpzE,EAAQxC,aAAa,gBAAiB,QAC5C,KAAW,CAEL41E,EAAmBzzE,GAAiBtqI,EADd,CAAC,QAAS1P,KAAK2sN,QAAS,EAAG,GACWx6J,GAClE,CAEIkoF,EACGb,0BACC,kDACiB8zE,yBACND,kCAIZn1E,wBAAwB,QAAQm1E,OAAoBC,WACpD/0E,yBACC,2FAA2Fk1E,MAE5F30E,yBACC,6FAA6F20E,MAE9F50E,yBAAyB,IAAIw0E,OAAoBC,WACjDj0E,uBAAuB,QAAQo0E,MAC/B/0E,6BAA6B,IAAI00E,KAEpChzE,GAAsBC,EAAS3qI,GAC/B,MAAMy7H,EAAauP,GAA8BhrI,GAC3Cm6H,EAAW4Q,GAA4B/qI,EAAS1P,KAAKqmJ,iBAE3D,OAAO,IAAIR,GAAyB7lJ,KAAM,CACxCi4C,UAAWj4C,KAAK8mD,eAChB0M,UAAWxzD,KAAKqmJ,gBAChBv2I,MAAO,CACLuqI,UACAlP,WAAY,IACPA,KACAqiF,GAEL3jF,SAAU,IACLA,KACA0jF,IAGPznE,qBAAqB,EACrBxX,cAAe,CACb,CACE1gC,eAAgB,2fAehBi8B,SAAU,CACR+jF,kBAAmB,IAAM5tN,KAAKusN,UAC9BsB,UAAW,IAAM7tN,KAAKknD,iBAKlC,CAME,oBAAA4mK,CAAqBt6J,GACnB9sD,OAAO2C,OAAOrJ,KAAKqmJ,gBAAiB7yF,GACpCxzD,KAAK4H,SACT,CAKE,eAAAojD,GAAkB,G2C+1BpBo5H,GAAG5qI,MAAMnrC,MAAQ0/M,GACjB3pC,GAAG5qI,MAAM8P,MAAQ0kK,GACjB5pC,GAAG5qI,MAAM8P,MAAMmB,OAASwjK,GACxB7pC,GAAG5qI,MAAMvtC,KAAOiiN,GAChB9pC,GAAG5qI,MAAM20K,OAASC,GAClBhqC,GAAG5qI,MAAM60K,YOnpCT,cAA+Bj7I,GAI7B,WAAArzE,CAAYuK,GACVA,EAAUA,GAAoB,CAAE,EAEhC,MAAM29C,EAAcvhD,OAAO2C,OAAO,CAAA,EAAIiB,UAC/B29C,EAAYqmK,WACnBrpN,MAAMgjD,GAMNjoD,KAAKuuN,iBACoB/nN,IAAvB8D,EAAQgkN,WAA2BhkN,EAAQgkN,WAAa,CAC9D,CAKE,aAAAjpF,GACE,OAAOrlI,KAAKuuN,WAChB,CAKE,cAAAjjK,GACE,OAAO,IAAI45E,GAA+BllI,KAC9C,GPqnCAokL,GAAGoqC,gBAAkB,CAAE,EACvBpqC,GAAGoqC,gBAAgBv0K,IAAMw0K,GACzBrqC,GAAGoqC,gBAAgBriK,KtJlsCZ,SAAc12C,EAAQwD,GAC3B,MAAO,CAACxD,EACV,EsJisCA2uK,GAAGoqC,gBAAgBnnL,KtJzrCZ,SAAc9iB,GACnB,OAAA,SAOY9O,EAAQwD,EAAY0C,GAC5B,MAAMmuB,EAAIvlB,EAASyuE,kBACjBpkE,GAAmB3V,EAAY0C,IAE3B8kE,EAAYl8D,EAASotE,0BACzBnjE,GAAe/Y,EAAQkG,GACvBmuB,GAGIu6D,EAAU,GAEVn4F,EAAY,CAAC49B,EAAG,EAAG,GACzB,IACE59B,EAAU,GAAKu0E,EAAU/pE,KACzBxK,EAAU,IAAMu0E,EAAU7pE,OACxB1K,EAAU,GAEZ,IACEA,EAAU,GAAKu0E,EAAU9pE,KACzBzK,EAAU,IAAMu0E,EAAU5pE,OACxB3K,EAAU,GAEZm4F,EAAQ1+F,KACN4oB,GAAahK,EAAS2tE,mBAAmBhmF,GAAYyP,IAI3D,OAAO0oF,CAEb,CACA,EsJopCA+/E,GAAGsqC,KAAO,CAAE,EACZtqC,GAAGsqC,KAAK9wM,KAAO+wM,GACfvqC,GAAGsqC,KAAKtyM,MAAQwyM,GAChBxqC,GAAGsqC,KAAK1yM,MAAQ6yM,GAChBzqC,GAAGsqC,KAAKnxM,KAAOuxM,GACf1qC,GAAGsqC,KAAKpxM,OAASyxM,GACjB3qC,GAAGsqC,KAAK/wM,MAAQqxM,GAChB5qC,GAAGsqC,KAAKnyM,kBAAoB0yM,GAC5B7qC,GAAGsqC,KAAKpyM,gBAAkB4yM,GAC1B9qC,GAAGsqC,KAAKryM,uBAAyB8yM,GACjC/qC,GAAGsqC,KAAKzxM,UAAYmyM,GACpBhrC,GAAGsqC,KAAKlxM,QAAU6xM,GAClBjrC,GAAGsqC,KAAKtxM,UAAYkyM,GACpBlrC,GAAGsqC,KAAK7wM,KAAO0xM,GACfnrC,GAAGorC,IAAM,CAAE,EACXprC,GAAGorC,IAAIhtI,YAAcitI,GACrBrrC,GAAGorC,IAAIltI,cAAgBotI,GACvBtrC,GAAGorC,IAAI9sI,QAAUitI,GACjBvrC,GAAGorC,IAAI1tI,MAAQ8tI,GACfxrC,GAAGorC,IAAIK,YvJpmCA,SAAqB7uI,GACI,oBAAnBC,iBACTP,GAAcO,gBAEhB19D,OAAO09D,eAAiBD,CAC1B,EuJgmCAojG,GAAGorC,IAAI5sI,WAAaktI,GACpB1rC,GAAGorC,IAAIO,WvJ/lCA,WACLxsM,OAAO09D,eAAiBP,EAC1B,EuJ8lCA0jG,GAAG57K,IAAM,CAAE,EACX47K,GAAG57K,IAAInE,MAAQ2rN,EACf5rC,GAAG57K,IAAIhE,QAAUyrN,EACjB7rC,GAAGxkF,KAAO,CAAE,EACZwkF,GAAGxkF,KAAK/8E,WAAaqtM,GACrB9rC,GAAGxkF,KAAKuwH,MAAQ,CAAE,EAClB/rC,GAAGxkF,KAAKuwH,MAAMztM,gBAAkB0tM,GAChChsC,GAAGxkF,KAAKuwH,MAAME,S/PjuCP,SAAkBttM,GACvB,OAAON,GAAWM,EACpB,E+PguCAqhK,GAAGxkF,KAAK3wE,UAAYqhM,GACpBlsC,GAAGxkF,KAAKjzE,wBAA0B4jM,GAClCnsC,GAAGxkF,KAAK/zE,yBAA2B2kM,GACnCpsC,GAAGxkF,KAAK9zE,wBAA0B2kM,GAClCrsC,GAAGxkF,KAAK10E,cAAgBwlM,GACxBtsC,GAAGxkF,KAAKv0E,eAAiBslM,GACzBvsC,GAAGxkF,KAAKgxH,oBxPh7BD,WACLC,KACAC,IACF,EwP86BA1sC,GAAGxkF,KAAKmxH,oBxP9lBD,WACL/iM,GAAiB,IACnB,EwP6lBAo2J,GAAGxkF,KAAK50E,eAAiBgmM,GACzB5sC,GAAGxkF,KAAKvzE,iBAAmB4kM,GAC3B7sC,GAAGxkF,KAAK9wE,8BAAgCoiM,GACxC9sC,GAAGxkF,KAAKrzE,uCAAyC4kM,GACjD/sC,GAAGxkF,KAAK90E,yBAA2BsmM,GACnChtC,GAAGxkF,KAAKyxH,SAAW,CAAE,EACrBjtC,GAAGxkF,KAAKyxH,SAASvsM,OAASwsM,GAC1BltC,GAAGxkF,KAAKyxH,SAASxsM,UAAY0sM,GAC7BntC,GAAGxkF,KAAKyxH,SAASrsM,WAAawsM,GAC9BptC,GAAGxkF,KAAKyxH,SAAS9rM,YAAcksM,GAC/BrtC,GAAGxkF,KAAKyxH,SAASzsM,OAAS8sM,GAC1BttC,GAAGxkF,KAAKyxH,SAAStsM,aAAe4sM,GAChCvtC,GAAGxkF,KAAKyxH,SAAS7rM,aAAeosM,GAChCxtC,GAAGxkF,KAAKyxH,SAASzrM,WAAaisM,GAC9BztC,GAAGxkF,KAAKkyH,SAAW,CAAE,EACrB1tC,GAAGxkF,KAAKkyH,SAAShtM,OAASitM,GAC1B3tC,GAAGxkF,KAAKkyH,SAASpvM,gBAAkBsvM,GACnC5tC,GAAGxkF,KAAKkyH,SAASvsM,YAAc0sM,GAC/B7tC,GAAGxkF,KAAKkyH,SAASltM,OAASstM,GAC1B9tC,GAAGxkF,KAAK3yE,WAAaklM,GACrB/tC,GAAGxkF,KAAK72E,WxPn2BD,SAAoB3S,EAAYuF,GAErC,OADAmP,KACOiC,GACL3W,EACA,iBACe5P,IAAfmV,EAA2BA,EAAa,YAE5C,EwP61BAyoK,GAAGxkF,KAAKvxE,mBAAqB+jM,GAC7BhuC,GAAGxkF,KAAKpxE,eAAiB6jM,GACzBjuC,GAAGxkF,KAAKhxE,mBAAqB0jM,GAC7BluC,GAAGxkF,KAAK32F,IAAMspN,GACdnuC,GAAGxkF,KAAKl8E,mBAAqB8uM,GAC7BpuC,GAAGxkF,KAAK9xE,aAAe2kM,GACvBruC,GAAGxkF,KAAKj0E,4BAA8B+mM,GACtCtuC,GAAGxkF,KAAK1xE,kBAAoBykM,GAC5BvuC,GAAGxkF,KAAK30E,kBAAoB2nM,GAC5BxuC,GAAGxkF,KAAKkmC,MAAQ,CAAE,EAClBs+C,GAAGxkF,KAAKkmC,MAAM+sF,mBrEznCP,SAA4BvrN,GACjC,OAAO66E,eAAgBp/D,GACrB,MAAMw/D,QAAiBokD,MACrB,oDAAoD5jH,gDAAmDzb,KAEzG,IAAKi7E,EAASqkD,GACZ,MAAM,IAAIv+H,MACR,0CAA0Ck6E,EAASnB,UAGvD,OAAOmB,EAASopC,OAAOp4G,MAAMo4G,IAC3B,MAAMmnG,EAAUnnG,EAAc,QAC9B,GAAImnG,GAASjyN,OAAS,EAAG,CACvB,MAAM4oC,EAASqpL,EAAQrjL,QACpB9yB,GAC4B,SAA3BA,EAAM,IAAe,WAAgBA,EAAM,IAAU,OAAMoG,IAC7D,GACF,GAAI0mB,EAAQ,CACV,MAAMxjB,EAAawjB,EAAwB,gBAC3C,GAAIxjB,GAAYplB,OAAS,EAAG,CAE1B,MAAMkyN,EAAmBtpL,EAA+B,uBACxD,GACExjB,EAAWwpB,QACR9jC,GACCA,EAAM,IAAe,YAAMonN,GAA8B,WACzDpnN,EAAM,IAAU,OAAMonN,GAAyB,MACxB,IAAvBpnN,EAAS,OAAG9K,SACdA,OAAS,EAEX,OAAO4oC,EAAgB,SAAW,MAGpC,MAAM1c,EAAY9G,EACfwpB,QACE9jC,GACwB,IAAvBA,EAAS,OAAG9K,QACuB,SAAnC8K,EAAc,YAAe,WACC,OAA9BA,EAAc,YAAU,OACJ,IAApBA,EAAc,aACE,IAAhBA,EAAU,SAEbktB,MAAK,CAAClL,EAAIC,IAAOD,EAAa,SAAIC,EAAa,WAAG,IAEpD,SAAU,MACX,GAAIb,EACF,OAAOA,CAErB,CAEU,OAAO0c,EAAgB,SAAW,KAC5C,CACA,IAEG,CACH,EqEmkCA26I,GAAGxkF,KAAKkmC,MAAMktF,arEzpCP7wI,eAA4Bp/D,GACb,iBAATA,IACTA,EAAO/S,SAAS+S,EAAK5C,MAAM,KAAKtV,MAAO,KAGzC,MAAMi7H,EAAQF,GACd,IAAKE,EACH,MAAM,IAAIz9H,MAAM,uDAGlB,MAAM4qN,EAAW,QAAUlwM,EAC3B,OAAI+iH,EAAME,KAAKitF,KAIfntF,EAAME,KAAKitF,QAAgBvsF,GAAW3jH,IACtC8iH,GAASC,IAJAG,GAAoBgtF,EAO/B,EqEuoCA7uC,GAAGxkF,KAAKkmC,MAAMotF,crE5qCP,WACL,OAAOxsF,EACT,EqE2qCA09C,GAAGxkF,KAAKkmC,MAAMqtF,arEhxCP,WACL,QAASvtF,EACX,EqE+wCAw+C,GAAGxkF,KAAKkmC,MAAMD,SAAWutF,GACzBhvC,GAAGxkF,KAAKkmC,MAAMutF,crExrCP,SAAuB9wN,GAC5BmkI,GAAankI,CACf,EqEurCA6hL,GAAGxkF,KAAKkmC,MAAMg/E,WrE5wCP,WACLl/E,GAAa,IACf,EqE2wCAw+C,GAAGxkF,KAAKt0E,YAAc,CAAE,EACxB84J,GAAGxkF,KAAKt0E,YAAY/K,IAAM+yM,GAC1BlvC,GAAGxkF,KAAKt0E,YAAYjnB,MAAQkvN,GAC5BnvC,GAAGxkF,KAAKt0E,YAAYriB,IAAMuqN,GAC1BpvC,GAAGxkF,KAAK3xE,kBAAoBwlM,GAC5BrvC,GAAGxkF,KAAKp4E,SAAWksM,GACnBtvC,GAAGxkF,KAAKzxE,iBAAmBwlM,GAC3BvvC,GAAGxkF,KAAKrxE,aAAeqlM,GACvBxvC,GAAGxkF,KAAKnxE,iBAAmBolM,GAC3BzvC,GAAGxkF,KAAK7yE,UAAY+mM,GACpB1vC,GAAGxkF,KAAK7xE,gBAAkBgmM,GAC1B3vC,GAAGxkF,KAAKo0H,yBxPhrBD,SACL3uM,EACA+I,EACA6lM,GAMA,OAJsBtoM,GACpByC,EACA6lM,EAEK9mM,CAAc9H,EACvB,EwPuqBA++J,GAAGxkF,KAAK35E,WAAa,CAAE,EACvBm+J,GAAGxkF,KAAK35E,WAAW1F,IAAM2zM,GACzB9vC,GAAGxkF,KAAK35E,WAAW5hB,MAAQ8vN,GAC3B/vC,GAAGxkF,KAAK35E,WAAWhd,IAAMmrN,GACzBhwC,GAAGxkF,KAAK35E,WAAW5a,O1P7wCZ,SAAgBtB,EAAQmc,GAC7B,MAAMC,EAAapc,EAAO+Z,UACpBsC,EAAkBF,EAAYpC,UAC9BiJ,EAAY9G,GAAWE,GAAYC,GAKzC,cAJOH,GAAWE,GAAYC,GAC1B5hB,EAAQyhB,GAAWE,YACdF,GAAWE,GAEb4G,CACT,E0PqwCAq3J,GAAGxkF,KAAKy0H,cxPnoBD,WACLpmM,GAAkB,YACpB,EwPkoBAm2J,GAAGxkF,KAAK00H,IAAM,CAAE,EAChBlwC,GAAGxkF,KAAK00H,IAAIjqM,eAAiBkqM,GAC7BnwC,GAAGxkF,KAAK00H,IAAIhqM,eAAiBkqM,GAC7BpwC,GAAGxkF,KAAK00H,IAAIxqM,aAAe2qM,GAC3BrwC,GAAGptI,OAAS,CAAE,EACdotI,GAAGptI,OAAOggI,IAAM09C,GAChBtwC,GAAGptI,OAAOjxC,MAAQ4uN,GAClBvwC,GAAGptI,OAAOljC,QAAU8gN,GACpBxwC,GAAGptI,OAAOljC,QAAQ+gN,UrHl0BX,SAAmB3oI,EAAe2mF,GACvC,MAAM9lK,EAAKm/E,EAAcn3E,QACnBT,EAAW2vF,GAAW/X,GACtB13E,EAAa03E,EAAc9iF,gBAC3BqgE,EAAU,IAAI31D,GASpB,YARqBtN,IAAjBqsK,GACFppG,EAAQ/0D,gBAAgBm+J,GAE1BppG,EAAQl1D,YAAYD,QACT9N,IAAPuG,GACF08D,EAAQt0D,MAAMpI,GAEhB08D,EAAQzgE,cAAcwL,GAAY,GAC3Bi1D,CACT,EqHqzBA26G,GAAGptI,OAAOljC,QAAQmwF,WAAa6wH,GAC/B1wC,GAAGptI,OAAO+rC,cAAgBgyI,GAC1B3wC,GAAGptI,OAAO9nC,OAAS,CAAE,EACrBk1K,GAAGptI,OAAO9nC,OAAOuoH,QAAUu9F,GAC3B5wC,GAAGptI,OAAO9nC,OAAO2oH,aAAeo9F,GAChC7wC,GAAGptI,OAAO9nC,OAAOqrH,SAAW26F,GAC5B9wC,GAAGptI,OAAO9nC,OAAOmwH,cAAgB81F,GACjC/wC,GAAGptI,OAAO9nC,OAAOmwH,cAAcH,IAAMk2F,GACrChxC,GAAGptI,OAAO9nC,OAAOmwH,cAAcF,UAAYk2F,GAC3CjxC,GAAGptI,OAAO9nC,OAAOmwH,cAAcD,cAAgBk2F,GAC/ClxC,GAAGptI,OAAO9nC,OAAOmwH,cAAciB,mBAAqBi1F,GACpDnxC,GAAGptI,OAAO9nC,OAAOwoH,aAAe89F,GAChCpxC,GAAGptI,OAAO9nC,OAAOumN,UAAYC,GAC7BtxC,GAAGptI,OAAO9nC,OAAOwgH,YAAc,CAAE,EACjC00D,GAAGptI,OAAO9nC,OAAOwgH,YAAYG,qBAAuB8lG,GACpDvxC,GAAGptI,OAAO9nC,OAAOwgH,YAAYI,qBAAuB8lG,GACpDxxC,GAAGptI,OAAO9nC,OAAOwgH,YAAYC,gBAAkBkmG,GAC/CzxC,GAAGptI,OAAO9nC,OAAOwgH,YAAYE,kBAAoBkmG,GACjD1xC,GAAGptI,OAAO9nC,OAAOyoH,kBAAoBo+F,GACrC3xC,GAAGptI,OAAO9nC,OAAOqoH,eAAiBy+F,GAClC5xC,GAAGptI,OAAO9nC,OAAO0oH,YAAcq+F,GAC/B7xC,GAAGptI,OAAO9nC,OAAO0oH,YAAYtC,WAAa4gG,GAC1C9xC,GAAGptI,OAAO9nC,OAAO4tG,cAAgBq5G,GACjC/xC,GAAGptI,OAAO9nC,OAAO+uD,aAAem4J,GAChChyC,GAAGptI,OAAO9nC,OAAOsuD,iBAAmB64J,GACpCjyC,GAAGptI,OAAO9nC,OAAOquD,YAAc+4J,GAC/BlyC,GAAGptI,OAAO9nC,OAAOuuD,eAAiB84J,GAClCnyC,GAAGptI,OAAO9nC,OAAOwuD,gBAAkB84J,GACnCpyC,GAAGptI,OAAO9nC,OAAOunN,sB1K5uCoB,E0K6uCrCryC,GAAGptI,OAAO9nC,OAAOyuD,gBAAkB+4J,GACnCtyC,GAAGptI,OAAO9nC,OAAOynN,iB1KpsCe,E0KqsChCvyC,GAAGptI,OAAO9nC,OAAO0uD,kBAAoBg5J,GACrCxyC,GAAGptI,OAAO9nC,OAAO8uD,eAAiB64J,GAClCzyC,GAAGptI,OAAO9nC,OAAO2uD,mBAAqBi5J,GACtC1yC,GAAGptI,OAAO9nC,OAAO4uD,iBAAmBi5J,GACpC3yC,GAAGptI,OAAO9nC,OAAO6uD,oBAAsBi5J,GACvC5yC,GAAGptI,OAAO9nC,OAAO2xD,iBAAmBo2J,GACpC7yC,GAAGptI,OAAO9nC,OAAOkxD,kBAAoB82J,GACrC9yC,GAAGptI,OAAO9nC,OAAOioN,UAAY,CAAE,EAC/B/yC,GAAGptI,OAAO9nC,OAAOioN,UAAU/1F,sBAAwBg2F,GACnDhzC,GAAGptI,OAAO9nC,OAAOioN,UAAU91F,4BAA8Bg2F,GACzDjzC,GAAGptI,OAAO9nC,OAAOioN,UAAUh1F,UAAYm1F,GACvClzC,GAAGptI,OAAO9nC,OAAO+wD,yBAA2Bs3J,GAC5CnzC,GAAGptI,OAAO9nC,OAAOqwD,kBAAoBi4J,GACrCpzC,GAAGptI,OAAO9nC,OAAO8vD,iBAAmBy4J,GACpCrzC,GAAGptI,OAAO9nC,OAAOmvD,aAAeq5J,GAChCtzC,GAAGptI,OAAO9nC,OAAOyoN,e1K99BV,SAAwBjoN,EAASwJ,EAAU8zB,EAASC,GACxC,IAAb/zB,IACFxJ,EAAQygB,UAAU6c,EAASC,GAC3Bv9B,EAAQmS,OAAO3I,GACfxJ,EAAQygB,WAAW6c,GAAUC,GAEjC,E0Ky9BAm3I,GAAGptI,OAAO9nC,OAAOY,MAAQ,CAAE,EAC3Bs0K,GAAGptI,OAAO9nC,OAAOY,MAAM29D,aAAemqJ,GACtCxzC,GAAGptI,OAAO9nC,OAAOY,MAAMg+D,WAAa+pJ,GACpCzzC,GAAGptI,OAAO9nC,OAAOY,MAAM69D,0BAA4BmqJ,GACnD1zC,GAAGptI,OAAO9nC,OAAOY,MAAMu9D,qBAAuB0qJ,GAC9C3zC,GAAGptI,OAAO9nC,OAAOkvD,YAAc45J,GAC/B5zC,GAAGptI,OAAOihL,elJ/uCH,SAAwBpyN,EAAOo7B,GACpC,OAAO9lB,GAAetV,EAAM6uE,sBAAuBzzC,EAAMz9B,MAAM,GACjE,EkJ8uCA4gL,GAAGptI,OAAOs1C,iBAAmB4rI,GAC7B9zC,GAAGptI,OAAOmhL,UlJrzCH,SAAmBzoN,EAASpF,GACjC,MAAM4E,EAASQ,EAAQR,OAEjBytB,GADNryB,EAAUA,GAAoB,CAAE,GACLqyB,YAAc7uB,GACnCkF,EAAO1I,EAAQ0I,KACjBA,IACF9D,EAAOJ,MAAQkE,EAAK,GAAK2pB,EACzBztB,EAAOH,OAASiE,EAAK,GAAK2pB,EAC1BztB,EAAOY,MAAMhB,MAAQkE,EAAK,GAAK,KAC/B9D,EAAOY,MAAMf,OAASiE,EAAK,GAAK,MAElC,MAAMyC,EAAS,CAAC,EAAG,EAAGvG,EAAOJ,MAAOI,EAAOH,QACrCge,EAAYqrM,GrG/CX,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GqG+C6Bz7L,EAAYA,GAChE,OAAO,IAAI+nD,GAAwBh1E,EAASitB,EAAYlnB,EAAQsX,EAAW,EAC7E,EkJwyCAq3J,GAAGt7G,SAAW,CAAE,EAChBs7G,GAAGt7G,SAASuvJ,UAAYC,GACxBl0C,GAAGt7G,SAASxf,MAAQivK,GACpBn0C,GAAGt7G,SAASgyE,IAAM09E,GAClBp0C,GAAGt7G,SAAS55D,OAAS,CAAE,EACvBk1K,GAAGt7G,SAAS55D,OAAO4xG,WAAa23G,GAChCr0C,GAAGt7G,SAAS55D,OAAOo6C,MAAQovK,GAC3Bt0C,GAAGt7G,SAAS55D,OAAOo6C,MAAMt6C,WAAa2pN,GACtCv0C,GAAGt7G,SAAS55D,OAAO02G,UAAYgzG,GAC/Bx0C,GAAGt7G,SAAS55D,OAAO2pN,iBAAmBC,GACtC10C,GAAGt7G,SAAS55D,OAAOy4H,YAAcoxF,GACjC30C,GAAGt7G,SAASkwJ,OAAS,CAAE,EACvB50C,GAAGt7G,SAASkwJ,OAAOntI,aAAeotI,GAClC70C,GAAGt7G,SAASkwJ,OAAOhtI,oBAAsBktI,GACzC90C,GAAGt7G,SAASkwJ,OAAO/sI,aAAektI,GAClC/0C,GAAGt7G,SAASkwJ,OAAO9sI,cAAgBktI,GACnCh1C,GAAGtwE,OAAS,CAAE,EACdswE,GAAGtwE,OAAOphG,SAAW2mN,GACrBj1C,GAAGtwE,OAAOzlG,MAAQirN,GAClBl1C,GAAGtwE,OAAO7nG,KAAOstN,GACjBn1C,GAAGtwE,OAAOhd,cAAgB0iI,GAC1Bp1C,GAAGtwE,OAAO1mB,gCAAkCqsI,GAC5Cr1C,GAAGtwE,OAAO9mB,0BAA4B0sI,GACtCt1C,GAAGtwE,OAAO9kG,WAAa2qN,GACvBv1C,GAAGtwE,OAAO8lH,OAAS,CAAE,EACrBx1C,GAAGtwE,OAAO8lH,OAAO1/H,gBAAkB2/H,GACnCz1C,GAAGtwE,OAAOgmH,SAAW,CAAE,EACvB11C,GAAGtwE,OAAOgmH,SAAStrH,aAAeurH,GAClC31C,GAAGtwE,OAAOgmH,SAAS3rH,yBAA2B6rH,GAC9C51C,GAAGtwE,OAAOgmH,SAAS1rH,gBAAkB6rH,GACrC71C,GAAGtwE,OAAOgmH,SAAS9iL,OAASkjL,GAC5B91C,GAAGtwE,OAAO98D,OAASmjL,GACnB/1C,GAAGnrK,WAAa,CAAE,EAClBmrK,GAAGnrK,WAAWk2E,mBAAqBirI,GACnCh2C,GAAGi2C,qBAAuB,CAAE,EAC5Bj2C,GAAGi2C,qBAAqBjwL,uBAAyBkwL,GACjDl2C,GAAGi2C,qBAAqBtwL,kBAAoBwwL,GAC5Cn2C,GAAGi2C,qBAAqB3wL,wBAA0B8wL,GAClDp2C,GAAGq2C,mBAAqB,CAAE,EAC1Br2C,GAAGq2C,mBAAmBpwL,cAAgBqwL,GACtCt2C,GAAGq2C,mBAAmBlwL,iBAAmBowL,GACzCv2C,GAAGq2C,mBAAmB1vM,QAAU6vM,GAChCx2C,GAAGq2C,mBAAmBp7M,KAAOw7M,GAC7Bz2C,GAAGpxK,KAAO,CAAE,EACZoxK,GAAGpxK,KAAK4C,OhLv5CD,SAAgB5C,EAAM20J,EAAK9xJ,GAMhC,YALarP,IAATqP,IACFA,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAK7C,EAAK,GAAK,EAAI20J,EACxB9xJ,EAAK,GAAK7C,EAAK,GAAK,EAAI20J,EACjB9xJ,CACT,EgLi5CAuuK,GAAGpxK,KAAK++C,QAAU+oK,GAClB12C,GAAGpxK,KAAKiP,MAAQ84M,GAChB32C,GAAGpxK,KAAKg/C,OAASgpK,GACjB52C,GAAGr6K,OAAS,CAAE,EACdq6K,GAAGr6K,OAAOkxN,ShIxzCV,cAAuBt8H,GAIrB,WAAA5+F,CAAYuK,GACV,MAAM4sG,OAA0B1wG,IAAlB8D,EAAQ4sG,OAAsB5sG,EAAQ4sG,MAEpDjyG,MAAM,CACJssD,UAAWjnD,EAAQinD,UACnB9yB,YAAa,YACblyB,YAAajC,EAAQiC,YACrBoP,WAAY2X,GAAc,aAC1B0rE,2BAA4B10F,EAAQ00F,2BACpC7yF,MAAO,UACPuyB,iBAAkBp0B,EAAQo0B,iBAC1Bm+D,eAAgBqa,EAAQ,EAAI,EAC5Bx7F,WAAyBlV,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,MAC7CrP,WAAY/B,EAAQ+B,WACpB2wF,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAKk7N,OAAShkH,EAMdl3G,KAAKm7N,cAA+B30N,IAApB8D,EAAQ8wN,QAAwB9wN,EAAQ8wN,QAAU,QAMlEp7N,KAAKq7N,cAA+B70N,IAApB8D,EAAQymC,QAAwBzmC,EAAQymC,SAAY,EAMpE/wC,KAAKs7N,QAAUhxN,EAAQhD,IAMvBtH,KAAKu7N,YAAcjxN,EAAQkxN,WAM3Bx7N,KAAKy7N,kBAAoBnxN,EAAQoxN,iBAEjC,MAAM76I,EACJ,yDACA7gF,KAAKu7N,YACL,iDACAv7N,KAAKs7N,QACL,MACAt7N,KAAKm7N,SAEPx0F,MAAM9lD,GACHttE,MAAMgvE,GAAaA,EAASopC,SAC5Bp4G,MAAMo4G,GAAS3rH,KAAK27N,8BAA8BhwG,IACzD,CAQE,SAAAiwG,GACE,OAAO57N,KAAKs7N,OAChB,CAQE,aAAAO,GACE,OAAO77N,KAAKu7N,WAChB,CAKE,6BAAAI,CAA8Bp5I,GAC5B,GACyB,KAAvBA,EAASu5I,YACqB,MAA9Bv5I,EAASw5I,mBAC4B,oBAArCx5I,EAASy5I,0BACuB,GAAhCz5I,EAAS05I,aAAap7N,QACuB,GAA7C0hF,EAAS05I,aAAa,GAAGC,UAAUr7N,OAGnC,YADAb,KAAKyM,SAAS,SAIhB,MAAM80K,EAAWh/F,EAAS05I,aAAa,GAAGC,UAAU,GAC9CnrL,GAA6B,GAAnB/wC,KAAKq7N,SAAiB95C,EAAS46C,QAAUn8N,KAAKq7N,SAGxD5lN,EAASm/E,GADU50F,KAAKszB,iBAExBrR,EAAQjiB,KAAKk7N,OAAS,EAAI,EAC1B7pI,EACJkwF,EAAS66C,YAAc76C,EAAS86C,YAC5B96C,EAAS66C,WAAan6M,EACtB,CAACs/J,EAAS66C,WAAan6M,EAAOs/J,EAAS86C,YAAcp6M,GAErDsC,EAAWwwE,GAAU,CACzBt/E,OAAQA,EACRw2B,QAASs1I,EAAS+6C,QAClBvrL,QAASA,EACTsgD,SAAUA,IAEZrxF,KAAKukB,SAAWA,EAEhB,MAAM62M,EAAUp7N,KAAKm7N,SACfjkH,EAAQl3G,KAAKk7N,OACbQ,EAAmB17N,KAAKy7N,kBA4C9B,GA3CAz7N,KAAK+9F,gBAAkBpH,GACrB4qF,EAASg7C,mBAAmBprM,KAAI,SAAUqrM,GAExC,MAAMC,EAAmB,CAAC,EAAG,EAAG,GAC1BC,EAAWn7C,EAASm7C,SACvBh7M,QAAQ,cAAe86M,GACvB96M,QAAQ,YAAa05M,GACxB,OAAA,SAOYlvN,EAAWywB,EAAYhhB,GAC/B,IAAKzP,EACH,OAEF8K,GACE9K,EAAU,GACVA,EAAU,GACVA,EAAU,GACVuwN,GAEF,MAAM57I,EAAM,IAAIgC,IACd65I,EAASh7M,QAAQ,YAAao+E,GAAQ28H,KAElCpnI,EAASxU,EAAI84B,aAUnB,OATIzC,IACF7hB,EAAOzrF,IAAI,MAAO,MAClByrF,EAAOzrF,IAAI,SAAU,YAEE,IAArB8xN,EACFrmI,EAAOgsB,OAAO,MACgB,IAArBq6G,GACTrmI,EAAOzrF,IAAI,IAAK,KAEXi3E,EAAI9vD,UAEvB,CACA,KAGQwwJ,EAASo7C,iBAAkB,CAC7B,MAAM5vM,EAAYpB,GAChB2H,GAAc,aACdtzB,KAAKszB,iBAGPtzB,KAAKy8F,iBAAiB/7D,IACpB,MAAMsX,EAAe,GACfhQ,EAAYtH,EAAWsH,UACvBzjB,EAAWvkB,KAAKq9F,cAChBvzD,EAAIvlB,EAASyuE,kBACjBhrD,EAAU/uB,WACVjZ,KAAKg9F,YAMDrwD,EAJYpoB,EAAS2uE,yBACzBlrD,EAAUhvB,OACV8wB,GAEqB,GAsBvB,OArBAy3I,EAASo7C,iBAAiBxrM,KAAI,SAAUyrM,GACtC,IAAIC,GAAe,EACnB,MAAMC,EAAgBF,EAAgBE,cACtC,IAAK,IAAIv7N,EAAI,EAAG4E,EAAK22N,EAAcj8N,OAAQU,EAAI4E,IAAM5E,EAAG,CACtD,MAAMw7N,EAAeD,EAAcv7N,GACnC,GAAIorC,GAAQowL,EAAaT,SAAW3vL,GAAQowL,EAAaZ,QAAS,CAChE,MAAMhwK,EAAO4wK,EAAa5wK,KAG1B,GAAI7xC,GADWa,GADQ,CAACgxC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACVp/B,GACvB2T,EAAWjrB,QAAS,CACzConN,GAAe,EACf,KAChB,CACA,CACA,CACcA,GACF7kL,EAAaryC,KAAKi3N,EAAgB1iL,YAE9C,IAEQlC,EAAaryC,KA5RnB,gIA6RaqyC,CAAY,GAE3B,CAEIh4C,KAAKyM,SAAS,QAClB,GgIkmCA23K,GAAGr6K,OAAOkxN,SAASn7H,QAAUk9H,GAC7B54C,GAAGr6K,OAAOkzN,QQn2CV,cAAsBp4H,GAIpB,WAAA9kG,CAAYuK,GAEVrF,MAAM,CACJ+yC,cAFF1tC,EAAUA,GAAW,CAAE,GAEC0tC,aACtBt8B,MAAOpR,EAAQoR,QAOjB1b,KAAKiZ,gBAAazS,EAMlBxG,KAAK4e,cAAgCpY,IAArB8D,EAAQsU,SAAyBtU,EAAQsU,SAAW,GAMpE5e,KAAK0nG,YAAcp9F,EAAQo9F,aAAe,EAM1C1nG,KAAKk9N,mBAAqB,EAM1Bl9N,KAAK06E,SAAW,GAMhB16E,KAAKq1M,iBACH/qM,EAAQ+qM,kBACR,SAAU5rI,GACR,MAAMn1D,EAAiCm1D,EAAQ70D,cAK/C,OAJAjB,IACGW,GAAmC,UAAvBA,EAAS8e,UACtB,6EAEK9e,CACR,EAMHtU,KAAKm9N,qBAAuB7yN,EAAQ8yN,cAMpCp9N,KAAK+J,OAAS,KAKd/J,KAAKq9N,cAAgBr9N,KAAKw8F,QAAQt1F,KAAKlH,MAEvCA,KAAKs9N,eAAet9N,KAAK4e,SAAU5e,KAAK0nG,aACxC1nG,KAAK8pD,UAAUx/C,EAAQP,QAAU,KACrC,CAQE,KAAA1F,CAAMuiG,GACJ5mG,KAAK06E,SAAS75E,OAAS,EACvBoE,MAAMZ,MAAMuiG,EAChB,CAOE,WAAA5oF,GACE,OAAOhe,KAAK4e,QAChB,CAOE,SAAA+6B,GACE,OAAO35C,KAAK+J,MAChB,CAQE,YAAAo+F,CAAa1yF,EAAQwD,EAAY0C,GAC/B3b,KAAK+J,QAAQo+F,aAAa1yF,EAAQwD,EAAY0C,GAC1C1C,IAAejZ,KAAKiZ,aACtBjZ,KAAKiZ,WAAaA,EAClBjZ,KAAKw8F,UAEX,CAOE,WAAA+gI,CAAY3+M,GACV5e,KAAKs9N,eAAe1+M,EAAU5e,KAAK0nG,YACvC,CAQE,cAAA81H,CAAe91H,GACb1nG,KAAKs9N,eAAet9N,KAAK4e,SAAU8oF,EACvC,CAOE,cAAA+1H,GACE,OAAOz9N,KAAK0nG,WAChB,CAOE,SAAA59C,CAAU//C,GACJ/J,KAAK+J,QACP/J,KAAK+J,OAAOzD,oBAAoBzG,EAAkBG,KAAKq9N,eAEzDr9N,KAAK+J,OAASA,EACVA,GACFA,EAAOzE,iBAAiBzF,EAAkBG,KAAKq9N,eAEjDr9N,KAAKw8F,SACT,CAME,OAAAA,GACEx8F,KAAKqE,QACLrE,KAAK09N,UACL19N,KAAK6hF,YAAY7hF,KAAK06E,SAC1B,CAOE,cAAA4iJ,CAAe1+M,EAAU8oF,GACvB,MAAM3+D,EACS,IAAbnqB,EAAiB,EAAIhT,KAAKmM,IAAI2vF,EAAa9oF,GAAYA,EACnDhX,EACJgX,IAAa5e,KAAK4e,UAAY5e,KAAKk9N,qBAAuBn0L,EAC5D/oC,KAAK4e,SAAWA,EAChB5e,KAAK0nG,YAAcA,EACnB1nG,KAAKk9N,mBAAqBn0L,EACtBnhC,GACF5H,KAAKw8F,SAEX,CAKE,OAAAkhI,GACE,QAAwBl3N,IAApBxG,KAAKiZ,aAA6BjZ,KAAK+J,OACzC,OAEF,MAAM0L,E7Q/ED,CAACsB,IAAUA,KAAU,KAAW,K6QgF/B4mN,EAAc39N,KAAK4e,SAAW5e,KAAKiZ,WACnCyhE,EAAW16E,KAAK+J,OAAOmgD,cAGvB0zK,EAAY,CAAE,EAEpB,IAAK,IAAIr8N,EAAI,EAAG4E,EAAKu0E,EAAS75E,OAAQU,EAAI4E,EAAI5E,IAAK,CACjD,MAAMkoE,EAAUiR,EAASn5E,GACzB,KAAMgH,EAAOkhE,KAAYm0J,GAAY,CACnC,MAAMtpN,EAAWtU,KAAKq1M,iBAAiB5rI,GACvC,GAAIn1D,EAAU,CAEZ4C,GADoB5C,EAASyf,iBACate,GAC1CG,GAAOH,EAAQkoN,EAAaloN,GAE5B,MAAMooN,EAAY79N,KAAK+J,OACpBs9F,oBAAoB5xF,GACpBg6B,QAAO,SAAUquL,GAChB,MAAMv/H,EAAMh2F,EAAOu1N,GACnB,QAAIv/H,KAAOq/H,KAGXA,EAAUr/H,IAAO,GACV,EACrB,IACUv+F,KAAK06E,SAAS/0E,KAAK3F,KAAKo9N,cAAcS,EAAWpoN,GAC3D,CACA,CACA,CACA,CAQE,aAAA2nN,CAAc1iJ,EAAUjlE,GACtB,MAAMuqC,EAAW,CAAC,EAAG,GACrB,IAAK,IAAIz+C,EAAIm5E,EAAS75E,OAAS,EAAGU,GAAK,IAAKA,EAAG,CAC7C,MAAM+S,EAAWtU,KAAKq1M,iBAAiB36H,EAASn5E,IAC5C+S,EACFw7B,GAAckQ,EAAU1rC,EAASyf,kBAEjC2mD,EAAS7zE,OAAOtF,EAAG,EAE3B,CACIq/C,GAAgBZ,EAAU,EAAI06B,EAAS75E,QACvC,MAAMk9N,EAAenlN,GAAUnD,GACzBszB,EAAQ/oC,KAAKk9N,mBACb5oN,EAAW,IAAI0jB,GAAM,CACzBgoB,EAAS,IAAM,EAAIjX,GAASg1L,EAAa,GAAKh1L,EAC9CiX,EAAS,IAAM,EAAIjX,GAASg1L,EAAa,GAAKh1L,IAEhD,OAAI/oC,KAAKm9N,qBACAn9N,KAAKm9N,qBAAqB7oN,EAAUomE,GAEtC,IAAI5mE,GAAQ,CACjBQ,WACAomE,YAEN,GR+lCA0pG,GAAGr6K,OAAO2I,SAAWsrN,GACrB55C,GAAGr6K,OAAOk0N,OSl2CV,cAAqBt/H,GAInB,WAAA5+F,CAAYuK,GACV,MAAM4zN,IAAY5zN,EAAQ4zN,QAE1Bj5N,MAAM,CACJg3F,wBAAyB3xF,EAAQ2xF,wBACjC1qC,UAAWjnD,EAAQinD,UACnB9yB,YAAa,YACblyB,YAAajC,EAAQiC,YACrBoP,WAAY,YACZqjF,2BAA4B10F,EAAQ00F,2BACpC7yF,MAAO,UACPuyB,iBAAkBp0B,EAAQo0B,iBAC1Bm+D,eAAgBqhI,EAAU,EAAI,EAC9BxiN,WAAyBlV,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,MAC7CrP,WAAY/B,EAAQ+B,WACpB2wF,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAKs7N,QAAUhxN,EAAQhD,IAMvBtH,KAAK8S,OAAS,KAKd,MAAMqrN,EAAsB,CAC1BC,QAAS9zN,EAAQ8zN,SAAW,UAC5BC,SAAU/zN,EAAQ+zN,UAAY,QAC9BC,OAAQh0N,EAAQg0N,QAAU,MAExBh0N,EAAQi0N,cACVJ,EAAoBI,YAAcj0N,EAAQi0N,aAExCj0N,EAAQ2X,QACVk8M,EAAoBl8M,MAAQ3X,EAAQ2X,OAElCi8M,IACFC,EAAoBD,SAAU,GAE5B5zN,EAAQk0N,aACVL,EAAoBK,WAAal0N,EAAQk0N,YAEvCl0N,EAAQ+K,SACV8oN,EAAoB9oN,OAAS/K,EAAQ+K,SAEf,IAApB/K,EAAQ+vE,UACV8jJ,EAAoB9jJ,SAAU,GAE5B/vE,EAAQm0N,aACVN,EAAoBM,WAAan0N,EAAQm0N,YAO3Cz+N,KAAK0+N,qBAAuBP,EAM5Bn+N,KAAK2+N,mBAML3+N,KAAK4+N,kBAML5+N,KAAK6+N,6BAML7+N,KAAK8+N,wBAEL9+N,KAAK++N,gBACT,CAcE,QAAAzrN,GACE,OAAOtT,KAAK8S,MAChB,CAQE,iBAAAksN,CAAkBn+I,EAAK0lC,GACrB,OAAOogB,MAAM9lD,EAAK0lC,EACtB,CAME,oBAAMw4G,GACJ,MAAMl+I,EAAMo+I,oDAA6Bj/N,KAAKs7N,QACxC/0G,EAAS,CACb24G,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBn/J,KAAMnI,KAAKC,UAAU93D,KAAK0+N,uBAGtBn8I,QAAiBviF,KAAKg/N,kBAAkBn+I,EAAK0lC,GACnD,IAAKhkC,EAASqkD,GAAI,CAChB,IACE,MAAM5mE,QAAauiB,EAASopC,OAC5B3rH,KAAK8S,OAAS,IAAIzK,MAAM23D,EAAKvsD,MAAM+oB,QAC3C,CAAQ,MACAx8B,KAAK8S,OAAS,IAAIzK,MAAM,+BAChC,CAEM,YADArI,KAAKyM,SAAS,QAEpB,CAKI,MAAM2yN,QAA6B78I,EAASopC,OAEtC9uB,EAAiB78F,KAAKs9F,kBAAkB,GACxCjM,EAAW,CACf+tI,EAAqB5qI,UAAYqI,EACjCuiI,EAAqB3qI,WAAaoI,GAGpC78F,KAAKukB,SAAWwwE,GAAU,CACxBt/E,OAAQm/E,GAAqB50F,KAAKszB,iBAClCyd,QApOU,GAqOVsgD,SAAUA,IAGZ,MAAMguI,EAAUD,EAAqBC,QACrCr/N,KAAK2+N,mBAAqBU,EAC1B,MAAM/3N,EAAMtH,KAAKs7N,QACjBt7N,KAAK+9F,gBAAkB,SAAU7xF,EAAWywB,EAAYhhB,GAKtD,MADY,0CAHFzP,EAAU,MACVA,EAAU,MACVA,EAAU,cAC6BmzN,SAAe/3N,GAEjE,EAED,MAAMg4N,EAAqD,IAA5CtvN,SAASovN,EAAqBE,OAAQ,IAC/C77K,EAAU73C,KAAKoM,IAAIsnN,EAASn/L,KAAKC,MAAQ,IAAW,GAC1DpgC,KAAK4+N,kBAAoBl7L,YAAW,IAAM1jC,KAAK++N,kBAAkBt7K,GAEjEzjD,KAAKy8F,gBAAgBz8F,KAAKu/N,mBAAmBr4N,KAAKlH,OAElDA,KAAKyM,SAAS,QAClB,CAOE,wBAAM8yN,CAAmB7+L,GACvB,GACEA,EAAWw7C,UAAUj0C,KACrBvH,EAAWw7C,UAAUj0C,KACrBvH,EAAW4M,QAEX,OAAOttC,KAAK6+N,6BAEd,MAAOt8D,EAAMF,GAAS76I,GACpBpP,GAAcsoB,EAAWjrB,QACzBirB,EAAWsH,UAAUrsB,aAEhB2mJ,EAAMz6I,GAASL,GACpBlP,GAAYooB,EAAWjrB,QACvBirB,EAAWsH,UAAUrsB,YAOjB6jN,EAAiB,QALNx/N,KAAKq9F,cACArK,kBACpBtyD,EAAWsH,UAAU/uB,WACrBjZ,KAAKg9F,qBAEsCn1E,WAAew6I,UAAcC,UAAaC,IAEvF,GAAIviK,KAAK8+N,yBAA2BU,EAClC,OAAOx/N,KAAK6+N,6BAEd7+N,KAAK8+N,wBAA0BU,EAC/B,MAEM3+I,EAAM,wDAFI7gF,KAAK2+N,0BACT3+N,KAAKs7N,WAC8CkE,IAK/D,OAJAx/N,KAAK6+N,mCAAqCl4F,MAAM9lD,GAC7CttE,MAAMgvE,GAAaA,EAASopC,SAC5Bp4G,MAAMo4G,GAASA,EAAK2nC,YAEhBtzJ,KAAK6+N,4BAChB,CAKE,eAAA1+N,GACEsjC,aAAazjC,KAAK4+N,mBAClB35N,MAAM9E,iBACV,GTynCAikL,GAAGr6K,OAAOsE,MAAQoxN,GAClBr7C,GAAGr6K,OAAOsE,MAAMynG,iBAAmB4pH,GACnCt7C,GAAGr6K,OAAOsE,MAAMuoG,yBAA2B+oH,GAC3Cv7C,GAAGr6K,OAAOsE,MAAMqoG,iBAAmBkpH,GACnCx7C,GAAGr6K,OAAO81N,gBUr4CV,cAA8B9pH,GAI5B,WAAAh2G,CAAYuK,GAGVrF,MAAM,CACJ+yC,cAHF1tC,EAAUA,GAAoB,CAAE,GAGR0tC,aACtBzrC,YAAajC,EAAQiC,YACrBoP,WAAYrR,EAAQqR,WACpBguB,YAAar/B,EAAQq/B,cAOvB3pC,KAAK2+B,kBACqBn4B,IAAxB8D,EAAQm0B,YAA4Bn0B,EAAQm0B,YAAc,KAM5Dz+B,KAAKk7N,YAA2B10N,IAAlB8D,EAAQ4sG,OAAsB5sG,EAAQ4sG,MAMpDl3G,KAAKilG,KAAO36F,EAAQu2E,IAMpB7gF,KAAK8/N,wBAC2Bt5N,IAA9B8D,EAAQy1N,kBACJz1N,EAAQy1N,kBACRnpH,GAMN52G,KAAKg9M,QAAUt2M,OAAO2C,OAAO,CAAE,EAAEiB,EAAQ+qF,QAMzCr1F,KAAKggO,WAAa,CAAC,EAAG,GAMtBhgO,KAAK+hH,kBAAoB,EAMzB/hH,KAAKigO,YAA2Bz5N,IAAlB8D,EAAQy+B,MAAsBz+B,EAAQy+B,MAAQ,IAM5D/oC,KAAKkgO,kBAAoB,IAC7B,CAQE,SAAAC,GACE,OAAOngO,KAAKg9M,OAChB,CAUE,gBAAAxmG,CAAiB/gG,EAAQwD,EAAY0jB,EAAYhhB,GAC/C,YAAkBnV,IAAdxG,KAAKilG,KACA,MAEJjlG,KAAK4S,QAAU5S,KAAKkgO,oBAAsBvkN,IAE7C3b,KAAKkgO,kBAAoBvkN,EACzB3b,KAAK4S,OAASqkG,GAAa,CACzBx4E,YAAaz+B,KAAK2+B,aAClB02D,OAAQr1F,KAAKg9M,QACbrhM,WAAYA,EACZu7F,MAAOl3G,KAAKk7N,OACZr6I,IAAK7gF,KAAKilG,KACVl8D,MAAO/oC,KAAKigO,OACZpzN,KAAM,CAACwF,EAAO0rB,KACZ/9B,KAAKqS,MAAMgrB,SAAShrB,GACpBrS,KAAK8/N,mBAAmB9/N,KAAKqS,MAAO0rB,GAC7BzvB,GAAO+D,OAKbpN,MAAMuxG,iBAAiB/gG,EAAQwD,EAAY0jB,EAAYhhB,GAClE,CAOE,oBAAAykN,GACE,OAAOpgO,KAAK8/N,kBAChB,CAOE,MAAA/3H,GACE,OAAO/nG,KAAKilG,IAChB,CAOE,oBAAAo7H,CAAqBN,GACnB//N,KAAK8/N,mBAAqBC,EAC1B//N,KAAK4H,SACT,CAOE,MAAAq2F,CAAOpd,GACDA,GAAO7gF,KAAKilG,OACdjlG,KAAKilG,KAAOpkB,EACZ7gF,KAAK4S,OAAS,KACd5S,KAAK4H,UAEX,CAOE,SAAA04N,CAAUjrI,GACRr1F,KAAKg9M,QAAUt2M,OAAO2C,OAAO,CAAA,EAAIgsF,GACjCr1F,KAAK4H,SACT,CAOE,YAAA24N,CAAalrI,GACX3uF,OAAO2C,OAAOrJ,KAAKg9M,QAAS3nH,GAC5Br1F,KAAK4H,SACT,CAKE,OAAAA,GACE5H,KAAKqS,MAAQ,KACbpN,MAAM2C,SACV,GV+sCAw8K,GAAGr6K,OAAOs0B,YWl4CV,cAAgC03E,GAI9B,WAAAh2G,CAAYuK,GAGVrF,MAAM,CACJ+yC,cAHF1tC,EAAUA,GAAoB,CAAE,GAGR0tC,aACtBzrC,YAAajC,EAAQiC,YACrBoP,WAAYrR,EAAQqR,WACpBguB,YAAar/B,EAAQq/B,YACrBx9B,MAAO7B,EAAQ6B,QAOjBnM,KAAKwgO,gBAAkBl2N,EAAQm2N,eAM/BzgO,KAAKs+B,QAAU,KAMft+B,KAAK+hH,kBAAoB,EAMzB/hH,KAAKigO,YAA2Bz5N,IAAlB8D,EAAQy+B,MAAsBz+B,EAAQy+B,MAAQ,GAChE,CAUE,gBAAAytE,CAAiB/gG,EAAQwD,EAAY0jB,EAAYhhB,GAC/C1C,EAAajZ,KAAKu2G,sBAAsBt9F,GAExC,IAAI/J,EAASlP,KAAKs+B,QAClB,GACEpvB,GACAlP,KAAK+hH,mBAAqB/hH,KAAK6H,eAC/BqH,EAAO+tB,iBAAmBhkB,GAC1B/J,EAAO8tB,iBAAmBL,GAC1BrmB,GAAepH,EAAO2M,YAAapG,GAEnC,OAAOvG,EAITsL,GADA/E,EAASA,EAAOjS,QACQxD,KAAKigO,QAC7B,MAEMjtN,EAAO,CAFC0F,GAASjD,GAAUwD,EAEX0jB,EADPhkB,GAAUlD,GAAUwD,EACQ0jB,GAErC+jM,EAAgB1gO,KAAKwgO,gBAAgB/8N,KACzCzD,KACAyV,EACAwD,EACA0jB,EACA3pB,EACA2I,GAQF,OANI+kN,IACFxxN,EAAS,IAAImvB,GAAY5oB,EAAQwD,EAAY0jB,EAAY+jM,IAE3D1gO,KAAKs+B,QAAUpvB,EACflP,KAAK+hH,kBAAoB/hH,KAAK6H,cAEvBqH,CACX,GXgzCAk1K,GAAGr6K,OAAO42N,YYz5CV,cAAqB5qH,GAInB,WAAAh2G,CAAYuK,GACV,MAAMm0B,OACoBj4B,IAAxB8D,EAAQm0B,YAA4Bn0B,EAAQm0B,YAAc,KAEJshM,OACtBv5N,IAA9B8D,EAAQy1N,kBACJz1N,EAAQy1N,kBACRnpH,GAER3xG,MAAM,CACJ+yC,aAAc1tC,EAAQ0tC,aACtBzrC,YAAajC,EAAQiC,YACrBoP,WAAY2X,GAAchpB,EAAQqR,cAOpC3b,KAAKilG,KAAO36F,EAAQu2E,IAMpB7gF,KAAK4gO,aAAet2N,EAAQgtG,YAM5Bt3G,KAAKqS,MAAQ,KAEbrS,KAAKqS,MAAQ,IAAIqqB,GACf18B,KAAK4gO,kBACLp6N,EACA,EACAywG,GAAa,CACXp2B,IAAKv2E,EAAQu2E,IACby2B,YAAahtG,EAAQgtG,YACrB74E,cACA5xB,KAAM,CAACwF,EAAO0rB,KACZ/9B,KAAKqS,MAAMgrB,SAAShrB,GACpB0tN,EAAkB//N,KAAKqS,MAAO0rB,GACvBzvB,GAAO+D,OAKpBrS,KAAKqS,MAAM/M,iBACTzF,EACAG,KAAK22G,kBAAkBzvG,KAAKlH,MAElC,CAOE,cAAA6gO,GACE,OAAO7gO,KAAK4gO,YAChB,CAUE,gBAAApqH,CAAiB/gG,EAAQwD,EAAY0jB,EAAYhhB,GAC/C,OAAIrB,GAAW7E,EAAQzV,KAAKqS,MAAMwJ,aACzB7b,KAAKqS,MAEP,IACX,CAOE,MAAA01F,GACE,OAAO/nG,KAAKilG,IAChB,GZg0CAm/E,GAAGr6K,OAAOy0B,UAAYsiM,GACtB18C,GAAGr6K,OAAOg3N,Sa/4CV,cAAuBhrH,GAIrB,WAAAh2G,CAAYuK,GAGVrF,MAAM,CACJ+yC,cAHF1tC,EAAUA,GAAoB,CAAE,GAGR0tC,aACtBzrC,YAAajC,EAAQiC,YACrBoP,WAAYrR,EAAQqR,WACpBguB,YAAar/B,EAAQq/B,cAOvB3pC,KAAK2+B,kBACqBn4B,IAAxB8D,EAAQm0B,YAA4Bn0B,EAAQm0B,YAAc,KAM5Dz+B,KAAKilG,KAAO36F,EAAQu2E,IAMpB7gF,KAAK8/N,wBAC2Bt5N,IAA9B8D,EAAQy1N,kBACJz1N,EAAQy1N,kBACRnpH,GAMN52G,KAAKg9M,QAAUt2M,OAAO2C,OAAO,CAAE,EAAEiB,EAAQ+qF,QAMzCr1F,KAAKghO,YAAc12N,EAAQ8tG,WAM3Bp4G,KAAKk7N,YAA2B10N,IAAlB8D,EAAQ4sG,OAAsB5sG,EAAQ4sG,MAMpDl3G,KAAK+hH,kBAAoB,EAMzB/hH,KAAKigO,YAA2Bz5N,IAAlB8D,EAAQy+B,MAAsBz+B,EAAQy+B,MAAQ,IAM5D/oC,KAAKkgO,kBAAoB,IAC7B,CAgBE,iBAAAtnH,CAAkBxiG,EAAY6C,EAAY0C,EAAY05E,GACpD,MAAMwjB,EAAgBvlF,GAAc3X,GAC9BslN,EAAsBjhO,KAAKszB,gBAE7B2tM,GAAuBA,IAAwBpoH,IACjD5/F,EAAa+zE,GACXi0I,EACApoH,EACAziG,EACA6C,GAEF7C,EAAa2W,GAAU3W,EAAYyiG,EAAeooH,IAWpD,OAAOroH,GARS,CACd/3B,IAAK7gF,KAAKilG,KACV5P,OAAQ,IACHr1F,KAAKg9M,WACL3nH,GAEL15E,WAAYslN,GAAuBpoH,GAEHziG,EAAY6C,EAClD,CAgBE,YAAAggG,CAAahgG,EAAYo8E,GACvB,OAAO4jB,GACL,CACEp4B,IAAK7gF,KAAKilG,KACV5P,OAAQ,IACHr1F,KAAKg9M,WACL3nH,IAGPp8E,EAEN,CAQE,SAAAknN,GACE,OAAOngO,KAAKg9M,OAChB,CAUE,gBAAAxmG,CAAiB/gG,EAAQwD,EAAY0jB,EAAYhhB,GAC/C,YAAkBnV,IAAdxG,KAAKilG,KACA,MAEJjlG,KAAK4S,QAAU5S,KAAKkgO,oBAAsBvkN,IAE7C3b,KAAKkgO,kBAAoBvkN,EACzB3b,KAAK4S,OAASqkG,GAAa,CACzBx4E,YAAaz+B,KAAK2+B,aAClB02D,OAAQr1F,KAAKg9M,QACbrhM,WAAYA,EACZy8F,WAAYp4G,KAAKghO,YACjB9pH,MAAOl3G,KAAKk7N,OACZr6I,IAAK7gF,KAAKilG,KACVl8D,MAAO/oC,KAAKigO,OACZpzN,KAAM,CAACwF,EAAO0rB,KACZ/9B,KAAKqS,MAAMgrB,SAAShrB,GACpBrS,KAAK8/N,mBAAmB9/N,KAAKqS,MAAO0rB,GAC7BzvB,GAAO+D,OAKbpN,MAAMuxG,iBAAiB/gG,EAAQwD,EAAY0jB,EAAYhhB,GAClE,CAOE,oBAAAykN,GACE,OAAOpgO,KAAK8/N,kBAChB,CAOE,MAAA/3H,GACE,OAAO/nG,KAAKilG,IAChB,CAOE,oBAAAo7H,CAAqBN,GACnB//N,KAAK8/N,mBAAqBC,EAC1B//N,KAAK4H,SACT,CAOE,MAAAq2F,CAAOpd,GACDA,GAAO7gF,KAAKilG,OACdjlG,KAAKilG,KAAOpkB,EACZ7gF,KAAK4S,OAAS,KACd5S,KAAK4H,UAEX,CAOE,SAAA04N,CAAUjrI,GACRr1F,KAAKg9M,QAAUt2M,OAAO2C,OAAO,CAAA,EAAIgsF,GACjCr1F,KAAK4H,SACT,CAOE,YAAA24N,CAAalrI,GACX3uF,OAAO2C,OAAOrJ,KAAKg9M,QAAS3nH,GAC5Br1F,KAAK4H,SACT,CAKE,OAAAA,GACE5H,KAAKqS,MAAQ,KACbpN,MAAM2C,SACV,GbspCAw8K,GAAGr6K,OAAOm3N,Wc34CV,cAAyBviI,GAIvB,WAAA5+F,CAAYuK,GACVrF,MAAM,CACJ+yC,aAAc1tC,EAAQ0tC,aACtBuZ,UAAWjnD,EAAQinD,UACnB9yB,YAAan0B,EAAQm0B,YACrBlyB,YAAajC,EAAQiC,YACrBoP,WAAYrR,EAAQqR,WACpBqjF,2BAA4B10F,EAAQ00F,2BACpC7yF,MAAO,UACPuyB,iBAAkBp0B,EAAQo0B,iBAC1BhjB,WAAyBlV,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,MAC7CrP,WAAY/B,EAAQ+B,aAWtBmwG,GARmB,CACjB37B,IAAKv2E,EAAQu2E,IACbllE,WAAY3b,KAAKszB,gBACjB0mF,UAAW1vG,EAAQ0vG,UACnBtqG,QAASpF,EAAQoF,SAAW,KAC5B6pG,YAAajvG,EAAQivG,cAIpBhmG,KAAKvT,KAAKmhO,mBAAmBj6N,KAAKlH,OAClCwT,MAAMxT,KAAK0rH,aAAaxkH,KAAKlH,MACpC,CAME,kBAAAmhO,CAAmBC,GACjBphO,KAAKukB,SAAW68M,EAAYnlH,KAC5Bj8G,KAAK2b,WAAaylN,EAAYzlN,WAC9B3b,KAAK0+F,mBAAmB0iI,EAAYjlH,YAAailH,EAAYllH,aAC7Dl8G,KAAKyM,SAAS,QAClB,CAME,YAAAi/G,CAAaj4G,GACXgmG,GAAShmG,GACTzT,KAAKyM,SAAS,QAClB,Gd21CA23K,GAAGr6K,OAAOs3N,IpGz4CV,cAAkBphI,GAIhB,WAAAlgG,CAAYuK,GAGV,IAAI0tC,EAEFA,OAD2BxxC,KAH7B8D,EAAUA,GAAW,CAAE,GAGX0tC,aACK1tC,EAAQ0tC,aAER,CAAC6kE,IAGlB,MAAMp+E,OACoBj4B,IAAxB8D,EAAQm0B,YAA4Bn0B,EAAQm0B,YAAc,YAEtDoiD,OACYr6E,IAAhB8D,EAAQu2E,IACJv2E,EAAQu2E,IACR,iDAEN57E,MAAM,CACJ+yC,aAAcA,EACdikD,yBAAyB,EACzB1qC,UAAWjnD,EAAQinD,UACnB9yB,YAAaA,EACblyB,YAAajC,EAAQiC,YACrBwkC,aAA6BvqC,IAApB8D,EAAQymC,QAAwBzmC,EAAQymC,QAAU,GAC3DiuD,2BAA4B10F,EAAQ00F,2BACpCtgE,iBAAkBp0B,EAAQo0B,iBAC1BryB,WAAY/B,EAAQ+B,WACpBw0E,IAAKA,EACLnlE,MAAOpR,EAAQoR,MACfshF,WAAY1yF,EAAQ0yF,YAE1B,GoGs2CAonF,GAAGr6K,OAAOs3N,IAAIxkH,YAAcykH,GAC5Bl9C,GAAGr6K,OAAOw3N,OAASC,GACnBp9C,GAAGr6K,OAAOw3N,OAAOx6G,UAAY06G,GAC7Br9C,GAAGr6K,OAAOw3N,OAAO/4G,kBAAoBk5G,GACrCt9C,GAAGr6K,OAAO+xF,OAAS6lI,GACnBv9C,GAAGr6K,OAAO63N,WxFh0CV,cAAyB3hI,GAIvB,WAAAlgG,CAAYuK,GACV,MAAM/I,EAAI+I,EAAQkvC,MAAM5yC,QAAQ,KAC1Bi7N,GAAkB,GAAPtgO,EAAU+I,EAAQkvC,MAAQlvC,EAAQkvC,MAAMh2C,MAAM,EAAGjC,GAC5DugO,EAAiBh3G,GAAe+2G,IAAa,CACjD51L,QAAW,EACX8E,QAAW,GACXg6E,QAAU,GAGNg3G,EAAcj4G,GAAYx/G,EAAQkvC,OAClCwoL,EAAQ13N,EAAQ23N,OAAS,YAAc33N,EAAQ23N,OAAS,GACxDl3G,EAAS+2G,EAAe/2G,QAAUzgH,EAAQygH,OAAS,MAAQ,GAE3DlqC,OACYr6E,IAAhB8D,EAAQu2E,IACJv2E,EAAQu2E,IACR,sCACAv2E,EAAQkvC,MACR,eACAuxE,EACA,IACAg3G,EAAYhgO,UACZigO,EAEAhqL,EAAe,CAnJvB,+EAMA,8EA6I6DkqL,IAEvD53N,EAAQkvC,MAAM3kB,WAAW,YAC3BmjB,EAAanxC,OAAO,EAAG,EA1I3B,0EA6IE5B,MAAM,CACJ+yC,aAAcA,EACduZ,UAAWjnD,EAAQinD,UACnB9yB,YAAa,YACblyB,YAAajC,EAAQiC,YACrBwkC,aACsBvqC,IAApB8D,EAAQymC,QACJzmC,EAAQymC,QACR+wL,EAAe/wL,QACrB9E,aACsBzlC,IAApB8D,EAAQ2hC,QACJ3hC,EAAQ2hC,QACR61L,EAAe71L,QACrB+yD,2BAA4B10F,EAAQ00F,2BACpCtgE,iBAAkBp0B,EAAQo0B,iBAC1BryB,WAAY/B,EAAQ+B,WACpBw0E,IAAKA,EACLgc,eAAgBkuB,EAAS,EAAI,EAC7BrvG,MAAOpR,EAAQoR,MACfshF,WAAY1yF,EAAQ0yF,YAE1B,GwF0wCAonF,GAAGr6K,OAAOkC,KAAOk2N,GACjB/9C,GAAGr6K,OAAOkC,KAAK0xF,gBAAkBykI,GACjCh+C,GAAGr6K,OAAOs4N,eel4CV,cAA6B1jI,GAI3B,WAAA5+F,CAAYuK,GAGVrF,MAAM,CACJ+yC,cAHF1tC,EAAUA,GAAoB,CAAE,GAGR0tC,aACtBuZ,UAAWjnD,EAAQinD,UACnB9yB,YAAan0B,EAAQm0B,YACrBlyB,YAAajC,EAAQiC,YACrBoP,WAAYrR,EAAQqR,WACpBqjF,2BAA4B10F,EAAQ00F,2BACpCz6E,SAAUja,EAAQia,SAClBma,iBAAkBp0B,EAAQo0B,iBAC1BmiD,IAAKv2E,EAAQu2E,IACbkV,KAAMzrF,EAAQyrF,KACdr6E,WAAyBlV,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,MAC7CrP,WAAY/B,EAAQ+B,WACpB2wF,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAKg9M,QAAUt2M,OAAO2C,OAAO,CAAE,EAAEiB,EAAQ+qF,QAMzCr1F,KAAKk7N,YAA2B10N,IAAlB8D,EAAQ4sG,OAAsB5sG,EAAQ4sG,MAMpDl3G,KAAKwxF,WpR0FA,CAACz6E,IAAUA,KAAU,KAAW,KoRxFrC/W,KAAKk9F,OAAOl9F,KAAKsiO,mBACrB,CAME,gBAAAA,GACE,IAAI/gO,EAAI,EACR,MAAMsB,EAAM,GACZ,IAAK,MAAMyE,KAAOtH,KAAKg9M,QACrBn6M,EAAItB,KAAO+F,EAAM,IAAMtH,KAAKg9M,QAAQ11M,GAEtC,OAAOzE,EAAIid,KAAK,IACpB,CAQE,SAAAqgN,GACE,OAAOngO,KAAKg9M,OAChB,CAYE,cAAAulB,CACEr2N,EACAmlF,EACAmxI,EACA7lM,EACAhhB,EACA05E,GAEA,MAAMU,EAAO/1F,KAAK+1F,KAClB,IAAKA,EACH,OAEF,IAAIlV,EACJ,GAAmB,GAAfkV,EAAKl1F,OACPggF,EAAMkV,EAAK,OACN,CAELlV,EAAMkV,EADQz4E,GAAOs5E,GAAc1qF,GAAY6pF,EAAKl1F,QAE1D,CAEI,OAAOi2G,GACLj2B,EACA2hJ,GAEExiO,KAAKukB,UAAYvkB,KAAKm9F,yBAAyBxhF,IAC/CshB,cAAc/wB,EAAU,IAC1BywB,EACAhhB,EACA05E,EAEN,CAQE,iBAAAiI,CAAkB3gE,GAChB,OAAO38B,KAAKk7N,OAASv+L,EAAa,CACtC,CAOE,SAAA2jM,CAAUjrI,GACRr1F,KAAKg9M,QAAUt2M,OAAO2C,OAAO,CAAA,EAAIgsF,GACjCr1F,KAAKk9F,OAAOl9F,KAAKsiO,mBACrB,CAOE,YAAA/B,CAAalrI,GACX3uF,OAAO2C,OAAOrJ,KAAKg9M,QAAS3nH,GAC5Br1F,KAAKk9F,OAAOl9F,KAAKsiO,mBACrB,CASE,eAAAvkI,CAAgB7xF,EAAWywB,EAAYhhB,GACrC,IAAI4I,EAAWvkB,KAAKq9F,cAKpB,GAJK94E,IACHA,EAAWvkB,KAAKm9F,yBAAyBxhF,IAGvC4I,EAAS8sB,iBAAiBxwC,QAAUqL,EAAU,GAChD,OAGgB,GAAdywB,GAAoB38B,KAAKk7N,SAC3Bv+L,EAAa,GAGf,MAAM6lM,EAAaj+M,EAAS2tE,mBAAmBhmF,EAAWlM,KAAKwxF,YAC/D,IAAIH,EAAWr/B,GAAOztC,EAASouE,YAAYzmF,EAAU,IAAKlM,KAAK88F,SAE7C,GAAdngE,IACF00D,EAAWmM,GAAUnM,EAAU10D,EAAY38B,KAAK88F,UAIlD,MAAMgc,EAAa,CACjB3B,EAAK,QACLC,OAAU,QACVC,aAAe,GAIjB,OAFA3wG,OAAO2C,OAAOyvG,EAAY94G,KAAKg9M,SAExBh9M,KAAKuiO,eACVr2N,EACAmlF,EACAmxI,EACA7lM,EACAhhB,EACAm9F,EAEN,Gf4sCAsrE,GAAGr6K,OAAO04N,UgBn6CV,cAAwBjkM,GAItB,WAAAz+B,CAAYuK,GAKV,MAAMmX,GADNnX,EAAUA,GAAW,CAAE,GACEmX,UAAY,oBAC/B1X,EAASO,EAAQP,OAEvB9E,MAAM,CACJoH,WAAY,EACZqP,WACoBlV,IAAlB8D,EAAQoR,MACJpR,EAAQoR,WACGlV,IAAXuD,EACEA,EAAO4rE,gBACPnvE,IAGV,MAAMk8N,EAAW,KACf1iO,KAAK2b,gBACoBnV,IAAvB8D,EAAQqR,WACJ2X,GAAchpB,EAAQqR,iBACXnV,IAAXuD,EACEA,EAAOupB,gBACPtzB,KAAK2b,WACb3b,KAAKukB,cACkB/d,IAArB8D,EAAQia,SACJja,EAAQia,cACG/d,IAAXuD,EACEA,EAAOszF,cACPr9F,KAAKukB,SACbvkB,KAAKg9F,gBACoBx2F,IAAvB8D,EAAQ0yF,WACJ1yF,EAAQ0yF,gBACGx2F,IAAXuD,EACEA,EAAOizF,WACPh9F,KAAKg9F,WAETjzF,aAAkB2I,KACpB1S,KAAKmyG,gBAAkBpoG,EAAOooG,iBAAiB3uG,SAAW,MAG5D,MAAM+gB,EAAWvkB,KAAKukB,SAClBA,GACFvkB,KAAKy0G,aACHlwF,EACG8sB,iBACAlgB,KAAI,CAACxU,EAAGpb,IACPywD,GAAOztC,EAASouE,YAAYpxF,IAAI4vB,KAAKu6B,GACnC9/C,KAAKoM,IAAIpM,KAAKoQ,MAAM0vC,GAAI,QAMlC1rD,KAAK4oG,WAAU,CAAC9+D,EAAG/zB,EAAGC,EAAG++F,KACvB,MAAMx2C,EAAOs3B,GAAkBp0E,EAAUqoB,EAAG/zB,EAAGC,EAAG++F,EAAcl+F,OACzD/H,EAAOC,GAAU/O,KAAK2yF,YAAY7oD,GACnCp6B,EAAUb,GAAsBC,EAAOC,GAc7C,OAZAW,EAAQs1D,YAAc,OACtBt1D,EAAQizN,WAAW,GAAK,GAAK7zN,EAAQ,GAAKC,EAAS,IAEnDW,EAAQwvB,UAAY,OACpBxvB,EAAQs1D,YAAc,QACtBt1D,EAAQ46D,UAAY,SACpB56D,EAAQk7D,aAAe,SACvBl7D,EAAQ0vD,KAAO,kBACf1vD,EAAQgxD,UAAY,EACpBhxD,EAAQw3E,WAAW3oB,EAAMzvD,EAAQ,EAAGC,EAAS,EAAGD,GAChDY,EAAQy3E,SAAS5oB,EAAMzvD,EAAQ,EAAGC,EAAS,EAAGD,GAEvC7K,QAAQE,QAAQuL,EAAQR,OAAO,IAExClP,KAAKyM,SAAS,QAAQ,EAGxB,QAAejG,IAAXuD,GAA8C,UAAtBA,EAAO6C,WACjC81N,QACK,CACL,MAAME,EAAU,KACY,UAAtB74N,EAAO6C,aACT7C,EAAOzD,oBAAoBzG,EAAkB+iO,GAC7CF,IACV,EAEM34N,EAAOzE,iBAAiBzF,EAAkB+iO,EAChD,CACA,GhBw0CAx+C,GAAGr6K,OAAO40F,UAAYkkI,GACtBz+C,GAAGr6K,OAAO+4N,SiBl4CV,cAAuBnkI,GAIrB,WAAA5+F,CAAYuK,GA2BV,GA1BArF,MAAM,CACJ+yC,aAAc1tC,EAAQ0tC,aACtBuZ,UAAWjnD,EAAQinD,UACnB9yB,YAAan0B,EAAQm0B,YACrBlyB,YAAajC,EAAQiC,YACrBoP,WAAY2X,GAAc,aAC1B0rE,2BAA4B10F,EAAQ00F,2BACpC7yF,MAAO,UACPuyB,iBAAkBp0B,EAAQo0B,iBAC1BhjB,WAAyBlV,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,MAC7CrP,WAAY/B,EAAQ+B,WACpB2wF,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAK+iO,UAAY,KAMjB/iO,KAAKoxF,UAAY9mF,EAAQ+mF,SAErB/mF,EAAQu2E,IACV,GAAIv2E,EAAQw3E,MACV8pC,GACEthH,EAAQu2E,IACR7gF,KAAKgjO,uBAAuB97N,KAAKlH,MACjCA,KAAKijO,oBAAoB/7N,KAAKlH,WAE3B,CACL,MAAMyiF,EAAS,IAAIxB,eACnBwB,EAAOn9E,iBAAiB,OAAQtF,KAAK6rH,WAAW3kH,KAAKlH,OACrDyiF,EAAOn9E,iBAAiB,QAAStF,KAAK8rH,YAAY5kH,KAAKlH,OACvDyiF,EAAOvB,KAAK,MAAO52E,EAAQu2E,KAC3B4B,EAAOd,MACf,KACW,KAAIr3E,EAAQ44N,SAGjB,MAAM,IAAI76N,MAAM,uDAFhBrI,KAAKgjO,uBAAuB14N,EAAQ44N,SAG1C,CACA,CAME,UAAAr3G,CAAWhmH,GACT,MAAM48E,EAAwC58E,EAAY,OAE1D,IAAK48E,EAAOrB,QAAWqB,EAAOrB,QAAU,KAAOqB,EAAOrB,OAAS,IAAM,CACnE,IAAImB,EACJ,IACEA,EAAkC1qB,KAAKjE,MAAM6uB,EAAOpB,aAC5D,CAAQ,MAEA,YADArhF,KAAKijO,qBAEb,CACMjjO,KAAKgjO,uBAAuBzgJ,EAClC,MACMviF,KAAKijO,qBAEX,CAME,WAAAn3G,CAAYjmH,GACV7F,KAAKijO,qBACT,CAME,WAAAE,GACE,OAAOnjO,KAAK+iO,SAChB,CAME,sBAAAC,CAAuBE,GACrB,MAAMrX,EAAqBv4L,GAAc,aAEnClF,EAAmBpuB,KAAKszB,gBAC9B,IAAI7d,EACJ,QAA2BjP,IAAvB08N,EAAiB,OAAiB,CACpC,MAAMn2M,EAAYpB,GAChBkgM,EACAz9L,GAEF3Y,EAAS0F,GAAe+nN,EAAiB,OAAGn2M,EAClD,CAEI,MAAMw0F,EAAa3sB,GAAqBxmE,GAClC6d,EAAUi3L,EAAkB,SAAK,EAEjC3+M,EAAWwwE,GAAU,CACzBt/E,OAAQ8rG,EACRxwE,QAHcmyL,EAAkB,SAAK,GAIrCj3L,QAASA,EACTolD,SAAUrxF,KAAKoxF,YAMjB,GAJApxF,KAAKukB,SAAWA,EAEhBvkB,KAAK+9F,gBAAkBvH,GAAoB0sI,EAAgB,MAAG3+M,GAE1D2+M,EAAsB,cAAMljO,KAAKy5C,kBAAmB,CACtD,MAAM2pL,OAA+B58N,IAAXiP,EAAuBA,EAAS8rG,EAC1DvhH,KAAKy8F,iBAAgB,SAAU/7D,GAC7B,OAAIpmB,GAAW8oN,EAAmB1iM,EAAWjrB,QACpC,CAACytN,EAAsB,aAEzB,IACf,GACA,CACIljO,KAAK+iO,UAAYG,EACjBljO,KAAKyM,SAAS,QAClB,CAKE,mBAAAw2N,GACEjjO,KAAKyM,SAAS,QAClB,GjB0vCA23K,GAAGr6K,OAAOs5N,QkB53CV,cAAsB1kI,GAIpB,WAAA5+F,CAAYuK,GACVA,EAAUA,GAAiB,CAA6B,EAExD,MAAM+qF,EAAS3uF,OAAO2C,OAAO,CAAA,EAAIiB,EAAQ+qF,QAEzCpwF,MAAM,CACJ+yC,aAAc1tC,EAAQ0tC,aACtBikD,wBAAyB3xF,EAAQ2xF,wBACjC1qC,UAAWjnD,EAAQinD,UACnB9yB,YAAan0B,EAAQm0B,YACrBlyB,YAAajC,EAAQiC,YACrBoP,WAAYrR,EAAQqR,WACpBqjF,2BAA4B10F,EAAQ00F,2BACpCH,UAAWv0F,EAAQu0F,UACnBt6E,SAAUja,EAAQia,SAClBma,iBAAkBp0B,EAAQo0B,iBAC1BmiD,IAAKv2E,EAAQu2E,IACbkV,KAAMzrF,EAAQyrF,KACdr6E,WAAyBlV,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,MAC7CrP,WAAY/B,EAAQ+B,WACpB2wF,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAKy6F,aAA6Bj0F,IAAnB8D,EAAQkjF,OAAuBljF,EAAQkjF,OAAS,EAM/DxtF,KAAKg9M,QAAU3nH,EAMfr1F,KAAKsjO,MAAO,EAMZtjO,KAAKghO,YAAc12N,EAAQ8tG,WAM3Bp4G,KAAKk7N,YAA2B10N,IAAlB8D,EAAQ4sG,OAAsB5sG,EAAQ4sG,MAMpDl3G,KAAKwxF,WvR0DA,CAACz6E,IAAUA,KAAU,KAAW,KuRxDrC/W,KAAKujO,aACLvjO,KAAKk9F,OAAOl9F,KAAKsiO,mBACrB,CAgBE,iBAAA1pH,CAAkBxiG,EAAY6C,EAAY0C,EAAY05E,GACpD,MAAMwjB,EAAgBvlF,GAAc3X,GAC9BslN,EAAsBjhO,KAAKszB,iBAAmBulF,EAEpD,IAAIt0F,EAAWvkB,KAAKq9F,cACf94E,IACHA,EAAWvkB,KAAKm9F,yBAAyB8jI,IAG3C,MAAMuC,EAAkBz2M,GACtB3W,EACAyiG,EACAooH,GAEI9yL,EAAmB6+C,GACvBi0I,EACApoH,EACAziG,EACA6C,GAGI6wB,EAAIvlB,EAASyuE,kBAAkB7kD,EAAkBnuC,KAAKg9F,YACtDl1D,EAAiBvjB,EAAS0Y,cAAc6M,GACxC59B,EAAYqY,EAAS2uE,yBAAyBswI,EAAiB15L,GAErE,GAAIvlB,EAAS8sB,iBAAiBxwC,QAAUqL,EAAU,GAChD,OAGF,IAAIs2N,EAAaj+M,EAAS2tE,mBAAmBhmF,EAAWlM,KAAKwxF,YAE7D,MAAMhE,EAASxtF,KAAKy6F,QACL,IAAXjN,IACFg1I,EAAa5sN,GAAO4sN,EAAY16L,EAAiB0lD,EAAQg1I,IAG3D,MAAM1pH,EAAa,CACjBC,aAAgB/4G,KAAKg9M,QAAgB,QAEvCt2M,OAAO2C,OACLyvG,EACAP,GAAiBv4G,KAAKg9M,QAAS,kBAC/B3nH,GAGF,MAAMt/E,EAAInK,KAAKoQ,OAAOwnN,EAAgB,GAAKhB,EAAW,IAAM16L,GACtD9xB,EAAIpK,KAAKoQ,OAAOwmN,EAAW,GAAKgB,EAAgB,IAAM17L,GAK5D,OAHAgxE,EAAW94G,KAAKsjO,KAAO,IAAM,KAAOvtN,EACpC+iG,EAAW94G,KAAKsjO,KAAO,IAAM,KAAOttN,EAE7BhW,KAAKuiO,eACVr2N,EACAs2N,EACA,EACAvB,GAAuBpoH,EACvBC,EAEN,CAgBE,YAAAG,CAAahgG,EAAYo8E,GACvB,QAAqB7uF,IAAjBxG,KAAK+1F,KAAK,GACZ,OAGF,MAAM+iB,EAAa,CACjBL,QAAW,MACXC,QAAWV,GACXK,QAAW,mBACXjB,OAAU,aAGZ,QAAe5wG,IAAX6uF,QAA4C7uF,IAApB6uF,EAAc,MAAiB,CACzD,MAAMl8C,EAASn5C,KAAKg9M,QAAQymB,OAE5B,MADuBzhO,MAAMC,QAAQk3C,IAA6B,IAAlBA,EAAOt4C,QAErD,OAEFi4G,EAAkB,MAAI3/D,CAC5B,CAEI,QAAmB3yC,IAAfyS,EAA0B,CAC5B,MAAMigG,EAAMl5G,KAAKszB,gBACbtzB,KAAKszB,gBAAgBtP,mBACrB,EACEwuF,EAAY,MAClBsG,EAAkB,MAAK7/F,EAAaigG,EAAO1G,CACjD,CAII,OAFA9rG,OAAO2C,OAAOyvG,EAAYzjB,GAEnBF,GAAoCn1F,KAAK+1F,KAAK,GAAK+iB,EAC9D,CAME,SAAA5Z,GACE,OAAOl/F,KAAKy6F,OAChB,CAQE,SAAA0lI,GACE,OAAOngO,KAAKg9M,OAChB,CAWE,cAAAulB,CAAer2N,EAAWs2N,EAAY7lM,EAAYhhB,EAAY05E,GAC5D,MAAMU,EAAO/1F,KAAK+1F,KAClB,IAAKA,EACH,OAEF,IAAIlV,EACJ,GAAmB,GAAfkV,EAAKl1F,OACPggF,EAAMkV,EAAK,OACN,CAELlV,EAAMkV,EADQz4E,GAAOs5E,GAAc1qF,GAAY6pF,EAAKl1F,QAE1D,CAEI,OAAOs3G,GACLqqH,GAEExiO,KAAKukB,UAAYvkB,KAAKm9F,yBAAyBxhF,IAC/CshB,cAAc/wB,EAAU,IAC1BywB,EACAhhB,EACAklE,EACAwU,EACAr1F,KAAKghO,YAEX,CAQE,iBAAA1jI,CAAkB3gE,GAChB,OAAQ38B,KAAKk7N,aAA+B10N,IAArBxG,KAAKghO,YAAgCrkM,EAAJ,CAC5D,CAME,gBAAA2lM,GACE,IAAI/gO,EAAI,EACR,MAAMsB,EAAM,GACZ,IAAK,MAAMyE,KAAOtH,KAAKg9M,QACrBn6M,EAAItB,KAAO+F,EAAM,IAAMtH,KAAKg9M,QAAQ11M,GAEtC,OAAOzE,EAAIid,KAAK,IACpB,CAME,UAAA4jN,CAAWruI,GACTr1F,KAAKg9M,QAAU3nH,EACfr1F,KAAKujO,aACLvjO,KAAKk9F,OAAOl9F,KAAKsiO,mBACrB,CAOE,SAAAhC,CAAUjrI,GACRr1F,KAAK0jO,WAAWh9N,OAAO2C,OAAO,CAAE,EAAEgsF,GACtC,CAQE,YAAAkrI,CAAalrI,GACXr1F,KAAK0jO,WAAWh9N,OAAO2C,OAAOrJ,KAAKg9M,QAAS3nH,GAChD,CAKE,UAAAkuI,GACE,MAAMx3D,EAAU/rK,KAAKg9M,QAAiB,SAAKhlG,GAC3Ch4G,KAAKsjO,KAAOvjN,GAAgBgsJ,EAAS,QAAU,CACnD,CASE,eAAAhuE,CAAgB7xF,EAAWywB,EAAYhhB,GACrC,IAAI4I,EAAWvkB,KAAKq9F,cAKpB,GAJK94E,IACHA,EAAWvkB,KAAKm9F,yBAAyBxhF,IAGvC4I,EAAS8sB,iBAAiBxwC,QAAUqL,EAAU,GAChD,OAGgB,GAAdywB,GAAqB38B,KAAKk7N,aAA+B10N,IAArBxG,KAAKghO,cAC3CrkM,EAAa,GAGf,MAAMmL,EAAiBvjB,EAAS0Y,cAAc/wB,EAAU,IACxD,IAAIs2N,EAAaj+M,EAAS2tE,mBAAmBhmF,EAAWlM,KAAKwxF,YAE7D,MAAMhE,EAASxtF,KAAKy6F,QACL,IAAXjN,IACFg1I,EAAa5sN,GAAO4sN,EAAY16L,EAAiB0lD,EAAQg1I,IAG3D,MAAM1pH,EAAapyG,OAAO2C,OACxB,CAAE,EACFkvG,GAAiBv4G,KAAKg9M,QAAS,WAGjC,OAAOh9M,KAAKuiO,eACVr2N,EACAs2N,EACA7lM,EACAhhB,EACAm9F,EAEN,GlBsiCAsrE,GAAGr6K,OAAO45N,QvFxrCV,cAAsBhnI,GAIpB,WAAA58F,CAAYuK,GAuCV,GAtCArF,MAAM,CACJ0W,WAAY2X,GAAc,aAC1BnnB,MAAO,UACPuP,WAAyBlV,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,MAC7CshF,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAKkrH,iBACoB1kH,IAAvB8D,EAAQ2gH,YAA2B3gH,EAAQ2gH,WAM7CjrH,KAAK4jO,iBAAmB/sI,GAMxB72F,KAAK6jO,eAAYr9N,EAMjBxG,KAAKqrH,OAAS/gH,EAAQw3E,QAAS,EAM/B9hF,KAAKsiH,WAAa,IAAIlzB,GAAS,KAE3B9kF,EAAQu2E,IACV,GAAI7gF,KAAKqrH,OACPO,GACEthH,EAAQu2E,IACR7gF,KAAKgjO,uBAAuB97N,KAAKlH,MACjCA,KAAKijO,oBAAoB/7N,KAAKlH,WAE3B,CACL,MAAMyiF,EAAS,IAAIxB,eACnBwB,EAAOn9E,iBAAiB,OAAQtF,KAAK6rH,WAAW3kH,KAAKlH,OACrDyiF,EAAOn9E,iBAAiB,QAAStF,KAAK8rH,YAAY5kH,KAAKlH,OACvDyiF,EAAOvB,KAAK,MAAO52E,EAAQu2E,KAC3B4B,EAAOd,MACf,KACW,KAAIr3E,EAAQ44N,SAGjB,MAAM,IAAI76N,MAAM,uDAFhBrI,KAAKgjO,uBAAuB14N,EAAQ44N,SAG1C,CACA,CAME,UAAAr3G,CAAWhmH,GACT,MAAM48E,EAAwC58E,EAAY,OAE1D,IAAK48E,EAAOrB,QAAWqB,EAAOrB,QAAU,KAAOqB,EAAOrB,OAAS,IAAM,CACnE,IAAImB,EACJ,IACEA,EACE1qB,KAAKjE,MAAM6uB,EAAOpB,aAE5B,CAAQ,MAEA,YADArhF,KAAKijO,qBAEb,CACMjjO,KAAKgjO,uBAAuBzgJ,EAClC,MACMviF,KAAKijO,qBAEX,CAME,WAAAn3G,CAAYjmH,GACV7F,KAAKijO,qBACT,CAOE,WAAAa,GACE,OAAO9jO,KAAK6jO,SAChB,CAaE,gCAAAE,CAAiC3tN,EAAY6C,EAAYf,EAAUsgG,GACjE,GAAIx4G,KAAKukB,SAAU,CACjB,MAAMulB,EAAI9pC,KAAKukB,SAASyuE,kBAAkB/5E,EAAYjZ,KAAKg9F,YACrD9wF,EAAYlM,KAAKukB,SAAS2uE,yBAAyB98E,EAAY0zB,GAC/DzC,EACJrnC,KAAKo9F,QACHlxF,EAAU,GACVA,EAAU,GACVA,EAAU,GACV,EACAlM,KAAKszB,iBAGL+T,EAAKz6B,YAAcnB,GACrB47B,EAAKx6B,OAEPw6B,EAAKmkF,oBAAoBp1G,EAAY8B,EAAUsgG,EACrD,MACsB,IAAZA,EACF90E,YAAW,WACTxrB,EAAS,KACV,GAAE,GAEHA,EAAS,KAGjB,CAKE,mBAAA+qN,GACEjjO,KAAKyM,SAAS,QAClB,CAOE,sBAAAu2N,CAAuBE,GACrB,MAAMrX,EAAqBv4L,GAAc,aAEnClF,EAAmBpuB,KAAKszB,gBAC9B,IAAI7d,EACJ,QAA2BjP,IAAvB08N,EAAiB,OAAiB,CACpC,MAAMn2M,EAAYpB,GAChBkgM,EACAz9L,GAEF3Y,EAAS0F,GAAe+nN,EAAiB,OAAGn2M,EAClD,CAEI,MAAMw0F,EAAa3sB,GAAqBxmE,GAClC6d,EAAUi3L,EAAkB,SAAK,EAEjC3+M,EAAWwwE,GAAU,CACzBt/E,OAAQ8rG,EACRxwE,QAHcmyL,EAAkB,SAAK,GAIrCj3L,QAASA,IAEXjsC,KAAKukB,SAAWA,EAEhBvkB,KAAK6jO,UAAYX,EAAmB,SAEpC,MAAMc,EAAQd,EAAgB,MAC9B,GAAKc,EAAL,CAOA,GAFAhkO,KAAK4jO,iBAAmBptI,GAAoBwtI,EAAOz/M,GAE/C2+M,EAAsB,YAAG,CAC3B,MAAME,OAA+B58N,IAAXiP,EAAuBA,EAAS8rG,EAC1DvhH,KAAKy8F,iBAAgB,SAAU/7D,GAC7B,OAAIpmB,GAAW8oN,EAAmB1iM,EAAWjrB,QACpC,CAACytN,EAAsB,aAEzB,IACf,GACA,CAEIljO,KAAKyM,SAAS,QAdlB,MAFMzM,KAAKyM,SAAS,QAiBpB,CAWE,OAAA2wF,CAAQtzD,EAAG/zB,EAAGC,EAAG2mB,EAAYhhB,GAC3B,MAAMzP,EAAY,CAAC49B,EAAG/zB,EAAGC,GACnBspF,EAAet/F,KAAKy9F,+BACxBvxF,EACAyP,GAEI4jF,EAAUv/F,KAAK4jO,iBAAiBtkI,EAAc3iE,EAAYhhB,GAC1D2rB,EAAU,GAAGtnC,KAAK0M,YAAY8jF,GAAU1mD,EAAG/zB,EAAGC,KACpD,GAAIhW,KAAKsiH,WAAWxyB,YAAYxoD,GAC9B,OAAOtnC,KAAKsiH,WAAWr5G,IAAIq+B,GAE7BtnC,KAAKsiH,WAAW1yB,cAChB,MAAMvoD,EAAO,IAAI2jF,GACf9+G,OACY1F,IAAZ+4F,EAAwB9zF,EAAiBA,OAC7BjF,IAAZ+4F,EAAwBA,EAAU,GAClCv/F,KAAKukB,SAAS2tE,mBAAmBhmF,GACjClM,KAAKkrH,YACLlrH,KAAKqrH,QAGP,OADArrH,KAAKsiH,WAAW14G,IAAI09B,EAASD,GACtBA,CACX,GuFi9BA+8I,GAAGr6K,OAAO45N,QAAQ34G,WAAai5G,GAC/B7/C,GAAGr6K,OAAO8zF,QAAUqmI,GACpB9/C,GAAGr6K,OAAOokN,OAASgW,GACnB//C,GAAGr6K,OAAOokN,OAAOvpH,kBAAoBw/H,GACrChgD,GAAGr6K,OAAOs6N,KmB14CV,cAAmB1lI,GAIjB,WAAA5+F,CAAYuK,GAGV,MAAMg6N,OACwB99N,IAA5B8D,EAAQg6N,gBAAgCh6N,EAAQg6N,gBAAkB,MAI9D//M,EAAWja,EAAQia,SAEzB,IAAIwxE,EAAOzrF,EAAQyrF,UACNvvF,IAATuvF,QAAsCvvF,IAAhB8D,EAAQu2E,MAChCkV,EAAOC,GAAU1rF,EAAQu2E,MAG3B57E,MAAM,CACJ+yC,aAAc1tC,EAAQ0tC,aACtBikD,wBAAyB3xF,EAAQ2xF,wBACjC1qC,UAAWjnD,EAAQinD,UACnB9yB,YAAan0B,EAAQm0B,YACrBlyB,YAAajC,EAAQiC,YACrBoP,WAAYrR,EAAQqR,WACpBqjF,2BAA4B10F,EAAQ00F,2BACpCH,UAAWv0F,EAAQu0F,UACnBt6E,SAAUA,EACVma,iBAAkBp0B,EAAQo0B,iBAC1Bm+D,eAAgBvyF,EAAQuyF,eACxB9G,KAAMA,EACNr6E,WAAyBlV,IAAlB8D,EAAQoR,OAAsBpR,EAAQoR,MAC7CrP,WAAY/B,EAAQ+B,WACpB2wF,WAAY1yF,EAAQ0yF,aAOtBh9F,KAAKwmM,cAA+BhgM,IAApB8D,EAAQyhK,QAAwBzhK,EAAQyhK,QAAU,QAMlE/rK,KAAK8kG,aAA6Bt+F,IAAnB8D,EAAQkX,OAAuBlX,EAAQkX,OAAS,aAM/DxhB,KAAKukO,iBACoB/9N,IAAvB8D,EAAQujB,WAA2BvjB,EAAQujB,WAAa,CAAE,EAM5D7tB,KAAK29G,OAASrzG,EAAQkvC,MAMtBx5C,KAAKwkO,WAAal6N,EAAQwpF,UAM1B9zF,KAAKkU,OAAS5J,EAAQwF,MAStB9P,KAAKykO,iBAAmBH,EAExBtkO,KAAKk9F,OAAOl9F,KAAK0kO,wBAEb3uI,GAAQA,EAAKl1F,OAAS,IACxBb,KAAK+9F,gBAAkBpH,GACrBZ,EAAK5kE,IAAInxB,KAAK2kO,uBAAuBz9N,KAAKlH,QAGlD,CAQE,OAAAg+F,CAAQjI,GACN/1F,KAAK+1F,KAAOA,EACZ,MAAMzuF,EAAMyuF,EAAKj2E,KAAK,MACtB9f,KAAK0+F,mBACH/H,GACEZ,EAAK5kE,IAAInxB,KAAK2kO,uBAAuBz9N,KAAKlH,QAE5CsH,EAEN,CASE,aAAAs9N,GACE,OAAO5kO,KAAKukO,WAChB,CAOE,SAAA18H,GACE,OAAO7nG,KAAK8kG,OAChB,CAOE,QAAAmZ,GACE,OAAOj+G,KAAK29G,MAChB,CAOE,YAAAknH,GACE,OAAO7kO,KAAKwkO,UAChB,CAOE,kBAAAM,GACE,OAAO9kO,KAAKykO,gBAChB,CAOE,QAAA5vN,GACE,OAAO7U,KAAKkU,MAChB,CAOE,UAAA6wN,GACE,OAAO/kO,KAAKwmM,QAChB,CAME,oBAAAk+B,GACE,MAAM7hO,EAAM7C,KAAK+1F,KAAO/1F,KAAK+1F,KAAKvyF,MAAM,GAAK,GAC7C,IAAK,MAAM8D,KAAOtH,KAAKukO,YACrB1hO,EAAI8C,KAAK2B,EAAM,IAAMtH,KAAKukO,YAAYj9N,IAExC,OAAOzE,EAAIid,KAAK,IACpB,CAOE,gBAAAklN,CAAiBn3M,GACfnnB,OAAO2C,OAAOrJ,KAAKukO,YAAa12M,GAChC7tB,KAAKk9F,OAAOl9F,KAAK0kO,uBACrB,CAME,sBAAAC,CAAuBljN,GACrB,MAAM6iN,EAAkBtkO,KAAKykO,iBAIvB/0N,EAAU,CACd8pC,MAASx5C,KAAK29G,OACd7tG,MAAS9P,KAAKkU,OACd+wN,cAAiBjlO,KAAKwkO,YAGD,OAAnBF,GACF59N,OAAO2C,OAAOqG,EAAS,CACrBw1N,QAAW,OACXC,QAAW,UACXC,QAAWplO,KAAKwmM,SAChBxlB,OAAUhhL,KAAK8kG,UAQnBrjF,EACqB,OAAnB6iN,EACInvI,GAAa1zE,EAAU/R,GACvB+R,EAASC,QAAQ,eAAe,SAAU1E,EAAG6yC,GAC3C,OAAOA,EAAEriD,gBAAiBkC,EAAUA,EAAQmgD,EAAEriD,eAAiBwP,CAC3E,IAEI,MAAMuH,EACJvkB,KACD,SACK6tB,EAAa7tB,KAAKukO,YAExB,OAAA,SAOYr4N,EAAWywB,EAAYhhB,GAC/B,IAAKzP,EACH,OAEF,MAAMmwG,EAAe,CACnB8lE,WAAc59J,EAASovE,YAAYznF,EAAU,IAC7Cm5N,QAAWn5N,EAAU,GACrBo5N,QAAWp5N,EAAU,IAEvBxF,OAAO2C,OAAOgzG,EAAcxuF,GAC5B,IAAIgzD,EAAMp/D,EAQV,OANEo/D,EADqB,OAAnByjJ,EACInvI,GAAatU,EAAKw7B,GAElBx7B,EAAIn/D,QAAQ,eAAe,SAAU1E,EAAG6yC,GAC5C,OAAO0lC,mBAAmB8mB,EAAaxsD,GACnD,IAEegxB,CAEf,CACA,GnBmoCAujG,GAAGr6K,OAAOs6N,KAAKkB,wBmBtmCR,SAAiCC,EAASj/G,GAC/C,MAAMptE,EAASqsL,EAAkB,SAAS,MACpChqN,EAAI29B,GAAQoR,MAAK,SAAU8pC,GAC/B,OAAOA,EAAgB,YAAKkyB,EAAc,KAC9C,IACE,IAAK/qG,EACH,OAAO,KAET,MAAMiqN,EAAiBD,EAAkB,SAAiB,cAC1D,IAAIjlG,EAGAA,EAFA/kH,EAAqB,kBAAE3a,OAAS,EAC9B,eAAgB0lH,EACZ/qG,EAAqB,kBAAEkqN,WAAU,SAAUrxI,GAC/C,MAGMsxI,EAHgBF,EAAel7K,MAAK,SAAUq7K,GAClD,OAAOA,EAAe,YAAKvxI,EAAmB,aACxD,IACyD,aAC3CkyC,EAAQjzG,GAAcqyM,GACtBl/F,EAAQnzG,GAAcizF,EAAmB,YAC/C,OAAIggB,GAASE,EACJx5G,GAAWs5G,EAAOE,GAEpBk/F,GAAgBp/G,EAAmB,UAClD,IAEY/qG,EAAqB,kBAAEkqN,WAAU,SAAUrxI,GAC/C,OAAOA,EAAmB,eAAKkyB,EAAkB,SACzD,IAGU,EAEJga,EAAM,IACRA,EAAM,GAER,MAAMzsC,EAEHt4E,EAAqB,kBAAE+kH,GAAqB,cACzCxsC,EAEHv4E,EAAqB,kBAAE+kH,GAA2B,oBAErD,IAAI/+G,EAAgChG,EAAU,OAAE,GAC5C,WAAY+qG,IACd/kG,EAAS+kG,EAAe,QAE1Bga,EAAM/kH,EAAS,MAAEkqN,WAAU,SAAUrxI,GACnC,MAAI,UAAWkyB,EACNlyB,EAAW,OAAKkyB,EAAc,MAEhClyB,EAAe,SAC1B,IACMksC,EAAM,IACRA,EAAM,GAER,MAAMzwH,EAA+B0L,EAAS,MAAE+kH,GAAkB,WAE5D1yG,EAAa,CAAE,EACjB,cAAerS,GACjBA,EAAa,UAAE1Q,SAAQ,SAAUupF,EAAKzxF,EAAOyH,GAC3C,MAAM/C,EAAM+sF,EAAgB,WAC5B,IAAItwF,EAAQswF,EAAa,aACX7tF,IAAVzC,IACFA,EAAQswF,EAAW,MAAE,IAEvBxmE,EAAWvmB,GAAOvD,CACxB,IAGE,MACM8hO,EADaL,EAAkB,SAAiB,cACtBj7K,MAAK,SAAU8pC,GAC7C,OAAOA,EAAgB,YAAKP,CAChC,IAEE,IAAIn4E,EACJ,MAAMoH,EAAO8iN,EAA2B,aAIxC,GAHI9iN,IACFpH,EAAa2X,GAAcvQ,IAEzB,eAAgBwjG,EAAQ,CAC1B,MAAMu/G,EAAaxyM,GAAcizF,EAAmB,YAChDu/G,IACGnqN,IAAcsR,GAAW64M,EAAYnqN,KACxCA,EAAamqN,GAGrB,CAEE,IAAIpqN,GAAQ,EACZ,MAAMqqN,EAAWpqN,EAAWuI,qBAAqB2Q,WAAW,MAE5D,IAAIy3E,EAASu5H,EAAa1jD,WAAW,GAGjC6jD,EAAsB,CACxB1jD,WAAY,EACZF,WAAY,EAEZG,WAAYj2E,EAAO42E,YAAc,EACjCb,WAAY/1E,EAAO62E,aAAe,GAIpC,GAAIpvF,EAAc,CAChBiyI,EAAsBjyI,EAAaA,EAAalzF,OAAS,GACzD,MAAMmc,EAAI6oN,EAAa1jD,WAAW53H,MAC/B07K,GACCA,EAAgBrkD,aAAeokD,EAAoB7jD,YACnD0jD,EAAajkD,WAAa,IAAMqkD,EAAgBrkD,aAC9CokD,EAAoB7jD,aAEtBnlK,IACFsvF,EAAStvF,EAEf,CAEE,MAAM/D,EACuB,MAA1BqzF,EAAOy2E,iBAA8BpnK,EAAWqI,mBAC7CgtE,EAAS+0I,EACX,CAACz5H,EAAOw2E,cAAc,GAAIx2E,EAAOw2E,cAAc,IAC/Cx2E,EAAOw2E,cACLojD,EAAY55H,EAAO02E,UAAY/pK,EAC/BktN,EAAY75H,EAAO22E,WAAahqK,EACtC,IAAImtN,EAAkBP,EAA0B,YAC5CO,GAAmBL,IACrBK,EAAkB,CAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,KAGpB,IAAI3wN,EAAS,CACXu7E,EAAO,GAAKk1I,EAAYF,EAAoB1jD,WAE5CtxF,EAAO,GAAKm1I,GAAa,EAAIH,EAAoB3jD,YACjDrxF,EAAO,GAAKk1I,GAAa,EAAIF,EAAoBzjD,YACjDvxF,EAAO,GAAKm1I,EAAYH,EAAoB5jD,YAG9C,QACsB57K,IAApB4/N,IACC9vN,GAAe8vN,EAAiB3wN,GACjC,CACA,MAAM4wN,EAAmB7qN,EAAoB,iBACvC8qN,EAAwBhzM,GAAc,aAAazX,YAEzD,GADApG,EAAS2wN,EACLC,EACF3qN,EACE2qN,EAAiB,KAAOC,EAAsB,IAC9CD,EAAiB,KAAOC,EAAsB,OAC3C,CACL,MAAMC,EAAuBx4M,GAC3Bq4M,EACAP,EAA2B,aAC3B,aAGFnqN,EACE6qN,EAAqB,GAAK,OAASD,EAAsB,IACzDC,EAAqB,GAAK,OAASD,EAAsB,EACjE,CACA,CAEE,MAAM/hN,EAAWsvE,GACfgyI,EACApwN,EACAs+E,GAIIgC,EAAO,GACb,IAAIuuI,EAAkB/9G,EAAwB,gBAG9C,GAFA+9G,OAAsC99N,IAApB89N,EAAgCA,EAAkB,GAGlE,uBAAwBkB,GACxB,YAAaA,EAA4B,mBACzC,CACA,MAAMgB,EAAOhB,EAA4B,mBAAW,QAAO,IAAQ,KAAO,IAE1E,IAAK,IAAIjkO,EAAI,EAAG4E,EAAKqgO,EAAK3lO,OAAQU,EAAI4E,IAAM5E,EAC1C,GAAIilO,EAAKjlO,GAAe,WAAG,CACzB,MAGMklO,EAHaD,EAAKjlO,GAAe,WAAEgpD,MAAK,SAAUpgD,GACtD,MAA0B,eAAnBA,EAAc,IAC/B,IACoD,cAAS,MAMrD,GAJwB,KAApBm6N,IAEFA,EAAkBmC,EAAU,IAEN,QAApBnC,EAKF,MAJImC,EAAU/gO,SAAS,QACrBqwF,EAAKpwF,KAA4B6gO,EAAKjlO,GAAU,KAKrD,MAAUilO,EAAKjlO,GAAS,OACvB+iO,EAAkB,MAClBvuI,EAAKpwF,KAA4B6gO,EAAKjlO,GAAU,MAGxD,CAWE,OAVoB,IAAhBw0F,EAAKl1F,SACPyjO,EAAkB,OAClB9oN,EAAe,YAAE1Q,SAAQ,SAAUX,GACD,SAA5BA,EAAsB,eACxBqX,EAASrX,EAAgB,OACzB4rF,EAAKpwF,KAA4BwE,EAAmB,UAE5D,KAGS,CACL4rF,KAAMA,EACNv8C,MAAO+sE,EAAc,MACrBzyB,UAAWA,EACXtyE,OAAQA,EACR7F,WAAYA,EACZ2oN,gBAAiBA,EACjB//M,SAAUA,EACVzU,MAAOA,EACP+d,WAAYA,EACZnS,MAAOA,EACP+iB,YAAa8nF,EAAoB,YAErC,EnBm4BA69D,GAAGr6K,OAAOk2F,IAAMymI,GAChBtiD,GAAGr6K,OAAO48N,WAAa,CAAE,EACzBviD,GAAGr6K,OAAO48N,WAAW1vH,aAAe2vH,GACpCxiD,GAAGr6K,OAAO48N,WAAW7vH,cAAgB+vH,GACrCziD,GAAGr6K,OAAO6vN,OAAS,CAAE,EACrBx1C,GAAGr6K,OAAO6vN,OAAOkN,S3Gx8CO,E2Gy8CxB1iD,GAAGr6K,OAAO6vN,OAAOmN,oB3G/8CkB,Q2Gg9CnC3iD,GAAGr6K,OAAOi9N,UAAY,CAAE,EACxB5iD,GAAGr6K,OAAOi9N,UAAU/vH,aoB95Cb,SAAsB3sG,GAC3B,MAAMuC,EAAOvC,EAAQuC,MAAQyB,GACvBy6B,EAAQz+B,EAAQy+B,OAAS,EACzBtK,EAAcn0B,EAAQm0B,aAAe,KAG3C,OAAO,SAAUhpB,EAAQwD,EAAY0jB,GACnC,MAAMtqB,EAAQ,IAAIhE,MAClBgE,EAAMosB,YAAcA,EAEpB,MAAM3vB,EAAQ4J,GADdjD,EAASihG,GAAiBjhG,EAAQwD,EAAY0jB,EAAYoM,IACzB9vB,EAC3BlK,EAAS4J,GAAUlD,GAAUwD,EAC7BjG,EAAO,CAAClE,EAAQ6tB,EAAY5tB,EAAS4tB,GACrCoB,EAzCV,SAAgBg5E,EAAS1hB,EAAQ5/E,EAAQzC,GACvC,MAAMlE,EAAQlD,KAAK+R,MAAM3K,EAAK,IACxBjE,EAASnD,KAAK+R,MAAM3K,EAAK,IACzBktE,EAAU,GAAGpxE,KAASC,IACtBk4N,EAAS,GAAGxxN,EAAO,MAAMA,EAAO,MAAMA,EAAO,MAAMA,EAAO,KAE1DqjG,EAAa,CACjBw8F,KAAM,MACN4xB,cAAe,MACfC,OAAQF,EACRG,OAAQH,EACRI,SAAUnnJ,EACVonJ,KAAMx4N,EAAQ,EACdy4N,KAAMx4N,EAAS,EACfy4N,MAAOtnJ,GAGT,OADAx5E,OAAO2C,OAAOyvG,EAAYzjB,GACnBF,GAAa4hB,EAAS+B,EAC/B,CAuBgB/Q,CAAOz9F,EAAQu2E,IAAKv2E,EAAQ+qF,OAAQ5/E,EAAQzC,GACxD,OAAOnG,EAAKwF,EAAO0rB,GAAKxqB,MAAMlB,IAAK,CAAOA,QAAOoD,SAAQknB,gBAC1D,CACH,EpB+4CAynJ,GAAGr6K,OAAO09N,YAAc,CAAE,EAC1BrjD,GAAGr6K,OAAO09N,YAAYpuH,4BAA8BquH,GACpDtjD,GAAGr6K,OAAO09N,YAAY3tH,sBAAwB6tH,GAC9CvjD,GAAGr6K,OAAO09N,YAAYjrH,eAAiBorH,GACvCxjD,GAAGr6K,OAAO09N,YAAYrtH,yBAA2BytH,GACjDzjD,GAAGr6K,OAAO+9N,oBqBt6CH,SAA6BvjN,EAAU+/I,GAC5C,MAAMyjE,EAAc,IAAI34I,GAAS,IAC3B44I,EAAiBzjN,EAAS1I,YAChC,OAAO,SAAUpG,EAAQwD,GACvB8uN,EAAYn4I,cACRo4I,IACFvyN,EAAS2E,GAAgB4tN,EAAgBvyN,IAE3C,MAAMq0B,EAAIvlB,EAASyuE,kBAAkB/5E,GAC/BgvN,EAAgB,GAStB,OARA1jN,EAASstE,iBAAiBp8E,EAAQq0B,GAAI59B,IACpC,MAAM5E,EAAM4E,EAAU6kB,WACtB,IAAKg3M,EAAYj4I,YAAYxoF,GAAM,CACjC,MAAMyC,EAASu6J,EAAQp4J,GACvB67N,EAAYn+N,IAAItC,EAAKyC,EAC7B,CACMk+N,EAActiO,KAAKoiO,EAAY9+N,IAAI3B,GAAK,IAEnC2gO,CACR,CACH,ErBm5CA7jD,GAAGr6K,OAAOm+N,OAAS,CAAE,EACrB9jD,GAAGr6K,OAAOm+N,OAAOjxH,aAAekxH,GAChC/jD,GAAGr6K,OAAOq+N,IAAM,CAAE,EAClBhkD,GAAGr6K,OAAOq+N,IAAIpwH,gBAAkBqwH,GAChCjkD,GAAGr6K,OAAOq+N,IAAInxH,aAAeqxH,GAC7BlkD,GAAGr6K,OAAOq+N,IAAIxvH,kBAAoB2vH,GAClCnkD,GAAGr6K,OAAOq+N,IAAIjwH,YAAcqwH,GAC5BpkD,GAAGr6K,OAAOq+N,IAAInvH,aAAewvH,GAC7BrkD,GAAGr6K,OAAOq+N,IAAI7vH,iBAAmBmwH,GACjCtkD,GAAGr6K,OAAOq+N,IAAItxH,cAAgB6xH,GAC9BvkD,GAAGwkD,OAAS,CAAE,EACdxkD,GAAGwkD,OAAO7qN,eAAiB8qN,GAC3BzkD,GAAGwkD,OAAOpwN,QnQ3zCH,SAASA,EAAQlE,EAAUhK,GAEhC,MAAM6T,GADN7T,EAAUA,GAAW,CAAE,GACA6T,QAAUJ,GAC3BpC,EAAarR,EAAQqR,YAAc,YACnCjX,EAAO4P,EAAS8e,UACT,uBAAT1uB,IACF4P,EAAWA,EAASG,QAAQsY,UAAUpR,EAAY,cAEpD,IACInG,EAAai9B,EAAQlxC,EAAG4E,EAAI0W,EAAG6P,EAD/BjU,EAAO,EAEX,OAAQ/T,GACN,IAAK,QACL,IAAK,aACL,IAAK,aACL,IAAK,kBACL,IAAK,aACH,MAEF,IAAK,UAKH,IAJA8Q,EAAiE,EAE/Due,iBACFtb,EAAO7M,KAAK8L,IAAIiH,GAAgBnJ,EAAY,GAAI2I,IAC3C5c,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EAC7CkX,GAAQ7M,KAAK8L,IAAIiH,GAAgBnJ,EAAYjU,GAAI4c,IAEnD,MAEF,IAAK,eAIH,IAHA3I,EAAwE,EAEtEue,iBACGxyB,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EAG7C,IAFAkxC,EAASj9B,EAAYjU,GACrBkX,GAAQ7M,KAAK8L,IAAIiH,GAAgB8zB,EAAO,GAAIt0B,IACvCtB,EAAI,EAAG6P,EAAK+lB,EAAO5xC,OAAQgc,EAAI6P,IAAM7P,EACxCpE,GAAQ7M,KAAK8L,IAAIiH,GAAgB8zB,EAAO51B,GAAIsB,IAGhD,MAEF,IAAK,qBAAsB,CACzB,MAAMupE,EAC0D,EAE5D5uB,gBACJ,IAAKv3D,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAC5CkX,GAAQD,EAAQkvE,EAAWnmF,GAAI+I,GAEjC,KACN,CACI,QACE,MAAM,IAAIjC,MAAM,8BAAgC3D,GAGpD,OAAO+T,CACT,EmQowCA2rK,GAAGwkD,OAAO5qN,YAAc8qN,GACxB1kD,GAAGwkD,OAAOh+N,UnQp6CH,SAASA,EAAU0J,EAAUhK,GAElC,MAAM6T,GADN7T,EAAUA,GAAW,CAAE,GACA6T,QAAUJ,GAC3BpC,EAAarR,EAAQqR,YAAc,YACnCjX,EAAO4P,EAAS8e,UACT,uBAAT1uB,IACF4P,EAAWA,EAASG,QAAQsY,UAAUpR,EAAY,cAEpD,IACInG,EAAai9B,EAAQlxC,EAAG4E,EAAI0W,EAAG6P,EAD/B7rB,EAAS,EAEb,OAAQ6D,GACN,IAAK,QACL,IAAK,aACH,MAEF,IAAK,aACL,IAAK,aACH8Q,EAAwE,EAEtEue,iBACFlzB,EAAS6d,GAAkBlJ,EAAa2I,GACxC,MAEF,IAAK,kBACL,IAAK,UAIH,IAHA3I,EAAwE,EAEtEue,iBACGxyB,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EAC7CV,GAAU6d,GAAkBlJ,EAAYjU,GAAI4c,GAE9C,MAEF,IAAK,eAIH,IAHA3I,EAAwE,EAEtEue,iBACGxyB,EAAI,EAAG4E,EAAKqP,EAAY3U,OAAQU,EAAI4E,IAAM5E,EAE7C,IADAkxC,EAASj9B,EAAYjU,GAChBsb,EAAI,EAAG6P,EAAK+lB,EAAO5xC,OAAQgc,EAAI6P,IAAM7P,EACxChc,GAAU6d,GAAkB+zB,EAAO51B,GAAIsB,GAG3C,MAEF,IAAK,qBAAsB,CACzB,MAAMupE,EAC0D,EAE5D5uB,gBACJ,IAAKv3D,EAAI,EAAG4E,EAAKuhF,EAAW7mF,OAAQU,EAAI4E,IAAM5E,EAC5CV,GAAU+J,EAAU88E,EAAWnmF,GAAI+I,GAErC,KACN,CACI,QACE,MAAM,IAAIjC,MAAM,8BAAgC3D,GAGpD,OAAO7D,CACT,EmQy2CAujL,GAAGwkD,OAAOvxN,OAAS0xN,GACnB3kD,GAAGtwC,OAAS,CAAE,EACdswC,GAAGtwC,OAAO/zH,gBAAkBipN,GAC5B5kD,GAAGtwC,OAAOr0H,UAAYwpN,GACtB7kD,GAAG8kD,QAAU,CAAE,EACf9kD,GAAG8kD,QAAQ95I,SAAW+5I,GACtB/kD,GAAG8kD,QAAQrkM,cAAgBukM,GAC3BhlD,GAAG8kD,QAAQrkM,cAAcD,KAAOykM,GAChCjlD,GAAG8kD,QAAQh1J,MAAQo1J,GACnBllD,GAAGt0K,MAAQ,CAAE,EACbs0K,GAAGt0K,MAAMiiE,OAASw3J,GAClBnlD,GAAGt0K,MAAMu2D,KAAOmjK,GAChBplD,GAAGt0K,MAAMg3D,KAAO2iK,GAChBrlD,GAAGt0K,MAAMksD,UAAY0tK,GACrBtlD,GAAGt0K,MAAMksD,UAAU/yD,IAAM0gO,GACzBvlD,GAAGt0K,MAAMgrD,eAAiB8uK,GAC1BxlD,GAAGt0K,MAAMgrD,eAAeQ,YAAcuuK,GACtCzlD,GAAGt0K,MAAMgrD,eAAegB,OAASguK,GACjC1lD,GAAGt0K,MAAMzB,MAAQ07N,GACjB3lD,GAAGt0K,MAAM+yD,aAAemnK,GACxB5lD,GAAGt0K,MAAMi4D,OAASkiK,GAClB7lD,GAAGt0K,MAAM64D,MAAQuhK,GACjB9lD,GAAGt0K,MAAM64D,MAAMkB,mBAAqBsgK,GACpC/lD,GAAGt0K,MAAM64D,MAAMmB,mBAAqBsgK,GACpChmD,GAAGt0K,MAAM64D,MAAMe,WAAa2gK,GAC5BjmD,GAAGt0K,MAAMm6D,KAAOqgK,GAChBlmD,GAAGt0K,MAAMupH,KAAO,CAAE,EAClB+qD,GAAGt0K,MAAMupH,KAAKxvD,mBAAqB0gK,GACnCnmD,GAAGomD,UAAY,CAAE,EACjBpmD,GAAGomD,UAAUxzN,eAAiByzN,GAC9BrmD,GAAGomD,UAAUE,Q9I58CN,SAAiBpjO,GACtB,OAAOA,EAAI6Y,MAAM,KAAKgR,IAAI0B,OAC5B,E8I28CAuxJ,GAAGomD,UAAUG,sB9I19CN,SAA+BrjM,GACpC,MAAOwC,EAAG/zB,EAAGC,GAAKsxB,EACfpW,UAAUoW,EAAQ48F,YAAY,KAAO,EAAG58F,EAAQzmC,QAChDsf,MAAM,KACNgR,IAAI0B,QACP,OAAO29D,GAAU1mD,EAAG/zB,EAAGC,EACzB,E8Iq9CAouK,GAAGomD,UAAU99N,O9Ip+CN,SAAgBR,GACrB,OAAOskF,GAAUtkF,EAAU,GAAIA,EAAU,GAAIA,EAAU,GACzD,E8Im+CAk4K,GAAGomD,UAAUh6I,UAAYo6I,GACzBxmD,GAAGomD,UAAU/5I,KAAOo6I,GACpBzmD,GAAGomD,UAAU95I,QAAUo6I,GACvB1mD,GAAGomD,UAAU75I,iBAAmBo6I,GAChC3mD,GAAGzkF,SAAW,CAAE,EAChBykF,GAAGzkF,SAAS7O,SAAWk6I,GACvB5mD,GAAGzkF,SAAS0kI,KAAO4G,GACnB7mD,GAAGzkF,SAAS0kI,KAAKxwI,gCAAkCq3I,GACnD9mD,GAAGzkF,SAASi6H,OAAS,CAAE,EACvBx1C,GAAGzkF,SAASi6H,OAAOuR,iBjNjhDa,GiNkhDhC/mD,GAAGzkF,SAASi6H,OAAOpvL,kBAAoB4gM,GACvChnD,GAAGzkF,SAAS9K,gBAAkBw2I,GAC9BjnD,GAAGzkF,SAAShL,oBAAsB22I,GAClClnD,GAAGzkF,SAAS5K,UAAYw2I,GACxBnnD,GAAGzkF,SAAS/K,qBAAuB42I,GACnCpnD,GAAGzkF,SAASjL,iBAAmB+2I,GAC/BrnD,GAAGzkF,SAASjkF,MAAQgwN,GACpBtnD,GAAGunD,gBAAkB,CAAE,EACvBvnD,GAAGunD,gBAAgBp1I,mBAAqBq1I,GACxCxnD,GAAGunD,gBAAgBn1I,oBAAsBq1I,GACzCznD,GAAGunD,gBAAgBh1I,2BAA6Bm1I,GAChD1nD,GAAGunD,gBAAgB90I,oBAAsBk1I,GACzC3nD,GAAGr3J,UAAY,CAAE,EACjBq3J,GAAGr3J,UAAUnpB,MAAQooO,GACrB5nD,GAAGr3J,UAAUqD,QAAU67M,GACvB7nD,GAAGr3J,UAAUm/M,oBvPj1CN,SAA6B77M,EAAKC,EAAKC,EAAIC,EAAI1O,EAAO2O,EAAKC,GAChE,OAAOK,GAASX,GAtLT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAsLWC,EAAKC,EAAKC,EAAIC,EAAI1O,EAAO2O,EAAKC,GAClE,EuPg1CA0zJ,GAAGr3J,UAAUsC,OAAS88M,GACtB/nD,GAAGr3J,UAAU8D,YAAcu7M,GAC3BhoD,GAAGr3J,UAAUE,WAAao/M,GAC1BjoD,GAAGr3J,UAAUu/M,OvP50CN,SAAgBviO,GACrB,OAAO4mB,GAAY5mB,EAAQA,EAC7B,EuP20CAq6K,GAAGr3J,UAAU4D,YAAc47M,GAC3BnoD,GAAGr3J,UAAUy/M,UvP74CN,SAAmBprO,EAAQ2U,EAAGC,GACnC,OAAOpM,GAAIxI,EAAQ2U,EAAG,EAAG,EAAGC,EAAG,EAAG,EACpC,EuP44CAouK,GAAGr3J,UAAUuC,SAAWm9M,GACxBroD,GAAGr3J,UAAU+lH,MvPtgDN,SAAe/lH,GACpB,OAAOnjB,GAAImjB,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EACvC,EuPqgDAq3J,GAAGr3J,UAAUlL,OvPx6CN,SAAgBkL,EAAWjL,GAChC,MAAMjI,EAAMjO,KAAKiO,IAAIiI,GACf/H,EAAMnO,KAAKmO,IAAI+H,GACrB,OAAOwN,GAASvC,EAAWnjB,GAAIwlB,GAAMvV,EAAKE,GAAMA,EAAKF,EAAK,EAAG,GAC/D,EuPq6CAuqK,GAAGr3J,UAAU9K,MAAQyqN,GACrBtoD,GAAGr3J,UAAUnjB,IAAM+iO,GACnBvoD,GAAGr3J,UAAUmD,aAAe08M,GAC5BxoD,GAAGr3J,UAAUgE,SAAW87M,GACxBzoD,GAAGr3J,UAAUoD,UAAY28M,GACzB1oD,GAAGhvF,IAAM,CAAE,EACXgvF,GAAGhvF,IAAID,aAAe43I,GACtB3oD,GAAGhvF,IAAIY,UAAYg3I,GACnB5oD,GAAGhvF,IAAIU,QAAUm3I,GACjB7oD,GAAGhvF,IAAIS,kBAAoBq3I,GAC3B9oD,GAAG+oD,KAAO,CAAE,EACZ/oD,GAAG+oD,KAAKz0H,QjR3hDe,SiR4hDvB0rE,GAAG+oD,KAAK/kO,SAAWglO,EACnBhpD,GAAG+oD,KAAK5kO,OAAS8kO,EACjBjpD,GAAGkpD,IAAM,CAAE,EACXlpD,GAAGkpD,IAAIvkI,KAAO,CAAE,EAChBq7E,GAAGkpD,IAAIvkI,KAAK15E,OAASk+M,GACrBnpD,GAAGkpD,IAAIvkI,KAAKD,cAAgB0kI,GAC5BppD,GAAGkpD,IAAIvkI,KAAKC,aAAeykI,GAC3BrpD,GAAGkpD,IAAIvkI,KAAK9mF,MAAQyrN,GACpBtpD,GAAGkpD,IAAIvkI,KAAK54E,UAAYw9M,GACxBvpD,GAAGkpD,IAAIvkI,KAAKoB,YAAcyjI,GAC1BxpD,GAAGp3D,IAAM,CAAE,EACXo3D,GAAGp3D,IAAIuB,6BAA+Bs/G,GACtCzpD,GAAGp3D,IAAIjB,wBAA0B+hH,GACjC1pD,GAAGp3D,IAAIhB,gBAAkB+hH,GACzB3pD,GAAGp3D,IAAIZ,kBAAoB4hH,GAC3B5pD,GAAGp3D,IAAIV,mBAAqB2hH,GAC5B7pD,GAAGp3D,IAAID,eAAiBmhH,GACxB9pD,GAAGp3D,IAAIb,YAAcgiH,GACrB/pD,GAAGp3D,IAAIsC,iBAAmB8+G,GAC1BhqD,GAAGp3D,IAAIF,WAAauhH,GACpBjqD,GAAGp3D,IAAIG,kBAAoBmhH,GAC3BlqD,GAAGp3D,IAAIM,gBAAkBihH,GACzBnqD,GAAGp3D,IAAIa,oBAAsB2gH,GAC7BpqD,GAAGp3D,IAAIW,kBAAoB8gH,GAC3BrqD,GAAGp3D,IAAIQ,yBAA2BkhH,GAClCtqD,GAAGp3D,IAAIU,yBAA2BihH,GAClCvqD,GAAGp3D,IAAIO,aAAeqhH,GACtBxqD,GAAGp3D,IAAIwB,aAAeqgH,GACtBzqD,GAAGp3D,IAAIiB,sBAAwB6gH,GAC/B1qD,GAAGp3D,IAAI2B,gBAAkBogH,GACzB3qD,GAAGp3D,IAAIp5D,MAAQo7K,GACf5qD,GAAGp3D,IAAI+B,UAAYkgH,GACnB7qD,GAAGp3D,IAAIkC,gBAAkBggH,GACzB9qD,GAAGp3D,IAAImC,oBAAsBggH,GAC7B/qD,GAAGp3D,IAAIoiH,iBtF/jCA,SAA0BhgO,GAC/BigH,GAAYjgH,CACd,EsF8jCAg1K,GAAGp3D,IAAIqiH,sBtFvlCA,SAA+BC,GACpClgH,GAAiBkgH,CACnB,EsFslCAlrD,GAAGp3D,IAAIkB,UAAYqhH,GAEnBnrD,GAAG1rE,QAAU0rE,GAAG+oD,KAAKz0H,QAErB0rE,GAAG77K,OAAS67K,GAAG+oD,KAAK5kO","x_google_ignoreList":[105,106,261]}