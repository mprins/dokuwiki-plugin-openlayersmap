{"version":3,"file":"ol.js","sources":["../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/console.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/layer/Layer.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/size.js","../ol/style/Image.js","../../node_modules/color-space/rgb.js","../../node_modules/color-space/xyz.js","../../node_modules/color-space/luv.js","../../node_modules/color-space/lchuv.js","../../node_modules/color-name/index.js","../../node_modules/color-parse/index.js","../../node_modules/color-space/hsl.js","../../node_modules/color-rgba/index.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/style/IconImage.js","../ol/colorlike.js","../ol/css.js","../ol/render/canvas.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Icon.js","../ol/style/Text.js","../ol/expr/expression.js","../ol/expr/cpu.js","../ol/render/canvas/style.js","../ol/layer/BaseVector.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/Key.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/Map.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/resolution.js","../ol/reproj/common.js","../ol/reproj/Triangulation.js","../ol/reproj/Tile.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid/WMTS.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../ol/structs/RBush.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/flat/length.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/source/Cluster.js","../ol/reproj/DataTile.js","../ol/source/DataTile.js","../ol/source/Google.js","../ol/reproj/Image.js","../ol/source/common.js","../ol/source/Image.js","../ol/uri.js","../ol/source/arcgisRest.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/static.js","../ol/source/ImageStatic.js","../ol/source/wms.js","../ol/source/ImageWMS.js","../ol/source/ogcTileUtil.js","../ol/source/OGCMapTile.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/Layer.js","../ol/render/canvas/ZIndexContext.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/StadiaMaps.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/UTFGrid.js","../ol/source/WMTS.js","../ol/xml.js","../ol/vec/mat4.js","../ol/style/flat.js","../ol/structs/LinkedList.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/linechunk.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/proj/proj4.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/webgl/Helper.js","../ol/renderer/webgl/Layer.js","../ol/webgl/RenderTarget.js","../ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../ol/render/webgl/utils.js","../ol/renderer/webgl/PointsLayer.js","../ol/worker/webgl.js","../ol/renderer/webgl/worldUtil.js","../ol/webgl/PaletteTexture.js","../ol/renderer/webgl/TileLayer.js","../ol/renderer/webgl/TileLayerBase.js","../ol/expr/gpu.js","../ol/webgl/ShaderBuilder.js","../ol/layer/Heatmap.js","../ol/layer/VectorImage.js","../ol/interaction/DblClickDragZoom.js","../ol/interaction/DragAndDrop.js","../ol/interaction/DragRotateAndZoom.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/events/SnapEvent.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/Feature.js","../ol/format/XMLFeature.js","../ol/format/xsd.js","../ol/format/GPX.js","../ol/format/JSONFeature.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/GMLBase.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML32.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/WFS.js","../ol/format/filter.js","../ol/format/WMSGetFeatureInfo.js","../ol/format/WMTSCapabilities.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/control/ZoomToExtent.js","../ol/dist/ol.js","../ol/geom/flat/topology.js","../ol/source.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection,\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions(),\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude,\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy,\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading),\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: ['coalesce',['get','propertynanme'],'default value']]\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml',\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source),\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform,\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio,\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection,\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform,\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n      const srcWidth = getWidth(src.extent) * stitchScale;\n      const srcHeight = getHeight(src.extent) * stitchScale;\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_,\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {boolean} [placeholderTiles] Whether to show BingMaps placeholder tiles when zoomed past the maximum level provided in an area. When `false`, requests beyond\n * the maximum zoom level will return no tile. When `true`, the placeholder tile will be returned. When not set, the default behaviour of the imagery set takes place,\n * which is unique for each imagery set in BingMaps.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.placeholderTiles_ = options.placeholderTiles;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    const placeholderTiles = this.placeholderTiles_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord,\n            );\n            const url = new URL(\n              imageUrl.replace('{quadkey}', quadKey(quadKeyTileCoord)),\n            );\n            const params = url.searchParams;\n            if (hidpi) {\n              params.set('dpi', 'd1');\n              params.set('device', 'mobile');\n            }\n            if (placeholderTiles === true) {\n              params.delete('n');\n            } else if (placeholderTiles === false) {\n              params.set('n', 'z');\n            }\n            return url.toString();\n          }\n        );\n      }),\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection(),\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection,\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z,\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_),\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries',\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_,\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false,\n          false,\n          true,\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height,\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height,\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this,\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1],\n        );\n      }),\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj,\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions,\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions,\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/source/Google\n */\n\nimport TileImage from './TileImage.js';\nimport ViewHint from '../ViewHint.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getBottomLeft, getTopRight} from '../extent.js';\nimport {toLonLat} from '../proj.js';\n\nconst createSessionUrl = 'https://tile.googleapis.com/v1/createSession';\nconst tileUrl = 'https://tile.googleapis.com/v1/2dtiles';\nconst attributionUrl = 'https://tile.googleapis.com/tile/v1/viewport';\nconst maxZoom = 22;\n\n/**\n * @typedef {Object} Options\n * @property {string} key Google Map Tiles API key. Get yours at https://developers.google.com/maps/documentation/tile/get-api-key.\n * @property {string} [mapType='roadmap'] The type of [base map](https://developers.google.com/maps/documentation/tile/session_tokens#required_fields).\n * @property {string} [language='en-US'] An [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) for information displayed on the tiles.\n * @property {string} [region='US'] A [Common Locale Data Repository](https://cldr.unicode.org/) (CLDR) region identifier that represents the user location.\n * @property {string} [imageFormat] The image format used for the map tiles (e.g. `'jpeg'`, or `'png'`).\n * @property {string} [scale] Scale for map elements (`'scaleFactor1x'`, `'scaleFactor2x'`, or `'scaleFactor4x'`).\n * @property {boolean} [highDpi=false] Use high-resolution tiles.\n * @property {Array<string>} [layerTypes] The layer types added to the map (e.g. `'layerRoadmap'`, `'layerStreetview'`, or `'layerTraffic'`).\n * @property {boolean} [overlay=false] Display only the `layerTypes` and not the underlying `mapType` (only works if `layerTypes` is provided).\n * @property {Array<Object>} [styles] [Custom styles](https://developers.google.com/maps/documentation/tile/style-reference) applied to the map.\n * @property {boolean} [attributionsCollapsible=true] Allow the attributions to be collapsed.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} SessionTokenRequest\n * @property {string} mapType The map type.\n * @property {string} language The language.\n * @property {string} region The region.\n * @property {string} [imageFormat] The image format.\n * @property {string} [scale] The scale.\n * @property {boolean} [highDpi] Use high resolution tiles.\n * @property {Array<string>} [layerTypes] The layer types.\n * @property {boolean} [overlay] The overlay.\n * @property {Array<Object>} [styles] The styles.\n */\n\n/**\n * @typedef {Object} SessionTokenResponse\n * @property {string} session The session token.\n * @property {string} expiry The session token expiry (seconds since the epoch as a string).\n * @property {number} tileWidth The tile width.\n * @property {number} tileHeight The tile height.\n * @property {string} imageFormat The image format.\n */\n\n/**\n * @classdesc\n * A tile layer source that renders tiles from the Google [Map Tiles API](https://developers.google.com/maps/documentation/tile/overview).\n * The constructor takes options that are passed to the request to create a session token.  Refer to the\n * [documentation](https://developers.google.com/maps/documentation/tile/session_tokens#required_fields)\n * for additional details.\n * @api\n */\nclass Google extends TileImage {\n  /**\n   * @param {Options} options Google Maps options.\n   */\n  constructor(options) {\n    const highDpi = !!options.highDpi;\n    const opaque = !(options.overlay === true);\n\n    super({\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: opaque,\n      projection: 'EPSG:3857',\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: highDpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @type {Error|null}\n     */\n    this.error_ = null;\n\n    /**\n     * @type {SessionTokenRequest}\n     */\n    const sessionTokenRequest = {\n      mapType: options.mapType || 'roadmap',\n      language: options.language || 'en-US',\n      region: options.region || 'US',\n    };\n    if (options.imageFormat) {\n      sessionTokenRequest.imageFormat = options.imageFormat;\n    }\n    if (options.scale) {\n      sessionTokenRequest.scale = options.scale;\n    }\n    if (highDpi) {\n      sessionTokenRequest.highDpi = true;\n    }\n    if (options.layerTypes) {\n      sessionTokenRequest.layerTypes = options.layerTypes;\n    }\n    if (options.styles) {\n      sessionTokenRequest.styles = options.styles;\n    }\n    if (options.overlay === true) {\n      sessionTokenRequest.overlay = true;\n    }\n\n    /**\n     * @type {SessionTokenRequest}\n     * @private\n     */\n    this.sessionTokenRequest_ = sessionTokenRequest;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.sessionTokenValue_;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.sessionRefreshId_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousViewportAttribution_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousViewportExtent_;\n\n    this.createSession_();\n  }\n\n  /**\n   * @return {Error|null} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * source.on('change', () => {\n   *   if (source.getState() === 'error') {\n   *     console.error(source.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Exposed here so it can be overridden in the tests.\n   * @param {string} url The URL.\n   * @param {RequestInit} config The config.\n   * @return {Promise<Response>} A promise that resolves with the response.\n   */\n  fetchSessionToken(url, config) {\n    return fetch(url, config);\n  }\n\n  /**\n   * Get or renew a session token for use with tile requests.\n   * @private\n   */\n  async createSession_() {\n    const url = createSessionUrl + '?key=' + this.apiKey_;\n    const config = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.sessionTokenRequest_),\n    };\n\n    const response = await this.fetchSessionToken(url, config);\n    if (!response.ok) {\n      try {\n        const body = await response.json();\n        this.error_ = new Error(body.error.message);\n      } catch {\n        this.error_ = new Error('Error fetching session token');\n      }\n      this.setState('error');\n      return;\n    }\n\n    /**\n     * @type {SessionTokenResponse}\n     */\n    const sessionTokenResponse = await response.json();\n\n    const tilePixelRatio = this.getTilePixelRatio(1);\n    const tileSize = [\n      sessionTokenResponse.tileWidth / tilePixelRatio,\n      sessionTokenResponse.tileHeight / tilePixelRatio,\n    ];\n\n    this.tileGrid = createXYZ({\n      extent: extentFromProjection(this.getProjection()),\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n\n    const session = sessionTokenResponse.session;\n    this.sessionTokenValue_ = session;\n    const key = this.apiKey_;\n    this.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n      const z = tileCoord[0];\n      const x = tileCoord[1];\n      const y = tileCoord[2];\n      const url = `${tileUrl}/${z}/${x}/${y}?session=${session}&key=${key}`;\n      return url;\n    };\n\n    const expiry = parseInt(sessionTokenResponse.expiry, 10) * 1000;\n    const timeout = Math.max(expiry - Date.now() - 60 * 1000, 1);\n    this.sessionRefreshId_ = setTimeout(() => this.createSession_(), timeout);\n\n    this.setAttributions(this.fetchAttributions_.bind(this));\n    // even if the state is already ready, we want the change event\n    this.setState('ready');\n  }\n\n  /**\n   * @param {import('../Map.js').FrameState} frameState The frame state.\n   * @return {Promise<string>} The attributions.\n   * @private\n   */\n  async fetchAttributions_(frameState) {\n    if (\n      frameState.viewHints[ViewHint.ANIMATING] ||\n      frameState.viewHints[ViewHint.INTERACTING] ||\n      frameState.animate\n    ) {\n      return this.previousViewportAttribution_;\n    }\n    const [west, south] = toLonLat(\n      getBottomLeft(frameState.extent),\n      frameState.viewState.projection,\n    );\n    const [east, north] = toLonLat(\n      getTopRight(frameState.extent),\n      frameState.viewState.projection,\n    );\n    const tileGrid = this.getTileGrid();\n    const zoom = tileGrid.getZForResolution(\n      frameState.viewState.resolution,\n      this.zDirection,\n    );\n    const viewportExtent = `zoom=${zoom}&north=${north}&south=${south}&east=${east}&west=${west}`;\n    // check if the extent or zoom has actually changed to avoid unnecessary requests\n    if (this.previousViewportExtent_ == viewportExtent) {\n      return this.previousViewportAttribution_;\n    }\n    this.previousViewportExtent_ = viewportExtent;\n    const session = this.sessionTokenValue_;\n    const key = this.apiKey_;\n    const url = `${attributionUrl}?session=${session}&key=${key}&${viewportExtent}`;\n    this.previousViewportAttribution_ = await fetch(url)\n      .then((response) => response.json())\n      .then((json) => json.copyright);\n\n    return this.previousViewportAttribution_;\n  }\n\n  disposeInternal() {\n    clearTimeout(this.sessionRefreshId_);\n    super.disposeInternal();\n  }\n}\n\nexport default Google;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this,\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/arcgisRest\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\nimport {round} from '../math.js';\n\n/**\n * @param {string} baseUrl Base URL for the ArcGIS Rest service.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(\n  baseUrl,\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  params,\n) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  // (if there is no numeric portion the entire projection code must\n  // form a valid ArcGIS SpatialReference definition).\n  const srid = projection\n    .getCode()\n    .split(/:(?=\\d+$)/)\n    .pop();\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  params['SIZE'] = imageSize[0] + ',' + imageSize[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio,\n  );\n\n  const modifiedUrl = baseUrl\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  return appendParams(modifiedUrl, params);\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for ArcGIS Rest images.\n * @param {LoaderOptions} options Image ArcGIS Rest Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} ArcGIS Rest image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load ? options.load : decode;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n\n  /** @type {import('../Image.js').ImageObjectPromiseLoader} */\n  return function (extent, resolution, pixelRatio) {\n    pixelRatio = options.hidpi ? pixelRatio : 1;\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, options.params);\n\n    extent = getRequestExtent(extent, resolution, pixelRatio, options.ratio);\n\n    const src = getRequestUrl(\n      options.url,\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      params,\n    );\n\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n\n    return load(image, src).then((image) => {\n      // Update resolution, because the server may return a smaller size than requested\n      const resolution = (getWidth(extent) / image.width) * pixelRatio;\n      return {image, extent, resolution, pixelRatio};\n    });\n  };\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader} from './arcgisRest.js';\nimport {decode} from '../Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection,\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/static\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image. When using this loader with an\n * `ol/source/Image`, the same extent must be set as `extent` of the `ol/layer/Image`.\n * @property {string} url Image URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for static images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const extent = options.imageExtent;\n  const image = new Image();\n  if (options.crossOrigin !== null) {\n    image.crossOrigin = options.crossOrigin;\n  }\n\n  return () =>\n    load(image, options.url).then((image) => {\n      const resolutionX = getWidth(extent) / image.width;\n      const resolutionY = getHeight(extent) / image.height;\n      const resolution =\n        resolutionX !== resolutionY ? [resolutionX, resolutionY] : resolutionY;\n      return {image, extent, resolution, pixelRatio: 1};\n    });\n}\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper, {decode} from '../Image.js';\nimport {createLoader} from './static.js';\nimport {get as getProjection} from '../proj.js';\nimport {intersects} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    this.image = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      createLoader({\n        url: options.url,\n        imageExtent: options.imageExtent,\n        crossOrigin,\n        load: (image, src) => {\n          this.image.setImage(image);\n          imageLoadFunction(this.image, src);\n          return decode(image);\n        },\n      }),\n    );\n\n    this.image.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this),\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image.getExtent())) {\n      return this.image;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/wms\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {compareVersions} from '../string.js';\nimport {decode} from '../Image.js';\nimport {floor, round} from '../math.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  if (v13 && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (baseUrl), params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType,\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': true,\n    },\n    params,\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n\n  /**\n   * @type {import(\"../Image.js\").Loader}\n   */\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType,\n    );\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE,\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params,\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams,\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (options.params === undefined || options.params['LAYER'] === undefined) {\n    const layers = options.params.LAYERS;\n    const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {createLoader, getFeatureInfoUrl, getLegendUrl} from './wms.js';\nimport {decode} from '../Image.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution,\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const options = {\n      url: this.url_,\n      params: {\n        ...this.params_,\n        ...params,\n      },\n      projection: sourceProjectionObj || projectionObj,\n    };\n    return getFeatureInfoUrl(options, coordinate, resolution);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    return getLegendUrl(\n      {\n        url: this.url_,\n        params: {\n          ...this.params_,\n          ...params,\n        },\n      },\n      resolution,\n    );\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        serverType: this.serverType_,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<string>} [orderedAxes] Axis order.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n */\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes,\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits,\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const orderedAxes = tileMatrixSet.orderedAxes;\n  const backwards =\n    (orderedAxes\n      ? orderedAxes\n          .slice(0, 2)\n          .map((s) => s.replace(/E|X|Lon/i, 'e').replace(/N|Y|Lat/i, 'n'))\n          .join('')\n      : projection.getAxisOrientation().substr(0, 2)) !== 'en';\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  /** @type {import('../Tile.js').UrlFunction} */\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  /** @type {string} */\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes,\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits,\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme',\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet',\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits,\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(CanvasRenderingContext2D.prototype, {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; i += 2) {\n        const property = instructionsAtIndex[i];\n        const instructionAtIndex = instructionsAtIndex[i + 1];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0),\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/StadiaMaps\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type string\n */\nconst STADIA_ATTRIBUTION =\n  '&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a>';\n\n/**\n * @const\n * @type string\n */\nconst OMT_ATTRIBUTION =\n  '&copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a>';\n\n/**\n * @const\n * @type string\n */\nconst STAMEN_ATTRIBUTION =\n  '&copy; <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>';\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'stamen_terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_terrain_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'alidade_smooth': {\n    extension: 'png',\n    opaque: true,\n  },\n  'alidade_smooth_dark': {\n    extension: 'png',\n    opaque: true,\n  },\n  'alidade_satellite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'outdoors': {\n    extension: 'png',\n    opaque: true,\n  },\n  'osm_bright': {\n    extension: 'png',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number, retina: boolean}>}\n */\nconst ProviderConfig = {\n  'stamen_terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n    retina: true,\n  },\n  'stamen_toner': {\n    minZoom: 0,\n    maxZoom: 20,\n    retina: true,\n  },\n  'stamen_watercolor': {\n    minZoom: 1,\n    maxZoom: 18,\n    retina: false,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name. Valid values: `alidade_smooth`, `alidade_smooth_dark`, `outdoors`, `stamen_terrain`, `stamen_terrain_background`, `stamen_terrain_labels`, `stamen_terrain_lines`, `stamen_toner_background`, `stamen_toner`, `stamen_toner_labels`, `stamen_toner_lines`, `stamen_toner_lite`, `stamen_watercolor`, and `osm_bright`.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [apiKey] Stadia Maps API key. Not required for localhost or most public web deployments. See https://docs.stadiamaps.com/authentication/ for details.\n * @property {boolean} [retina] Use retina tiles (if available; not available for Stamen Watercolor).\n */\n\n/**\n * @classdesc\n * Layer source for the Stadia Maps tile server.\n * @api\n */\nclass StadiaMaps extends XYZ {\n  /**\n   * @param {Options} options StadiaMaps options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider] || {\n      'minZoom': 0,\n      'maxZoom': 20,\n      'retina': true,\n    };\n\n    const layerConfig = LayerConfig[options.layer];\n    const query = options.apiKey ? '?api_key=' + options.apiKey : '';\n    const retina = providerConfig.retina && options.retina ? '@2x' : '';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tiles.stadiamaps.com/tiles/' +\n          options.layer +\n          '/{z}/{x}/{y}' +\n          retina +\n          '.' +\n          layerConfig.extension +\n          query;\n\n    const attributions = [STADIA_ATTRIBUTION, OMT_ATTRIBUTION, OSM_ATTRIBUTION];\n\n    if (options.layer.startsWith('stamen_')) {\n      attributions.splice(1, 0, STAMEN_ATTRIBUTION);\n    }\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom !== undefined\n          ? options.maxZoom\n          : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom !== undefined\n          ? options.minZoom\n          : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      tilePixelRatio: retina ? 2 : 1,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default StadiaMaps;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {createEmpty} from '../extent.js';\nimport {getRequestUrl} from './arcgisRest.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params,\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getRequestUrl(\n      url,\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      params,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas,\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj,\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution,\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params,\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams,\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap'),\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this,\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection(),\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution']) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_,\n    );\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      ),\n      key,\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers?.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix,\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326',\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits,\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack,\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n * @property {StringExpression} [fill-pattern-src] Fill pattern image URL.\n * @property {SizeExpression} [fill-pattern-size] Fill pattern image size in pixels.\n * Can be used together with `fill-pattern-offset` to define the sub-rectangle to use\n * from a fill pattern image sprite sheet.\n * @property {SizeExpression} [fill-pattern-offset] Fill pattern image offset in pixels.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {import(\"./Style.js\").DeclutterMode} [text-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"./Style.js\").DeclutterMode} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius` and `shape-radius2`.\n * @property {import(\"./Style.js\").DeclutterMode} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import(\"./Style.js\").DeclutterMode} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n","/**\n * @module ol/structs/LinkedList\n */\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev] Previous.\n * @property {Item} [next] Next.\n * @property {?} data Data.\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n  /**\n   * @param {boolean} [circular] The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(circular) {\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = circular === undefined ? true : circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n    /** @type {Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data,\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the last item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n}\n\nexport default LinkedList;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          replay.execute(\n            context,\n            scaledCanvasSize,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree,\n          );\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const z = zs[i];\n            if (!this.deferredZIndexContexts_[z]) {\n              this.deferredZIndexContexts_[z] = [];\n            }\n            this.deferredZIndexContexts_[z].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  compose as composeTransform,\n  makeInverse,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {fromResolutionLike} from '../../resolution.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice()),\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n          declutter: null,\n        })\n      );\n      const declutter = this.getLayer().getDeclutter();\n      if (declutter) {\n        imageFrameState.declutter = {\n          [declutter]: new RBush(9),\n        };\n      }\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              vectorRenderer.renderDeferred(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        },\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (fromResolutionLike(image.getResolution()) * pixelRatio) /\n          imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1],\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches,\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches,\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        }),\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse),\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`,\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`,\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) =>\n            r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code,\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0,\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true,\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance,\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat),\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options,\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      }),\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop,\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight,\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension,\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent()),\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes,\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array|null}\n     */\n    this.array_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type_ = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array_ = new (getArrayClassForType(this.type_))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array_ = getArrayClassForType(this.type_).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array_ = new (getArrayClassForType(this.type_))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array|null} Array.\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array_ ? this.array_.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER,\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER,\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW,\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position',\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize',\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity',\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image',\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data,\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0,\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1],\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_,\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null,\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0,\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data),\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|WebGLTexture|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type boolean\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            }),\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth,\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose,\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1],\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001,\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution,\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData ||\n        value instanceof WebGLTexture\n      ) {\n        // create a texture & put data\n        if (value instanceof WebGLTexture && !uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = value;\n        } else if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (\n          !(value instanceof WebGLTexture) &&\n          imageReady &&\n          uniform.prevValue !== value\n        ) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value),\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER,\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER,\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program,\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1],\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset,\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null,\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1],\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_,\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0,\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1],\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_,\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of hit detection + custom attributes count in the render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nexport const LINESTRING_ANGLE_COSINE_CUTOFF = 0.985;\n\n/** @type {Array<number>} */\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\n/**\n * @param {Float32Array} buffer Buffer\n * @param {number} pos Position\n * @param {number} x X\n * @param {number} y Y\n * @param {number} index Index\n */\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions,\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader.\n * Join angles are between 0 and 2PI.\n * This also computes the length of the current segment and the sum of the join angle tangents in order\n * to store this information on each subsequent segment along the line. This is necessary to correctly render dashes\n * and symbols along the line.\n *\n *   pB (before)                          pA (after)\n *    X             negative             X\n *     \\             offset             /\n *      \\                              /\n *       \\   join              join   /\n *        \\ angle 0          angle 1 /\n *         \\←---                ←---/      positive\n *          \\   ←--          ←--   /        offset\n *           \\     ↑       ↓      /\n *            X────┴───────┴─────X\n *            p0                  p1\n *\n * @param {Float32Array} instructions Array of render instructions for lines.s\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment end point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} toWorldTransform Transform matrix used to obtain world coordinates from instructions\n * @param {number} currentLength Cumulated length of segments processed so far\n * @param {number} currentAngleTangentSum Cumulated tangents of the join angles processed so far\n * @return {{length: number, angle: number}} Cumulated length with the newly processed segment (in world units), new sum of the join angle tangents\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  toWorldTransform,\n  currentLength,\n  currentAngleTangentSum,\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 8; // base attributes: x0, y0, x1, y1, angle0, angle1, distance, params\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute join angles we need to reproject coordinates back in world units\n  const p0world = applyTransform(toWorldTransform, [...p0]);\n  const p1world = applyTransform(toWorldTransform, [...p1]);\n\n  /**\n   * Compute the angle between p0pA and p0pB\n   * @param {import(\"../../coordinate.js\").Coordinate} p0 Point 0\n   * @param {import(\"../../coordinate.js\").Coordinate} pA Point A\n   * @param {import(\"../../coordinate.js\").Coordinate} pB Point B\n   * @return {number} a value in [0, 2PI]\n   */\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1]),\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1]),\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1),\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  // a negative angle indicates a line cap\n  let angle0 = -1;\n  let angle1 = -1;\n  let newAngleTangentSum = currentAngleTangentSum;\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(toWorldTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle0) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((angle0 - Math.PI) / 2);\n    }\n  }\n  // adapt offsets for P1 in case of join; add to angle sum\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(toWorldTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle1) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((Math.PI - angle1) / 2);\n    }\n  }\n\n  /**\n   * @param {number} vertexIndex From 0 to 3, indicating position in the quad\n   * @param {number} angleSum Sum of the join angles encountered so far (used to compute distance offset\n   * @return {number} A float value containing both information\n   */\n  function computeParameters(vertexIndex, angleSum) {\n    if (angleSum === 0) {\n      return vertexIndex * 10000;\n    }\n    return Math.sign(angleSum) * (vertexIndex * 10000 + Math.abs(angleSum));\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(0, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(1, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(2, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(3, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2,\n  );\n\n  return {\n    length:\n      currentLength +\n      Math.sqrt(\n        (p1world[0] - p0world[0]) * (p1world[0] - p0world[0]) +\n          (p1world[1] - p0world[1]) * (p1world[1] - p0world[1]),\n      ),\n    angle: newAngleTangentSum,\n  };\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize,\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize,\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex,\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {fromUserCoordinate, getUserProjection} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {getWorldParameters} from './worldUtil.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {boolean} [hitDetectionEnabled] Whether shader is hit detection aware.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW,\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = options.hitDetectionEnabled ?? true;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_prop_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    if (this.hitDetectionEnabled_) {\n      this.attributes.push({\n        name: 'a_prop_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      });\n      this.attributes.push({\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      });\n    }\n    this.attributes.push(...customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n          this.helper.flushBufferData(this.verticesBuffer_);\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_,\n          );\n          this.renderInstructions_ = new Float32Array(\n            event.data.renderInstructions,\n          );\n          if (received.id === this.lastSentId) {\n            this.ready = true;\n          }\n          this.getLayer().changed();\n        }\n      },\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this,\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n    const [startWorld, endWorld, worldWidth] = getWorldParameters(\n      frameState,\n      this.getLayer(),\n    );\n\n    // draw the normal canvas\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      // draw the hit buffer\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    const canvas = this.helper.getCanvas();\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    const userProjection = getUserProjection();\n\n    const baseInstructionLength = this.hitDetectionEnabled_ ? 7 : 2; // see below\n    const singleInstructionLength =\n      baseInstructionLength + this.customAttributes.length;\n    const totalSize = singleInstructionLength * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalSize\n    ) {\n      this.renderInstructions_ = new Float32Array(totalSize);\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let idx = -1;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n      if (userProjection) {\n        const userCoords = fromUserCoordinate(\n          geometry.getFlatCoordinates(),\n          frameState.viewState.projection,\n        );\n        tmpCoords[0] = userCoords[0];\n        tmpCoords[1] = userCoords[1];\n      } else {\n        tmpCoords[0] = geometry.getFlatCoordinates()[0];\n        tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      }\n      applyTransform(projectionTransform, tmpCoords);\n\n      this.renderInstructions_[++idx] = tmpCoords[0];\n      this.renderInstructions_[++idx] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        const hitColor = colorEncodeId(idx + 5, tmpColor);\n        this.renderInstructions_[++idx] = hitColor[0];\n        this.renderInstructions_[++idx] = hitColor[1];\n        this.renderInstructions_[++idx] = hitColor[2];\n        this.renderInstructions_[++idx] = hitColor[3];\n        this.renderInstructions_[++idx] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        const value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties,\n        );\n        this.renderInstructions_[++idx] = value;\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: singleInstructionLength - 2,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    assert(\n      this.hitDetectionEnabled_,\n      '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has been disabled using the `disableHitDetection: true` option.',\n    );\n    if (!this.renderInstructions_ || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(),\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.renderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    this.helper.useProgram(this.program_, frameState);\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true,\n      );\n    }\n\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n      this.helper.applyHitDetectionUniform(forHitDetection);\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n\n  renderDeclutter() {}\n}\n\nexport default WebGLPointsLayerRenderer;\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\";function r(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function x(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new Error(t)}(0!==n,\\\"Transformation matrix cannot be inverted\\\");const x=t[0],i=t[1],u=t[2],o=t[3],f=t[4],s=t[5];return e[0]=o/n,e[1]=-i/n,e[2]=-u/n,e[3]=x/n,e[4]=(u*s-o*f)/n,e[5]=-(x*s-i*f)/n,e}function i(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var u={exports:{}};function o(e,t,n){n=n||2;var r,x,i,u,o,s,l,v=t&&t.length,h=v?t[0]*n:e.length,c=f(e,0,h,n,!0),g=[];if(!c||c.next===c.prev)return g;if(v&&(c=function(e,t,n,r){var x,i,u,o=[];for(x=0,i=t.length;x<i;x++)(u=f(e,t[x]*r,x<i-1?t[x+1]*r:e.length,r,!1))===u.next&&(u.steiner=!0),o.push(d(u));for(o.sort(p),x=0;x<o.length;x++)n=y(o[x],n);return n}(e,t,c,n)),e.length>80*n){r=i=e[0],x=u=e[1];for(var b=n;b<h;b+=n)(o=e[b])<r&&(r=o),(s=e[b+1])<x&&(x=s),o>i&&(i=o),s>u&&(u=s);l=0!==(l=Math.max(i-r,u-x))?32767/l:0}return a(c,g,n,r,x,l,0),g}function f(e,t,n,r,x){var i,u;if(x===O(e,t,n,r)>0)for(i=t;i<n;i+=r)u=P(i,e[i],e[i+1],u);else for(i=n-r;i>=t;i-=r)u=P(i,e[i],e[i+1],u);return u&&m(u,u.next)&&(B(u),u=u.next),u}function s(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!m(r,r.next)&&0!==w(r.prev,r,r.next))r=r.next;else{if(B(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function a(e,t,n,r,x,i,u){if(e){!u&&i&&function(e,t,n,r){var x=e;do{0===x.z&&(x.z=b(x.x,x.y,t,n,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next}while(x!==e);x.prevZ.nextZ=null,x.prevZ=null,function(e){var t,n,r,x,i,u,o,f,s=1;do{for(n=e,e=null,i=null,u=0;n;){for(u++,r=n,o=0,t=0;t<s&&(o++,r=r.nextZ);t++);for(f=s;o>0||f>0&&r;)0!==o&&(0===f||!r||n.z<=r.z)?(x=n,n=n.nextZ,o--):(x=r,r=r.nextZ,f--),i?i.nextZ=x:e=x,x.prevZ=i,i=x;n=r}i.nextZ=null,s*=2}while(u>1)}(x)}(e,r,x,i);for(var o,f,p=e;e.prev!==e.next;)if(o=e.prev,f=e.next,i?v(e,r,x,i):l(e))t.push(o.i/n|0),t.push(e.i/n|0),t.push(f.i/n|0),B(e),e=f.next,p=f.next;else if((e=f)===p){u?1===u?a(e=h(s(e),t,n),t,n,r,x,i,2):2===u&&c(e,t,n,r,x,i):a(s(e),t,n,r,x,i,1);break}}}function l(e){var t=e.prev,n=e,r=e.next;if(w(t,n,r)>=0)return!1;for(var x=t.x,i=n.x,u=r.x,o=t.y,f=n.y,s=r.y,a=x<i?x<u?x:u:i<u?i:u,l=o<f?o<s?o:s:f<s?f:s,v=x>i?x>u?x:u:i>u?i:u,h=o>f?o>s?o:s:f>s?f:s,c=r.next;c!==t;){if(c.x>=a&&c.x<=v&&c.y>=l&&c.y<=h&&M(x,o,i,f,u,s,c.x,c.y)&&w(c.prev,c,c.next)>=0)return!1;c=c.next}return!0}function v(e,t,n,r){var x=e.prev,i=e,u=e.next;if(w(x,i,u)>=0)return!1;for(var o=x.x,f=i.x,s=u.x,a=x.y,l=i.y,v=u.y,h=o<f?o<s?o:s:f<s?f:s,c=a<l?a<v?a:v:l<v?l:v,p=o>f?o>s?o:s:f>s?f:s,y=a>l?a>v?a:v:l>v?l:v,g=b(h,c,t,n,r),d=b(p,y,t,n,r),Z=e.prevZ,m=e.nextZ;Z&&Z.z>=g&&m&&m.z<=d;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;if(Z=Z.prevZ,m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;Z&&Z.z>=g;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;Z=Z.prevZ}for(;m&&m.z<=d;){if(m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function h(e,t,n){var r=e;do{var x=r.prev,i=r.next.next;!m(x,i)&&A(x,r,r.next,i)&&z(x,i)&&z(i,x)&&(t.push(x.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),B(r),B(r.next),r=e=i),r=r.next}while(r!==e);return s(r)}function c(e,t,n,r,x,i){var u=e;do{for(var o=u.next.next;o!==u.prev;){if(u.i!==o.i&&Z(u,o)){var f=F(u,o);return u=s(u,u.next),f=s(f,f.next),a(u,t,n,r,x,i,0),void a(f,t,n,r,x,i,0)}o=o.next}u=u.next}while(u!==e)}function p(e,t){return e.x-t.x}function y(e,t){var n=function(e,t){var n,r=t,x=e.x,i=e.y,u=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var o=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(o<=x&&o>u&&(u=o,n=r.x<r.next.x?r:r.next,o===x))return n}r=r.next}while(r!==t);if(!n)return null;var f,s=n,a=n.x,l=n.y,v=1/0;r=n;do{x>=r.x&&r.x>=a&&x!==r.x&&M(i<l?x:u,i,a,l,i<l?u:x,i,r.x,r.y)&&(f=Math.abs(i-r.y)/(x-r.x),z(r,e)&&(f<v||f===v&&(r.x>n.x||r.x===n.x&&g(n,r)))&&(n=r,v=f)),r=r.next}while(r!==s);return n}(e,t);if(!n)return t;var r=F(n,e);return s(r,r.next),s(n,n.next)}function g(e,t){return w(e.prev,e,t.prev)<0&&w(t.next,e,e.next)<0}function b(e,t,n,r,x){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*x|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*x|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function d(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function M(e,t,n,r,x,i,u,o){return(x-u)*(t-o)>=(e-u)*(i-o)&&(e-u)*(r-o)>=(n-u)*(t-o)&&(n-u)*(i-o)>=(x-u)*(r-o)}function Z(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&A(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(z(e,t)&&z(t,e)&&function(e,t){var n=e,r=!1,x=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&x<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(w(e.prev,e,t.prev)||w(e,t.prev,t))||m(e,t)&&w(e.prev,e,e.next)>0&&w(t.prev,t,t.next)>0)}function w(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function m(e,t){return e.x===t.x&&e.y===t.y}function A(e,t,n,r){var x=I(w(e,t,n)),i=I(w(e,t,r)),u=I(w(n,r,e)),o=I(w(n,r,t));return x!==i&&u!==o||(!(0!==x||!E(e,n,t))||(!(0!==i||!E(e,r,t))||(!(0!==u||!E(n,e,r))||!(0!==o||!E(n,t,r)))))}function E(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function z(e,t){return w(e.prev,e,e.next)<0?w(e,t,e.next)>=0&&w(e,e.prev,t)>=0:w(e,t,e.prev)<0||w(e,e.next,t)<0}function F(e,t){var n=new _(e.i,e.x,e.y),r=new _(t.i,t.x,t.y),x=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=x,x.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function P(e,t,n,r){var x=new _(e,t,n);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function B(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function _(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function O(e,t,n,r){for(var x=0,i=t,u=n-r;i<n;i+=r)x+=(e[u]-e[i])*(e[i+1]+e[u+1]),u=i;return x}u.exports=o,u.exports.default=o,o.deviation=function(e,t,n,r){var x=t&&t.length,i=x?t[0]*n:e.length,u=Math.abs(O(e,0,i,n));if(x)for(var o=0,f=t.length;o<f;o++){var s=t[o]*n,a=o<f-1?t[o+1]*n:e.length;u-=Math.abs(O(e,s,a,n))}var l=0;for(o=0;o<r.length;o+=3){var v=r[o]*n,h=r[o+1]*n,c=r[o+2]*n;l+=Math.abs((e[v]-e[c])*(e[h+1]-e[v+1])-(e[v]-e[h])*(e[c+1]-e[v+1]))}return 0===u&&0===l?0:Math.abs((l-u)/u)},o.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,x=0;x<e.length;x++){for(var i=0;i<e[x].length;i++)for(var u=0;u<t;u++)n.vertices.push(e[x][i][u]);x>0&&(r+=e[x-1].length,n.holes.push(r))}return n};var N=i(u.exports);const R=[],S={vertexPosition:0,indexPosition:0};function T(e,t,n,r,x){e[t+0]=n,e[t+1]=r,e[t+2]=x}function U(e,t,n,r,x,i){const u=3+x,o=e[t+0],f=e[t+1],s=R;s.length=x;for(let n=0;n<s.length;n++)s[n]=e[t+2+n];let a=i?i.vertexPosition:0,l=i?i.indexPosition:0;const v=a/u;return T(n,a,o,f,0),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,1),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,2),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,3),s.length&&n.set(s,a+3),a+=u,r[l++]=v,r[l++]=v+1,r[l++]=v+3,r[l++]=v+1,r[l++]=v+2,r[l++]=v+3,S.vertexPosition=a,S.indexPosition=l,S}function k(e,t,n,x,i,u,o,f,s,a,l){const v=8+f.length,h=u.length/v,c=[e[t+0],e[t+1]],p=[e[n],e[n+1]],y=r(s,[...c]),g=r(s,[...p]);function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),x=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-x[1],x[0]],u=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),o=[(n[0]-e[0])/u,(n[1]-e[1])/u],f=0===r||0===u?0:Math.acos((s=o[0]*x[0]+o[1]*x[1],a=-1,l=1,Math.min(Math.max(s,a),l)));var s,a,l;return o[0]*i[0]+o[1]*i[1]>0?f:2*Math.PI-f}let d=-1,M=-1,Z=l;const w=null!==i;if(null!==x){d=b(y,g,r(s,[...[e[x],e[x+1]]])),Math.cos(d)<=.985&&(Z+=Math.tan((d-Math.PI)/2))}if(w){M=b(g,y,r(s,[...[e[i],e[i+1]]])),Math.cos(M)<=.985&&(Z+=Math.tan((Math.PI-M)/2))}function m(e,t){return 0===t?1e4*e:Math.sign(t)*(1e4*e+Math.abs(t))}return u.push(c[0],c[1],p[0],p[1],d,M,a,m(0,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(1,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(2,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(3,l)),u.push(...f),o.push(h,h+1,h+2,h+1,h+3,h+2),{length:a+Math.sqrt((g[0]-y[0])*(g[0]-y[0])+(g[1]-y[1])*(g[1]-y[1])),angle:Z}}function G(e,t,n,r,x){const i=2+x;let u=t;const o=e.slice(u,u+x);u+=x;const f=e[u++];let s=0;const a=new Array(f-1);for(let t=0;t<f;t++)s+=e[u++],t<f-1&&(a[t]=s);const l=e.slice(u,u+2*s),v=N(l,a,2);for(let e=0;e<v.length;e++)r.push(v[e]+n.length/i);for(let e=0;e<l.length;e+=2)n.push(l[e],l[e+1],...o);return u+2*s}const j=self;j.onmessage=r=>{const i=r.data;switch(i.type){case t:{const e=3,t=2,n=i.customAttributesSize,r=t+n,x=new Float32Array(i.renderInstructions),u=x.length/r,o=4*u*(n+e),f=new Uint32Array(6*u),s=new Float32Array(o);let a;for(let e=0;e<x.length;e+=r)a=U(x,e,s,f,n,a);const l=Object.assign({vertexBuffer:s.buffer,indexBuffer:f.buffer,renderInstructions:x.buffer},i);j.postMessage(l,[s.buffer,f.buffer,x.buffer]);break}case n:{const e=[],t=[],n=i.customAttributesSize,r=2,u=new Float32Array(i.renderInstructions);let o=0;const f=[1,0,0,1,0,0];let s,a;for(x(f,i.renderInstructionsTransform);o<u.length;){a=Array.from(u.slice(o,o+n)),o+=n,s=u[o++];const x=o,i=o+(s-1)*r,l=u[x]===u[i]&&u[x+1]===u[i+1];let v=0,h=0;for(let n=0;n<s-1;n++){let c=null;n>0?c=o+(n-1)*r:l&&(c=i-r);let p=null;n<s-2?p=o+(n+2)*r:l&&(p=x+r);const y=k(u,o+n*r,o+(n+1)*r,c,p,e,t,a,f,v,h);v=y.length,h=y.angle}o+=s*r}const l=Uint32Array.from(t),v=Float32Array.from(e),h=Object.assign({vertexBuffer:v.buffer,indexBuffer:l.buffer,renderInstructions:u.buffer},i);j.postMessage(h,[v.buffer,l.buffer,u.buffer]);break}case e:{const e=[],t=[],n=i.customAttributesSize,r=new Float32Array(i.renderInstructions);let x=0;for(;x<r.length;)x=G(r,x,e,t,n);const u=Uint32Array.from(t),o=Float32Array.from(e),f=Object.assign({vertexBuffer:o.buffer,indexBuffer:u.buffer,renderInstructions:r.buffer},i);j.postMessage(f,[o.buffer,u.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","import {getWidth} from '../../extent.js';\n\n/**\n * Compute world params\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {any} layer The layer\n * @return {Array<number>} The world start, end and width.\n */\nexport function getWorldParameters(frameState, layer) {\n  const projection = frameState.viewState.projection;\n\n  const vectorSource = layer.getSource();\n  const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n  const projectionExtent = projection.getExtent();\n\n  const extent = frameState.extent;\n  const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n  const endWorld = multiWorld\n    ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n    : 1;\n\n  const startWorld = multiWorld\n    ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n    : 0;\n\n  return [startWorld, endWorld, worldWidth];\n}\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data,\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_,\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName,\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform),\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution,\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate,\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution,\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  PATTERN_ORIGIN: 'u_patternOrigin',\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value; zoom level zero has a depth value of 0.5, and increasing values\n * have a depth trending towards 0\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z,\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload,\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection,\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z,\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} If returns false, tile mask rendering will be skipped\n   * @protected\n   */\n  beforeTilesMaskRender(frameState) {\n    return false;\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {}\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {number} tileZ Tile Z\n   * @param {import(\"../../extent.js\").Extent} extent Render extent\n   * @param {number} depth Depth\n   * @protected\n   */\n  renderTileMask(tileRepresentation, tileZ, extent, depth) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid,\n  ) {\n    if (!tileRepresentation.ready) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter),\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter,\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha,\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload,\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.ready) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n\n    const renderTileMask = this.beforeTilesMaskRender(frameState);\n\n    if (renderTileMask) {\n      for (let j = 0, jj = zs.length; j < jj; ++j) {\n        const tileZ = zs[j];\n        for (const tileRepresentation of representationsByZ[tileZ]) {\n          const tileCoord = tileRepresentation.tile.tileCoord;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          // do not render the tile mask if alpha < 1\n          if (tileCoordKey in alphaLookup) {\n            continue;\n          }\n          const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n          this.renderTileMask(\n            /** @type {TileRepresentation} */ (tileRepresentation),\n            tileZ,\n            tileExtent,\n            depthForZ(tileZ),\n          );\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid,\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid,\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.ready &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ,\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose(),\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/expr/gpu\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NoneType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  StringType,\n  computeGeometryType,\n  isType,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray} from '../color.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.',\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [evaluator] Function used for evaluating the value;\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n * @property {function(Object): *} [evaluator] Function used for evaluating the value; argument is the style variables object\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    inFragmentShader: false,\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    style: {},\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext,\n) {\n  const expression = parse(encoded, parsingContext, type);\n  if (isType(expression.type, NoneType)) {\n    throw new Error(`No matching type was found`);\n  }\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.GeometryType]: (context, expression, type) => {\n    const propName = 'geometryType';\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: StringType,\n        evaluator: (feature) => {\n          return computeGeometryType(feature.getGeometry());\n        },\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`,\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`,\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`,\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`,\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`,\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`,\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`,\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`,\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`,\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`,\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`,\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    if (compiledArgs.length === 1) {\n      //grayscale\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), 1.0)`;\n    }\n    if (compiledArgs.length === 2) {\n      //grayscale with alpha\n      return `(${compiledArgs[1]} * vec4(vec3(${compiledArgs[0]} / 255.0), 1.0))`;\n    }\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `(${alpha} * vec4(${rgb.join(', ')}, 1.0))`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] =\n        `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Coalesce\n  // Ops.Concat\n  // Ops.ToString\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator,\n        )}`,\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value),\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType,\n    )})`,\n  );\n}\n","/**\n * Class for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport {LINESTRING_ANGLE_COSINE_CUTOFF} from '../render/webgl/utils.js';\nimport {colorToGlsl, numberToGlsl, stringToGlsl} from '../expr/gpu.js';\nimport {createDefaultStyle} from '../style/flat.js';\n\nexport const COMMON_HEADER = `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_screenToWorldMatrix;\nuniform vec2 u_viewportSizePx;\nuniform float u_pixelRatio;\nuniform float u_globalAlpha;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform float u_rotation;\nuniform vec4 u_renderExtent;\nuniform vec2 u_patternOrigin;\nuniform float u_depth;\nuniform mediump int u_hitDetection;\n\nconst float PI = 3.141592653589793238;\nconst float TWO_PI = 2.0 * PI;\n\n// this used to produce an alpha-premultiplied color from a texture\nvec4 samplePremultiplied(sampler2D sampler, vec2 texCoord) {\n  vec4 color = texture2D(sampler, texCoord);\n  return vec4(color.rgb * color.a, color.a);\n}\n`;\n\nconst DEFAULT_STYLE = createDefaultStyle();\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSymbolSizeExpression('...')\n *   .getSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms_ = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes_ = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolSizeExpression_ = `vec2(${numberToGlsl(\n      DEFAULT_STYLE['circle-radius'],\n    )} + ${numberToGlsl(DEFAULT_STYLE['circle-stroke-width'] * 0.5)})`;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolRotationExpression_ = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolOffsetExpression_ = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['circle-fill-color']),\n    );\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression_ = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression_ = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.symbolRotateWithView_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeWidthExpression_ = numberToGlsl(DEFAULT_STYLE['stroke-width']);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['stroke-color']),\n    );\n\n    /**\n     * @private\n     */\n    this.strokeOffsetExpression_ = '0.';\n\n    /**\n     * @private\n     */\n    this.strokeCapExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeJoinExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeMiterLimitExpression_ = '10.';\n\n    /**\n     * @private\n     */\n    this.strokeDistanceFieldExpression_ = '-1000.';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.fillColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['fill-color']),\n    );\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.vertexShaderFunctions_ = [];\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.fragmentShaderFunctions_ = [];\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings_.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolSizeExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolSizeExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol size expression\n   */\n  getSymbolSizeExpression() {\n    return this.symbolSizeExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotationExpression(expression) {\n    this.symbolRotationExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.symbolOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol offset expression\n   */\n  getSymbolOffsetExpression() {\n    return this.symbolOffsetExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolColorExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol color expression\n   */\n  getSymbolColorExpression() {\n    return this.symbolColorExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression_;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.symbolRotateWithView_ = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke width expression, returning value in pixels\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeWidthExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeWidthExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `vec4`: can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeColorExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current stroke color expression\n   */\n  getStrokeColorExpression() {\n    return this.strokeColorExpression_;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeOffsetExpression(expression) {\n    this.strokeOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line cap expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeCapExpression(expression) {\n    this.strokeCapExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line join expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeJoinExpression(expression) {\n    this.strokeJoinExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke miter limit expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeMiterLimitExpression(expression) {\n    this.strokeMiterLimitExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke distance field expression, evaluate to `float`\n   * This can override the default distance field; can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeDistanceFieldExpression(expression) {\n    this.strokeDistanceFieldExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Fill color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setFillColorExpression(expression) {\n    this.hasFill_ = true;\n    this.fillColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fill color expression\n   */\n  getFillColorExpression() {\n    return this.fillColorExpression_;\n  }\n\n  addVertexShaderFunction(code) {\n    if (this.vertexShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.vertexShaderFunctions_.push(code);\n  }\n  addFragmentShaderFunction(code) {\n    if (this.fragmentShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.fragmentShaderFunctions_.push(code);\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolVertexShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 pxToScreen(vec2 coordPx) {\n  vec2 scaled = coordPx / u_viewportSizePx / 0.5;\n  return scaled;\n}\n\nvec2 screenToPx(vec2 coordScreen) {\n  return (coordScreen * 0.5 + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  v_quadSizePx = ${this.symbolSizeExpression_};\n  vec2 halfSizePx = v_quadSizePx * 0.5;\n  vec2 centerOffsetPx = ${this.symbolOffsetExpression_};\n  vec2 offsetPx = centerOffsetPx;\n  if (a_index == 0.0) {\n    offsetPx -= halfSizePx;\n  } else if (a_index == 1.0) {\n    offsetPx += halfSizePx * vec2(1., -1.);\n  } else if (a_index == 2.0) {\n    offsetPx += halfSizePx;\n  } else {\n    offsetPx += halfSizePx * vec2(-1., 1.);\n  }\n  float angle = ${this.symbolRotationExpression_};\n  ${this.symbolRotateWithView_ ? 'angle += u_rotation;' : ''}\n  float c = cos(-angle);\n  float s = sin(-angle);\n  offsetPx = vec2(c * offsetPx.x - s * offsetPx.y, s * offsetPx.x + c * offsetPx.y);\n  vec4 center = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n  gl_Position = center + vec4(pxToScreen(offsetPx), u_depth, 0.);\n  vec4 texCoord = ${this.texCoordExpression_};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  v_prop_hitColor = a_prop_hitColor;\n  v_angle = angle;\n  c = cos(-v_angle);\n  s = sin(-v_angle);\n  centerOffsetPx = vec2(c * centerOffsetPx.x - s * centerOffsetPx.y, s * centerOffsetPx.x + c * centerOffsetPx.y); \n  v_centerPx = screenToPx(center.xy) + centerOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolFragmentShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvoid main(void) {\n  if (${this.discardExpression_}) { discard; }\n  vec2 coordsPx = gl_FragCoord.xy / u_pixelRatio - v_centerPx; // relative to center\n  float c = cos(v_angle);\n  float s = sin(v_angle);\n  coordsPx = vec2(c * coordsPx.x - s * coordsPx.y, s * coordsPx.x + c * coordsPx.y);\n  gl_FragColor = ${this.symbolColorExpression_};\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.05) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a stroke vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeVertexShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec2 a_segmentStart;\nattribute vec2 a_segmentEnd;\nattribute float a_parameters;\nattribute float a_distance;\nattribute vec2 a_joinAngles;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvec4 pxToScreen(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return vec4(screenPos, u_depth, 1.0);\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nvec2 getJoinOffsetDirection(vec2 normalPx, float joinAngle) {\n  float halfAngle = joinAngle / 2.0;\n  float c = cos(halfAngle);\n  float s = sin(halfAngle);\n  vec2 angleBisectorNormal = vec2(s * normalPx.x + c * normalPx.y, -c * normalPx.x + s * normalPx.y);\n  float length = 1.0 / s;\n  return angleBisectorNormal * length;\n}\n\nvec2 getOffsetPoint(vec2 point, vec2 normal, float joinAngle, float offsetPx) {\n  // if on a cap or the join angle is too high, offset the line along the segment normal\n  if (cos(joinAngle) > 0.998 || isCap(joinAngle)) {\n    return point - normal * offsetPx;\n  }\n  // offset is applied along the inverted normal (positive offset goes \"right\" relative to line direction)\n  return point - getJoinOffsetDirection(normal, joinAngle) * offsetPx;\n}\n\nvoid main(void) {\n  v_angleStart = a_joinAngles.x;\n  v_angleEnd = a_joinAngles.y;\n  float vertexNumber = floor(abs(a_parameters) / 10000. + 0.5);\n  // we're reading the fractional part while keeping the sign (so -4.12 gives -0.12, 3.45 gives 0.45)\n  float angleTangentSum = fract(abs(a_parameters) / 10000.) * 10000. * sign(a_parameters);\n\n  float lineWidth = ${this.strokeWidthExpression_};\n  float lineOffsetPx = ${this.strokeOffsetExpression_};\n\n  // compute segment start/end in px with offset\n  vec2 segmentStartPx = worldToPx(a_segmentStart);\n  vec2 segmentEndPx = worldToPx(a_segmentEnd);\n  vec2 tangentPx = normalize(segmentEndPx - segmentStartPx);\n  vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n  segmentStartPx = getOffsetPoint(segmentStartPx, normalPx, v_angleStart, lineOffsetPx),\n  segmentEndPx = getOffsetPoint(segmentEndPx, normalPx, v_angleEnd, lineOffsetPx);\n  \n  // compute current vertex position\n  float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n  float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n  float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n  vec2 joinDirection;\n  vec2 positionPx = vertexNumber < 1.5 ? segmentStartPx : segmentEndPx;\n  // if angle is too high, do not make a proper join\n  if (cos(angle) > ${LINESTRING_ANGLE_COSINE_CUTOFF} || isCap(angle)) {\n    joinDirection = normalPx * normalDir - tangentPx * tangentDir;\n  } else {\n    joinDirection = getJoinOffsetDirection(normalPx * normalDir, angle);\n  }\n  positionPx = positionPx + joinDirection * (lineWidth * 0.5 + 1.); // adding 1 pixel for antialiasing\n  gl_Position = pxToScreen(positionPx);\n\n  v_segmentStart = segmentStartPx;\n  v_segmentEnd = segmentEndPx;\n  v_width = lineWidth;\n  v_prop_hitColor = a_prop_hitColor;\n  v_distanceOffsetPx = a_distance / u_resolution - (lineOffsetPx * angleTangentSum);\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a stroke fragment shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeFragmentShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nfloat segmentDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  vec2 tangent = normalize(end - start);\n  vec2 normal = vec2(-tangent.y, tangent.x);\n  vec2 startToPoint = point - start;\n  return abs(dot(startToPoint, normal)) - width * 0.5;\n}\n\nfloat buttCapDistanceField(vec2 point, vec2 start, vec2 end) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  return dot(startToPoint, -tangent);\n}\n\nfloat squareCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return buttCapDistanceField(point, start, end) - width * 0.5;\n}\n\nfloat roundCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  float onSegment = max(0., 1000. * dot(point - start, end - start)); // this is very high when inside the segment\n  return length(point - start) - width * 0.5 - onSegment;\n}\n\nfloat roundJoinDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat bevelJoinField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  float c = cos(joinAngle * 0.5);\n  float s = sin(joinAngle * 0.5);\n  float direction = -sign(sin(joinAngle));\n  vec2 bisector = vec2(c * tangent.x - s * tangent.y, s * tangent.x + c * tangent.y);\n  float radius = width * 0.5 * s;\n  return dot(startToPoint, bisector * direction) - radius;\n}\n\nfloat miterJoinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  if (cos(joinAngle) > ${LINESTRING_ANGLE_COSINE_CUTOFF}) { // avoid risking a division by zero\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  float miterLength = 1. / sin(joinAngle * 0.5);\n  float miterLimit = ${this.strokeMiterLimitExpression_};\n  if (miterLength > miterLimit) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  return -1000.;\n}\n\nfloat capDistanceField(vec2 point, vec2 start, vec2 end, float width, float capType) {\n   if (capType == ${stringToGlsl('butt')}) {\n    return buttCapDistanceField(point, start, end);\n  } else if (capType == ${stringToGlsl('square')}) {\n    return squareCapDistanceField(point, start, end, width);\n  }\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat joinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float joinType) {\n  if (joinType == ${stringToGlsl('bevel')}) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  } else if (joinType == ${stringToGlsl('miter')}) {\n    return miterJoinDistanceField(point, start, end, width, joinAngle);\n  }\n  return roundJoinDistanceField(point, start, end, width);\n}\n\nfloat computeSegmentPointDistance(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float capType, float joinType) {\n  if (isCap(joinAngle)) {\n    return capDistanceField(point, start, end, width, capType);\n  }\n  return joinDistanceField(point, start, end, width, joinAngle, joinType);\n}\n\nvoid main(void) {\n  vec2 currentPoint = gl_FragCoord.xy / u_pixelRatio;\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(currentPoint);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n\n  float segmentLength = length(v_segmentEnd - v_segmentStart);\n  vec2 segmentTangent = (v_segmentEnd - v_segmentStart) / segmentLength;\n  vec2 segmentNormal = vec2(-segmentTangent.y, segmentTangent.x);\n  vec2 startToPoint = currentPoint - v_segmentStart;\n  float currentLengthPx = max(0., min(dot(segmentTangent, startToPoint), segmentLength)) + v_distanceOffsetPx; \n  float currentRadiusPx = abs(dot(segmentNormal, startToPoint));\n  float currentRadiusRatio = dot(segmentNormal, startToPoint) * 2. / v_width;\n  vec4 color = ${this.strokeColorExpression_} * u_globalAlpha;\n  float capType = ${this.strokeCapExpression_};\n  float joinType = ${this.strokeJoinExpression_};\n  float segmentStartDistance = computeSegmentPointDistance(currentPoint, v_segmentStart, v_segmentEnd, v_width, v_angleStart, capType, joinType);\n  float segmentEndDistance = computeSegmentPointDistance(currentPoint, v_segmentEnd, v_segmentStart, v_width, v_angleEnd, capType, joinType);\n  float distance = max(\n    segmentDistanceField(currentPoint, v_segmentStart, v_segmentEnd, v_width),\n    max(segmentStartDistance, segmentEndDistance)\n  );\n  distance = max(distance, ${this.strokeDistanceFieldExpression_});\n  gl_FragColor = color * smoothstep(0.5, -0.5, distance);\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a fill vertex shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillVertexShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, u_depth, 1.0);\n  v_prop_hitColor = a_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a fill fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillFragmentShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  vec2 pxPos = gl_FragCoord.xy / u_pixelRatio;\n  vec2 pxOrigin = worldToPx(u_patternOrigin);\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(pxPos);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.fillColorExpression_} * u_globalAlpha;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n}\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {ShaderBuilder} from '../webgl/ShaderBuilder.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    const builder = new ShaderBuilder()\n      .addAttribute('float a_prop_weight')\n      .addVarying('v_prop_weight', 'float', 'a_prop_weight')\n      .addUniform('float u_size')\n      .addUniform('float u_blurSlope')\n      .setSymbolSizeExpression('vec2(u_size)')\n      .setSymbolColorExpression(\n        'vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_prop_weight)',\n      );\n\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      hitDetectionEnabled: true,\n      vertexShader: builder.getSymbolVertexShader(),\n      fragmentShader: builder.getSymbolFragmentShader(),\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority\n * is defined by the `zIndex` of the style and the render order of features. Higher z-index means higher\n * priority. Within the same z-index, a feature rendered before another has higher priority. Items will\n * not be decluttered against or together with items on other layers with the same `declutter` value. If\n * that is needed, use {@link import(\"../layer/Vector.js\").default} instead.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection,\n          ),\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file),\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]]),\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y]),\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection(),\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {function(string):void} Callback\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {},\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n\n    /**\n     * The tracked parameter callbacks.\n     * @private\n     * @type {Object<string, Callback>}\n     */\n    this.trackedCallbacks_ = {};\n\n    /**\n     * The tracked parameter values.\n     * @private\n     * @type {Object<string, string|null>}\n     */\n    this.trackedValues_ = {};\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this),\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    for (const key in this.trackedCallbacks_) {\n      const value = params.get(key);\n      if (key in this.trackedCallbacks_ && value !== this.trackedValues_[key]) {\n        this.trackedValues_[key] = value;\n        this.trackedCallbacks_[key](value);\n      }\n    }\n\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Register a listener for a URL search parameter.  The callback will be called with a new value\n   * when the corresponding search parameter changes due to history events (e.g. browser navigation).\n   *\n   * @param {string} key The URL search parameter.\n   * @param {Callback} callback The function to call when the search parameter changes.\n   * @return {string|null} The initial value of the search parameter (or null if absent from the URL).\n   * @api\n   */\n  track(key, callback) {\n    this.trackedCallbacks_[key] = callback;\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    const value = params.get(key);\n    this.trackedValues_[key] = value;\n    return value;\n  }\n\n  /**\n   * Update the URL with a new search parameter value.  If the value is null, it will be\n   * deleted from the search parameters.\n   *\n   * @param {string} key The URL search parameter.\n   * @param {string|null} value The updated value (or null to remove it from the URL).\n   * @api\n   */\n  update(key, value) {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    if (value === null) {\n      params.delete(key);\n    } else {\n      params.set(key, value);\n    }\n    if (key in this.trackedValues_) {\n      this.trackedValues_[key] = value;\n    }\n    this.updateHistory_(url);\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    this.updateHistory_(url);\n    this.initial_ = false;\n  }\n\n  /**\n   * @private\n   * @param {URL} url The URL.\n   */\n  updateHistory_(url) {\n    if (url.href !== window.location.href) {\n      if (this.initial_ || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this),\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this),\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer',\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this),\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this),\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_,\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      },\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection),\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection,\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection,\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData,\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt,\n        ),\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection),\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter},\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection,\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection,\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData,\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      },\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection,\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = circleGeometry\n          .clone()\n          .transform(userProjection, projection);\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection),\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection),\n      ),\n      projection,\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection,\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>|null} segment Segment, or `null` if snapped to a vertex.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] =\n          geometry.getExtent(createEmpty());\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n          segment: result.segment,\n        }),\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_,\n      ),\n      projection,\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n    let closestSegment = null;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n            segment: closestSegment,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            closestSegment =\n              segmentData.feature.getGeometry().getType() === 'Circle'\n                ? null\n                : segmentData.segment;\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_,\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection,\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      },\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} T\n * @typedef {T extends import(\"../render/Feature.js\").default ? typeof import(\"../render/Feature.js\").default : typeof import(\"../Feature.js\").default} FeatureToFeatureClass<T>\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends import(\"../render/Feature.js\").default ? import(\"../render/Feature.js\").default : import(\"../Feature.js\").default} FeatureClassToFeature<T>\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import('../Feature.js').FeatureLike|FeatureClassToFeature<T>>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options),\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @typedef {Object} GPXLink\n * @property {string} [text] text\n * @property {string} [type] type\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @typedef {Object} GPXAuthor\n * @property {string} [name] name\n * @property {string} [email] email\n * @property {GPXLink} [link] link\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst AUTHOR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'email': parseEmail,\n  'link': parseLink,\n});\n\n/**\n * @typedef {Object} GPXMetadata\n * @property {string} [name] name\n * @property {string} [desc] desc\n * @property {GPXAuthor} [author] author\n * @property {GPXLink} [link] link\n * @property {number} [time] time\n * @property {string} [keywords] keywords\n * @property {Array<number>} [bounds] bounds\n * @property {Object} [extensions] extensions\n *\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'author': makeObjectPropertySetter(readAuthor),\n  'copyright': makeObjectPropertySetter(readCopyright),\n  'link': parseLink,\n  'time': makeObjectPropertySetter(readDateTime),\n  'keywords': makeObjectPropertySetter(readString),\n  'bounds': parseBounds,\n  'extensions': parseExtensions,\n});\n\n/**\n * @typedef {Object} GPXCopyright\n * @property {string} [author] author\n * @property {number} [year] year\n * @property {string} [license] license\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst COPYRIGHT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'year': makeObjectPropertySetter(readPositiveInteger),\n  'license': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * Reads a GPX file's metadata tag, reading among other things:\n   *   - the name and description of this GPX\n   *   - its author\n   *   - the copyright associated with this GPX file\n   *\n   * Will return null if no metadata tag is present (or no valid source is given).\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {GPXMetadata | null} Metadata\n   * @api\n   */\n  readMetadata(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      return this.readMetadataFromDocument(parse(source));\n    }\n    if (isDocument(source)) {\n      return this.readMetadataFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readMetadataFromNode(source);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {GPXMetadata | null} Metadata\n   */\n  readMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        const metadata = this.readMetadataFromNode(/** @type {Element} */ (n));\n        if (metadata) {\n          return metadata;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Metadata\n   */\n  readMetadataFromNode(node) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName === 'metadata'\n      ) {\n        return pushParseAndPop({}, METADATA_PARSERS, n, []);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options],\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXAuthor | undefined} Person object.\n */\nfunction readAuthor(node, objectStack) {\n  const values = pushParseAndPop({}, AUTHOR_PARSERS, node, objectStack);\n  if (values) {\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXCopyright | undefined} Person object.\n */\nfunction readCopyright(node, objectStack) {\n  const values = pushParseAndPop({}, COPYRIGHT_PARSERS, node, objectStack);\n  if (values) {\n    const author = node.getAttribute('author');\n    if (author !== null) {\n      values['author'] = author;\n    }\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseBounds(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const minlat = node.getAttribute('minlat');\n  const minlon = node.getAttribute('minlon');\n  const maxlat = node.getAttribute('maxlat');\n  const maxlon = node.getAttribute('maxlon');\n  if (\n    minlon !== null &&\n    minlat !== null &&\n    maxlon !== null &&\n    maxlat !== null\n  ) {\n    values['bounds'] = [\n      [parseFloat(minlon), parseFloat(minlat)],\n      [parseFloat(maxlon), parseFloat(maxlat)],\n    ];\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseEmail(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  const domain = node.getAttribute('domain');\n  if (id !== null && domain !== null) {\n    values['email'] = `${id}@${domain}`;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @extends {FeatureFormat<T>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import('./Feature.js').FeatureClassToFeature<T>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return /** @type {import('./Feature.js').FeatureClassToFeature<T>} */ (\n      this.readFeatureFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      this.readFeaturesFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {FeatureClassToFeature} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof Feature]\n * @extends {JSONFeature<T>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options,\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options),\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_,\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source)),\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n)),\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this,\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames,\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i],\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this,\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                }),\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                }),\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName'],\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value'],\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value'],\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this,\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  }),\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ],\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints(),\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings(),\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons(),\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack,\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack,\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n * @property {FeatureClassToFeature} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import(\"../render/Feature.js\").default]\n * @extends {FeatureFormat<T>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        2,\n        values,\n        id,\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options],\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = values.flatCoordinates;\n        if (!flatCoordinates.length) {\n          for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n            const point = state.nodes[values.ndrefs[i]];\n            extend(flatCoordinates, point);\n          }\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      flatCoordinates: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack,\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n  if (node.hasAttribute('lon') && node.hasAttribute('lat')) {\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lon')));\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lat')));\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    throw new Error('Expected `feature` to have a geometry');\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options,\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this,\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName'),\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal,\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4],\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1],\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'),\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this,\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation,\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context,\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 'At least 2 conditions are required');\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])',\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds',\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * @typedef {Object} TransactionSummary\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {TransactionSummary} transactionSummary Transaction summary.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_,\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n),\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'),\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_,\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      [],\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_,\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array',\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set',\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter,\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context],\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter,\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version],\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request,\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj,\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack,\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  const name = createElementNS(ns, tagName);\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack,\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack,\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase,\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase,\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_,\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers,\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_,\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_,\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this),\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this),\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this),\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection,\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection,\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position),\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this,\n        ),\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent),\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent),\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this,\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false,\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false,\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2,\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this),\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromUserExtent} from '../proj.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label,\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : fromUserExtent(this.extent, view.getProjection());\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","import {CollectionEvent as _ol_Collection$CollectionEvent} from '../../ol/Collection.js';\nimport $ol$Collection from '../../ol/Collection.js';\nimport {asImageLike as _ol_DataTile$asImageLike} from '../../ol/DataTile.js';\nimport {asArrayLike as _ol_DataTile$asArrayLike} from '../../ol/DataTile.js';\nimport {toArray as _ol_DataTile$toArray} from '../../ol/DataTile.js';\nimport $ol$DataTile from '../../ol/DataTile.js';\nimport $ol$Disposable from '../../ol/Disposable.js';\nimport $ol$Feature from '../../ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from '../../ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from '../../ol/Geolocation.js';\nimport $ol$Geolocation from '../../ol/Geolocation.js';\nimport $ol$Image from '../../ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from '../../ol/Image.js';\nimport {load as _ol_Image$load} from '../../ol/Image.js';\nimport {decodeFallback as _ol_Image$decodeFallback} from '../../ol/Image.js';\nimport {decode as _ol_Image$decode} from '../../ol/Image.js';\nimport $ol$ImageCanvas from '../../ol/ImageCanvas.js';\nimport $ol$ImageTile from '../../ol/ImageTile.js';\nimport $ol$Kinetic from '../../ol/Kinetic.js';\nimport $ol$Map from '../../ol/Map.js';\nimport $ol$MapBrowserEvent from '../../ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from '../../ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from '../../ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from '../../ol/Object.js';\nimport $ol$Object from '../../ol/Object.js';\nimport $ol$Observable from '../../ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from '../../ol/Observable.js';\nimport $ol$Overlay from '../../ol/Overlay.js';\nimport $ol$Tile from '../../ol/Tile.js';\nimport $ol$TileCache from '../../ol/TileCache.js';\nimport $ol$TileQueue from '../../ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from '../../ol/TileQueue.js';\nimport $ol$TileRange from '../../ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from '../../ol/TileRange.js';\nimport $ol$VectorRenderTile from '../../ol/VectorRenderTile.js';\nimport $ol$View from '../../ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from '../../ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from '../../ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from '../../ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from '../../ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from '../../ol/array.js';\nimport {ascending as _ol_array$ascending} from '../../ol/array.js';\nimport {descending as _ol_array$descending} from '../../ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from '../../ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from '../../ol/array.js';\nimport {extend as _ol_array$extend} from '../../ol/array.js';\nimport {remove as _ol_array$remove} from '../../ol/array.js';\nimport {equals as _ol_array$equals} from '../../ol/array.js';\nimport {stableSort as _ol_array$stableSort} from '../../ol/array.js';\nimport {isSorted as _ol_array$isSorted} from '../../ol/array.js';\nimport {assert as _ol_asserts$assert} from '../../ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from '../../ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from '../../ol/centerconstraint.js';\nimport {asString as _ol_color$asString} from '../../ol/color.js';\nimport {withAlpha as _ol_color$withAlpha} from '../../ol/color.js';\nimport {rgbaToLcha as _ol_color$rgbaToLcha} from '../../ol/color.js';\nimport {lchaToRgba as _ol_color$lchaToRgba} from '../../ol/color.js';\nimport {fromString as _ol_color$fromString} from '../../ol/color.js';\nimport {asArray as _ol_color$asArray} from '../../ol/color.js';\nimport {normalize as _ol_color$normalize} from '../../ol/color.js';\nimport {toString as _ol_color$toString} from '../../ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from '../../ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from '../../ol/colorlike.js';\nimport {setLevel as _ol_console$setLevel} from '../../ol/console.js';\nimport {log as _ol_console$log} from '../../ol/console.js';\nimport {warn as _ol_console$warn} from '../../ol/console.js';\nimport {error as _ol_console$error} from '../../ol/console.js';\nimport {add as _ol_coordinate$add} from '../../ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from '../../ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from '../../ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from '../../ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from '../../ol/coordinate.js';\nimport {format as _ol_coordinate$format} from '../../ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from '../../ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from '../../ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from '../../ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from '../../ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from '../../ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from '../../ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from '../../ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from '../../ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from '../../ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from '../../ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from '../../ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from '../../ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from '../../ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from '../../ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from '../../ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from '../../ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from '../../ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from '../../ol/dom.js';\nimport {getSharedCanvasContext2D as _ol_dom$getSharedCanvasContext2D} from '../../ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from '../../ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from '../../ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from '../../ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from '../../ol/dom.js';\nimport {removeNode as _ol_dom$removeNode} from '../../ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from '../../ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from '../../ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from '../../ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from '../../ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from '../../ol/easing.js';\nimport {linear as _ol_easing$linear} from '../../ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from '../../ol/easing.js';\nimport {listen as _ol_events$listen} from '../../ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from '../../ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from '../../ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from '../../ol/extent.js';\nimport {buffer as _ol_extent$buffer} from '../../ol/extent.js';\nimport {clone as _ol_extent$clone} from '../../ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from '../../ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from '../../ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from '../../ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from '../../ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from '../../ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from '../../ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from '../../ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from '../../ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from '../../ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from '../../ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from '../../ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from '../../ol/extent.js';\nimport {equals as _ol_extent$equals} from '../../ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from '../../ol/extent.js';\nimport {extend as _ol_extent$extend} from '../../ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from '../../ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from '../../ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from '../../ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from '../../ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from '../../ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from '../../ol/extent.js';\nimport {getArea as _ol_extent$getArea} from '../../ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from '../../ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from '../../ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from '../../ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from '../../ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from '../../ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from '../../ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from '../../ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from '../../ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from '../../ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from '../../ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from '../../ol/extent.js';\nimport {getSize as _ol_extent$getSize} from '../../ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from '../../ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from '../../ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from '../../ol/extent.js';\nimport {intersects as _ol_extent$intersects} from '../../ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from '../../ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from '../../ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from '../../ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from '../../ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from '../../ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from '../../ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from '../../ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from '../../ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from '../../ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from '../../ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from '../../ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from '../../ol/functions.js';\nimport {VOID as _ol_functions$VOID} from '../../ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from '../../ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from '../../ol/functions.js';\nimport {FIREFOX as _ol_has$FIREFOX} from '../../ol/has.js';\nimport {SAFARI as _ol_has$SAFARI} from '../../ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from '../../ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from '../../ol/has.js';\nimport {MAC as _ol_has$MAC} from '../../ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from '../../ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from '../../ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from '../../ol/has.js';\nimport {CREATE_IMAGE_BITMAP as _ol_has$CREATE_IMAGE_BITMAP} from '../../ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from '../../ol/has.js';\nimport {all as _ol_loadingstrategy$all} from '../../ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from '../../ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from '../../ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from '../../ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from '../../ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from '../../ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from '../../ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from '../../ol/math.js';\nimport {toRadians as _ol_math$toRadians} from '../../ol/math.js';\nimport {modulo as _ol_math$modulo} from '../../ol/math.js';\nimport {lerp as _ol_math$lerp} from '../../ol/math.js';\nimport {toFixed as _ol_math$toFixed} from '../../ol/math.js';\nimport {round as _ol_math$round} from '../../ol/math.js';\nimport {floor as _ol_math$floor} from '../../ol/math.js';\nimport {ceil as _ol_math$ceil} from '../../ol/math.js';\nimport {jsonp as _ol_net$jsonp} from '../../ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from '../../ol/net.js';\nimport {ClientError as _ol_net$ClientError} from '../../ol/net.js';\nimport {getJSON as _ol_net$getJSON} from '../../ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from '../../ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from '../../ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from '../../ol/net.js';\nimport {clear as _ol_obj$clear} from '../../ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from '../../ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from '../../ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from '../../ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from '../../ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from '../../ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from '../../ol/proj.js';\nimport {get as _ol_proj$get} from '../../ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from '../../ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from '../../ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from '../../ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from '../../ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from '../../ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from '../../ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from '../../ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from '../../ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from '../../ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from '../../ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from '../../ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from '../../ol/proj.js';\nimport {transform as _ol_proj$transform} from '../../ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from '../../ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from '../../ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from '../../ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from '../../ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from '../../ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from '../../ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from '../../ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from '../../ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from '../../ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from '../../ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from '../../ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from '../../ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from '../../ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from '../../ol/proj.js';\nimport {toContext as _ol_render$toContext} from '../../ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from '../../ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from '../../ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from '../../ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from '../../ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from '../../ol/reproj.js';\nimport {render as _ol_reproj$render} from '../../ol/reproj.js';\nimport {fromResolutionLike as _ol_resolution$fromResolutionLike} from '../../ol/resolution.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from '../../ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from '../../ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from '../../ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from '../../ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from '../../ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from '../../ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from '../../ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from '../../ol/size.js';\nimport {hasArea as _ol_size$hasArea} from '../../ol/size.js';\nimport {scale as _ol_size$scale} from '../../ol/size.js';\nimport {toSize as _ol_size$toSize} from '../../ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from '../../ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from '../../ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from '../../ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from '../../ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from '../../ol/sphere.js';\nimport {offset as _ol_sphere$offset} from '../../ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from '../../ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from '../../ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from '../../ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from '../../ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from '../../ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from '../../ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from '../../ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from '../../ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from '../../ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from '../../ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from '../../ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from '../../ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from '../../ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from '../../ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from '../../ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from '../../ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from '../../ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from '../../ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from '../../ol/tileurlfunction.js';\nimport {expandUrl as _ol_tileurlfunction$expandUrl} from '../../ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from '../../ol/transform.js';\nimport {reset as _ol_transform$reset} from '../../ol/transform.js';\nimport {multiply as _ol_transform$multiply} from '../../ol/transform.js';\nimport {set as _ol_transform$set} from '../../ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from '../../ol/transform.js';\nimport {apply as _ol_transform$apply} from '../../ol/transform.js';\nimport {rotate as _ol_transform$rotate} from '../../ol/transform.js';\nimport {scale as _ol_transform$scale} from '../../ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from '../../ol/transform.js';\nimport {translate as _ol_transform$translate} from '../../ol/transform.js';\nimport {compose as _ol_transform$compose} from '../../ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from '../../ol/transform.js';\nimport {invert as _ol_transform$invert} from '../../ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from '../../ol/transform.js';\nimport {determinant as _ol_transform$determinant} from '../../ol/transform.js';\nimport {toString as _ol_transform$toString} from '../../ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from '../../ol/uri.js';\nimport {abstract as _ol_util$abstract} from '../../ol/util.js';\nimport {getUid as _ol_util$getUid} from '../../ol/util.js';\nimport {VERSION as _ol_util$VERSION} from '../../ol/util.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from '../../ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from '../../ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from '../../ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from '../../ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from '../../ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from '../../ol/xml.js';\nimport {parse as _ol_xml$parse} from '../../ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from '../../ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from '../../ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from '../../ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from '../../ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from '../../ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from '../../ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from '../../ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from '../../ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from '../../ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from '../../ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from '../../ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from '../../ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from '../../ol/xml.js';\nimport {serialize as _ol_xml$serialize} from '../../ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from '../../ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from '../../ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from '../../ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from '../../ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from '../../ol/xml.js';\nimport {create as _ol_vec_mat4$create} from '../../ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from '../../ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from '../../ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from '../../ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from '../../ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from '../../ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from '../../ol/tilegrid/common.js';\nimport $ol$style$Circle from '../../ol/style/Circle.js';\nimport $ol$style$Fill from '../../ol/style/Fill.js';\nimport $ol$style$Icon from '../../ol/style/Icon.js';\nimport $ol$style$IconImage from '../../ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from '../../ol/style/IconImage.js';\nimport $ol$style$IconImageCache from '../../ol/style/IconImageCache.js';\nimport {getCacheKey as _ol_style_IconImageCache$getCacheKey} from '../../ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from '../../ol/style/IconImageCache.js';\nimport $ol$style$Image from '../../ol/style/Image.js';\nimport $ol$style$RegularShape from '../../ol/style/RegularShape.js';\nimport $ol$style$Stroke from '../../ol/style/Stroke.js';\nimport $ol$style$Style from '../../ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from '../../ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from '../../ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from '../../ol/style/Style.js';\nimport $ol$style$Text from '../../ol/style/Text.js';\nimport {createDefaultStyle as _ol_style_flat$createDefaultStyle} from '../../ol/style/flat.js';\nimport $ol$structs$LRUCache from '../../ol/structs/LRUCache.js';\nimport $ol$structs$LinkedList from '../../ol/structs/LinkedList.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from '../../ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from '../../ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from '../../ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from '../../ol/source/BingMaps.js';\nimport $ol$source$BingMaps from '../../ol/source/BingMaps.js';\nimport $ol$source$Cluster from '../../ol/source/Cluster.js';\nimport $ol$source$DataTile from '../../ol/source/DataTile.js';\nimport $ol$source$Google from '../../ol/source/Google.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from '../../ol/source/Image.js';\nimport $ol$source$Image from '../../ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from '../../ol/source/Image.js';\nimport {getRequestExtent as _ol_source_Image$getRequestExtent} from '../../ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from '../../ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from '../../ol/source/ImageCanvas.js';\nimport $ol$source$ImageStatic from '../../ol/source/ImageStatic.js';\nimport $ol$source$ImageWMS from '../../ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from '../../ol/source/OGCMapTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from '../../ol/source/OSM.js';\nimport $ol$source$OSM from '../../ol/source/OSM.js';\nimport {newImageData as _ol_source_Raster$newImageData} from '../../ol/source/Raster.js';\nimport {Processor as _ol_source_Raster$Processor} from '../../ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from '../../ol/source/Raster.js';\nimport $ol$source$Raster from '../../ol/source/Raster.js';\nimport $ol$source$Source from '../../ol/source/Source.js';\nimport $ol$source$StadiaMaps from '../../ol/source/StadiaMaps.js';\nimport $ol$source$Tile from '../../ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from '../../ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from '../../ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from '../../ol/source/TileDebug.js';\nimport $ol$source$TileImage from '../../ol/source/TileImage.js';\nimport $ol$source$TileJSON from '../../ol/source/TileJSON.js';\nimport $ol$source$TileWMS from '../../ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from '../../ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from '../../ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from '../../ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from '../../ol/source/Vector.js';\nimport $ol$source$Vector from '../../ol/source/Vector.js';\nimport $ol$source$WMTS from '../../ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from '../../ol/source/WMTS.js';\nimport $ol$source$XYZ from '../../ol/source/XYZ.js';\nimport {getRequestUrl as _ol_source_arcgisRest$getRequestUrl} from '../../ol/source/arcgisRest.js';\nimport {createLoader as _ol_source_arcgisRest$createLoader} from '../../ol/source/arcgisRest.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from '../../ol/source/common.js';\nimport {DECIMALS as _ol_source_common$DECIMALS} from '../../ol/source/common.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from '../../ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from '../../ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from '../../ol/source/ogcTileUtil.js';\nimport {createLoader as _ol_source_static$createLoader} from '../../ol/source/static.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from '../../ol/source/wms.js';\nimport {getRequestUrl as _ol_source_wms$getRequestUrl} from '../../ol/source/wms.js';\nimport {getImageSrc as _ol_source_wms$getImageSrc} from '../../ol/source/wms.js';\nimport {getRequestParams as _ol_source_wms$getRequestParams} from '../../ol/source/wms.js';\nimport {createLoader as _ol_source_wms$createLoader} from '../../ol/source/wms.js';\nimport {getFeatureInfoUrl as _ol_source_wms$getFeatureInfoUrl} from '../../ol/source/wms.js';\nimport {getLegendUrl as _ol_source_wms$getLegendUrl} from '../../ol/source/wms.js';\nimport $ol$reproj$DataTile from '../../ol/reproj/DataTile.js';\nimport $ol$reproj$Image from '../../ol/reproj/Image.js';\nimport $ol$reproj$Tile from '../../ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from '../../ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from '../../ol/reproj/common.js';\nimport $ol$renderer$Composite from '../../ol/renderer/Composite.js';\nimport $ol$renderer$Layer from '../../ol/renderer/Layer.js';\nimport $ol$renderer$Map from '../../ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from '../../ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from '../../ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from '../../ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from '../../ol/renderer/vector.js';\nimport $ol$renderer$canvas$ImageLayer from '../../ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from '../../ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from '../../ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from '../../ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from '../../ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from '../../ol/renderer/canvas/VectorLayer.js';\nimport $ol$render$Box from '../../ol/render/Box.js';\nimport $ol$render$Event from '../../ol/render/Event.js';\nimport $ol$render$Feature from '../../ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from '../../ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from '../../ol/render/Feature.js';\nimport $ol$render$VectorContext from '../../ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from '../../ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from '../../ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from '../../ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from '../../ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from '../../ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from '../../ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from '../../ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from '../../ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from '../../ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from '../../ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from '../../ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from '../../ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from '../../ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from '../../ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from '../../ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from '../../ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from '../../ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from '../../ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from '../../ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from '../../ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from '../../ol/render/canvas.js';\nimport $ol$render$canvas$Builder from '../../ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from '../../ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from '../../ol/render/canvas/Executor.js';\nimport {ALL as _ol_render_canvas_ExecutorGroup$ALL} from '../../ol/render/canvas/ExecutorGroup.js';\nimport {DECLUTTER as _ol_render_canvas_ExecutorGroup$DECLUTTER} from '../../ol/render/canvas/ExecutorGroup.js';\nimport {NON_DECLUTTER as _ol_render_canvas_ExecutorGroup$NON_DECLUTTER} from '../../ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ExecutorGroup from '../../ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from '../../ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from '../../ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from '../../ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from '../../ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from '../../ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from '../../ol/render/canvas/PolygonBuilder.js';\nimport {TEXT_ALIGN as _ol_render_canvas_TextBuilder$TEXT_ALIGN} from '../../ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$TextBuilder from '../../ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$ZIndexContext from '../../ol/render/canvas/ZIndexContext.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from '../../ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from '../../ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from '../../ol/render/canvas/hitdetect.js';\nimport {rulesToStyleFunction as _ol_render_canvas_style$rulesToStyleFunction} from '../../ol/render/canvas/style.js';\nimport {flatStylesToStyleFunction as _ol_render_canvas_style$flatStylesToStyleFunction} from '../../ol/render/canvas/style.js';\nimport {buildRuleSet as _ol_render_canvas_style$buildRuleSet} from '../../ol/render/canvas/style.js';\nimport {buildStyle as _ol_render_canvas_style$buildStyle} from '../../ol/render/canvas/style.js';\nimport $ol$proj$Projection from '../../ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from '../../ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from '../../ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from '../../ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from '../../ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from '../../ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from '../../ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from '../../ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from '../../ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from '../../ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from '../../ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from '../../ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from '../../ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from '../../ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from '../../ol/proj/epsg4326.js';\nimport {isRegistered as _ol_proj_proj4$isRegistered} from '../../ol/proj/proj4.js';\nimport {unregister as _ol_proj_proj4$unregister} from '../../ol/proj/proj4.js';\nimport {register as _ol_proj_proj4$register} from '../../ol/proj/proj4.js';\nimport {setEPSGLookup as _ol_proj_proj4$setEPSGLookup} from '../../ol/proj/proj4.js';\nimport {getEPSGLookup as _ol_proj_proj4$getEPSGLookup} from '../../ol/proj/proj4.js';\nimport {fromEPSGCode as _ol_proj_proj4$fromEPSGCode} from '../../ol/proj/proj4.js';\nimport {epsgLookupMapTiler as _ol_proj_proj4$epsgLookupMapTiler} from '../../ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from '../../ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from '../../ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from '../../ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from '../../ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from '../../ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from '../../ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from '../../ol/proj/transforms.js';\nimport $ol$layer$Base from '../../ol/layer/Base.js';\nimport $ol$layer$BaseImage from '../../ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from '../../ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from '../../ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from '../../ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from '../../ol/layer/Group.js';\nimport $ol$layer$Group from '../../ol/layer/Group.js';\nimport $ol$layer$Heatmap from '../../ol/layer/Heatmap.js';\nimport $ol$layer$Image from '../../ol/layer/Image.js';\nimport $ol$layer$Layer from '../../ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from '../../ol/layer/Layer.js';\nimport $ol$layer$Tile from '../../ol/layer/Tile.js';\nimport $ol$layer$Vector from '../../ol/layer/Vector.js';\nimport $ol$layer$VectorImage from '../../ol/layer/VectorImage.js';\nimport $ol$interaction$DblClickDragZoom from '../../ol/interaction/DblClickDragZoom.js';\nimport $ol$interaction$DoubleClickZoom from '../../ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from '../../ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from '../../ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from '../../ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from '../../ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from '../../ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from '../../ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from '../../ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from '../../ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from '../../ol/interaction/Draw.js';\nimport $ol$interaction$Draw from '../../ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from '../../ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from '../../ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from '../../ol/interaction/Extent.js';\nimport $ol$interaction$Extent from '../../ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from '../../ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from '../../ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from '../../ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from '../../ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from '../../ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from '../../ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from '../../ol/interaction/Modify.js';\nimport $ol$interaction$Modify from '../../ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from '../../ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from '../../ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from '../../ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from '../../ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from '../../ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from '../../ol/interaction/Select.js';\nimport $ol$interaction$Select from '../../ol/interaction/Select.js';\nimport $ol$interaction$Snap from '../../ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from '../../ol/interaction/Translate.js';\nimport $ol$interaction$Translate from '../../ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from '../../ol/interaction/defaults.js';\nimport $ol$geom$Circle from '../../ol/geom/Circle.js';\nimport $ol$geom$Geometry from '../../ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from '../../ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from '../../ol/geom/LineString.js';\nimport $ol$geom$LinearRing from '../../ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from '../../ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from '../../ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from '../../ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from '../../ol/geom/Point.js';\nimport $ol$geom$Polygon from '../../ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from '../../ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from '../../ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from '../../ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from '../../ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from '../../ol/geom/SimpleGeometry.js';\nimport {getLayoutForStride as _ol_geom_SimpleGeometry$getLayoutForStride} from '../../ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from '../../ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from '../../ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from '../../ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from '../../ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from '../../ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from '../../ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from '../../ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from '../../ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from '../../ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from '../../ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from '../../ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from '../../ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from '../../ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from '../../ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from '../../ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from '../../ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from '../../ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from '../../ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from '../../ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from '../../ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from '../../ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from '../../ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from '../../ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from '../../ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from '../../ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from '../../ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from '../../ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from '../../ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from '../../ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from '../../ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from '../../ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from '../../ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from '../../ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from '../../ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from '../../ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from '../../ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from '../../ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from '../../ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from '../../ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from '../../ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from '../../ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from '../../ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from '../../ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from '../../ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from '../../ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from '../../ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from '../../ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from '../../ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from '../../ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from '../../ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from '../../ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from '../../ol/geom/flat/transform.js';\nimport $ol$format$Feature from '../../ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from '../../ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from '../../ol/format/Feature.js';\nimport {createRenderFeature as _ol_format_Feature$createRenderFeature} from '../../ol/format/Feature.js';\nimport {createGeometry as _ol_format_Feature$createGeometry} from '../../ol/format/Feature.js';\nimport $ol$format$GPX from '../../ol/format/GPX.js';\nimport $ol$format$GeoJSON from '../../ol/format/GeoJSON.js';\nimport $ol$format$IGC from '../../ol/format/IGC.js';\nimport $ol$format$JSONFeature from '../../ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from '../../ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from '../../ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from '../../ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from '../../ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from '../../ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from '../../ol/format/KML.js';\nimport $ol$format$KML from '../../ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from '../../ol/format/KML.js';\nimport $ol$format$MVT from '../../ol/format/MVT.js';\nimport $ol$format$OSMXML from '../../ol/format/OSMXML.js';\nimport $ol$format$OWS from '../../ol/format/OWS.js';\nimport $ol$format$Polyline from '../../ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from '../../ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from '../../ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from '../../ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from '../../ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from '../../ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from '../../ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from '../../ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from '../../ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from '../../ol/format/Polyline.js';\nimport $ol$format$TextFeature from '../../ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from '../../ol/format/TopoJSON.js';\nimport $ol$format$WFS from '../../ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from '../../ol/format/WFS.js';\nimport $ol$format$WMSGetFeatureInfo from '../../ol/format/WMSGetFeatureInfo.js';\nimport $ol$format$WMTSCapabilities from '../../ol/format/WMTSCapabilities.js';\nimport {readHref as _ol_format_xlink$readHref} from '../../ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from '../../ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from '../../ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from '../../ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from '../../ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from '../../ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from '../../ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from '../../ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from '../../ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from '../../ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from '../../ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from '../../ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from '../../ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from '../../ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from '../../ol/format/xsd.js';\nimport {newEvaluationContext as _ol_expr_cpu$newEvaluationContext} from '../../ol/expr/cpu.js';\nimport {buildExpression as _ol_expr_cpu$buildExpression} from '../../ol/expr/cpu.js';\nimport {NoneType as _ol_expr_expression$NoneType} from '../../ol/expr/expression.js';\nimport {BooleanType as _ol_expr_expression$BooleanType} from '../../ol/expr/expression.js';\nimport {NumberType as _ol_expr_expression$NumberType} from '../../ol/expr/expression.js';\nimport {StringType as _ol_expr_expression$StringType} from '../../ol/expr/expression.js';\nimport {ColorType as _ol_expr_expression$ColorType} from '../../ol/expr/expression.js';\nimport {NumberArrayType as _ol_expr_expression$NumberArrayType} from '../../ol/expr/expression.js';\nimport {AnyType as _ol_expr_expression$AnyType} from '../../ol/expr/expression.js';\nimport {typeName as _ol_expr_expression$typeName} from '../../ol/expr/expression.js';\nimport {includesType as _ol_expr_expression$includesType} from '../../ol/expr/expression.js';\nimport {overlapsType as _ol_expr_expression$overlapsType} from '../../ol/expr/expression.js';\nimport {isType as _ol_expr_expression$isType} from '../../ol/expr/expression.js';\nimport {LiteralExpression as _ol_expr_expression$LiteralExpression} from '../../ol/expr/expression.js';\nimport {CallExpression as _ol_expr_expression$CallExpression} from '../../ol/expr/expression.js';\nimport {newParsingContext as _ol_expr_expression$newParsingContext} from '../../ol/expr/expression.js';\nimport {parse as _ol_expr_expression$parse} from '../../ol/expr/expression.js';\nimport {Ops as _ol_expr_expression$Ops} from '../../ol/expr/expression.js';\nimport {computeGeometryType as _ol_expr_expression$computeGeometryType} from '../../ol/expr/expression.js';\nimport {numberToGlsl as _ol_expr_gpu$numberToGlsl} from '../../ol/expr/gpu.js';\nimport {arrayToGlsl as _ol_expr_gpu$arrayToGlsl} from '../../ol/expr/gpu.js';\nimport {colorToGlsl as _ol_expr_gpu$colorToGlsl} from '../../ol/expr/gpu.js';\nimport {getStringNumberEquivalent as _ol_expr_gpu$getStringNumberEquivalent} from '../../ol/expr/gpu.js';\nimport {stringToGlsl as _ol_expr_gpu$stringToGlsl} from '../../ol/expr/gpu.js';\nimport {uniformNameForVariable as _ol_expr_gpu$uniformNameForVariable} from '../../ol/expr/gpu.js';\nimport {newCompilationContext as _ol_expr_gpu$newCompilationContext} from '../../ol/expr/gpu.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_expr_gpu$PALETTE_TEXTURE_ARRAY} from '../../ol/expr/gpu.js';\nimport {buildExpression as _ol_expr_gpu$buildExpression} from '../../ol/expr/gpu.js';\nimport $ol$events$Event from '../../ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from '../../ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from '../../ol/events/Event.js';\nimport {SnapEvent as _ol_events_SnapEvent$SnapEvent} from '../../ol/events/SnapEvent.js';\nimport $ol$events$Target from '../../ol/events/Target.js';\nimport {all as _ol_events_condition$all} from '../../ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from '../../ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from '../../ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from '../../ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from '../../ol/events/condition.js';\nimport {always as _ol_events_condition$always} from '../../ol/events/condition.js';\nimport {click as _ol_events_condition$click} from '../../ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from '../../ol/events/condition.js';\nimport {never as _ol_events_condition$never} from '../../ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from '../../ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from '../../ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from '../../ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from '../../ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from '../../ol/events/condition.js';\nimport {platformModifierKey as _ol_events_condition$platformModifierKey} from '../../ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from '../../ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from '../../ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from '../../ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from '../../ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from '../../ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from '../../ol/events/condition.js';\nimport $ol$control$Attribution from '../../ol/control/Attribution.js';\nimport $ol$control$Control from '../../ol/control/Control.js';\nimport $ol$control$FullScreen from '../../ol/control/FullScreen.js';\nimport $ol$control$MousePosition from '../../ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from '../../ol/control/OverviewMap.js';\nimport $ol$control$Rotate from '../../ol/control/Rotate.js';\nimport $ol$control$ScaleLine from '../../ol/control/ScaleLine.js';\nimport $ol$control$Zoom from '../../ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from '../../ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from '../../ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from '../../ol/control/defaults.js';\n\nvar ol = {};\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.DataTile.asArrayLike = _ol_DataTile$asArrayLike;\nol.DataTile.asImageLike = _ol_DataTile$asImageLike;\nol.DataTile.toArray = _ol_DataTile$toArray;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.Image.decode = _ol_Image$decode;\nol.Image.decodeFallback = _ol_Image$decodeFallback;\nol.Image.listenImage = _ol_Image$listenImage;\nol.Image.load = _ol_Image$load;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.ascending = _ol_array$ascending;\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.descending = _ol_array$descending;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.lchaToRgba = _ol_color$lchaToRgba;\nol.color.normalize = _ol_color$normalize;\nol.color.rgbaToLcha = _ol_color$rgbaToLcha;\nol.color.toString = _ol_color$toString;\nol.color.withAlpha = _ol_color$withAlpha;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.console = {};\nol.console.error = _ol_console$error;\nol.console.log = _ol_console$log;\nol.console.setLevel = _ol_console$setLevel;\nol.console.warn = _ol_console$warn;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.getSharedCanvasContext2D = _ol_dom$getSharedCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.removeNode = _ol_dom$removeNode;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.SnapEvent = {};\nol.events.SnapEvent.SnapEvent = _ol_events_SnapEvent$SnapEvent;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKey = _ol_events_condition$platformModifierKey;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.expr = {};\nol.expr.cpu = {};\nol.expr.cpu.buildExpression = _ol_expr_cpu$buildExpression;\nol.expr.cpu.newEvaluationContext = _ol_expr_cpu$newEvaluationContext;\nol.expr.expression = {};\nol.expr.expression.AnyType = _ol_expr_expression$AnyType;\nol.expr.expression.BooleanType = _ol_expr_expression$BooleanType;\nol.expr.expression.CallExpression = _ol_expr_expression$CallExpression;\nol.expr.expression.ColorType = _ol_expr_expression$ColorType;\nol.expr.expression.LiteralExpression = _ol_expr_expression$LiteralExpression;\nol.expr.expression.NoneType = _ol_expr_expression$NoneType;\nol.expr.expression.NumberArrayType = _ol_expr_expression$NumberArrayType;\nol.expr.expression.NumberType = _ol_expr_expression$NumberType;\nol.expr.expression.Ops = _ol_expr_expression$Ops;\nol.expr.expression.StringType = _ol_expr_expression$StringType;\nol.expr.expression.computeGeometryType = _ol_expr_expression$computeGeometryType;\nol.expr.expression.includesType = _ol_expr_expression$includesType;\nol.expr.expression.isType = _ol_expr_expression$isType;\nol.expr.expression.newParsingContext = _ol_expr_expression$newParsingContext;\nol.expr.expression.overlapsType = _ol_expr_expression$overlapsType;\nol.expr.expression.parse = _ol_expr_expression$parse;\nol.expr.expression.typeName = _ol_expr_expression$typeName;\nol.expr.gpu = {};\nol.expr.gpu.PALETTE_TEXTURE_ARRAY = _ol_expr_gpu$PALETTE_TEXTURE_ARRAY;\nol.expr.gpu.arrayToGlsl = _ol_expr_gpu$arrayToGlsl;\nol.expr.gpu.buildExpression = _ol_expr_gpu$buildExpression;\nol.expr.gpu.colorToGlsl = _ol_expr_gpu$colorToGlsl;\nol.expr.gpu.getStringNumberEquivalent = _ol_expr_gpu$getStringNumberEquivalent;\nol.expr.gpu.newCompilationContext = _ol_expr_gpu$newCompilationContext;\nol.expr.gpu.numberToGlsl = _ol_expr_gpu$numberToGlsl;\nol.expr.gpu.stringToGlsl = _ol_expr_gpu$stringToGlsl;\nol.expr.gpu.uniformNameForVariable = _ol_expr_gpu$uniformNameForVariable;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.createGeometry = _ol_format_Feature$createGeometry;\nol.format.Feature.createRenderFeature = _ol_format_Feature$createRenderFeature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getLayoutForStride = _ol_geom_SimpleGeometry$getLayoutForStride;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.CREATE_IMAGE_BITMAP = _ol_has$CREATE_IMAGE_BITMAP;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.FIREFOX = _ol_has$FIREFOX;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DblClickDragZoom = $ol$interaction$DblClickDragZoom;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.epsgLookupMapTiler = _ol_proj_proj4$epsgLookupMapTiler;\nol.proj.proj4.fromEPSGCode = _ol_proj_proj4$fromEPSGCode;\nol.proj.proj4.getEPSGLookup = _ol_proj_proj4$getEPSGLookup;\nol.proj.proj4.isRegistered = _ol_proj_proj4$isRegistered;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.proj4.setEPSGLookup = _ol_proj_proj4$setEPSGLookup;\nol.proj.proj4.unregister = _ol_proj_proj4$unregister;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.ALL = _ol_render_canvas_ExecutorGroup$ALL;\nol.render.canvas.ExecutorGroup.DECLUTTER = _ol_render_canvas_ExecutorGroup$DECLUTTER;\nol.render.canvas.ExecutorGroup.NON_DECLUTTER = _ol_render_canvas_ExecutorGroup$NON_DECLUTTER;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.TextBuilder.TEXT_ALIGN = _ol_render_canvas_TextBuilder$TEXT_ALIGN;\nol.render.canvas.ZIndexContext = $ol$render$canvas$ZIndexContext;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.style = {};\nol.render.canvas.style.buildRuleSet = _ol_render_canvas_style$buildRuleSet;\nol.render.canvas.style.buildStyle = _ol_render_canvas_style$buildStyle;\nol.render.canvas.style.flatStylesToStyleFunction = _ol_render_canvas_style$flatStylesToStyleFunction;\nol.render.canvas.style.rulesToStyleFunction = _ol_render_canvas_style$rulesToStyleFunction;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.render = _ol_reproj$render;\nol.resolution = {};\nol.resolution.fromResolutionLike = _ol_resolution$fromResolutionLike;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.Google = $ol$source$Google;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.Image.getRequestExtent = _ol_source_Image$getRequestExtent;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Raster.newImageData = _ol_source_Raster$newImageData;\nol.source.Source = $ol$source$Source;\nol.source.StadiaMaps = $ol$source$StadiaMaps;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.arcgisRest = {};\nol.source.arcgisRest.createLoader = _ol_source_arcgisRest$createLoader;\nol.source.arcgisRest.getRequestUrl = _ol_source_arcgisRest$getRequestUrl;\nol.source.common = {};\nol.source.common.DECIMALS = _ol_source_common$DECIMALS;\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.static = {};\nol.source.static.createLoader = _ol_source_static$createLoader;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.source.wms.createLoader = _ol_source_wms$createLoader;\nol.source.wms.getFeatureInfoUrl = _ol_source_wms$getFeatureInfoUrl;\nol.source.wms.getImageSrc = _ol_source_wms$getImageSrc;\nol.source.wms.getLegendUrl = _ol_source_wms$getLegendUrl;\nol.source.wms.getRequestParams = _ol_source_wms$getRequestParams;\nol.source.wms.getRequestUrl = _ol_source_wms$getRequestUrl;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.LinkedList = $ol$structs$LinkedList;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.getCacheKey = _ol_style_IconImageCache$getCacheKey;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.flat = {};\nol.style.flat.createDefaultStyle = _ol_style_flat$createDefaultStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.expandUrl = _ol_tileurlfunction$expandUrl;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nexport default ol;","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as Google} from './source/Google.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OGCMapTile} from './source/OGCMapTile.js';\nexport {default as OGCVectorTile} from './source/OGCVectorTile.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as StadiaMaps} from './source/StadiaMaps.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\nexport {createLoader as createWMSLoader} from './source/wms.js';\nexport {createLoader as createArcGISRestLoader} from './source/arcgisRest.js';\nexport {createLoader as createStaticLoader} from './source/static.js';\nexport {createLoader as createMapGuideLoader} from './source/mapguide.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n"],"names":["stopPropagation","evt","$ol$events$Event","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","ObjectEventType","$ol$Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","$ol$events$Target","Disposable","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","EventType","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","$ol$Observable","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","$ol$Object","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","$ol$Tile","tileCoord","state","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","sharedContext","toArray","image","willReadFrequently","drawImage","getImageData","defaultSize","$ol$DataTile","Tile","loader_","loader","data_","error_","size_","size","getSize","imageData","getData","getError","then","catch","assert","assertion","errorMessage","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","name","styles","$ol$Feature","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","sin","scale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","matrixPrecision","toString","map","round","join","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","unitByCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","$ol$proj$Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","toLonLat","lonLat","lon","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","tmpTransform","$ol$geom$Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getLayoutForStride","layout","getStrideForLayout","transformGeom2D","simpleGeometry","getFlatCoordinates","getStride","$ol$geom$SimpleGeometry","Geometry","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","$ol$geom$LinearRing","Point","$ol$geom$Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","$ol$geom$Polygon","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationErrorType","GeolocationError","BaseEvent","message","$ol$Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","ImageState","IDLE","LOADING","LOADED","ERROR","EMPTY","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","handleLoad","unlisten","handleError","decodeFallback","complete","$ol$Image","pixelRatio","stateOrLoader","pixelRatio_","image_","getImage","getPixelRatio","getResolution","requestResolution","HTMLImageElement","finally","setImage","setResolution","$ol$ImageCanvas","ImageWrapper","canvas_","handleLoad_","$ol$ImageTile","crossOrigin","tileLoadFunction","crossOrigin_","src_","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","$ol$Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","LayerProperty","$ol$layer$Base","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","RenderEventType","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","animationCallback","returnValue","setTimeout","createCenterConstraint","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","createResolutionConstraint","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","createRotationConstraint","enableRotation","constrainRotation","rotationNone","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","$ol$View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","zoom","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","series","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","$ol$layer$Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","isVisible","view","frameState","getMapInternal","getView","View","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","quickselect","left","quickselectStep","defaultCompare","s","sd","swap","RBush$1","maxEntries","_maxEntries","_minEntries","all","_all","search","bbox","toBBox","nodesToSearch","child","childBBox","leaf","contains","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","hasArea","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","ready","$ol$style$Image","rgb","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","_xyz","white","g","xyz$1","luv","arg","o","_u","_v","u","v","xn","yn","zn","vn","yr","lchuv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","hsl","t1","t2","t3","rgba","color","raw","Number","parsed","cstr","space","parts","alpha","names","base","exec","dims","trim","parseFloat","endsWith","match","parse","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","isStringColor","_","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getCacheKey","getPattern","pattern","createPattern","setSize","maxCacheSize","$ol$style$IconImageCache","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","color_","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","globalCompositeOperation","onChange","cacheKey","iconImageCache","$ol$style$IconImage","asColorLike","iconCache","canvasPattern","patternCanvasContext","getIconImage","asCanvasPattern","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","restore","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$ol$style$RegularShape","CircleStyle","setRadius","$ol$style$Circle","Fill","patternImage_","setColor","patternImage","$ol$style$Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$ol$style$Stroke","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","concat","$ol$style$Style","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","$ol$style$Icon","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$ol$style$Text","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","featureId","geometryType","encoded","typeHint","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","createParser","getTypeFromHint","withArgsCount","firstArg","parsedArgs","varName","initialValue","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","JSON","stringify","interpolationType","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","computeGeometryType","substring","getGeometries","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","Circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","$ol$layer$BaseVector","Layer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","expireIconCache","$ol$renderer$Map","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ol$render$Event","inversePixelTransform","$ol$renderer$Composite","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","RenderEvent","BaseVectorLayer","renderedLayerStates","previousElement","layerIndex","sourceState","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$ol$layer$Group","$ol$MapEvent","$ol$MapBrowserEvent","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","$ol$MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","$ol$structs$PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$ol$TileQueue","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","$ol$control$Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$ol$control$Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","attribution","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$ol$control$Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","$ol$control$Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","Rotate","rotateOptions","Attribution","attributionOptions","InteractionProperty","pan","zoomByDelta","$ol$interaction$Interaction","setActive","getActive","mapBrowserEvent","active","$ol$interaction$DoubleClickZoom","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","$ol$interaction$Pointer","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","$ol$interaction$DragPan","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$ol$interaction$DragRotate","lastAngle_","$ol$render$Box","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","$ol$interaction$DragBox","box_","RenderBox","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$ol$interaction$DragZoom","DragBox","out_","out","Key","$ol$interaction$KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","$ol$interaction$KeyboardZoom","$ol$interaction$MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$ol$interaction$PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$ol$interaction$PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","removeLayerMapProperty","setLayerMapProperty","$ol$Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","$ol$Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","$ol$structs$LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","tileRange","getFullTileRange","$ol$TileCache","LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","$ol$TileRange","$ol$VectorRenderTile","urlTileCoord","getSourceTiles","context_","executorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","dirty","renderedRenderOrder","renderedResolution","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","setRequestHeader","resolveUrl","URL","href","$ol$render$VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","$ol$render$canvas$Immediate","VectorContext","viewRotation","userTransform","transformRotation_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","beginPath","setTransform","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","getBuilder","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","hasImage","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","CanvasImmediateRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","fromResolutionLike","ERROR_THRESHOLD","$ol$reproj$Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","$ol$reproj$Tile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","adaptAttributions","attributionLike","$ol$source$Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","tmpTileCoord","$ol$tilegrid$TileGrid","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","WMTSTileGrid","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","$ol$tilegrid$WMTS","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","substr","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","$ol$source$Tile","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","$ol$source$UrlTile","defaultTileLoadFunction","imageTile","$ol$source$TileImage","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","ReprojTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","quadKey","digits","mask","$ol$source$BingMaps","TileImage","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","placeholderTiles_","placeholderTiles","fetch","json","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","params","searchParams","delete","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","$ol$source$XYZ","$ol$structs$RBush","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","setCenterAndRadius","getRadiusSquared_","$ol$geom$Circle","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","$ol$geom$GeometryCollection","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","lineStringLength","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","$ol$geom$LineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","$ol$geom$MultiLineString","appendPoint","multiPoint","getPoint","$ol$geom$MultiPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","$ol$geom$MultiPolygon","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","midpoint","enableSimplifyTransformed","toGeometry","$ol$render$Feature","VectorEventType","VectorSourceEvent","$ol$source$Vector","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","removed","setLoader","$ol$source$Cluster","VectorSource","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$reproj$DataTile","DataTile","reprojData_","reprojError_","reprojSize_","dataSources","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","$ol$source$DataTile","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","textureSize","ReprojDataTile","sourceLoader","$ol$source$Google","highDpi","sessionTokenRequest","mapType","language","region","imageFormat","layerTypes","sessionTokenRequest_","sessionTokenValue_","sessionRefreshId_","previousViewportAttribution_","previousViewportExtent_","createSession_","fetchSessionToken","config","createSessionUrl","method","headers","ok","sessionTokenResponse","session","expiry","fetchAttributions_","west","south","east","north","viewportExtent","copyright","$ol$reproj$Image","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","DECIMALS","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","getRequestExtent","imageResolution","$ol$source$Image","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","ReprojImage","requestExtent","handleImageChange","appendParams","uri","keyParams","encodeURIComponent","qs","getRequestUrl","baseUrl","srid","createLoader","F","FORMAT","TRANSPARENT","$ol$source$ImageArcGISRest","ImageSource","imageLoadFunction_","imageLoadFunction","params_","imageSize_","renderedRevision_","ratio_","loaderProjection_","getParams","getImageLoadFunction","setImageLoadFunction","updateParams","$ol$source$ImageCanvas","canvasFunction_","canvasFunction","canvasElement","ImageCanvas","imageExtent","resolutionX","resolutionY","$ol$source$ImageStatic","imageExtent_","getImageExtent","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","v13","getImageSrc","serverType","REQUEST","dpi","getRequestParams","request","SERVICE","VERSION","STYLES","getFeatureInfoUrl","projectionObj","baseParams","QUERY_LAYERS","INFO_FORMAT","getLegendUrl","LAYERS","mpu","$ol$source$ImageWMS","serverType_","sourceProjectionObj","knownMapMediaTypes","knownVectorMediaTypes","getMapTileUrlTemplate","links","mediaType","tileUrlTemplate","fallbackUrlTemplate","link","rel","startsWith","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","sourceInfo","tileMatrixSet","tileMatrixSetLimits","crs","orderedAxes","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","grid","urlTemplate","urlFunction","upsideDown","localContext","tileCol","tileRow","getTileSetInfo","tileSet","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","$ol$source$OGCMapTile","handleTileSetInfo_","handleError_","tileSetInfo","logError","ATTRIBUTION","$ol$source$OSM","XYZ","$ol$layer$BaseImage","$ol$renderer$Layer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","$ol$render$canvas$ZIndexContext","instructions_","Proxy","pushMethodArgs_","draw","instructionsAtIndex","instructionAtIndex","pixelContext","$ol$renderer$canvas$Layer","LayerRenderer","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","ZIndexContext","getRenderTransform","$ol$renderer$canvas$ImageLayer","CanvasLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","imageResolutionX","imageResolutionY","viewCenter","canvasTransform","toTransformString","clipped","dw","dh","$ol$layer$Image","BaseImageLayer","CanvasImageLayerRenderer","TileProperty","$ol$layer$BaseTile","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$ol$renderer$canvas$TileLayer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","$ol$layer$Tile","BaseTileLayer","CanvasTileLayerRenderer","hasImageData","ImageData","newImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","onMessage","lines","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","TileLayer","ImageLayer","$ol$source$Raster","LayerConfig","stamen_terrain","stamen_terrain_background","stamen_terrain_labels","stamen_terrain_lines","stamen_toner_background","stamen_toner","stamen_toner_labels","stamen_toner_lines","stamen_toner_lite","stamen_watercolor","alidade_smooth","alidade_smooth_dark","alidade_satellite","outdoors","osm_bright","ProviderConfig","retina","$ol$source$StadiaMaps","provider","providerConfig","layerConfig","query","apiKey","OSM_ATTRIBUTION","$ol$source$TileArcGISRest","getKeyForParams_","getRequestUrl_","tileExtent","$ol$source$TileDebug","strokeRect","$ol$source$TileJSON","tileJSON_","requestJSONP","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","$ol$source$TileWMS","transparent","v13_","updateV13_","sourceProjCoord","version","CustomTile","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","loadInternal_","$ol$source$UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","$ol$source$WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","TileMatrix","TileCol","TileRow","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","fromTransform","mat4","$ol$structs$LinkedList","first_","last_","head_","circular_","length_","insertItem","next","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","$ol$render$canvas$Builder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillPatternScale","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$ol$render$canvas$ImageBuilder","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","$ol$render$canvas$LineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$ol$render$canvas$PolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$ol$render$canvas$TextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","$ol$render$canvas$BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","$ol$render$canvas$Executor","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","widths_","zIndexContext_","getZIndexContext","createLabel","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","getPixelIndexArray","maxDistanceSq","distances","pixelIndex","$ol$render$canvas$ExecutorGroup","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","idx","executor","targetContext","builderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","$ol$renderer$canvas$VectorLayer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","transformToString","getSquaredRenderTolerance","lastIndexOf","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","replayGroupInstructions","ExecutorGroup","$ol$renderer$canvas$VectorImageLayer","vectorRenderer_","CanvasVectorLayerRenderer","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","registered","register","proj4","projCodes","defs","def","projName","axis","to_meter","code1","proj1","code2","proj2","epsgLookup","$ol$layer$Vector","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","frac","parallel","lon2","DEFAULT_STROKE_STYLE","INTERVALS","$ol$layer$Graticule","VectorLayer","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","geom","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","DYNAMIC_DRAW","CONTEXT_IDS","BufferUsage","WebGLArrayBuffer","usage","usage_","ofSize","getArrayClassForType","fromArray","fromArrayBuffer","getUsage","Uint32Array","ContextEventType","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","depthBuffer_","createRenderbuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","bindRenderbuffer","RENDERBUFFER","getDepthBuffer","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","attributes","getContextAttributes","preserveDrawingBuffer","clearColor","clearDepth","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","texture","uniform3f","uniform4f","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getOrCreateContext","cacheItem","antialias","users","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","bufferCache_","extensionCache_","currentProgram_","needsToBeRecreated_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","shaderCompileErrors_","addUniforms","canvasCacheKeyMatches","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","disableAlphaBlend","enableDepth","getCanvas","depthRange","ZERO","depthFunc","LEQUAL","slot","uniformName","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getDepthbuffer","getTexture","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","setUniformFloatValue","setUniformFloatVec2","applyHitDetectionUniform","loc","WebGLTexture","prevValue","imageReady","setUniformMatrixValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","needsToBeRecreated","Uint16Array","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","helper","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","tmpArray4","WebGLRenderTarget","helper_","texture_","framebuffer_","depthbuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","WebGLWorkerMessageType","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","py","intersectsPolygon","inside","middleInside","q1","q2","o1","sign","o2","o3","o4","onSegment","num","an","bp","sum","earcutModule","exports","default","deviation","polygonArea","trianglesArea","flatten","holes","holeIndex","colorEncodeId","radix","divide","WebGLPointsLayerRenderer","projectionMatrixTransform","sourceRevision_","verticesBuffer_","indicesBuffer_","vertexShader_","fragmentShader_","program_","hitDetectionEnabled_","hitDetectionEnabled","customAttributes","attribute","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderTarget_","lastSentId","worker_","createWebGLWorker","received","projectionTransform","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","getWorldParameters","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","singleInstructionLength","totalSize","featureCache","tmpCoords","tmpColor","featureUid","userCoords","hitColor","customAttributesSize","mult","colorDecodeId","forHitDetection","translateTransform","renderCount","PaletteTexture","NEAREST","TEXTURE_MAG_FILTER","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","PATTERN_ORIGIN","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","numberToGlsl","arrayToGlsl","colorToGlsl","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","string","stringToGlsl","uniformNameForVariable","variableName","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","createCompiler","compile","compilers","propName","inFragmentShader","compiledArgs","firstValue","secondValue","exponent","stop1","stop2","funcName","functions","computeOperatorFunctionName","tests","band","xOffset","yOffset","ifBlocks","colorIndex","bandIndex","numColors","palette","paletteTextures","paletteName","paletteTexture","compiler","COMMON_HEADER","DEFAULT_STYLE","ShaderBuilder","attributes_","varyings_","hasSymbol_","symbolSizeExpression_","symbolRotationExpression_","symbolOffsetExpression_","symbolColorExpression_","texCoordExpression_","discardExpression_","symbolRotateWithView_","hasStroke_","strokeWidthExpression_","strokeColorExpression_","strokeOffsetExpression_","strokeCapExpression_","strokeJoinExpression_","strokeMiterLimitExpression_","strokeDistanceFieldExpression_","hasFill_","fillColorExpression_","vertexShaderFunctions_","fragmentShaderFunctions_","addUniform","addAttribute","addVarying","setSymbolSizeExpression","getSymbolSizeExpression","setSymbolRotationExpression","setSymbolOffsetExpression","getSymbolOffsetExpression","setSymbolColorExpression","getSymbolColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","getFragmentDiscardExpression","setSymbolRotateWithView","setStrokeWidthExpression","setStrokeColorExpression","getStrokeColorExpression","setStrokeOffsetExpression","setStrokeCapExpression","setStrokeJoinExpression","setStrokeMiterLimitExpression","setStrokeDistanceFieldExpression","setFillColorExpression","getFillColorExpression","addVertexShaderFunction","addFragmentShaderFunction","getSymbolVertexShader","varying","getSymbolFragmentShader","getStrokeVertexShader","getStrokeFragmentShader","getFillVertexShader","getFillFragmentShader","DEFAULT_GRADIENT","$ol$layer$Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","builder","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$layer$VectorImage","imageRatio","imageRatio_","CanvasVectorImageLayerRenderer","$ol$interaction$DblClickDragZoom","opt_options","scaleDeltaByPixel_","handlingDownUpSequence_","handlingDoubleDownSequence_","doubleTapTimeoutId_","trackedPointers_","waitForDblTap_","isPointerDraggingEvent","DragAndDropEventType","DragAndDropEvent","file","$ol$interaction$DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","$ol$interaction$DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","getPointSegmentRelationship","sharedRel","getDefaultStyleFunction","$ol$interaction$Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","mode","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","$ol$interaction$Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","readNumber","writeNumber","to5","differentNumber","$ol$interaction$Link","animationOptions","animationOptions_","replace_","prefix_","initial_","trackedCallbacks_","trackedValues_","getParamName_","get_","set_","delete_","oldMap","updateUrl_","handleChangeLayerGroup_","history","replaceState","updateView","viewProperties","layersParam","track","updateHistory_","visibilities","pushState","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","$ol$interaction$Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","hitPointGeometry","bufferExtent","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","$ol$interaction$Select","SnapEventType","SnapEvent","getFeatureFromEvent","$ol$interaction$Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","feature_uid","segmenter","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","TranslateEventType","TranslateEvent","startCoordinate","$ol$interaction$Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","flipXY","destOffset","$ol$format$Feature","defaultFeatureProjection","featureClass","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","fromProjection","toProjection","transformExtentWithOptions","GeometryConstructor","createRenderFeature","orientFlatCoordinates","createGeometry","XMLFeature","FeatureFormat","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","AUTHOR_PARSERS","email","getAttribute","domain","parseLink","METADATA_PARSERS","desc","author","COPYRIGHT_PARSERS","keywords","bounds","minlat","minlon","maxlat","maxlon","extensions","parseExtensions","year","license","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","rtept","RTEPT_PARSERS","rteValues","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","layoutOptions","hasZ","hasM","applyLayoutOptions","setAttributeNS","$ol$format$GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","readMetadata","readMetadataFromDocument","readMetadataFromNode","metadata","featureReader","gpx","getObject","$ol$format$JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","$ol$format$GeoJSON","JSONFeature","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","geometryObject","objects","$ol$format$TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","$ol$format$IGC","TextFeature","altitudeMode_","altitudeMode","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","readFlatCoordinates","re","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","$ol$format$KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","pbf","Pbf","require$$0","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","readPackedEnd","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","$ol$format$MVT","featureClass_","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","pbfLayer","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","$ol$format$OSMXML","XML","readFromDocument","readFromNode","NAMESPACE_URI","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","$ol$format$OWS","owsObject","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","current","$ol$format$Polyline","factor_","GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","geometryReader","transformArc","$ol$format$TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","_content_","fid","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","readFlatPosList","contextDimension","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML3$1","GML32","GML32$1","Filter","tagName_","getTagName","LogicalNary","And$1","Bbox","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","And","writeLogicalFilter","Or","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","matchCase","writeLiteral","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","timeInstant","timePosition","writeGetFeature","$ol$format$WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","$ol$format$WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","readBoundingBox","BoundingBox","WGS84_BBOX_READERS","Identifier","LegendURL","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","$ol$format$WMTSCapabilities","owsParser_","OWS","WMTSCapabilityObject","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","$ol$control$FullScreen","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","PROJECTION","COORDINATE_FORMAT","$ol$control$MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","MAX_RATIO","MIN_RATIO","$ol$control$OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","Map","ovmap_","boxSizing","boxOverlay_","Overlay","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","$ol$control$ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","Direction","$ol$control$ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","$ol$control$ZoomToExtent","handleZoomToExtent","ol","$ol$Collection","_ol_Collection$CollectionEvent","_ol_DataTile$asArrayLike","_ol_DataTile$asImageLike","_ol_DataTile$toArray","_ol_Feature$createStyleFunction","Geolocation","_ol_Geolocation$GeolocationError","_ol_Image$decode","_ol_Image$decodeFallback","_ol_Image$listenImage","_ol_Image$load","_ol_Object$ObjectEvent","_ol_Observable$unByKey","_ol_TileQueue$getTilePriority","_ol_TileRange$createOrUpdate","VectorRenderTile","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$ascending","_ol_array$binarySearch","_ol_array$descending","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","_ol_color$isStringColor","_ol_color$lchaToRgba","_ol_color$normalize","_ol_color$rgbaToLcha","_ol_color$toString","_ol_color$withAlpha","colorlike","_ol_colorlike$asColorLike","_ol_console$error","setLevel","_ol_console$warn","FullScreen","MousePosition","OverviewMap","ScaleLine","ZoomSlider","ZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$getSharedCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$removeNode","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","_ol_events_Event$stopPropagation","_ol_events_SnapEvent$SnapEvent","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","_ol_events_condition$platformModifierKey","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","expr","cpu","_ol_expr_cpu$buildExpression","_ol_expr_cpu$newEvaluationContext","_ol_expr_expression$AnyType","_ol_expr_expression$BooleanType","_ol_expr_expression$CallExpression","_ol_expr_expression$ColorType","_ol_expr_expression$LiteralExpression","_ol_expr_expression$NoneType","_ol_expr_expression$NumberArrayType","_ol_expr_expression$NumberType","_ol_expr_expression$Ops","_ol_expr_expression$StringType","_ol_expr_expression$computeGeometryType","_ol_expr_expression$includesType","_ol_expr_expression$isType","_ol_expr_expression$newParsingContext","_ol_expr_expression$overlapsType","_ol_expr_expression$parse","_ol_expr_expression$typeName","gpu","_ol_expr_gpu$PALETTE_TEXTURE_ARRAY","_ol_expr_gpu$arrayToGlsl","compilationContext","_ol_expr_gpu$colorToGlsl","_ol_expr_gpu$getStringNumberEquivalent","newCompilationContext","_ol_expr_gpu$numberToGlsl","_ol_expr_gpu$stringToGlsl","_ol_expr_gpu$uniformNameForVariable","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","_ol_format_Feature$createGeometry","_ol_format_Feature$createRenderFeature","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","GPX","GeoJSON","IGC","KML","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","MVT","OSMXML","Polyline","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","TopoJSON","WFS","writeFilter","WMSGetFeatureInfo","WMTSCapabilities","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","_ol_geom_SimpleGeometry$getLayoutForStride","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","has","_ol_has$CREATE_IMAGE_BITMAP","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$FIREFOX","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","DblClickDragZoom","DragAndDrop","_ol_interaction_DragAndDrop$DragAndDropEvent","_ol_interaction_DragBox$DragBoxEvent","DragRotateAndZoom","Draw","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","_ol_interaction_Extent$ExtentEvent","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","Modify","_ol_interaction_Modify$ModifyEvent","Pointer","_ol_interaction_Pointer$centroid","_ol_interaction_Select$SelectEvent","Snap","Translate","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","BaseImage","BaseTile","Graticule","Group","_ol_layer_Group$GroupEvent","Heatmap","_ol_layer_Layer$inView","Vector","VectorImage","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","Units","_ol_proj_Units$METERS_PER_UNIT","fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","fromLonLat","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","epsgLookupMapTiler","results","defaultTransform","fromEPSGCode","epsgCode","getEPSGLookup","isRegistered","_ol_proj_proj4$register","setEPSGLookup","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","_ol_proj$toLonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","toFeature","_ol_render_Feature$toGeometry","BuilderGroup","_ol_render_canvas_ExecutorGroup$ALL","_ol_render_canvas_ExecutorGroup$DECLUTTER","_ol_render_canvas_ExecutorGroup$NON_DECLUTTER","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","_ol_render_canvas_TextBuilder$TEXT_ALIGN","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas_style$buildRuleSet","_ol_render_canvas_style$buildStyle","_ol_render_canvas_style$flatStylesToStyleFunction","_ol_render_canvas_style$rulesToStyleFunction","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","scaleTransform","Composite","_ol_renderer_canvas_Layer$canvasPool","VectorImageLayer","vector","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","_ol_reproj_common$ERROR_THRESHOLD","_ol_reproj$render","_ol_resolution$fromResolutionLike","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","_ol_source_BingMaps$quadKey","Cluster","Google","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","_ol_source_Image$getRequestExtent","ImageArcGISRest","ImageStatic","ImageWMS","OGCMapTile","OSM","_ol_source_OSM$ATTRIBUTION","Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","_ol_source_Raster$newImageData","StadiaMaps","_ol_source_Tile$TileSourceEvent","TileArcGISRest","TileDebug","TileJSON","TileWMS","UTFGrid","_ol_source_UTFGrid$CustomTile","_ol_source_Vector$VectorSourceEvent","WMTS","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","el","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","tileMatrixValue","tileSpanX","tileSpanY","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","arcgisRest","_ol_source_arcgisRest$createLoader","_ol_source_arcgisRest$getRequestUrl","_ol_source_common$DECIMALS","DEFAULT_WMS_VERSION","ogcTileUtil","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","static","_ol_source_static$createLoader","wms","_ol_source_wms$DEFAULT_VERSION","_ol_source_wms$createLoader","_ol_source_wms$getFeatureInfoUrl","_ol_source_wms$getImageSrc","_ol_source_wms$getLegendUrl","_ol_source_wms$getRequestParams","_ol_source_wms$getRequestUrl","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","LinkedList","_ol_structs_PriorityQueue$DROP","_ol_style_IconImage$get","_ol_style_IconImageCache$getCacheKey","_ol_style_IconImageCache$shared","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","_ol_style_flat$createDefaultStyle","tilecoord","_ol_tilecoord$createOrUpdate","_ol_tilecoord$fromKey","getCacheKeyForTileKey","_ol_tilecoord$getKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$withinExtentAndZ","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","_ol_tilegrid_common$DEFAULT_MAX_ZOOM","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$expandUrl","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","invert","_ol_transform$makeInverse","makeScale","_ol_transform$multiply","_ol_transform$reset","_ol_transform$rotate","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"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","x_google_ignoreList":[71,72,75,76,77,78,79,80,81,82,245,278,279]}